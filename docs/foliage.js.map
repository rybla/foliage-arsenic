{
  "version": 3,
  "sources": ["../output/Control.Apply/foreign.js", "../output/Control.Semigroupoid/index.js", "../output/Control.Category/index.js", "../output/Data.Boolean/index.js", "../output/Data.Function/index.js", "../output/Data.Functor/foreign.js", "../output/Data.Unit/foreign.js", "../output/Type.Proxy/index.js", "../output/Data.Functor/index.js", "../output/Control.Apply/index.js", "../output/Control.Applicative/index.js", "../output/Control.Bind/index.js", "../output/Effect.Aff/foreign.js", "../output/Control.Monad/index.js", "../output/Data.Semigroup/foreign.js", "../output/Data.Symbol/index.js", "../output/Record.Unsafe/foreign.js", "../output/Data.Semigroup/index.js", "../output/Data.Bounded/foreign.js", "../output/Data.Ord/foreign.js", "../output/Data.Eq/foreign.js", "../output/Data.Eq/index.js", "../output/Data.Ordering/index.js", "../output/Data.Ord/index.js", "../output/Data.Show/foreign.js", "../output/Data.Show/index.js", "../output/Data.Generic.Rep/index.js", "../output/Data.Maybe/index.js", "../output/Data.Either/index.js", "../output/Effect/foreign.js", "../output/Data.Monoid/index.js", "../output/Effect/index.js", "../output/Effect.Exception/foreign.js", "../output/Effect.Exception/index.js", "../output/Control.Monad.Error.Class/index.js", "../output/Data.Identity/index.js", "../output/Effect.Ref/foreign.js", "../output/Effect.Ref/index.js", "../output/Control.Monad.Rec.Class/index.js", "../output/Unsafe.Coerce/foreign.js", "../output/Control.Monad.Reader.Class/index.js", "../output/Data.HeytingAlgebra/foreign.js", "../output/Data.HeytingAlgebra/index.js", "../output/Data.Tuple/index.js", "../output/Control.Monad.State.Class/index.js", "../output/Control.Monad.Trans.Class/index.js", "../output/Effect.Class/index.js", "../output/Control.Monad.Writer.Class/index.js", "../output/Control.Monad.Except.Trans/index.js", "../output/Control.Plus/index.js", "../output/Safe.Coerce/index.js", "../output/Data.Newtype/index.js", "../output/Control.Monad.Reader.Trans/index.js", "../output/Control.Monad.Writer.Trans/index.js", "../output/Data.Profunctor/index.js", "../output/Control.Parallel.Class/index.js", "../output/Data.Foldable/foreign.js", "../output/Data.Bifunctor/index.js", "../output/Data.Foldable/index.js", "../output/Data.Traversable/foreign.js", "../output/Data.Traversable/index.js", "../output/Control.Parallel/index.js", "../output/Effect.Unsafe/foreign.js", "../output/Partial.Unsafe/foreign.js", "../output/Partial/foreign.js", "../output/Partial/index.js", "../output/Partial.Unsafe/index.js", "../output/Effect.Aff/index.js", "../output/Effect.Console/foreign.js", "../output/Effect.Class.Console/index.js", "../output/Data.Lazy/foreign.js", "../output/Debug/foreign.js", "../output/Data.Function.Uncurried/foreign.js", "../output/Debug/index.js", "../output/Data.Array/foreign.js", "../output/Data.Array.ST/foreign.js", "../output/Control.Monad.ST.Uncurried/foreign.js", "../output/Data.Array.ST/index.js", "../output/Data.FunctorWithIndex/foreign.js", "../output/Data.FunctorWithIndex/index.js", "../output/Data.Array/index.js", "../output/Data.String.Common/foreign.js", "../output/Halogen.Query.Input/index.js", "../output/Data.Nullable/foreign.js", "../output/Data.Nullable/index.js", "../output/Halogen.VDom.Machine/index.js", "../output/Halogen.VDom.Types/index.js", "../output/Halogen.VDom.Util/foreign.js", "../output/Foreign.Object.ST/foreign.js", "../output/Halogen.VDom.Util/index.js", "../output/Web.DOM.Element/foreign.js", "../output/Web.DOM.ParentNode/foreign.js", "../output/Web.DOM.ParentNode/index.js", "../output/Web.DOM.Element/index.js", "../output/Halogen.VDom.DOM/index.js", "../output/Foreign/foreign.js", "../output/Data.Int/foreign.js", "../output/Data.Int/index.js", "../output/Data.NonEmpty/index.js", "../output/Data.List.Types/index.js", "../output/Data.List/index.js", "../output/Data.List.NonEmpty/index.js", "../output/Data.String.CodeUnits/foreign.js", "../output/Foreign.Object/foreign.js", "../output/Foreign.Object/index.js", "../output/Web.Event.EventTarget/foreign.js", "../output/Halogen.VDom.DOM.Prop/index.js", "../output/Halogen.HTML.Core/index.js", "../output/Halogen.HTML.Properties/index.js", "../output/Foliage.App.Style/index.js", "../output/Data.Exists/index.js", "../output/Data.Coyoneda/index.js", "../output/Data.Map.Internal/index.js", "../output/Halogen.Data.OrdBox/index.js", "../output/Halogen.Data.Slot/index.js", "../output/Control.Applicative.Free/index.js", "../output/Data.CatQueue/index.js", "../output/Data.CatList/index.js", "../output/Control.Monad.Free/index.js", "../output/Control.Monad.State.Trans/index.js", "../output/Halogen.Query.ChildQuery/index.js", "../output/Unsafe.Reference/foreign.js", "../output/Unsafe.Reference/index.js", "../output/Halogen.Subscription/index.js", "../output/Halogen.Query.HalogenM/index.js", "../output/Halogen.Query.HalogenQ/index.js", "../output/Halogen.VDom.Thunk/index.js", "../output/Halogen.Component/index.js", "../output/Halogen.HTML.Elements/index.js", "../output/Halogen.HTML/index.js", "../output/Control.Monad.Except/index.js", "../output/Web.Event.Event/foreign.js", "../output/Web.HTML.Event.EventTypes/index.js", "../output/Web.UIEvent.MouseEvent.EventTypes/index.js", "../output/Halogen.HTML.Events/index.js", "../output/Foliage.App.Console.Component/index.js", "../output/Record.Unsafe.Union/foreign.js", "../output/Record/index.js", "../output/Web.UIEvent.MouseEvent/index.js", "../output/Foliage.App.ComponentLibrary.DropdownMenu/index.js", "../output/Data.Eq.Generic/index.js", "../output/Data.Show.Generic/foreign.js", "../output/Data.Show.Generic/index.js", "../output/Foliage.Common/index.js", "../output/Foliage.Program/index.js", "../output/Foliage.App.Rendering/index.js", "../output/Foliage.Example.Blank/index.js", "../output/Data.Homogeneous.Record/index.js", "../output/Foliage.Example.Dijkstra/index.js", "../output/Unsafe/index.js", "../output/Foliage.Example.Parsing/index.js", "../output/Foliage.Example/index.js", "../output/Foliage.App.Editor.Component/index.js", "../output/Foliage.App.Viewer.Component/index.js", "../output/Data.Lens.Internal.Forget/index.js", "../output/Data.Profunctor.Strong/index.js", "../output/Data.Lens.Getter/index.js", "../output/Data.Lens.Lens/index.js", "../output/Data.Lens.Record/index.js", "../output/Foliage.Interpretation/index.js", "../output/Web.HTML.HTMLElement/foreign.js", "../output/Web.HTML.HTMLElement/index.js", "../output/Halogen.Query/index.js", "../output/Foliage.App.Component/index.js", "../output/Web.HTML/foreign.js", "../output/Web.HTML.HTMLDocument/foreign.js", "../output/Web.HTML.HTMLDocument.ReadyState/index.js", "../output/Web.HTML.HTMLDocument/index.js", "../output/Web.HTML.Window/foreign.js", "../output/Web.HTML.Window/index.js", "../output/Halogen.Aff.Util/index.js", "../output/Control.Monad.Fork.Class/index.js", "../output/Halogen.Aff.Driver.State/index.js", "../output/Halogen.Aff.Driver.Eval/index.js", "../output/Halogen.Aff.Driver/index.js", "../output/Web.DOM.Node/foreign.js", "../output/Web.DOM.Node/index.js", "../output/Halogen.VDom.Driver/index.js", "../output/Foliage.App.Main/index.js", "<stdin>"],
  "sourcesContent": ["export const arrayApply = function (fs) {\n  return function (xs) {\n    var l = fs.length;\n    var k = xs.length;\n    var result = new Array(l*k);\n    var n = 0;\n    for (var i = 0; i < l; i++) {\n      var f = fs[i];\n      for (var j = 0; j < k; j++) {\n        result[n++] = f(xs[j]);\n      }\n    }\n    return result;\n  };\n};\n", "// Generated by purs version 0.15.15\nvar semigroupoidFn = {\n    compose: function (f) {\n        return function (g) {\n            return function (x) {\n                return f(g(x));\n            };\n        };\n    }\n};\nvar compose = function (dict) {\n    return dict.compose;\n};\nvar composeFlipped = function (dictSemigroupoid) {\n    var compose1 = compose(dictSemigroupoid);\n    return function (f) {\n        return function (g) {\n            return compose1(g)(f);\n        };\n    };\n};\nexport {\n    compose,\n    composeFlipped,\n    semigroupoidFn\n};\n", "// Generated by purs version 0.15.15\nimport * as Control_Semigroupoid from \"../Control.Semigroupoid/index.js\";\nvar identity = function (dict) {\n    return dict.identity;\n};\nvar categoryFn = {\n    identity: function (x) {\n        return x;\n    },\n    Semigroupoid0: function () {\n        return Control_Semigroupoid.semigroupoidFn;\n    }\n};\nexport {\n    identity,\n    categoryFn\n};\nexport {\n    compose\n} from \"../Control.Semigroupoid/index.js\";\n", "// Generated by purs version 0.15.15\nvar otherwise = true;\nexport {\n    otherwise\n};\n", "// Generated by purs version 0.15.15\nimport * as Control_Category from \"../Control.Category/index.js\";\nimport * as Data_Boolean from \"../Data.Boolean/index.js\";\nvar on = function (f) {\n    return function (g) {\n        return function (x) {\n            return function (y) {\n                return f(g(x))(g(y));\n            };\n        };\n    };\n};\nvar flip = function (f) {\n    return function (b) {\n        return function (a) {\n            return f(a)(b);\n        };\n    };\n};\nvar $$const = function (a) {\n    return function (v) {\n        return a;\n    };\n};\nvar applyN = function (f) {\n    var go = function ($copy_n) {\n        return function ($copy_acc) {\n            var $tco_var_n = $copy_n;\n            var $tco_done = false;\n            var $tco_result;\n            function $tco_loop(n, acc) {\n                if (n <= 0) {\n                    $tco_done = true;\n                    return acc;\n                };\n                if (Data_Boolean.otherwise) {\n                    $tco_var_n = n - 1 | 0;\n                    $copy_acc = f(acc);\n                    return;\n                };\n                throw new Error(\"Failed pattern match at Data.Function (line 107, column 3 - line 109, column 37): \" + [ n.constructor.name, acc.constructor.name ]);\n            };\n            while (!$tco_done) {\n                $tco_result = $tco_loop($tco_var_n, $copy_acc);\n            };\n            return $tco_result;\n        };\n    };\n    return go;\n};\nvar applyFlipped = function (x) {\n    return function (f) {\n        return f(x);\n    };\n};\nvar apply = function (f) {\n    return function (x) {\n        return f(x);\n    };\n};\nexport {\n    flip,\n    $$const as const,\n    apply,\n    applyFlipped,\n    applyN,\n    on\n};\nexport {\n    compose,\n    identity\n} from \"../Control.Category/index.js\";\n", "export const arrayMap = function (f) {\n  return function (arr) {\n    var l = arr.length;\n    var result = new Array(l);\n    for (var i = 0; i < l; i++) {\n      result[i] = f(arr[i]);\n    }\n    return result;\n  };\n};\n", "export const unit = undefined;\n", "// Generated by purs version 0.15.15\nvar $$Proxy = /* #__PURE__ */ (function () {\n    function $$Proxy() {\n\n    };\n    $$Proxy.value = new $$Proxy();\n    return $$Proxy;\n})();\nexport {\n    $$Proxy as Proxy\n};\n", "// Generated by purs version 0.15.15\nimport * as $foreign from \"./foreign.js\";\nimport * as Control_Semigroupoid from \"../Control.Semigroupoid/index.js\";\nimport * as Data_Function from \"../Data.Function/index.js\";\nimport * as Data_Unit from \"../Data.Unit/index.js\";\nimport * as Type_Proxy from \"../Type.Proxy/index.js\";\nvar map = function (dict) {\n    return dict.map;\n};\nvar mapFlipped = function (dictFunctor) {\n    var map1 = map(dictFunctor);\n    return function (fa) {\n        return function (f) {\n            return map1(f)(fa);\n        };\n    };\n};\nvar $$void = function (dictFunctor) {\n    return map(dictFunctor)(Data_Function[\"const\"](Data_Unit.unit));\n};\nvar voidLeft = function (dictFunctor) {\n    var map1 = map(dictFunctor);\n    return function (f) {\n        return function (x) {\n            return map1(Data_Function[\"const\"](x))(f);\n        };\n    };\n};\nvar voidRight = function (dictFunctor) {\n    var map1 = map(dictFunctor);\n    return function (x) {\n        return map1(Data_Function[\"const\"](x));\n    };\n};\nvar functorProxy = {\n    map: function (v) {\n        return function (v1) {\n            return Type_Proxy[\"Proxy\"].value;\n        };\n    }\n};\nvar functorFn = {\n    map: /* #__PURE__ */ Control_Semigroupoid.compose(Control_Semigroupoid.semigroupoidFn)\n};\nvar functorArray = {\n    map: $foreign.arrayMap\n};\nvar flap = function (dictFunctor) {\n    var map1 = map(dictFunctor);\n    return function (ff) {\n        return function (x) {\n            return map1(function (f) {\n                return f(x);\n            })(ff);\n        };\n    };\n};\nexport {\n    map,\n    mapFlipped,\n    $$void as void,\n    voidRight,\n    voidLeft,\n    flap,\n    functorFn,\n    functorArray,\n    functorProxy\n};\n", "// Generated by purs version 0.15.15\nimport * as $foreign from \"./foreign.js\";\nimport * as Control_Category from \"../Control.Category/index.js\";\nimport * as Data_Function from \"../Data.Function/index.js\";\nimport * as Data_Functor from \"../Data.Functor/index.js\";\nimport * as Type_Proxy from \"../Type.Proxy/index.js\";\nvar identity = /* #__PURE__ */ Control_Category.identity(Control_Category.categoryFn);\nvar applyProxy = {\n    apply: function (v) {\n        return function (v1) {\n            return Type_Proxy[\"Proxy\"].value;\n        };\n    },\n    Functor0: function () {\n        return Data_Functor.functorProxy;\n    }\n};\nvar applyFn = {\n    apply: function (f) {\n        return function (g) {\n            return function (x) {\n                return f(x)(g(x));\n            };\n        };\n    },\n    Functor0: function () {\n        return Data_Functor.functorFn;\n    }\n};\nvar applyArray = {\n    apply: $foreign.arrayApply,\n    Functor0: function () {\n        return Data_Functor.functorArray;\n    }\n};\nvar apply = function (dict) {\n    return dict.apply;\n};\nvar applyFirst = function (dictApply) {\n    var apply1 = apply(dictApply);\n    var map = Data_Functor.map(dictApply.Functor0());\n    return function (a) {\n        return function (b) {\n            return apply1(map(Data_Function[\"const\"])(a))(b);\n        };\n    };\n};\nvar applySecond = function (dictApply) {\n    var apply1 = apply(dictApply);\n    var map = Data_Functor.map(dictApply.Functor0());\n    return function (a) {\n        return function (b) {\n            return apply1(map(Data_Function[\"const\"](identity))(a))(b);\n        };\n    };\n};\nvar lift2 = function (dictApply) {\n    var apply1 = apply(dictApply);\n    var map = Data_Functor.map(dictApply.Functor0());\n    return function (f) {\n        return function (a) {\n            return function (b) {\n                return apply1(map(f)(a))(b);\n            };\n        };\n    };\n};\nvar lift3 = function (dictApply) {\n    var apply1 = apply(dictApply);\n    var map = Data_Functor.map(dictApply.Functor0());\n    return function (f) {\n        return function (a) {\n            return function (b) {\n                return function (c) {\n                    return apply1(apply1(map(f)(a))(b))(c);\n                };\n            };\n        };\n    };\n};\nvar lift4 = function (dictApply) {\n    var apply1 = apply(dictApply);\n    var map = Data_Functor.map(dictApply.Functor0());\n    return function (f) {\n        return function (a) {\n            return function (b) {\n                return function (c) {\n                    return function (d) {\n                        return apply1(apply1(apply1(map(f)(a))(b))(c))(d);\n                    };\n                };\n            };\n        };\n    };\n};\nvar lift5 = function (dictApply) {\n    var apply1 = apply(dictApply);\n    var map = Data_Functor.map(dictApply.Functor0());\n    return function (f) {\n        return function (a) {\n            return function (b) {\n                return function (c) {\n                    return function (d) {\n                        return function (e) {\n                            return apply1(apply1(apply1(apply1(map(f)(a))(b))(c))(d))(e);\n                        };\n                    };\n                };\n            };\n        };\n    };\n};\nexport {\n    apply,\n    applyFirst,\n    applySecond,\n    lift2,\n    lift3,\n    lift4,\n    lift5,\n    applyFn,\n    applyArray,\n    applyProxy\n};\nexport {\n    map,\n    void\n} from \"../Data.Functor/index.js\";\n", "// Generated by purs version 0.15.15\nimport * as Control_Apply from \"../Control.Apply/index.js\";\nimport * as Data_Functor from \"../Data.Functor/index.js\";\nimport * as Data_Unit from \"../Data.Unit/index.js\";\nimport * as Type_Proxy from \"../Type.Proxy/index.js\";\nvar pure = function (dict) {\n    return dict.pure;\n};\nvar unless = function (dictApplicative) {\n    var pure1 = pure(dictApplicative);\n    return function (v) {\n        return function (v1) {\n            if (!v) {\n                return v1;\n            };\n            if (v) {\n                return pure1(Data_Unit.unit);\n            };\n            throw new Error(\"Failed pattern match at Control.Applicative (line 68, column 1 - line 68, column 65): \" + [ v.constructor.name, v1.constructor.name ]);\n        };\n    };\n};\nvar when = function (dictApplicative) {\n    var pure1 = pure(dictApplicative);\n    return function (v) {\n        return function (v1) {\n            if (v) {\n                return v1;\n            };\n            if (!v) {\n                return pure1(Data_Unit.unit);\n            };\n            throw new Error(\"Failed pattern match at Control.Applicative (line 63, column 1 - line 63, column 63): \" + [ v.constructor.name, v1.constructor.name ]);\n        };\n    };\n};\nvar liftA1 = function (dictApplicative) {\n    var apply = Control_Apply.apply(dictApplicative.Apply0());\n    var pure1 = pure(dictApplicative);\n    return function (f) {\n        return function (a) {\n            return apply(pure1(f))(a);\n        };\n    };\n};\nvar applicativeProxy = {\n    pure: function (v) {\n        return Type_Proxy[\"Proxy\"].value;\n    },\n    Apply0: function () {\n        return Control_Apply.applyProxy;\n    }\n};\nvar applicativeFn = {\n    pure: function (x) {\n        return function (v) {\n            return x;\n        };\n    },\n    Apply0: function () {\n        return Control_Apply.applyFn;\n    }\n};\nvar applicativeArray = {\n    pure: function (x) {\n        return [ x ];\n    },\n    Apply0: function () {\n        return Control_Apply.applyArray;\n    }\n};\nexport {\n    pure,\n    liftA1,\n    unless,\n    when,\n    applicativeFn,\n    applicativeArray,\n    applicativeProxy\n};\nexport {\n    apply\n} from \"../Control.Apply/index.js\";\nexport {\n    map,\n    void\n} from \"../Data.Functor/index.js\";\n", "// Generated by purs version 0.15.15\nimport * as $foreign from \"./foreign.js\";\nimport * as Control_Applicative from \"../Control.Applicative/index.js\";\nimport * as Control_Apply from \"../Control.Apply/index.js\";\nimport * as Control_Category from \"../Control.Category/index.js\";\nimport * as Data_Function from \"../Data.Function/index.js\";\nimport * as Data_Functor from \"../Data.Functor/index.js\";\nimport * as Type_Proxy from \"../Type.Proxy/index.js\";\nvar identity = /* #__PURE__ */ Control_Category.identity(Control_Category.categoryFn);\nvar discard = function (dict) {\n    return dict.discard;\n};\nvar bindProxy = {\n    bind: function (v) {\n        return function (v1) {\n            return Type_Proxy[\"Proxy\"].value;\n        };\n    },\n    Apply0: function () {\n        return Control_Apply.applyProxy;\n    }\n};\nvar bindFn = {\n    bind: function (m) {\n        return function (f) {\n            return function (x) {\n                return f(m(x))(x);\n            };\n        };\n    },\n    Apply0: function () {\n        return Control_Apply.applyFn;\n    }\n};\nvar bindArray = {\n    bind: $foreign.arrayBind,\n    Apply0: function () {\n        return Control_Apply.applyArray;\n    }\n};\nvar bind = function (dict) {\n    return dict.bind;\n};\nvar bindFlipped = function (dictBind) {\n    return Data_Function.flip(bind(dictBind));\n};\nvar composeKleisliFlipped = function (dictBind) {\n    var bindFlipped1 = bindFlipped(dictBind);\n    return function (f) {\n        return function (g) {\n            return function (a) {\n                return bindFlipped1(f)(g(a));\n            };\n        };\n    };\n};\nvar composeKleisli = function (dictBind) {\n    var bind1 = bind(dictBind);\n    return function (f) {\n        return function (g) {\n            return function (a) {\n                return bind1(f(a))(g);\n            };\n        };\n    };\n};\nvar discardProxy = {\n    discard: function (dictBind) {\n        return bind(dictBind);\n    }\n};\nvar discardUnit = {\n    discard: function (dictBind) {\n        return bind(dictBind);\n    }\n};\nvar ifM = function (dictBind) {\n    var bind1 = bind(dictBind);\n    return function (cond) {\n        return function (t) {\n            return function (f) {\n                return bind1(cond)(function (cond$prime) {\n                    if (cond$prime) {\n                        return t;\n                    };\n                    return f;\n                });\n            };\n        };\n    };\n};\nvar join = function (dictBind) {\n    var bind1 = bind(dictBind);\n    return function (m) {\n        return bind1(m)(identity);\n    };\n};\nexport {\n    bind,\n    bindFlipped,\n    discard,\n    join,\n    composeKleisli,\n    composeKleisliFlipped,\n    ifM,\n    bindFn,\n    bindArray,\n    bindProxy,\n    discardUnit,\n    discardProxy\n};\nexport {\n    liftA1,\n    pure,\n    unless,\n    when\n} from \"../Control.Applicative/index.js\";\nexport {\n    apply\n} from \"../Control.Apply/index.js\";\nexport {\n    map,\n    void\n} from \"../Data.Functor/index.js\";\n", "/* globals setImmediate, clearImmediate, setTimeout, clearTimeout */\n/* eslint-disable no-unused-vars, no-prototype-builtins, no-use-before-define, no-unused-labels, no-param-reassign */\nvar Aff = function () {\n  // A unique value for empty.\n  var EMPTY = {};\n\n  /*\n\n  An awkward approximation. We elide evidence we would otherwise need in PS for\n  efficiency sake.\n\n  data Aff eff a\n    = Pure a\n    | Throw Error\n    | Catch (Aff eff a) (Error -> Aff eff a)\n    | Sync (Eff eff a)\n    | Async ((Either Error a -> Eff eff Unit) -> Eff eff (Canceler eff))\n    | forall b. Bind (Aff eff b) (b -> Aff eff a)\n    | forall b. Bracket (Aff eff b) (BracketConditions eff b) (b -> Aff eff a)\n    | forall b. Fork Boolean (Aff eff b) ?(Fiber eff b -> a)\n    | Sequential (ParAff aff a)\n\n  */\n  var PURE    = \"Pure\";\n  var THROW   = \"Throw\";\n  var CATCH   = \"Catch\";\n  var SYNC    = \"Sync\";\n  var ASYNC   = \"Async\";\n  var BIND    = \"Bind\";\n  var BRACKET = \"Bracket\";\n  var FORK    = \"Fork\";\n  var SEQ     = \"Sequential\";\n\n  /*\n\n  data ParAff eff a\n    = forall b. Map (b -> a) (ParAff eff b)\n    | forall b. Apply (ParAff eff (b -> a)) (ParAff eff b)\n    | Alt (ParAff eff a) (ParAff eff a)\n    | ?Par (Aff eff a)\n\n  */\n  var MAP   = \"Map\";\n  var APPLY = \"Apply\";\n  var ALT   = \"Alt\";\n\n  // Various constructors used in interpretation\n  var CONS      = \"Cons\";      // Cons-list, for stacks\n  var RESUME    = \"Resume\";    // Continue indiscriminately\n  var RELEASE   = \"Release\";   // Continue with bracket finalizers\n  var FINALIZER = \"Finalizer\"; // A non-interruptible effect\n  var FINALIZED = \"Finalized\"; // Marker for finalization\n  var FORKED    = \"Forked\";    // Reference to a forked fiber, with resumption stack\n  var FIBER     = \"Fiber\";     // Actual fiber reference\n  var THUNK     = \"Thunk\";     // Primed effect, ready to invoke\n\n  function Aff(tag, _1, _2, _3) {\n    this.tag = tag;\n    this._1  = _1;\n    this._2  = _2;\n    this._3  = _3;\n  }\n\n  function AffCtr(tag) {\n    var fn = function (_1, _2, _3) {\n      return new Aff(tag, _1, _2, _3);\n    };\n    fn.tag = tag;\n    return fn;\n  }\n\n  function nonCanceler(error) {\n    return new Aff(PURE, void 0);\n  }\n\n  function runEff(eff) {\n    try {\n      eff();\n    } catch (error) {\n      setTimeout(function () {\n        throw error;\n      }, 0);\n    }\n  }\n\n  function runSync(left, right, eff) {\n    try {\n      return right(eff());\n    } catch (error) {\n      return left(error);\n    }\n  }\n\n  function runAsync(left, eff, k) {\n    try {\n      return eff(k)();\n    } catch (error) {\n      k(left(error))();\n      return nonCanceler;\n    }\n  }\n\n  var Scheduler = function () {\n    var limit    = 1024;\n    var size     = 0;\n    var ix       = 0;\n    var queue    = new Array(limit);\n    var draining = false;\n\n    function drain() {\n      var thunk;\n      draining = true;\n      while (size !== 0) {\n        size--;\n        thunk     = queue[ix];\n        queue[ix] = void 0;\n        ix        = (ix + 1) % limit;\n        thunk();\n      }\n      draining = false;\n    }\n\n    return {\n      isDraining: function () {\n        return draining;\n      },\n      enqueue: function (cb) {\n        var i, tmp;\n        if (size === limit) {\n          tmp = draining;\n          drain();\n          draining = tmp;\n        }\n\n        queue[(ix + size) % limit] = cb;\n        size++;\n\n        if (!draining) {\n          drain();\n        }\n      }\n    };\n  }();\n\n  function Supervisor(util) {\n    var fibers  = {};\n    var fiberId = 0;\n    var count   = 0;\n\n    return {\n      register: function (fiber) {\n        var fid = fiberId++;\n        fiber.onComplete({\n          rethrow: true,\n          handler: function (result) {\n            return function () {\n              count--;\n              delete fibers[fid];\n            };\n          }\n        })();\n        fibers[fid] = fiber;\n        count++;\n      },\n      isEmpty: function () {\n        return count === 0;\n      },\n      killAll: function (killError, cb) {\n        return function () {\n          if (count === 0) {\n            return cb();\n          }\n\n          var killCount = 0;\n          var kills     = {};\n\n          function kill(fid) {\n            kills[fid] = fibers[fid].kill(killError, function (result) {\n              return function () {\n                delete kills[fid];\n                killCount--;\n                if (util.isLeft(result) && util.fromLeft(result)) {\n                  setTimeout(function () {\n                    throw util.fromLeft(result);\n                  }, 0);\n                }\n                if (killCount === 0) {\n                  cb();\n                }\n              };\n            })();\n          }\n\n          for (var k in fibers) {\n            if (fibers.hasOwnProperty(k)) {\n              killCount++;\n              kill(k);\n            }\n          }\n\n          fibers  = {};\n          fiberId = 0;\n          count   = 0;\n\n          return function (error) {\n            return new Aff(SYNC, function () {\n              for (var k in kills) {\n                if (kills.hasOwnProperty(k)) {\n                  kills[k]();\n                }\n              }\n            });\n          };\n        };\n      }\n    };\n  }\n\n  // Fiber state machine\n  var SUSPENDED   = 0; // Suspended, pending a join.\n  var CONTINUE    = 1; // Interpret the next instruction.\n  var STEP_BIND   = 2; // Apply the next bind.\n  var STEP_RESULT = 3; // Handle potential failure from a result.\n  var PENDING     = 4; // An async effect is running.\n  var RETURN      = 5; // The current stack has returned.\n  var COMPLETED   = 6; // The entire fiber has completed.\n\n  function Fiber(util, supervisor, aff) {\n    // Monotonically increasing tick, increased on each asynchronous turn.\n    var runTick = 0;\n\n    // The current branch of the state machine.\n    var status = SUSPENDED;\n\n    // The current point of interest for the state machine branch.\n    var step      = aff;  // Successful step\n    var fail      = null; // Failure step\n    var interrupt = null; // Asynchronous interrupt\n\n    // Stack of continuations for the current fiber.\n    var bhead = null;\n    var btail = null;\n\n    // Stack of attempts and finalizers for error recovery. Every `Cons` is also\n    // tagged with current `interrupt` state. We use this to track which items\n    // should be ignored or evaluated as a result of a kill.\n    var attempts = null;\n\n    // A special state is needed for Bracket, because it cannot be killed. When\n    // we enter a bracket acquisition or finalizer, we increment the counter,\n    // and then decrement once complete.\n    var bracketCount = 0;\n\n    // Each join gets a new id so they can be revoked.\n    var joinId  = 0;\n    var joins   = null;\n    var rethrow = true;\n\n    // Each invocation of `run` requires a tick. When an asynchronous effect is\n    // resolved, we must check that the local tick coincides with the fiber\n    // tick before resuming. This prevents multiple async continuations from\n    // accidentally resuming the same fiber. A common example may be invoking\n    // the provided callback in `makeAff` more than once, but it may also be an\n    // async effect resuming after the fiber was already cancelled.\n    function run(localRunTick) {\n      var tmp, result, attempt;\n      while (true) {\n        tmp       = null;\n        result    = null;\n        attempt   = null;\n\n        switch (status) {\n        case STEP_BIND:\n          status = CONTINUE;\n          try {\n            step   = bhead(step);\n            if (btail === null) {\n              bhead = null;\n            } else {\n              bhead = btail._1;\n              btail = btail._2;\n            }\n          } catch (e) {\n            status = RETURN;\n            fail   = util.left(e);\n            step   = null;\n          }\n          break;\n\n        case STEP_RESULT:\n          if (util.isLeft(step)) {\n            status = RETURN;\n            fail   = step;\n            step   = null;\n          } else if (bhead === null) {\n            status = RETURN;\n          } else {\n            status = STEP_BIND;\n            step   = util.fromRight(step);\n          }\n          break;\n\n        case CONTINUE:\n          switch (step.tag) {\n          case BIND:\n            if (bhead) {\n              btail = new Aff(CONS, bhead, btail);\n            }\n            bhead  = step._2;\n            status = CONTINUE;\n            step   = step._1;\n            break;\n\n          case PURE:\n            if (bhead === null) {\n              status = RETURN;\n              step   = util.right(step._1);\n            } else {\n              status = STEP_BIND;\n              step   = step._1;\n            }\n            break;\n\n          case SYNC:\n            status = STEP_RESULT;\n            step   = runSync(util.left, util.right, step._1);\n            break;\n\n          case ASYNC:\n            status = PENDING;\n            step   = runAsync(util.left, step._1, function (result) {\n              return function () {\n                if (runTick !== localRunTick) {\n                  return;\n                }\n                runTick++;\n                Scheduler.enqueue(function () {\n                  // It's possible to interrupt the fiber between enqueuing and\n                  // resuming, so we need to check that the runTick is still\n                  // valid.\n                  if (runTick !== localRunTick + 1) {\n                    return;\n                  }\n                  status = STEP_RESULT;\n                  step   = result;\n                  run(runTick);\n                });\n              };\n            });\n            return;\n\n          case THROW:\n            status = RETURN;\n            fail   = util.left(step._1);\n            step   = null;\n            break;\n\n          // Enqueue the Catch so that we can call the error handler later on\n          // in case of an exception.\n          case CATCH:\n            if (bhead === null) {\n              attempts = new Aff(CONS, step, attempts, interrupt);\n            } else {\n              attempts = new Aff(CONS, step, new Aff(CONS, new Aff(RESUME, bhead, btail), attempts, interrupt), interrupt);\n            }\n            bhead    = null;\n            btail    = null;\n            status   = CONTINUE;\n            step     = step._1;\n            break;\n\n          // Enqueue the Bracket so that we can call the appropriate handlers\n          // after resource acquisition.\n          case BRACKET:\n            bracketCount++;\n            if (bhead === null) {\n              attempts = new Aff(CONS, step, attempts, interrupt);\n            } else {\n              attempts = new Aff(CONS, step, new Aff(CONS, new Aff(RESUME, bhead, btail), attempts, interrupt), interrupt);\n            }\n            bhead  = null;\n            btail  = null;\n            status = CONTINUE;\n            step   = step._1;\n            break;\n\n          case FORK:\n            status = STEP_RESULT;\n            tmp    = Fiber(util, supervisor, step._2);\n            if (supervisor) {\n              supervisor.register(tmp);\n            }\n            if (step._1) {\n              tmp.run();\n            }\n            step = util.right(tmp);\n            break;\n\n          case SEQ:\n            status = CONTINUE;\n            step   = sequential(util, supervisor, step._1);\n            break;\n          }\n          break;\n\n        case RETURN:\n          bhead = null;\n          btail = null;\n          // If the current stack has returned, and we have no other stacks to\n          // resume or finalizers to run, the fiber has halted and we can\n          // invoke all join callbacks. Otherwise we need to resume.\n          if (attempts === null) {\n            status = COMPLETED;\n            step   = interrupt || fail || step;\n          } else {\n            // The interrupt status for the enqueued item.\n            tmp      = attempts._3;\n            attempt  = attempts._1;\n            attempts = attempts._2;\n\n            switch (attempt.tag) {\n            // We cannot recover from an unmasked interrupt. Otherwise we should\n            // continue stepping, or run the exception handler if an exception\n            // was raised.\n            case CATCH:\n              // We should compare the interrupt status as well because we\n              // only want it to apply if there has been an interrupt since\n              // enqueuing the catch.\n              if (interrupt && interrupt !== tmp && bracketCount === 0) {\n                status = RETURN;\n              } else if (fail) {\n                status = CONTINUE;\n                step   = attempt._2(util.fromLeft(fail));\n                fail   = null;\n              }\n              break;\n\n            // We cannot resume from an unmasked interrupt or exception.\n            case RESUME:\n              // As with Catch, we only want to ignore in the case of an\n              // interrupt since enqueing the item.\n              if (interrupt && interrupt !== tmp && bracketCount === 0 || fail) {\n                status = RETURN;\n              } else {\n                bhead  = attempt._1;\n                btail  = attempt._2;\n                status = STEP_BIND;\n                step   = util.fromRight(step);\n              }\n              break;\n\n            // If we have a bracket, we should enqueue the handlers,\n            // and continue with the success branch only if the fiber has\n            // not been interrupted. If the bracket acquisition failed, we\n            // should not run either.\n            case BRACKET:\n              bracketCount--;\n              if (fail === null) {\n                result   = util.fromRight(step);\n                // We need to enqueue the Release with the same interrupt\n                // status as the Bracket that is initiating it.\n                attempts = new Aff(CONS, new Aff(RELEASE, attempt._2, result), attempts, tmp);\n                // We should only coninue as long as the interrupt status has not changed or\n                // we are currently within a non-interruptable finalizer.\n                if (interrupt === tmp || bracketCount > 0) {\n                  status = CONTINUE;\n                  step   = attempt._3(result);\n                }\n              }\n              break;\n\n            // Enqueue the appropriate handler. We increase the bracket count\n            // because it should not be cancelled.\n            case RELEASE:\n              attempts = new Aff(CONS, new Aff(FINALIZED, step, fail), attempts, interrupt);\n              status   = CONTINUE;\n              // It has only been killed if the interrupt status has changed\n              // since we enqueued the item, and the bracket count is 0. If the\n              // bracket count is non-zero then we are in a masked state so it's\n              // impossible to be killed.\n              if (interrupt && interrupt !== tmp && bracketCount === 0) {\n                step = attempt._1.killed(util.fromLeft(interrupt))(attempt._2);\n              } else if (fail) {\n                step = attempt._1.failed(util.fromLeft(fail))(attempt._2);\n              } else {\n                step = attempt._1.completed(util.fromRight(step))(attempt._2);\n              }\n              fail = null;\n              bracketCount++;\n              break;\n\n            case FINALIZER:\n              bracketCount++;\n              attempts = new Aff(CONS, new Aff(FINALIZED, step, fail), attempts, interrupt);\n              status   = CONTINUE;\n              step     = attempt._1;\n              break;\n\n            case FINALIZED:\n              bracketCount--;\n              status = RETURN;\n              step   = attempt._1;\n              fail   = attempt._2;\n              break;\n            }\n          }\n          break;\n\n        case COMPLETED:\n          for (var k in joins) {\n            if (joins.hasOwnProperty(k)) {\n              rethrow = rethrow && joins[k].rethrow;\n              runEff(joins[k].handler(step));\n            }\n          }\n          joins = null;\n          // If we have an interrupt and a fail, then the thread threw while\n          // running finalizers. This should always rethrow in a fresh stack.\n          if (interrupt && fail) {\n            setTimeout(function () {\n              throw util.fromLeft(fail);\n            }, 0);\n          // If we have an unhandled exception, and no other fiber has joined\n          // then we need to throw the exception in a fresh stack.\n          } else if (util.isLeft(step) && rethrow) {\n            setTimeout(function () {\n              // Guard on reathrow because a completely synchronous fiber can\n              // still have an observer which was added after-the-fact.\n              if (rethrow) {\n                throw util.fromLeft(step);\n              }\n            }, 0);\n          }\n          return;\n        case SUSPENDED:\n          status = CONTINUE;\n          break;\n        case PENDING: return;\n        }\n      }\n    }\n\n    function onComplete(join) {\n      return function () {\n        if (status === COMPLETED) {\n          rethrow = rethrow && join.rethrow;\n          join.handler(step)();\n          return function () {};\n        }\n\n        var jid    = joinId++;\n        joins      = joins || {};\n        joins[jid] = join;\n\n        return function() {\n          if (joins !== null) {\n            delete joins[jid];\n          }\n        };\n      };\n    }\n\n    function kill(error, cb) {\n      return function () {\n        if (status === COMPLETED) {\n          cb(util.right(void 0))();\n          return function () {};\n        }\n\n        var canceler = onComplete({\n          rethrow: false,\n          handler: function (/* unused */) {\n            return cb(util.right(void 0));\n          }\n        })();\n\n        switch (status) {\n        case SUSPENDED:\n          interrupt = util.left(error);\n          status    = COMPLETED;\n          step      = interrupt;\n          run(runTick);\n          break;\n        case PENDING:\n          if (interrupt === null) {\n            interrupt = util.left(error);\n          }\n          if (bracketCount === 0) {\n            if (status === PENDING) {\n              attempts = new Aff(CONS, new Aff(FINALIZER, step(error)), attempts, interrupt);\n            }\n            status   = RETURN;\n            step     = null;\n            fail     = null;\n            run(++runTick);\n          }\n          break;\n        default:\n          if (interrupt === null) {\n            interrupt = util.left(error);\n          }\n          if (bracketCount === 0) {\n            status = RETURN;\n            step   = null;\n            fail   = null;\n          }\n        }\n\n        return canceler;\n      };\n    }\n\n    function join(cb) {\n      return function () {\n        var canceler = onComplete({\n          rethrow: false,\n          handler: cb\n        })();\n        if (status === SUSPENDED) {\n          run(runTick);\n        }\n        return canceler;\n      };\n    }\n\n    return {\n      kill: kill,\n      join: join,\n      onComplete: onComplete,\n      isSuspended: function () {\n        return status === SUSPENDED;\n      },\n      run: function () {\n        if (status === SUSPENDED) {\n          if (!Scheduler.isDraining()) {\n            Scheduler.enqueue(function () {\n              run(runTick);\n            });\n          } else {\n            run(runTick);\n          }\n        }\n      }\n    };\n  }\n\n  function runPar(util, supervisor, par, cb) {\n    // Table of all forked fibers.\n    var fiberId   = 0;\n    var fibers    = {};\n\n    // Table of currently running cancelers, as a product of `Alt` behavior.\n    var killId    = 0;\n    var kills     = {};\n\n    // Error used for early cancelation on Alt branches.\n    var early     = new Error(\"[ParAff] Early exit\");\n\n    // Error used to kill the entire tree.\n    var interrupt = null;\n\n    // The root pointer of the tree.\n    var root      = EMPTY;\n\n    // Walks a tree, invoking all the cancelers. Returns the table of pending\n    // cancellation fibers.\n    function kill(error, par, cb) {\n      var step  = par;\n      var head  = null;\n      var tail  = null;\n      var count = 0;\n      var kills = {};\n      var tmp, kid;\n\n      loop: while (true) {\n        tmp = null;\n\n        switch (step.tag) {\n        case FORKED:\n          if (step._3 === EMPTY) {\n            tmp = fibers[step._1];\n            kills[count++] = tmp.kill(error, function (result) {\n              return function () {\n                count--;\n                if (count === 0) {\n                  cb(result)();\n                }\n              };\n            });\n          }\n          // Terminal case.\n          if (head === null) {\n            break loop;\n          }\n          // Go down the right side of the tree.\n          step = head._2;\n          if (tail === null) {\n            head = null;\n          } else {\n            head = tail._1;\n            tail = tail._2;\n          }\n          break;\n        case MAP:\n          step = step._2;\n          break;\n        case APPLY:\n        case ALT:\n          if (head) {\n            tail = new Aff(CONS, head, tail);\n          }\n          head = step;\n          step = step._1;\n          break;\n        }\n      }\n\n      if (count === 0) {\n        cb(util.right(void 0))();\n      } else {\n        // Run the cancelation effects. We alias `count` because it's mutable.\n        kid = 0;\n        tmp = count;\n        for (; kid < tmp; kid++) {\n          kills[kid] = kills[kid]();\n        }\n      }\n\n      return kills;\n    }\n\n    // When a fiber resolves, we need to bubble back up the tree with the\n    // result, computing the applicative nodes.\n    function join(result, head, tail) {\n      var fail, step, lhs, rhs, tmp, kid;\n\n      if (util.isLeft(result)) {\n        fail = result;\n        step = null;\n      } else {\n        step = result;\n        fail = null;\n      }\n\n      loop: while (true) {\n        lhs = null;\n        rhs = null;\n        tmp = null;\n        kid = null;\n\n        // We should never continue if the entire tree has been interrupted.\n        if (interrupt !== null) {\n          return;\n        }\n\n        // We've made it all the way to the root of the tree, which means\n        // the tree has fully evaluated.\n        if (head === null) {\n          cb(fail || step)();\n          return;\n        }\n\n        // The tree has already been computed, so we shouldn't try to do it\n        // again. This should never happen.\n        // TODO: Remove this?\n        if (head._3 !== EMPTY) {\n          return;\n        }\n\n        switch (head.tag) {\n        case MAP:\n          if (fail === null) {\n            head._3 = util.right(head._1(util.fromRight(step)));\n            step    = head._3;\n          } else {\n            head._3 = fail;\n          }\n          break;\n        case APPLY:\n          lhs = head._1._3;\n          rhs = head._2._3;\n          // If we have a failure we should kill the other side because we\n          // can't possible yield a result anymore.\n          if (fail) {\n            head._3 = fail;\n            tmp     = true;\n            kid     = killId++;\n\n            kills[kid] = kill(early, fail === lhs ? head._2 : head._1, function (/* unused */) {\n              return function () {\n                delete kills[kid];\n                if (tmp) {\n                  tmp = false;\n                } else if (tail === null) {\n                  join(fail, null, null);\n                } else {\n                  join(fail, tail._1, tail._2);\n                }\n              };\n            });\n\n            if (tmp) {\n              tmp = false;\n              return;\n            }\n          } else if (lhs === EMPTY || rhs === EMPTY) {\n            // We can only proceed if both sides have resolved.\n            return;\n          } else {\n            step    = util.right(util.fromRight(lhs)(util.fromRight(rhs)));\n            head._3 = step;\n          }\n          break;\n        case ALT:\n          lhs = head._1._3;\n          rhs = head._2._3;\n          // We can only proceed if both have resolved or we have a success\n          if (lhs === EMPTY && util.isLeft(rhs) || rhs === EMPTY && util.isLeft(lhs)) {\n            return;\n          }\n          // If both sides resolve with an error, we should continue with the\n          // first error\n          if (lhs !== EMPTY && util.isLeft(lhs) && rhs !== EMPTY && util.isLeft(rhs)) {\n            fail    = step === lhs ? rhs : lhs;\n            step    = null;\n            head._3 = fail;\n          } else {\n            head._3 = step;\n            tmp     = true;\n            kid     = killId++;\n            // Once a side has resolved, we need to cancel the side that is still\n            // pending before we can continue.\n            kills[kid] = kill(early, step === lhs ? head._2 : head._1, function (/* unused */) {\n              return function () {\n                delete kills[kid];\n                if (tmp) {\n                  tmp = false;\n                } else if (tail === null) {\n                  join(step, null, null);\n                } else {\n                  join(step, tail._1, tail._2);\n                }\n              };\n            });\n\n            if (tmp) {\n              tmp = false;\n              return;\n            }\n          }\n          break;\n        }\n\n        if (tail === null) {\n          head = null;\n        } else {\n          head = tail._1;\n          tail = tail._2;\n        }\n      }\n    }\n\n    function resolve(fiber) {\n      return function (result) {\n        return function () {\n          delete fibers[fiber._1];\n          fiber._3 = result;\n          join(result, fiber._2._1, fiber._2._2);\n        };\n      };\n    }\n\n    // Walks the applicative tree, substituting non-applicative nodes with\n    // `FORKED` nodes. In this tree, all applicative nodes use the `_3` slot\n    // as a mutable slot for memoization. In an unresolved state, the `_3`\n    // slot is `EMPTY`. In the cases of `ALT` and `APPLY`, we always walk\n    // the left side first, because both operations are left-associative. As\n    // we `RETURN` from those branches, we then walk the right side.\n    function run() {\n      var status = CONTINUE;\n      var step   = par;\n      var head   = null;\n      var tail   = null;\n      var tmp, fid;\n\n      loop: while (true) {\n        tmp = null;\n        fid = null;\n\n        switch (status) {\n        case CONTINUE:\n          switch (step.tag) {\n          case MAP:\n            if (head) {\n              tail = new Aff(CONS, head, tail);\n            }\n            head = new Aff(MAP, step._1, EMPTY, EMPTY);\n            step = step._2;\n            break;\n          case APPLY:\n            if (head) {\n              tail = new Aff(CONS, head, tail);\n            }\n            head = new Aff(APPLY, EMPTY, step._2, EMPTY);\n            step = step._1;\n            break;\n          case ALT:\n            if (head) {\n              tail = new Aff(CONS, head, tail);\n            }\n            head = new Aff(ALT, EMPTY, step._2, EMPTY);\n            step = step._1;\n            break;\n          default:\n            // When we hit a leaf value, we suspend the stack in the `FORKED`.\n            // When the fiber resolves, it can bubble back up the tree.\n            fid    = fiberId++;\n            status = RETURN;\n            tmp    = step;\n            step   = new Aff(FORKED, fid, new Aff(CONS, head, tail), EMPTY);\n            tmp    = Fiber(util, supervisor, tmp);\n            tmp.onComplete({\n              rethrow: false,\n              handler: resolve(step)\n            })();\n            fibers[fid] = tmp;\n            if (supervisor) {\n              supervisor.register(tmp);\n            }\n          }\n          break;\n        case RETURN:\n          // Terminal case, we are back at the root.\n          if (head === null) {\n            break loop;\n          }\n          // If we are done with the right side, we need to continue down the\n          // left. Otherwise we should continue up the stack.\n          if (head._1 === EMPTY) {\n            head._1 = step;\n            status  = CONTINUE;\n            step    = head._2;\n            head._2 = EMPTY;\n          } else {\n            head._2 = step;\n            step    = head;\n            if (tail === null) {\n              head  = null;\n            } else {\n              head  = tail._1;\n              tail  = tail._2;\n            }\n          }\n        }\n      }\n\n      // Keep a reference to the tree root so it can be cancelled.\n      root = step;\n\n      for (fid = 0; fid < fiberId; fid++) {\n        fibers[fid].run();\n      }\n    }\n\n    // Cancels the entire tree. If there are already subtrees being canceled,\n    // we need to first cancel those joins. We will then add fresh joins for\n    // all pending branches including those that were in the process of being\n    // canceled.\n    function cancel(error, cb) {\n      interrupt = util.left(error);\n      var innerKills;\n      for (var kid in kills) {\n        if (kills.hasOwnProperty(kid)) {\n          innerKills = kills[kid];\n          for (kid in innerKills) {\n            if (innerKills.hasOwnProperty(kid)) {\n              innerKills[kid]();\n            }\n          }\n        }\n      }\n\n      kills = null;\n      var newKills = kill(error, root, cb);\n\n      return function (killError) {\n        return new Aff(ASYNC, function (killCb) {\n          return function () {\n            for (var kid in newKills) {\n              if (newKills.hasOwnProperty(kid)) {\n                newKills[kid]();\n              }\n            }\n            return nonCanceler;\n          };\n        });\n      };\n    }\n\n    run();\n\n    return function (killError) {\n      return new Aff(ASYNC, function (killCb) {\n        return function () {\n          return cancel(killError, killCb);\n        };\n      });\n    };\n  }\n\n  function sequential(util, supervisor, par) {\n    return new Aff(ASYNC, function (cb) {\n      return function () {\n        return runPar(util, supervisor, par, cb);\n      };\n    });\n  }\n\n  Aff.EMPTY       = EMPTY;\n  Aff.Pure        = AffCtr(PURE);\n  Aff.Throw       = AffCtr(THROW);\n  Aff.Catch       = AffCtr(CATCH);\n  Aff.Sync        = AffCtr(SYNC);\n  Aff.Async       = AffCtr(ASYNC);\n  Aff.Bind        = AffCtr(BIND);\n  Aff.Bracket     = AffCtr(BRACKET);\n  Aff.Fork        = AffCtr(FORK);\n  Aff.Seq         = AffCtr(SEQ);\n  Aff.ParMap      = AffCtr(MAP);\n  Aff.ParApply    = AffCtr(APPLY);\n  Aff.ParAlt      = AffCtr(ALT);\n  Aff.Fiber       = Fiber;\n  Aff.Supervisor  = Supervisor;\n  Aff.Scheduler   = Scheduler;\n  Aff.nonCanceler = nonCanceler;\n\n  return Aff;\n}();\n\nexport const _pure = Aff.Pure;\nexport const _throwError = Aff.Throw;\n\nexport function _catchError(aff) {\n  return function (k) {\n    return Aff.Catch(aff, k);\n  };\n}\n\nexport function _map(f) {\n  return function (aff) {\n    if (aff.tag === Aff.Pure.tag) {\n      return Aff.Pure(f(aff._1));\n    } else {\n      return Aff.Bind(aff, function (value) {\n        return Aff.Pure(f(value));\n      });\n    }\n  };\n}\n\nexport function _bind(aff) {\n  return function (k) {\n    return Aff.Bind(aff, k);\n  };\n}\n\nexport function _fork(immediate) {\n  return function (aff) {\n    return Aff.Fork(immediate, aff);\n  };\n}\n\nexport const _liftEffect = Aff.Sync;\n\nexport function _parAffMap(f) {\n  return function (aff) {\n    return Aff.ParMap(f, aff);\n  };\n}\n\nexport function _parAffApply(aff1) {\n  return function (aff2) {\n    return Aff.ParApply(aff1, aff2);\n  };\n}\n\nexport function _parAffAlt(aff1) {\n  return function (aff2) {\n    return Aff.ParAlt(aff1, aff2);\n  };\n}\n\nexport const makeAff = Aff.Async;\n\nexport function generalBracket(acquire) {\n  return function (options) {\n    return function (k) {\n      return Aff.Bracket(acquire, options, k);\n    };\n  };\n}\n\nexport function _makeFiber(util, aff) {\n  return function () {\n    return Aff.Fiber(util, null, aff);\n  };\n}\n\nexport function _makeSupervisedFiber(util, aff) {\n  return function () {\n    var supervisor = Aff.Supervisor(util);\n    return {\n      fiber: Aff.Fiber(util, supervisor, aff),\n      supervisor: supervisor\n    };\n  };\n}\n\nexport function _killAll(error, supervisor, cb) {\n  return supervisor.killAll(error, cb);\n}\n\nexport const _delay = function () {\n  function setDelay(n, k) {\n    if (n === 0 && typeof setImmediate !== \"undefined\") {\n      return setImmediate(k);\n    } else {\n      return setTimeout(k, n);\n    }\n  }\n\n  function clearDelay(n, t) {\n    if (n === 0 && typeof clearImmediate !== \"undefined\") {\n      return clearImmediate(t);\n    } else {\n      return clearTimeout(t);\n    }\n  }\n\n  return function (right, ms) {\n    return Aff.Async(function (cb) {\n      return function () {\n        var timer = setDelay(ms, cb(right()));\n        return function () {\n          return Aff.Sync(function () {\n            return right(clearDelay(ms, timer));\n          });\n        };\n      };\n    });\n  };\n}();\n\nexport const _sequential = Aff.Seq;\n", "// Generated by purs version 0.15.15\nimport * as Control_Applicative from \"../Control.Applicative/index.js\";\nimport * as Control_Apply from \"../Control.Apply/index.js\";\nimport * as Control_Bind from \"../Control.Bind/index.js\";\nimport * as Data_Functor from \"../Data.Functor/index.js\";\nvar whenM = function (dictMonad) {\n    var bind = Control_Bind.bind(dictMonad.Bind1());\n    var when = Control_Applicative.when(dictMonad.Applicative0());\n    return function (mb) {\n        return function (m) {\n            return bind(mb)(function (b) {\n                return when(b)(m);\n            });\n        };\n    };\n};\nvar unlessM = function (dictMonad) {\n    var bind = Control_Bind.bind(dictMonad.Bind1());\n    var unless = Control_Applicative.unless(dictMonad.Applicative0());\n    return function (mb) {\n        return function (m) {\n            return bind(mb)(function (b) {\n                return unless(b)(m);\n            });\n        };\n    };\n};\nvar monadProxy = {\n    Applicative0: function () {\n        return Control_Applicative.applicativeProxy;\n    },\n    Bind1: function () {\n        return Control_Bind.bindProxy;\n    }\n};\nvar monadFn = {\n    Applicative0: function () {\n        return Control_Applicative.applicativeFn;\n    },\n    Bind1: function () {\n        return Control_Bind.bindFn;\n    }\n};\nvar monadArray = {\n    Applicative0: function () {\n        return Control_Applicative.applicativeArray;\n    },\n    Bind1: function () {\n        return Control_Bind.bindArray;\n    }\n};\nvar liftM1 = function (dictMonad) {\n    var bind = Control_Bind.bind(dictMonad.Bind1());\n    var pure = Control_Applicative.pure(dictMonad.Applicative0());\n    return function (f) {\n        return function (a) {\n            return bind(a)(function (a$prime) {\n                return pure(f(a$prime));\n            });\n        };\n    };\n};\nvar ap = function (dictMonad) {\n    var bind = Control_Bind.bind(dictMonad.Bind1());\n    var pure = Control_Applicative.pure(dictMonad.Applicative0());\n    return function (f) {\n        return function (a) {\n            return bind(f)(function (f$prime) {\n                return bind(a)(function (a$prime) {\n                    return pure(f$prime(a$prime));\n                });\n            });\n        };\n    };\n};\nexport {\n    liftM1,\n    whenM,\n    unlessM,\n    ap,\n    monadFn,\n    monadArray,\n    monadProxy\n};\nexport {\n    liftA1,\n    pure,\n    unless,\n    when\n} from \"../Control.Applicative/index.js\";\nexport {\n    apply\n} from \"../Control.Apply/index.js\";\nexport {\n    bind,\n    ifM,\n    join\n} from \"../Control.Bind/index.js\";\nexport {\n    map,\n    void\n} from \"../Data.Functor/index.js\";\n", "export const concatString = function (s1) {\n  return function (s2) {\n    return s1 + s2;\n  };\n};\n\nexport const concatArray = function (xs) {\n  return function (ys) {\n    if (xs.length === 0) return ys;\n    if (ys.length === 0) return xs;\n    return xs.concat(ys);\n  };\n};\n", "// Generated by purs version 0.15.15\nimport * as $foreign from \"./foreign.js\";\nimport * as Type_Proxy from \"../Type.Proxy/index.js\";\nvar reifySymbol = function (s) {\n    return function (f) {\n        return $foreign.unsafeCoerce(function (dictIsSymbol) {\n            return f(dictIsSymbol);\n        })({\n            reflectSymbol: function (v) {\n                return s;\n            }\n        })(Type_Proxy[\"Proxy\"].value);\n    };\n};\nvar reflectSymbol = function (dict) {\n    return dict.reflectSymbol;\n};\nexport {\n    reflectSymbol,\n    reifySymbol\n};\n", "export const unsafeHas = function (label) {\n  return function (rec) {\n    return {}.hasOwnProperty.call(rec, label);\n  };\n};\n\nexport const unsafeGet = function (label) {\n  return function (rec) {\n    return rec[label];\n  };\n};\n\nexport const unsafeSet = function (label) {\n  return function (value) {\n    return function (rec) {\n      var copy = {};\n      for (var key in rec) {\n        if ({}.hasOwnProperty.call(rec, key)) {\n          copy[key] = rec[key];\n        }\n      }\n      copy[label] = value;\n      return copy;\n    };\n  };\n};\n\nexport const unsafeDelete = function (label) {\n  return function (rec) {\n    var copy = {};\n    for (var key in rec) {\n      if (key !== label && {}.hasOwnProperty.call(rec, key)) {\n        copy[key] = rec[key];\n      }\n    }\n    return copy;\n  };\n};\n", "// Generated by purs version 0.15.15\nimport * as $foreign from \"./foreign.js\";\nimport * as Data_Symbol from \"../Data.Symbol/index.js\";\nimport * as Data_Unit from \"../Data.Unit/index.js\";\nimport * as Data_Void from \"../Data.Void/index.js\";\nimport * as Record_Unsafe from \"../Record.Unsafe/index.js\";\nimport * as Type_Proxy from \"../Type.Proxy/index.js\";\nvar semigroupVoid = {\n    append: function (v) {\n        return Data_Void.absurd;\n    }\n};\nvar semigroupUnit = {\n    append: function (v) {\n        return function (v1) {\n            return Data_Unit.unit;\n        };\n    }\n};\nvar semigroupString = {\n    append: $foreign.concatString\n};\nvar semigroupRecordNil = {\n    appendRecord: function (v) {\n        return function (v1) {\n            return function (v2) {\n                return {};\n            };\n        };\n    }\n};\nvar semigroupProxy = {\n    append: function (v) {\n        return function (v1) {\n            return Type_Proxy[\"Proxy\"].value;\n        };\n    }\n};\nvar semigroupArray = {\n    append: $foreign.concatArray\n};\nvar appendRecord = function (dict) {\n    return dict.appendRecord;\n};\nvar semigroupRecord = function () {\n    return function (dictSemigroupRecord) {\n        return {\n            append: appendRecord(dictSemigroupRecord)(Type_Proxy[\"Proxy\"].value)\n        };\n    };\n};\nvar append = function (dict) {\n    return dict.append;\n};\nvar semigroupFn = function (dictSemigroup) {\n    var append1 = append(dictSemigroup);\n    return {\n        append: function (f) {\n            return function (g) {\n                return function (x) {\n                    return append1(f(x))(g(x));\n                };\n            };\n        }\n    };\n};\nvar semigroupRecordCons = function (dictIsSymbol) {\n    var reflectSymbol = Data_Symbol.reflectSymbol(dictIsSymbol);\n    return function () {\n        return function (dictSemigroupRecord) {\n            var appendRecord1 = appendRecord(dictSemigroupRecord);\n            return function (dictSemigroup) {\n                var append1 = append(dictSemigroup);\n                return {\n                    appendRecord: function (v) {\n                        return function (ra) {\n                            return function (rb) {\n                                var tail = appendRecord1(Type_Proxy[\"Proxy\"].value)(ra)(rb);\n                                var key = reflectSymbol(Type_Proxy[\"Proxy\"].value);\n                                var insert = Record_Unsafe.unsafeSet(key);\n                                var get = Record_Unsafe.unsafeGet(key);\n                                return insert(append1(get(ra))(get(rb)))(tail);\n                            };\n                        };\n                    }\n                };\n            };\n        };\n    };\n};\nexport {\n    append,\n    appendRecord,\n    semigroupString,\n    semigroupUnit,\n    semigroupVoid,\n    semigroupFn,\n    semigroupArray,\n    semigroupProxy,\n    semigroupRecord,\n    semigroupRecordNil,\n    semigroupRecordCons\n};\n", "export const topInt = 2147483647;\nexport const bottomInt = -2147483648;\n\nexport const topChar = String.fromCharCode(65535);\nexport const bottomChar = String.fromCharCode(0);\n\nexport const topNumber = Number.POSITIVE_INFINITY;\nexport const bottomNumber = Number.NEGATIVE_INFINITY;\n", "var unsafeCompareImpl = function (lt) {\n  return function (eq) {\n    return function (gt) {\n      return function (x) {\n        return function (y) {\n          return x < y ? lt : x === y ? eq : gt;\n        };\n      };\n    };\n  };\n};\n\nexport const ordBooleanImpl = unsafeCompareImpl;\nexport const ordIntImpl = unsafeCompareImpl;\nexport const ordNumberImpl = unsafeCompareImpl;\nexport const ordStringImpl = unsafeCompareImpl;\nexport const ordCharImpl = unsafeCompareImpl;\n\nexport const ordArrayImpl = function (f) {\n  return function (xs) {\n    return function (ys) {\n      var i = 0;\n      var xlen = xs.length;\n      var ylen = ys.length;\n      while (i < xlen && i < ylen) {\n        var x = xs[i];\n        var y = ys[i];\n        var o = f(x)(y);\n        if (o !== 0) {\n          return o;\n        }\n        i++;\n      }\n      if (xlen === ylen) {\n        return 0;\n      } else if (xlen > ylen) {\n        return -1;\n      } else {\n        return 1;\n      }\n    };\n  };\n};\n", "var refEq = function (r1) {\n  return function (r2) {\n    return r1 === r2;\n  };\n};\n\nexport const eqBooleanImpl = refEq;\nexport const eqIntImpl = refEq;\nexport const eqNumberImpl = refEq;\nexport const eqCharImpl = refEq;\nexport const eqStringImpl = refEq;\n\nexport const eqArrayImpl = function (f) {\n  return function (xs) {\n    return function (ys) {\n      if (xs.length !== ys.length) return false;\n      for (var i = 0; i < xs.length; i++) {\n        if (!f(xs[i])(ys[i])) return false;\n      }\n      return true;\n    };\n  };\n};\n", "// Generated by purs version 0.15.15\nimport * as $foreign from \"./foreign.js\";\nimport * as Data_Symbol from \"../Data.Symbol/index.js\";\nimport * as Record_Unsafe from \"../Record.Unsafe/index.js\";\nimport * as Type_Proxy from \"../Type.Proxy/index.js\";\nvar eqVoid = {\n    eq: function (v) {\n        return function (v1) {\n            return true;\n        };\n    }\n};\nvar eqUnit = {\n    eq: function (v) {\n        return function (v1) {\n            return true;\n        };\n    }\n};\nvar eqString = {\n    eq: $foreign.eqStringImpl\n};\nvar eqRowNil = {\n    eqRecord: function (v) {\n        return function (v1) {\n            return function (v2) {\n                return true;\n            };\n        };\n    }\n};\nvar eqRecord = function (dict) {\n    return dict.eqRecord;\n};\nvar eqRec = function () {\n    return function (dictEqRecord) {\n        return {\n            eq: eqRecord(dictEqRecord)(Type_Proxy[\"Proxy\"].value)\n        };\n    };\n};\nvar eqProxy = {\n    eq: function (v) {\n        return function (v1) {\n            return true;\n        };\n    }\n};\nvar eqNumber = {\n    eq: $foreign.eqNumberImpl\n};\nvar eqInt = {\n    eq: $foreign.eqIntImpl\n};\nvar eqChar = {\n    eq: $foreign.eqCharImpl\n};\nvar eqBoolean = {\n    eq: $foreign.eqBooleanImpl\n};\nvar eq1 = function (dict) {\n    return dict.eq1;\n};\nvar eq = function (dict) {\n    return dict.eq;\n};\nvar eq2 = /* #__PURE__ */ eq(eqBoolean);\nvar eqArray = function (dictEq) {\n    return {\n        eq: $foreign.eqArrayImpl(eq(dictEq))\n    };\n};\nvar eq1Array = {\n    eq1: function (dictEq) {\n        return eq(eqArray(dictEq));\n    }\n};\nvar eqRowCons = function (dictEqRecord) {\n    var eqRecord1 = eqRecord(dictEqRecord);\n    return function () {\n        return function (dictIsSymbol) {\n            var reflectSymbol = Data_Symbol.reflectSymbol(dictIsSymbol);\n            return function (dictEq) {\n                var eq3 = eq(dictEq);\n                return {\n                    eqRecord: function (v) {\n                        return function (ra) {\n                            return function (rb) {\n                                var tail = eqRecord1(Type_Proxy[\"Proxy\"].value)(ra)(rb);\n                                var key = reflectSymbol(Type_Proxy[\"Proxy\"].value);\n                                var get = Record_Unsafe.unsafeGet(key);\n                                return eq3(get(ra))(get(rb)) && tail;\n                            };\n                        };\n                    }\n                };\n            };\n        };\n    };\n};\nvar notEq = function (dictEq) {\n    var eq3 = eq(dictEq);\n    return function (x) {\n        return function (y) {\n            return eq2(eq3(x)(y))(false);\n        };\n    };\n};\nvar notEq1 = function (dictEq1) {\n    var eq11 = eq1(dictEq1);\n    return function (dictEq) {\n        var eq12 = eq11(dictEq);\n        return function (x) {\n            return function (y) {\n                return eq2(eq12(x)(y))(false);\n            };\n        };\n    };\n};\nexport {\n    eq,\n    notEq,\n    eq1,\n    notEq1,\n    eqRecord,\n    eqBoolean,\n    eqInt,\n    eqNumber,\n    eqChar,\n    eqString,\n    eqUnit,\n    eqVoid,\n    eqArray,\n    eqRec,\n    eqProxy,\n    eq1Array,\n    eqRowNil,\n    eqRowCons\n};\n", "// Generated by purs version 0.15.15\nvar LT = /* #__PURE__ */ (function () {\n    function LT() {\n\n    };\n    LT.value = new LT();\n    return LT;\n})();\nvar GT = /* #__PURE__ */ (function () {\n    function GT() {\n\n    };\n    GT.value = new GT();\n    return GT;\n})();\nvar EQ = /* #__PURE__ */ (function () {\n    function EQ() {\n\n    };\n    EQ.value = new EQ();\n    return EQ;\n})();\nvar showOrdering = {\n    show: function (v) {\n        if (v instanceof LT) {\n            return \"LT\";\n        };\n        if (v instanceof GT) {\n            return \"GT\";\n        };\n        if (v instanceof EQ) {\n            return \"EQ\";\n        };\n        throw new Error(\"Failed pattern match at Data.Ordering (line 26, column 1 - line 29, column 17): \" + [ v.constructor.name ]);\n    }\n};\nvar semigroupOrdering = {\n    append: function (v) {\n        return function (v1) {\n            if (v instanceof LT) {\n                return LT.value;\n            };\n            if (v instanceof GT) {\n                return GT.value;\n            };\n            if (v instanceof EQ) {\n                return v1;\n            };\n            throw new Error(\"Failed pattern match at Data.Ordering (line 21, column 1 - line 24, column 18): \" + [ v.constructor.name, v1.constructor.name ]);\n        };\n    }\n};\nvar invert = function (v) {\n    if (v instanceof GT) {\n        return LT.value;\n    };\n    if (v instanceof EQ) {\n        return EQ.value;\n    };\n    if (v instanceof LT) {\n        return GT.value;\n    };\n    throw new Error(\"Failed pattern match at Data.Ordering (line 33, column 1 - line 33, column 31): \" + [ v.constructor.name ]);\n};\nvar eqOrdering = {\n    eq: function (v) {\n        return function (v1) {\n            if (v instanceof LT && v1 instanceof LT) {\n                return true;\n            };\n            if (v instanceof GT && v1 instanceof GT) {\n                return true;\n            };\n            if (v instanceof EQ && v1 instanceof EQ) {\n                return true;\n            };\n            return false;\n        };\n    }\n};\nexport {\n    LT,\n    GT,\n    EQ,\n    invert,\n    eqOrdering,\n    semigroupOrdering,\n    showOrdering\n};\n", "// Generated by purs version 0.15.15\nimport * as $foreign from \"./foreign.js\";\nimport * as Data_Eq from \"../Data.Eq/index.js\";\nimport * as Data_Ordering from \"../Data.Ordering/index.js\";\nimport * as Data_Ring from \"../Data.Ring/index.js\";\nimport * as Data_Semiring from \"../Data.Semiring/index.js\";\nimport * as Data_Symbol from \"../Data.Symbol/index.js\";\nimport * as Record_Unsafe from \"../Record.Unsafe/index.js\";\nimport * as Type_Proxy from \"../Type.Proxy/index.js\";\nvar eqRec = /* #__PURE__ */ Data_Eq.eqRec();\nvar notEq = /* #__PURE__ */ Data_Eq.notEq(Data_Ordering.eqOrdering);\nvar ordVoid = {\n    compare: function (v) {\n        return function (v1) {\n            return Data_Ordering.EQ.value;\n        };\n    },\n    Eq0: function () {\n        return Data_Eq.eqVoid;\n    }\n};\nvar ordUnit = {\n    compare: function (v) {\n        return function (v1) {\n            return Data_Ordering.EQ.value;\n        };\n    },\n    Eq0: function () {\n        return Data_Eq.eqUnit;\n    }\n};\nvar ordString = /* #__PURE__ */ (function () {\n    return {\n        compare: $foreign.ordStringImpl(Data_Ordering.LT.value)(Data_Ordering.EQ.value)(Data_Ordering.GT.value),\n        Eq0: function () {\n            return Data_Eq.eqString;\n        }\n    };\n})();\nvar ordRecordNil = {\n    compareRecord: function (v) {\n        return function (v1) {\n            return function (v2) {\n                return Data_Ordering.EQ.value;\n            };\n        };\n    },\n    EqRecord0: function () {\n        return Data_Eq.eqRowNil;\n    }\n};\nvar ordProxy = {\n    compare: function (v) {\n        return function (v1) {\n            return Data_Ordering.EQ.value;\n        };\n    },\n    Eq0: function () {\n        return Data_Eq.eqProxy;\n    }\n};\nvar ordOrdering = {\n    compare: function (v) {\n        return function (v1) {\n            if (v instanceof Data_Ordering.LT && v1 instanceof Data_Ordering.LT) {\n                return Data_Ordering.EQ.value;\n            };\n            if (v instanceof Data_Ordering.EQ && v1 instanceof Data_Ordering.EQ) {\n                return Data_Ordering.EQ.value;\n            };\n            if (v instanceof Data_Ordering.GT && v1 instanceof Data_Ordering.GT) {\n                return Data_Ordering.EQ.value;\n            };\n            if (v instanceof Data_Ordering.LT) {\n                return Data_Ordering.LT.value;\n            };\n            if (v instanceof Data_Ordering.EQ && v1 instanceof Data_Ordering.LT) {\n                return Data_Ordering.GT.value;\n            };\n            if (v instanceof Data_Ordering.EQ && v1 instanceof Data_Ordering.GT) {\n                return Data_Ordering.LT.value;\n            };\n            if (v instanceof Data_Ordering.GT) {\n                return Data_Ordering.GT.value;\n            };\n            throw new Error(\"Failed pattern match at Data.Ord (line 126, column 1 - line 133, column 20): \" + [ v.constructor.name, v1.constructor.name ]);\n        };\n    },\n    Eq0: function () {\n        return Data_Ordering.eqOrdering;\n    }\n};\nvar ordNumber = /* #__PURE__ */ (function () {\n    return {\n        compare: $foreign.ordNumberImpl(Data_Ordering.LT.value)(Data_Ordering.EQ.value)(Data_Ordering.GT.value),\n        Eq0: function () {\n            return Data_Eq.eqNumber;\n        }\n    };\n})();\nvar ordInt = /* #__PURE__ */ (function () {\n    return {\n        compare: $foreign.ordIntImpl(Data_Ordering.LT.value)(Data_Ordering.EQ.value)(Data_Ordering.GT.value),\n        Eq0: function () {\n            return Data_Eq.eqInt;\n        }\n    };\n})();\nvar ordChar = /* #__PURE__ */ (function () {\n    return {\n        compare: $foreign.ordCharImpl(Data_Ordering.LT.value)(Data_Ordering.EQ.value)(Data_Ordering.GT.value),\n        Eq0: function () {\n            return Data_Eq.eqChar;\n        }\n    };\n})();\nvar ordBoolean = /* #__PURE__ */ (function () {\n    return {\n        compare: $foreign.ordBooleanImpl(Data_Ordering.LT.value)(Data_Ordering.EQ.value)(Data_Ordering.GT.value),\n        Eq0: function () {\n            return Data_Eq.eqBoolean;\n        }\n    };\n})();\nvar compareRecord = function (dict) {\n    return dict.compareRecord;\n};\nvar ordRecord = function () {\n    return function (dictOrdRecord) {\n        var eqRec1 = eqRec(dictOrdRecord.EqRecord0());\n        return {\n            compare: compareRecord(dictOrdRecord)(Type_Proxy[\"Proxy\"].value),\n            Eq0: function () {\n                return eqRec1;\n            }\n        };\n    };\n};\nvar compare1 = function (dict) {\n    return dict.compare1;\n};\nvar compare = function (dict) {\n    return dict.compare;\n};\nvar compare2 = /* #__PURE__ */ compare(ordInt);\nvar comparing = function (dictOrd) {\n    var compare3 = compare(dictOrd);\n    return function (f) {\n        return function (x) {\n            return function (y) {\n                return compare3(f(x))(f(y));\n            };\n        };\n    };\n};\nvar greaterThan = function (dictOrd) {\n    var compare3 = compare(dictOrd);\n    return function (a1) {\n        return function (a2) {\n            var v = compare3(a1)(a2);\n            if (v instanceof Data_Ordering.GT) {\n                return true;\n            };\n            return false;\n        };\n    };\n};\nvar greaterThanOrEq = function (dictOrd) {\n    var compare3 = compare(dictOrd);\n    return function (a1) {\n        return function (a2) {\n            var v = compare3(a1)(a2);\n            if (v instanceof Data_Ordering.LT) {\n                return false;\n            };\n            return true;\n        };\n    };\n};\nvar lessThan = function (dictOrd) {\n    var compare3 = compare(dictOrd);\n    return function (a1) {\n        return function (a2) {\n            var v = compare3(a1)(a2);\n            if (v instanceof Data_Ordering.LT) {\n                return true;\n            };\n            return false;\n        };\n    };\n};\nvar signum = function (dictOrd) {\n    var lessThan1 = lessThan(dictOrd);\n    var greaterThan1 = greaterThan(dictOrd);\n    return function (dictRing) {\n        var Semiring0 = dictRing.Semiring0();\n        var zero = Data_Semiring.zero(Semiring0);\n        var negate1 = Data_Ring.negate(dictRing);\n        var one = Data_Semiring.one(Semiring0);\n        return function (x) {\n            var $89 = lessThan1(x)(zero);\n            if ($89) {\n                return negate1(one);\n            };\n            var $90 = greaterThan1(x)(zero);\n            if ($90) {\n                return one;\n            };\n            return x;\n        };\n    };\n};\nvar lessThanOrEq = function (dictOrd) {\n    var compare3 = compare(dictOrd);\n    return function (a1) {\n        return function (a2) {\n            var v = compare3(a1)(a2);\n            if (v instanceof Data_Ordering.GT) {\n                return false;\n            };\n            return true;\n        };\n    };\n};\nvar max = function (dictOrd) {\n    var compare3 = compare(dictOrd);\n    return function (x) {\n        return function (y) {\n            var v = compare3(x)(y);\n            if (v instanceof Data_Ordering.LT) {\n                return y;\n            };\n            if (v instanceof Data_Ordering.EQ) {\n                return x;\n            };\n            if (v instanceof Data_Ordering.GT) {\n                return x;\n            };\n            throw new Error(\"Failed pattern match at Data.Ord (line 181, column 3 - line 184, column 12): \" + [ v.constructor.name ]);\n        };\n    };\n};\nvar min = function (dictOrd) {\n    var compare3 = compare(dictOrd);\n    return function (x) {\n        return function (y) {\n            var v = compare3(x)(y);\n            if (v instanceof Data_Ordering.LT) {\n                return x;\n            };\n            if (v instanceof Data_Ordering.EQ) {\n                return x;\n            };\n            if (v instanceof Data_Ordering.GT) {\n                return y;\n            };\n            throw new Error(\"Failed pattern match at Data.Ord (line 172, column 3 - line 175, column 12): \" + [ v.constructor.name ]);\n        };\n    };\n};\nvar ordArray = function (dictOrd) {\n    var compare3 = compare(dictOrd);\n    var eqArray = Data_Eq.eqArray(dictOrd.Eq0());\n    return {\n        compare: (function () {\n            var toDelta = function (x) {\n                return function (y) {\n                    var v = compare3(x)(y);\n                    if (v instanceof Data_Ordering.EQ) {\n                        return 0;\n                    };\n                    if (v instanceof Data_Ordering.LT) {\n                        return 1;\n                    };\n                    if (v instanceof Data_Ordering.GT) {\n                        return -1 | 0;\n                    };\n                    throw new Error(\"Failed pattern match at Data.Ord (line 79, column 7 - line 82, column 17): \" + [ v.constructor.name ]);\n                };\n            };\n            return function (xs) {\n                return function (ys) {\n                    return compare2(0)($foreign.ordArrayImpl(toDelta)(xs)(ys));\n                };\n            };\n        })(),\n        Eq0: function () {\n            return eqArray;\n        }\n    };\n};\nvar ord1Array = {\n    compare1: function (dictOrd) {\n        return compare(ordArray(dictOrd));\n    },\n    Eq10: function () {\n        return Data_Eq.eq1Array;\n    }\n};\nvar ordRecordCons = function (dictOrdRecord) {\n    var compareRecord1 = compareRecord(dictOrdRecord);\n    var eqRowCons = Data_Eq.eqRowCons(dictOrdRecord.EqRecord0())();\n    return function () {\n        return function (dictIsSymbol) {\n            var reflectSymbol = Data_Symbol.reflectSymbol(dictIsSymbol);\n            var eqRowCons1 = eqRowCons(dictIsSymbol);\n            return function (dictOrd) {\n                var compare3 = compare(dictOrd);\n                var eqRowCons2 = eqRowCons1(dictOrd.Eq0());\n                return {\n                    compareRecord: function (v) {\n                        return function (ra) {\n                            return function (rb) {\n                                var key = reflectSymbol(Type_Proxy[\"Proxy\"].value);\n                                var left = compare3(Record_Unsafe.unsafeGet(key)(ra))(Record_Unsafe.unsafeGet(key)(rb));\n                                var $95 = notEq(left)(Data_Ordering.EQ.value);\n                                if ($95) {\n                                    return left;\n                                };\n                                return compareRecord1(Type_Proxy[\"Proxy\"].value)(ra)(rb);\n                            };\n                        };\n                    },\n                    EqRecord0: function () {\n                        return eqRowCons2;\n                    }\n                };\n            };\n        };\n    };\n};\nvar clamp = function (dictOrd) {\n    var min1 = min(dictOrd);\n    var max1 = max(dictOrd);\n    return function (low) {\n        return function (hi) {\n            return function (x) {\n                return min1(hi)(max1(low)(x));\n            };\n        };\n    };\n};\nvar between = function (dictOrd) {\n    var lessThan1 = lessThan(dictOrd);\n    var greaterThan1 = greaterThan(dictOrd);\n    return function (low) {\n        return function (hi) {\n            return function (x) {\n                if (lessThan1(x)(low)) {\n                    return false;\n                };\n                if (greaterThan1(x)(hi)) {\n                    return false;\n                };\n                return true;\n            };\n        };\n    };\n};\nvar abs = function (dictOrd) {\n    var greaterThanOrEq1 = greaterThanOrEq(dictOrd);\n    return function (dictRing) {\n        var zero = Data_Semiring.zero(dictRing.Semiring0());\n        var negate1 = Data_Ring.negate(dictRing);\n        return function (x) {\n            var $99 = greaterThanOrEq1(x)(zero);\n            if ($99) {\n                return x;\n            };\n            return negate1(x);\n        };\n    };\n};\nexport {\n    compare,\n    compare1,\n    lessThan,\n    lessThanOrEq,\n    greaterThan,\n    greaterThanOrEq,\n    comparing,\n    min,\n    max,\n    clamp,\n    between,\n    abs,\n    signum,\n    compareRecord,\n    ordBoolean,\n    ordInt,\n    ordNumber,\n    ordString,\n    ordChar,\n    ordUnit,\n    ordVoid,\n    ordProxy,\n    ordArray,\n    ordOrdering,\n    ord1Array,\n    ordRecordNil,\n    ordRecordCons,\n    ordRecord\n};\nexport {\n    EQ,\n    GT,\n    LT\n} from \"../Data.Ordering/index.js\";\n", "export const showIntImpl = function (n) {\n  return n.toString();\n};\n\nexport const showNumberImpl = function (n) {\n  var str = n.toString();\n  return isNaN(str + \".0\") ? str : str + \".0\";\n};\n\nexport const showCharImpl = function (c) {\n  var code = c.charCodeAt(0);\n  if (code < 0x20 || code === 0x7F) {\n    switch (c) {\n      case \"\\x07\": return \"'\\\\a'\";\n      case \"\\b\": return \"'\\\\b'\";\n      case \"\\f\": return \"'\\\\f'\";\n      case \"\\n\": return \"'\\\\n'\";\n      case \"\\r\": return \"'\\\\r'\";\n      case \"\\t\": return \"'\\\\t'\";\n      case \"\\v\": return \"'\\\\v'\";\n    }\n    return \"'\\\\\" + code.toString(10) + \"'\";\n  }\n  return c === \"'\" || c === \"\\\\\" ? \"'\\\\\" + c + \"'\" : \"'\" + c + \"'\";\n};\n\nexport const showStringImpl = function (s) {\n  var l = s.length;\n  return \"\\\"\" + s.replace(\n    /[\\0-\\x1F\\x7F\"\\\\]/g, // eslint-disable-line no-control-regex\n    function (c, i) {\n      switch (c) {\n        case \"\\\"\":\n        case \"\\\\\":\n          return \"\\\\\" + c;\n        case \"\\x07\": return \"\\\\a\";\n        case \"\\b\": return \"\\\\b\";\n        case \"\\f\": return \"\\\\f\";\n        case \"\\n\": return \"\\\\n\";\n        case \"\\r\": return \"\\\\r\";\n        case \"\\t\": return \"\\\\t\";\n        case \"\\v\": return \"\\\\v\";\n      }\n      var k = i + 1;\n      var empty = k < l && s[k] >= \"0\" && s[k] <= \"9\" ? \"\\\\&\" : \"\";\n      return \"\\\\\" + c.charCodeAt(0).toString(10) + empty;\n    }\n  ) + \"\\\"\";\n};\n\nexport const showArrayImpl = function (f) {\n  return function (xs) {\n    var ss = [];\n    for (var i = 0, l = xs.length; i < l; i++) {\n      ss[i] = f(xs[i]);\n    }\n    return \"[\" + ss.join(\",\") + \"]\";\n  };\n};\n", "// Generated by purs version 0.15.15\nimport * as $foreign from \"./foreign.js\";\nimport * as Data_Symbol from \"../Data.Symbol/index.js\";\nimport * as Data_Void from \"../Data.Void/index.js\";\nimport * as Record_Unsafe from \"../Record.Unsafe/index.js\";\nimport * as Type_Proxy from \"../Type.Proxy/index.js\";\nvar showVoid = {\n    show: Data_Void.absurd\n};\nvar showUnit = {\n    show: function (v) {\n        return \"unit\";\n    }\n};\nvar showString = {\n    show: $foreign.showStringImpl\n};\nvar showRecordFieldsNil = {\n    showRecordFields: function (v) {\n        return function (v1) {\n            return \"\";\n        };\n    }\n};\nvar showRecordFields = function (dict) {\n    return dict.showRecordFields;\n};\nvar showRecord = function () {\n    return function () {\n        return function (dictShowRecordFields) {\n            var showRecordFields1 = showRecordFields(dictShowRecordFields);\n            return {\n                show: function (record) {\n                    return \"{\" + (showRecordFields1(Type_Proxy[\"Proxy\"].value)(record) + \"}\");\n                }\n            };\n        };\n    };\n};\nvar showProxy = {\n    show: function (v) {\n        return \"Proxy\";\n    }\n};\nvar showNumber = {\n    show: $foreign.showNumberImpl\n};\nvar showInt = {\n    show: $foreign.showIntImpl\n};\nvar showChar = {\n    show: $foreign.showCharImpl\n};\nvar showBoolean = {\n    show: function (v) {\n        if (v) {\n            return \"true\";\n        };\n        if (!v) {\n            return \"false\";\n        };\n        throw new Error(\"Failed pattern match at Data.Show (line 29, column 1 - line 31, column 23): \" + [ v.constructor.name ]);\n    }\n};\nvar show = function (dict) {\n    return dict.show;\n};\nvar showArray = function (dictShow) {\n    return {\n        show: $foreign.showArrayImpl(show(dictShow))\n    };\n};\nvar showRecordFieldsCons = function (dictIsSymbol) {\n    var reflectSymbol = Data_Symbol.reflectSymbol(dictIsSymbol);\n    return function (dictShowRecordFields) {\n        var showRecordFields1 = showRecordFields(dictShowRecordFields);\n        return function (dictShow) {\n            var show1 = show(dictShow);\n            return {\n                showRecordFields: function (v) {\n                    return function (record) {\n                        var tail = showRecordFields1(Type_Proxy[\"Proxy\"].value)(record);\n                        var key = reflectSymbol(Type_Proxy[\"Proxy\"].value);\n                        var focus = Record_Unsafe.unsafeGet(key)(record);\n                        return \" \" + (key + (\": \" + (show1(focus) + (\",\" + tail))));\n                    };\n                }\n            };\n        };\n    };\n};\nvar showRecordFieldsConsNil = function (dictIsSymbol) {\n    var reflectSymbol = Data_Symbol.reflectSymbol(dictIsSymbol);\n    return function (dictShow) {\n        var show1 = show(dictShow);\n        return {\n            showRecordFields: function (v) {\n                return function (record) {\n                    var key = reflectSymbol(Type_Proxy[\"Proxy\"].value);\n                    var focus = Record_Unsafe.unsafeGet(key)(record);\n                    return \" \" + (key + (\": \" + (show1(focus) + \" \")));\n                };\n            }\n        };\n    };\n};\nexport {\n    show,\n    showRecordFields,\n    showUnit,\n    showBoolean,\n    showInt,\n    showNumber,\n    showChar,\n    showString,\n    showArray,\n    showProxy,\n    showVoid,\n    showRecord,\n    showRecordFieldsNil,\n    showRecordFieldsConsNil,\n    showRecordFieldsCons\n};\n", "// Generated by purs version 0.15.15\nimport * as Data_Show from \"../Data.Show/index.js\";\nimport * as Data_Symbol from \"../Data.Symbol/index.js\";\nimport * as Type_Proxy from \"../Type.Proxy/index.js\";\nvar show = /* #__PURE__ */ Data_Show.show(Data_Show.showString);\nvar Inl = /* #__PURE__ */ (function () {\n    function Inl(value0) {\n        this.value0 = value0;\n    };\n    Inl.create = function (value0) {\n        return new Inl(value0);\n    };\n    return Inl;\n})();\nvar Inr = /* #__PURE__ */ (function () {\n    function Inr(value0) {\n        this.value0 = value0;\n    };\n    Inr.create = function (value0) {\n        return new Inr(value0);\n    };\n    return Inr;\n})();\nvar Product = /* #__PURE__ */ (function () {\n    function Product(value0, value1) {\n        this.value0 = value0;\n        this.value1 = value1;\n    };\n    Product.create = function (value0) {\n        return function (value1) {\n            return new Product(value0, value1);\n        };\n    };\n    return Product;\n})();\nvar NoConstructors = function (x) {\n    return x;\n};\nvar NoArguments = /* #__PURE__ */ (function () {\n    function NoArguments() {\n\n    };\n    NoArguments.value = new NoArguments();\n    return NoArguments;\n})();\nvar Constructor = function (x) {\n    return x;\n};\nvar Argument = function (x) {\n    return x;\n};\nvar to = function (dict) {\n    return dict.to;\n};\nvar showSum = function (dictShow) {\n    var show1 = Data_Show.show(dictShow);\n    return function (dictShow1) {\n        var show2 = Data_Show.show(dictShow1);\n        return {\n            show: function (v) {\n                if (v instanceof Inl) {\n                    return \"(Inl \" + (show1(v.value0) + \")\");\n                };\n                if (v instanceof Inr) {\n                    return \"(Inr \" + (show2(v.value0) + \")\");\n                };\n                throw new Error(\"Failed pattern match at Data.Generic.Rep (line 32, column 1 - line 34, column 42): \" + [ v.constructor.name ]);\n            }\n        };\n    };\n};\nvar showProduct = function (dictShow) {\n    var show1 = Data_Show.show(dictShow);\n    return function (dictShow1) {\n        var show2 = Data_Show.show(dictShow1);\n        return {\n            show: function (v) {\n                return \"(Product \" + (show1(v.value0) + (\" \" + (show2(v.value1) + \")\")));\n            }\n        };\n    };\n};\nvar showNoArguments = {\n    show: function (v) {\n        return \"NoArguments\";\n    }\n};\nvar showConstructor = function (dictIsSymbol) {\n    var reflectSymbol = Data_Symbol.reflectSymbol(dictIsSymbol);\n    return function (dictShow) {\n        var show1 = Data_Show.show(dictShow);\n        return {\n            show: function (v) {\n                return \"(Constructor @\" + (show(reflectSymbol(Type_Proxy[\"Proxy\"].value)) + (\" \" + (show1(v) + \")\")));\n            }\n        };\n    };\n};\nvar showArgument = function (dictShow) {\n    var show1 = Data_Show.show(dictShow);\n    return {\n        show: function (v) {\n            return \"(Argument \" + (show1(v) + \")\");\n        }\n    };\n};\nvar repOf = function (dictGeneric) {\n    return function (v) {\n        return Type_Proxy[\"Proxy\"].value;\n    };\n};\nvar from = function (dict) {\n    return dict.from;\n};\nexport {\n    to,\n    from,\n    repOf,\n    NoArguments,\n    Inl,\n    Inr,\n    Product,\n    Constructor,\n    Argument,\n    showNoArguments,\n    showSum,\n    showProduct,\n    showConstructor,\n    showArgument\n};\n", "// Generated by purs version 0.15.15\nimport * as Control_Alt from \"../Control.Alt/index.js\";\nimport * as Control_Applicative from \"../Control.Applicative/index.js\";\nimport * as Control_Apply from \"../Control.Apply/index.js\";\nimport * as Control_Category from \"../Control.Category/index.js\";\nimport * as Data_Bounded from \"../Data.Bounded/index.js\";\nimport * as Data_Eq from \"../Data.Eq/index.js\";\nimport * as Data_Function from \"../Data.Function/index.js\";\nimport * as Data_Functor from \"../Data.Functor/index.js\";\nimport * as Data_Functor_Invariant from \"../Data.Functor.Invariant/index.js\";\nimport * as Data_Generic_Rep from \"../Data.Generic.Rep/index.js\";\nimport * as Data_Ord from \"../Data.Ord/index.js\";\nimport * as Data_Ordering from \"../Data.Ordering/index.js\";\nimport * as Data_Semigroup from \"../Data.Semigroup/index.js\";\nimport * as Data_Semiring from \"../Data.Semiring/index.js\";\nimport * as Data_Show from \"../Data.Show/index.js\";\nimport * as Data_Unit from \"../Data.Unit/index.js\";\nvar identity = /* #__PURE__ */ Control_Category.identity(Control_Category.categoryFn);\nvar Nothing = /* #__PURE__ */ (function () {\n    function Nothing() {\n\n    };\n    Nothing.value = new Nothing();\n    return Nothing;\n})();\nvar Just = /* #__PURE__ */ (function () {\n    function Just(value0) {\n        this.value0 = value0;\n    };\n    Just.create = function (value0) {\n        return new Just(value0);\n    };\n    return Just;\n})();\nvar showMaybe = function (dictShow) {\n    var show = Data_Show.show(dictShow);\n    return {\n        show: function (v) {\n            if (v instanceof Just) {\n                return \"(Just \" + (show(v.value0) + \")\");\n            };\n            if (v instanceof Nothing) {\n                return \"Nothing\";\n            };\n            throw new Error(\"Failed pattern match at Data.Maybe (line 223, column 1 - line 225, column 28): \" + [ v.constructor.name ]);\n        }\n    };\n};\nvar semigroupMaybe = function (dictSemigroup) {\n    var append1 = Data_Semigroup.append(dictSemigroup);\n    return {\n        append: function (v) {\n            return function (v1) {\n                if (v instanceof Nothing) {\n                    return v1;\n                };\n                if (v1 instanceof Nothing) {\n                    return v;\n                };\n                if (v instanceof Just && v1 instanceof Just) {\n                    return new Just(append1(v.value0)(v1.value0));\n                };\n                throw new Error(\"Failed pattern match at Data.Maybe (line 182, column 1 - line 185, column 43): \" + [ v.constructor.name, v1.constructor.name ]);\n            };\n        }\n    };\n};\nvar optional = function (dictAlt) {\n    var alt = Control_Alt.alt(dictAlt);\n    var map1 = Data_Functor.map(dictAlt.Functor0());\n    return function (dictApplicative) {\n        var pure = Control_Applicative.pure(dictApplicative);\n        return function (a) {\n            return alt(map1(Just.create)(a))(pure(Nothing.value));\n        };\n    };\n};\nvar monoidMaybe = function (dictSemigroup) {\n    var semigroupMaybe1 = semigroupMaybe(dictSemigroup);\n    return {\n        mempty: Nothing.value,\n        Semigroup0: function () {\n            return semigroupMaybe1;\n        }\n    };\n};\nvar maybe$prime = function (v) {\n    return function (v1) {\n        return function (v2) {\n            if (v2 instanceof Nothing) {\n                return v(Data_Unit.unit);\n            };\n            if (v2 instanceof Just) {\n                return v1(v2.value0);\n            };\n            throw new Error(\"Failed pattern match at Data.Maybe (line 250, column 1 - line 250, column 62): \" + [ v.constructor.name, v1.constructor.name, v2.constructor.name ]);\n        };\n    };\n};\nvar maybe = function (v) {\n    return function (v1) {\n        return function (v2) {\n            if (v2 instanceof Nothing) {\n                return v;\n            };\n            if (v2 instanceof Just) {\n                return v1(v2.value0);\n            };\n            throw new Error(\"Failed pattern match at Data.Maybe (line 237, column 1 - line 237, column 51): \" + [ v.constructor.name, v1.constructor.name, v2.constructor.name ]);\n        };\n    };\n};\nvar isNothing = /* #__PURE__ */ maybe(true)(/* #__PURE__ */ Data_Function[\"const\"](false));\nvar isJust = /* #__PURE__ */ maybe(false)(/* #__PURE__ */ Data_Function[\"const\"](true));\nvar genericMaybe = {\n    to: function (x) {\n        if (x instanceof Data_Generic_Rep.Inl) {\n            return Nothing.value;\n        };\n        if (x instanceof Data_Generic_Rep.Inr) {\n            return new Just(x.value0);\n        };\n        throw new Error(\"Failed pattern match at Data.Maybe (line 227, column 1 - line 227, column 52): \" + [ x.constructor.name ]);\n    },\n    from: function (x) {\n        if (x instanceof Nothing) {\n            return new Data_Generic_Rep.Inl(Data_Generic_Rep.NoArguments.value);\n        };\n        if (x instanceof Just) {\n            return new Data_Generic_Rep.Inr(x.value0);\n        };\n        throw new Error(\"Failed pattern match at Data.Maybe (line 227, column 1 - line 227, column 52): \" + [ x.constructor.name ]);\n    }\n};\nvar functorMaybe = {\n    map: function (v) {\n        return function (v1) {\n            if (v1 instanceof Just) {\n                return new Just(v(v1.value0));\n            };\n            return Nothing.value;\n        };\n    }\n};\nvar map = /* #__PURE__ */ Data_Functor.map(functorMaybe);\nvar invariantMaybe = {\n    imap: /* #__PURE__ */ Data_Functor_Invariant.imapF(functorMaybe)\n};\nvar fromMaybe$prime = function (a) {\n    return maybe$prime(a)(identity);\n};\nvar fromMaybe = function (a) {\n    return maybe(a)(identity);\n};\nvar fromJust = function () {\n    return function (v) {\n        if (v instanceof Just) {\n            return v.value0;\n        };\n        throw new Error(\"Failed pattern match at Data.Maybe (line 288, column 1 - line 288, column 46): \" + [ v.constructor.name ]);\n    };\n};\nvar extendMaybe = {\n    extend: function (v) {\n        return function (v1) {\n            if (v1 instanceof Nothing) {\n                return Nothing.value;\n            };\n            return new Just(v(v1));\n        };\n    },\n    Functor0: function () {\n        return functorMaybe;\n    }\n};\nvar eqMaybe = function (dictEq) {\n    var eq = Data_Eq.eq(dictEq);\n    return {\n        eq: function (x) {\n            return function (y) {\n                if (x instanceof Nothing && y instanceof Nothing) {\n                    return true;\n                };\n                if (x instanceof Just && y instanceof Just) {\n                    return eq(x.value0)(y.value0);\n                };\n                return false;\n            };\n        }\n    };\n};\nvar ordMaybe = function (dictOrd) {\n    var compare = Data_Ord.compare(dictOrd);\n    var eqMaybe1 = eqMaybe(dictOrd.Eq0());\n    return {\n        compare: function (x) {\n            return function (y) {\n                if (x instanceof Nothing && y instanceof Nothing) {\n                    return Data_Ordering.EQ.value;\n                };\n                if (x instanceof Nothing) {\n                    return Data_Ordering.LT.value;\n                };\n                if (y instanceof Nothing) {\n                    return Data_Ordering.GT.value;\n                };\n                if (x instanceof Just && y instanceof Just) {\n                    return compare(x.value0)(y.value0);\n                };\n                throw new Error(\"Failed pattern match at Data.Maybe (line 0, column 0 - line 0, column 0): \" + [ x.constructor.name, y.constructor.name ]);\n            };\n        },\n        Eq0: function () {\n            return eqMaybe1;\n        }\n    };\n};\nvar eq1Maybe = {\n    eq1: function (dictEq) {\n        return Data_Eq.eq(eqMaybe(dictEq));\n    }\n};\nvar ord1Maybe = {\n    compare1: function (dictOrd) {\n        return Data_Ord.compare(ordMaybe(dictOrd));\n    },\n    Eq10: function () {\n        return eq1Maybe;\n    }\n};\nvar boundedMaybe = function (dictBounded) {\n    var ordMaybe1 = ordMaybe(dictBounded.Ord0());\n    return {\n        top: new Just(Data_Bounded.top(dictBounded)),\n        bottom: Nothing.value,\n        Ord0: function () {\n            return ordMaybe1;\n        }\n    };\n};\nvar applyMaybe = {\n    apply: function (v) {\n        return function (v1) {\n            if (v instanceof Just) {\n                return map(v.value0)(v1);\n            };\n            if (v instanceof Nothing) {\n                return Nothing.value;\n            };\n            throw new Error(\"Failed pattern match at Data.Maybe (line 67, column 1 - line 69, column 30): \" + [ v.constructor.name, v1.constructor.name ]);\n        };\n    },\n    Functor0: function () {\n        return functorMaybe;\n    }\n};\nvar apply = /* #__PURE__ */ Control_Apply.apply(applyMaybe);\nvar bindMaybe = {\n    bind: function (v) {\n        return function (v1) {\n            if (v instanceof Just) {\n                return v1(v.value0);\n            };\n            if (v instanceof Nothing) {\n                return Nothing.value;\n            };\n            throw new Error(\"Failed pattern match at Data.Maybe (line 125, column 1 - line 127, column 28): \" + [ v.constructor.name, v1.constructor.name ]);\n        };\n    },\n    Apply0: function () {\n        return applyMaybe;\n    }\n};\nvar semiringMaybe = function (dictSemiring) {\n    var add = Data_Semiring.add(dictSemiring);\n    var mul = Data_Semiring.mul(dictSemiring);\n    return {\n        zero: Nothing.value,\n        one: new Just(Data_Semiring.one(dictSemiring)),\n        add: function (v) {\n            return function (v1) {\n                if (v instanceof Nothing) {\n                    return v1;\n                };\n                if (v1 instanceof Nothing) {\n                    return v;\n                };\n                if (v instanceof Just && v1 instanceof Just) {\n                    return new Just(add(v.value0)(v1.value0));\n                };\n                throw new Error(\"Failed pattern match at Data.Maybe (line 190, column 1 - line 198, column 28): \" + [ v.constructor.name, v1.constructor.name ]);\n            };\n        },\n        mul: function (x) {\n            return function (y) {\n                return apply(map(mul)(x))(y);\n            };\n        }\n    };\n};\nvar applicativeMaybe = /* #__PURE__ */ (function () {\n    return {\n        pure: Just.create,\n        Apply0: function () {\n            return applyMaybe;\n        }\n    };\n})();\nvar monadMaybe = {\n    Applicative0: function () {\n        return applicativeMaybe;\n    },\n    Bind1: function () {\n        return bindMaybe;\n    }\n};\nvar altMaybe = {\n    alt: function (v) {\n        return function (v1) {\n            if (v instanceof Nothing) {\n                return v1;\n            };\n            return v;\n        };\n    },\n    Functor0: function () {\n        return functorMaybe;\n    }\n};\nvar plusMaybe = /* #__PURE__ */ (function () {\n    return {\n        empty: Nothing.value,\n        Alt0: function () {\n            return altMaybe;\n        }\n    };\n})();\nvar alternativeMaybe = {\n    Applicative0: function () {\n        return applicativeMaybe;\n    },\n    Plus1: function () {\n        return plusMaybe;\n    }\n};\nexport {\n    Nothing,\n    Just,\n    maybe,\n    maybe$prime,\n    fromMaybe,\n    fromMaybe$prime,\n    isJust,\n    isNothing,\n    fromJust,\n    optional,\n    functorMaybe,\n    applyMaybe,\n    applicativeMaybe,\n    altMaybe,\n    plusMaybe,\n    alternativeMaybe,\n    bindMaybe,\n    monadMaybe,\n    extendMaybe,\n    invariantMaybe,\n    semigroupMaybe,\n    monoidMaybe,\n    semiringMaybe,\n    eqMaybe,\n    eq1Maybe,\n    ordMaybe,\n    ord1Maybe,\n    boundedMaybe,\n    showMaybe,\n    genericMaybe\n};\n", "// Generated by purs version 0.15.15\nimport * as Control_Alt from \"../Control.Alt/index.js\";\nimport * as Control_Apply from \"../Control.Apply/index.js\";\nimport * as Data_Bounded from \"../Data.Bounded/index.js\";\nimport * as Data_Eq from \"../Data.Eq/index.js\";\nimport * as Data_Function from \"../Data.Function/index.js\";\nimport * as Data_Functor from \"../Data.Functor/index.js\";\nimport * as Data_Functor_Invariant from \"../Data.Functor.Invariant/index.js\";\nimport * as Data_Generic_Rep from \"../Data.Generic.Rep/index.js\";\nimport * as Data_Maybe from \"../Data.Maybe/index.js\";\nimport * as Data_Ord from \"../Data.Ord/index.js\";\nimport * as Data_Ordering from \"../Data.Ordering/index.js\";\nimport * as Data_Semigroup from \"../Data.Semigroup/index.js\";\nimport * as Data_Show from \"../Data.Show/index.js\";\nimport * as Data_Unit from \"../Data.Unit/index.js\";\nvar Left = /* #__PURE__ */ (function () {\n    function Left(value0) {\n        this.value0 = value0;\n    };\n    Left.create = function (value0) {\n        return new Left(value0);\n    };\n    return Left;\n})();\nvar Right = /* #__PURE__ */ (function () {\n    function Right(value0) {\n        this.value0 = value0;\n    };\n    Right.create = function (value0) {\n        return new Right(value0);\n    };\n    return Right;\n})();\nvar showEither = function (dictShow) {\n    var show = Data_Show.show(dictShow);\n    return function (dictShow1) {\n        var show1 = Data_Show.show(dictShow1);\n        return {\n            show: function (v) {\n                if (v instanceof Left) {\n                    return \"(Left \" + (show(v.value0) + \")\");\n                };\n                if (v instanceof Right) {\n                    return \"(Right \" + (show1(v.value0) + \")\");\n                };\n                throw new Error(\"Failed pattern match at Data.Either (line 173, column 1 - line 175, column 46): \" + [ v.constructor.name ]);\n            }\n        };\n    };\n};\nvar note$prime = function (f) {\n    return Data_Maybe[\"maybe$prime\"](function ($138) {\n        return Left.create(f($138));\n    })(Right.create);\n};\nvar note = function (a) {\n    return Data_Maybe.maybe(new Left(a))(Right.create);\n};\nvar genericEither = {\n    to: function (x) {\n        if (x instanceof Data_Generic_Rep.Inl) {\n            return new Left(x.value0);\n        };\n        if (x instanceof Data_Generic_Rep.Inr) {\n            return new Right(x.value0);\n        };\n        throw new Error(\"Failed pattern match at Data.Either (line 33, column 1 - line 33, column 56): \" + [ x.constructor.name ]);\n    },\n    from: function (x) {\n        if (x instanceof Left) {\n            return new Data_Generic_Rep.Inl(x.value0);\n        };\n        if (x instanceof Right) {\n            return new Data_Generic_Rep.Inr(x.value0);\n        };\n        throw new Error(\"Failed pattern match at Data.Either (line 33, column 1 - line 33, column 56): \" + [ x.constructor.name ]);\n    }\n};\nvar functorEither = {\n    map: function (f) {\n        return function (m) {\n            if (m instanceof Left) {\n                return new Left(m.value0);\n            };\n            if (m instanceof Right) {\n                return new Right(f(m.value0));\n            };\n            throw new Error(\"Failed pattern match at Data.Either (line 0, column 0 - line 0, column 0): \" + [ m.constructor.name ]);\n        };\n    }\n};\nvar map = /* #__PURE__ */ Data_Functor.map(functorEither);\nvar invariantEither = {\n    imap: /* #__PURE__ */ Data_Functor_Invariant.imapF(functorEither)\n};\nvar fromRight$prime = function (v) {\n    return function (v1) {\n        if (v1 instanceof Right) {\n            return v1.value0;\n        };\n        return v(Data_Unit.unit);\n    };\n};\nvar fromRight = function (v) {\n    return function (v1) {\n        if (v1 instanceof Right) {\n            return v1.value0;\n        };\n        return v;\n    };\n};\nvar fromLeft$prime = function (v) {\n    return function (v1) {\n        if (v1 instanceof Left) {\n            return v1.value0;\n        };\n        return v(Data_Unit.unit);\n    };\n};\nvar fromLeft = function (v) {\n    return function (v1) {\n        if (v1 instanceof Left) {\n            return v1.value0;\n        };\n        return v;\n    };\n};\nvar extendEither = {\n    extend: function (v) {\n        return function (v1) {\n            if (v1 instanceof Left) {\n                return new Left(v1.value0);\n            };\n            return new Right(v(v1));\n        };\n    },\n    Functor0: function () {\n        return functorEither;\n    }\n};\nvar eqEither = function (dictEq) {\n    var eq = Data_Eq.eq(dictEq);\n    return function (dictEq1) {\n        var eq1 = Data_Eq.eq(dictEq1);\n        return {\n            eq: function (x) {\n                return function (y) {\n                    if (x instanceof Left && y instanceof Left) {\n                        return eq(x.value0)(y.value0);\n                    };\n                    if (x instanceof Right && y instanceof Right) {\n                        return eq1(x.value0)(y.value0);\n                    };\n                    return false;\n                };\n            }\n        };\n    };\n};\nvar ordEither = function (dictOrd) {\n    var compare = Data_Ord.compare(dictOrd);\n    var eqEither1 = eqEither(dictOrd.Eq0());\n    return function (dictOrd1) {\n        var compare1 = Data_Ord.compare(dictOrd1);\n        var eqEither2 = eqEither1(dictOrd1.Eq0());\n        return {\n            compare: function (x) {\n                return function (y) {\n                    if (x instanceof Left && y instanceof Left) {\n                        return compare(x.value0)(y.value0);\n                    };\n                    if (x instanceof Left) {\n                        return Data_Ordering.LT.value;\n                    };\n                    if (y instanceof Left) {\n                        return Data_Ordering.GT.value;\n                    };\n                    if (x instanceof Right && y instanceof Right) {\n                        return compare1(x.value0)(y.value0);\n                    };\n                    throw new Error(\"Failed pattern match at Data.Either (line 0, column 0 - line 0, column 0): \" + [ x.constructor.name, y.constructor.name ]);\n                };\n            },\n            Eq0: function () {\n                return eqEither2;\n            }\n        };\n    };\n};\nvar eq1Either = function (dictEq) {\n    var eqEither1 = eqEither(dictEq);\n    return {\n        eq1: function (dictEq1) {\n            return Data_Eq.eq(eqEither1(dictEq1));\n        }\n    };\n};\nvar ord1Either = function (dictOrd) {\n    var ordEither1 = ordEither(dictOrd);\n    var eq1Either1 = eq1Either(dictOrd.Eq0());\n    return {\n        compare1: function (dictOrd1) {\n            return Data_Ord.compare(ordEither1(dictOrd1));\n        },\n        Eq10: function () {\n            return eq1Either1;\n        }\n    };\n};\nvar either = function (v) {\n    return function (v1) {\n        return function (v2) {\n            if (v2 instanceof Left) {\n                return v(v2.value0);\n            };\n            if (v2 instanceof Right) {\n                return v1(v2.value0);\n            };\n            throw new Error(\"Failed pattern match at Data.Either (line 208, column 1 - line 208, column 64): \" + [ v.constructor.name, v1.constructor.name, v2.constructor.name ]);\n        };\n    };\n};\nvar hush = /* #__PURE__ */ (function () {\n    return either(Data_Function[\"const\"](Data_Maybe.Nothing.value))(Data_Maybe.Just.create);\n})();\nvar isLeft = /* #__PURE__ */ either(/* #__PURE__ */ Data_Function[\"const\"](true))(/* #__PURE__ */ Data_Function[\"const\"](false));\nvar isRight = /* #__PURE__ */ either(/* #__PURE__ */ Data_Function[\"const\"](false))(/* #__PURE__ */ Data_Function[\"const\"](true));\nvar choose = function (dictAlt) {\n    var alt = Control_Alt.alt(dictAlt);\n    var map1 = Data_Functor.map(dictAlt.Functor0());\n    return function (a) {\n        return function (b) {\n            return alt(map1(Left.create)(a))(map1(Right.create)(b));\n        };\n    };\n};\nvar boundedEither = function (dictBounded) {\n    var bottom = Data_Bounded.bottom(dictBounded);\n    var ordEither1 = ordEither(dictBounded.Ord0());\n    return function (dictBounded1) {\n        var ordEither2 = ordEither1(dictBounded1.Ord0());\n        return {\n            top: new Right(Data_Bounded.top(dictBounded1)),\n            bottom: new Left(bottom),\n            Ord0: function () {\n                return ordEither2;\n            }\n        };\n    };\n};\nvar blush = /* #__PURE__ */ (function () {\n    return either(Data_Maybe.Just.create)(Data_Function[\"const\"](Data_Maybe.Nothing.value));\n})();\nvar applyEither = {\n    apply: function (v) {\n        return function (v1) {\n            if (v instanceof Left) {\n                return new Left(v.value0);\n            };\n            if (v instanceof Right) {\n                return map(v.value0)(v1);\n            };\n            throw new Error(\"Failed pattern match at Data.Either (line 70, column 1 - line 72, column 30): \" + [ v.constructor.name, v1.constructor.name ]);\n        };\n    },\n    Functor0: function () {\n        return functorEither;\n    }\n};\nvar apply = /* #__PURE__ */ Control_Apply.apply(applyEither);\nvar bindEither = {\n    bind: /* #__PURE__ */ either(function (e) {\n        return function (v) {\n            return new Left(e);\n        };\n    })(function (a) {\n        return function (f) {\n            return f(a);\n        };\n    }),\n    Apply0: function () {\n        return applyEither;\n    }\n};\nvar semigroupEither = function (dictSemigroup) {\n    var append1 = Data_Semigroup.append(dictSemigroup);\n    return {\n        append: function (x) {\n            return function (y) {\n                return apply(map(append1)(x))(y);\n            };\n        }\n    };\n};\nvar applicativeEither = /* #__PURE__ */ (function () {\n    return {\n        pure: Right.create,\n        Apply0: function () {\n            return applyEither;\n        }\n    };\n})();\nvar monadEither = {\n    Applicative0: function () {\n        return applicativeEither;\n    },\n    Bind1: function () {\n        return bindEither;\n    }\n};\nvar altEither = {\n    alt: function (v) {\n        return function (v1) {\n            if (v instanceof Left) {\n                return v1;\n            };\n            return v;\n        };\n    },\n    Functor0: function () {\n        return functorEither;\n    }\n};\nexport {\n    Left,\n    Right,\n    either,\n    choose,\n    isLeft,\n    isRight,\n    fromLeft,\n    fromLeft$prime,\n    fromRight,\n    fromRight$prime,\n    note,\n    note$prime,\n    hush,\n    blush,\n    functorEither,\n    genericEither,\n    invariantEither,\n    applyEither,\n    applicativeEither,\n    altEither,\n    bindEither,\n    monadEither,\n    extendEither,\n    showEither,\n    eqEither,\n    eq1Either,\n    ordEither,\n    ord1Either,\n    boundedEither,\n    semigroupEither\n};\n", "export const pureE = function (a) {\n  return function () {\n    return a;\n  };\n};\n\nexport const bindE = function (a) {\n  return function (f) {\n    return function () {\n      return f(a())();\n    };\n  };\n};\n\nexport const untilE = function (f) {\n  return function () {\n    while (!f());\n  };\n};\n\nexport const whileE = function (f) {\n  return function (a) {\n    return function () {\n      while (f()) {\n        a();\n      }\n    };\n  };\n};\n\nexport const forE = function (lo) {\n  return function (hi) {\n    return function (f) {\n      return function () {\n        for (var i = lo; i < hi; i++) {\n          f(i)();\n        }\n      };\n    };\n  };\n};\n\nexport const foreachE = function (as) {\n  return function (f) {\n    return function () {\n      for (var i = 0, l = as.length; i < l; i++) {\n        f(as[i])();\n      }\n    };\n  };\n};\n", "// Generated by purs version 0.15.15\nimport * as Data_Boolean from \"../Data.Boolean/index.js\";\nimport * as Data_EuclideanRing from \"../Data.EuclideanRing/index.js\";\nimport * as Data_Ordering from \"../Data.Ordering/index.js\";\nimport * as Data_Semigroup from \"../Data.Semigroup/index.js\";\nimport * as Data_Symbol from \"../Data.Symbol/index.js\";\nimport * as Data_Unit from \"../Data.Unit/index.js\";\nimport * as Record_Unsafe from \"../Record.Unsafe/index.js\";\nimport * as Type_Proxy from \"../Type.Proxy/index.js\";\nvar semigroupRecord = /* #__PURE__ */ Data_Semigroup.semigroupRecord();\nvar mod = /* #__PURE__ */ Data_EuclideanRing.mod(Data_EuclideanRing.euclideanRingInt);\nvar div = /* #__PURE__ */ Data_EuclideanRing.div(Data_EuclideanRing.euclideanRingInt);\nvar monoidUnit = {\n    mempty: Data_Unit.unit,\n    Semigroup0: function () {\n        return Data_Semigroup.semigroupUnit;\n    }\n};\nvar monoidString = {\n    mempty: \"\",\n    Semigroup0: function () {\n        return Data_Semigroup.semigroupString;\n    }\n};\nvar monoidRecordNil = {\n    memptyRecord: function (v) {\n        return {};\n    },\n    SemigroupRecord0: function () {\n        return Data_Semigroup.semigroupRecordNil;\n    }\n};\nvar monoidOrdering = /* #__PURE__ */ (function () {\n    return {\n        mempty: Data_Ordering.EQ.value,\n        Semigroup0: function () {\n            return Data_Ordering.semigroupOrdering;\n        }\n    };\n})();\nvar monoidArray = {\n    mempty: [  ],\n    Semigroup0: function () {\n        return Data_Semigroup.semigroupArray;\n    }\n};\nvar memptyRecord = function (dict) {\n    return dict.memptyRecord;\n};\nvar monoidRecord = function () {\n    return function (dictMonoidRecord) {\n        var semigroupRecord1 = semigroupRecord(dictMonoidRecord.SemigroupRecord0());\n        return {\n            mempty: memptyRecord(dictMonoidRecord)(Type_Proxy[\"Proxy\"].value),\n            Semigroup0: function () {\n                return semigroupRecord1;\n            }\n        };\n    };\n};\nvar mempty = function (dict) {\n    return dict.mempty;\n};\nvar monoidFn = function (dictMonoid) {\n    var mempty1 = mempty(dictMonoid);\n    var semigroupFn = Data_Semigroup.semigroupFn(dictMonoid.Semigroup0());\n    return {\n        mempty: function (v) {\n            return mempty1;\n        },\n        Semigroup0: function () {\n            return semigroupFn;\n        }\n    };\n};\nvar monoidRecordCons = function (dictIsSymbol) {\n    var reflectSymbol = Data_Symbol.reflectSymbol(dictIsSymbol);\n    var semigroupRecordCons = Data_Semigroup.semigroupRecordCons(dictIsSymbol)();\n    return function (dictMonoid) {\n        var mempty1 = mempty(dictMonoid);\n        var Semigroup0 = dictMonoid.Semigroup0();\n        return function () {\n            return function (dictMonoidRecord) {\n                var memptyRecord1 = memptyRecord(dictMonoidRecord);\n                var semigroupRecordCons1 = semigroupRecordCons(dictMonoidRecord.SemigroupRecord0())(Semigroup0);\n                return {\n                    memptyRecord: function (v) {\n                        var tail = memptyRecord1(Type_Proxy[\"Proxy\"].value);\n                        var key = reflectSymbol(Type_Proxy[\"Proxy\"].value);\n                        var insert = Record_Unsafe.unsafeSet(key);\n                        return insert(mempty1)(tail);\n                    },\n                    SemigroupRecord0: function () {\n                        return semigroupRecordCons1;\n                    }\n                };\n            };\n        };\n    };\n};\nvar power = function (dictMonoid) {\n    var mempty1 = mempty(dictMonoid);\n    var append = Data_Semigroup.append(dictMonoid.Semigroup0());\n    return function (x) {\n        var go = function (p) {\n            if (p <= 0) {\n                return mempty1;\n            };\n            if (p === 1) {\n                return x;\n            };\n            if (mod(p)(2) === 0) {\n                var x$prime = go(div(p)(2));\n                return append(x$prime)(x$prime);\n            };\n            if (Data_Boolean.otherwise) {\n                var x$prime = go(div(p)(2));\n                return append(x$prime)(append(x$prime)(x));\n            };\n            throw new Error(\"Failed pattern match at Data.Monoid (line 88, column 3 - line 88, column 17): \" + [ p.constructor.name ]);\n        };\n        return go;\n    };\n};\nvar guard = function (dictMonoid) {\n    var mempty1 = mempty(dictMonoid);\n    return function (v) {\n        return function (v1) {\n            if (v) {\n                return v1;\n            };\n            if (!v) {\n                return mempty1;\n            };\n            throw new Error(\"Failed pattern match at Data.Monoid (line 96, column 1 - line 96, column 49): \" + [ v.constructor.name, v1.constructor.name ]);\n        };\n    };\n};\nexport {\n    mempty,\n    power,\n    guard,\n    memptyRecord,\n    monoidUnit,\n    monoidOrdering,\n    monoidFn,\n    monoidString,\n    monoidArray,\n    monoidRecord,\n    monoidRecordNil,\n    monoidRecordCons\n};\n", "// Generated by purs version 0.15.15\nimport * as $foreign from \"./foreign.js\";\nimport * as Control_Applicative from \"../Control.Applicative/index.js\";\nimport * as Control_Apply from \"../Control.Apply/index.js\";\nimport * as Control_Monad from \"../Control.Monad/index.js\";\nimport * as Data_Monoid from \"../Data.Monoid/index.js\";\nimport * as Data_Semigroup from \"../Data.Semigroup/index.js\";\nvar $runtime_lazy = function (name, moduleName, init) {\n    var state = 0;\n    var val;\n    return function (lineNumber) {\n        if (state === 2) return val;\n        if (state === 1) throw new ReferenceError(name + \" was needed before it finished initializing (module \" + moduleName + \", line \" + lineNumber + \")\", moduleName, lineNumber);\n        state = 1;\n        val = init();\n        state = 2;\n        return val;\n    };\n};\nvar monadEffect = {\n    Applicative0: function () {\n        return applicativeEffect;\n    },\n    Bind1: function () {\n        return bindEffect;\n    }\n};\nvar bindEffect = {\n    bind: $foreign.bindE,\n    Apply0: function () {\n        return $lazy_applyEffect(0);\n    }\n};\nvar applicativeEffect = {\n    pure: $foreign.pureE,\n    Apply0: function () {\n        return $lazy_applyEffect(0);\n    }\n};\nvar $lazy_functorEffect = /* #__PURE__ */ $runtime_lazy(\"functorEffect\", \"Effect\", function () {\n    return {\n        map: Control_Applicative.liftA1(applicativeEffect)\n    };\n});\nvar $lazy_applyEffect = /* #__PURE__ */ $runtime_lazy(\"applyEffect\", \"Effect\", function () {\n    return {\n        apply: Control_Monad.ap(monadEffect),\n        Functor0: function () {\n            return $lazy_functorEffect(0);\n        }\n    };\n});\nvar functorEffect = /* #__PURE__ */ $lazy_functorEffect(20);\nvar applyEffect = /* #__PURE__ */ $lazy_applyEffect(23);\nvar lift2 = /* #__PURE__ */ Control_Apply.lift2(applyEffect);\nvar semigroupEffect = function (dictSemigroup) {\n    return {\n        append: lift2(Data_Semigroup.append(dictSemigroup))\n    };\n};\nvar monoidEffect = function (dictMonoid) {\n    var semigroupEffect1 = semigroupEffect(dictMonoid.Semigroup0());\n    return {\n        mempty: $foreign.pureE(Data_Monoid.mempty(dictMonoid)),\n        Semigroup0: function () {\n            return semigroupEffect1;\n        }\n    };\n};\nexport {\n    untilE,\n    whileE,\n    forE,\n    foreachE\n} from \"./foreign.js\";\nexport {\n    functorEffect,\n    applyEffect,\n    applicativeEffect,\n    bindEffect,\n    monadEffect,\n    semigroupEffect,\n    monoidEffect\n};\n", "export function showErrorImpl(err) {\n  return err.stack || err.toString();\n}\n\nexport function error(msg) {\n  return new Error(msg);\n}\n\nexport function message(e) {\n  return e.message;\n}\n\nexport function name(e) {\n  return e.name || \"Error\";\n}\n\nexport function stackImpl(just) {\n  return function (nothing) {\n    return function (e) {\n      return e.stack ? just(e.stack) : nothing;\n    };\n  };\n}\n\nexport function throwException(e) {\n  return function () {\n    throw e;\n  };\n}\n\nexport function catchException(c) {\n  return function (t) {\n    return function () {\n      try {\n        return t();\n      } catch (e) {\n        if (e instanceof Error || Object.prototype.toString.call(e) === \"[object Error]\") {\n          return c(e)();\n        } else {\n          return c(new Error(e.toString()))();\n        }\n      }\n    };\n  };\n}\n", "// Generated by purs version 0.15.15\nimport * as $foreign from \"./foreign.js\";\nimport * as Control_Applicative from \"../Control.Applicative/index.js\";\nimport * as Data_Either from \"../Data.Either/index.js\";\nimport * as Data_Functor from \"../Data.Functor/index.js\";\nimport * as Data_Maybe from \"../Data.Maybe/index.js\";\nimport * as Effect from \"../Effect/index.js\";\nvar pure = /* #__PURE__ */ Control_Applicative.pure(Effect.applicativeEffect);\nvar map = /* #__PURE__ */ Data_Functor.map(Effect.functorEffect);\nvar $$try = function (action) {\n    return $foreign.catchException(function ($3) {\n        return pure(Data_Either.Left.create($3));\n    })(map(Data_Either.Right.create)(action));\n};\nvar $$throw = function ($4) {\n    return $foreign.throwException($foreign.error($4));\n};\nvar stack = /* #__PURE__ */ (function () {\n    return $foreign.stackImpl(Data_Maybe.Just.create)(Data_Maybe.Nothing.value);\n})();\nvar showError = {\n    show: $foreign.showErrorImpl\n};\nexport {\n    error,\n    message,\n    name,\n    throwException,\n    catchException\n} from \"./foreign.js\";\nexport {\n    stack,\n    $$throw as throw,\n    $$try as try,\n    showError\n};\n", "// Generated by purs version 0.15.15\nimport * as Control_Applicative from \"../Control.Applicative/index.js\";\nimport * as Control_Bind from \"../Control.Bind/index.js\";\nimport * as Data_Either from \"../Data.Either/index.js\";\nimport * as Data_Function from \"../Data.Function/index.js\";\nimport * as Data_Functor from \"../Data.Functor/index.js\";\nimport * as Data_Maybe from \"../Data.Maybe/index.js\";\nimport * as Data_Unit from \"../Data.Unit/index.js\";\nimport * as Effect from \"../Effect/index.js\";\nimport * as Effect_Exception from \"../Effect.Exception/index.js\";\nvar discard = /* #__PURE__ */ Control_Bind.discard(Control_Bind.discardUnit);\nvar throwError = function (dict) {\n    return dict.throwError;\n};\nvar monadThrowMaybe = /* #__PURE__ */ (function () {\n    return {\n        throwError: Data_Function[\"const\"](Data_Maybe.Nothing.value),\n        Monad0: function () {\n            return Data_Maybe.monadMaybe;\n        }\n    };\n})();\nvar monadThrowEither = /* #__PURE__ */ (function () {\n    return {\n        throwError: Data_Either.Left.create,\n        Monad0: function () {\n            return Data_Either.monadEither;\n        }\n    };\n})();\nvar monadThrowEffect = {\n    throwError: Effect_Exception.throwException,\n    Monad0: function () {\n        return Effect.monadEffect;\n    }\n};\nvar monadErrorMaybe = {\n    catchError: function (v) {\n        return function (v1) {\n            if (v instanceof Data_Maybe.Nothing) {\n                return v1(Data_Unit.unit);\n            };\n            if (v instanceof Data_Maybe.Just) {\n                return new Data_Maybe.Just(v.value0);\n            };\n            throw new Error(\"Failed pattern match at Control.Monad.Error.Class (line 79, column 1 - line 81, column 33): \" + [ v.constructor.name, v1.constructor.name ]);\n        };\n    },\n    MonadThrow0: function () {\n        return monadThrowMaybe;\n    }\n};\nvar monadErrorEither = {\n    catchError: function (v) {\n        return function (v1) {\n            if (v instanceof Data_Either.Left) {\n                return v1(v.value0);\n            };\n            if (v instanceof Data_Either.Right) {\n                return new Data_Either.Right(v.value0);\n            };\n            throw new Error(\"Failed pattern match at Control.Monad.Error.Class (line 72, column 1 - line 74, column 35): \" + [ v.constructor.name, v1.constructor.name ]);\n        };\n    },\n    MonadThrow0: function () {\n        return monadThrowEither;\n    }\n};\nvar monadErrorEffect = {\n    catchError: /* #__PURE__ */ Data_Function.flip(Effect_Exception.catchException),\n    MonadThrow0: function () {\n        return monadThrowEffect;\n    }\n};\nvar liftMaybe = function (dictMonadThrow) {\n    var throwError1 = throwError(dictMonadThrow);\n    var pure = Control_Applicative.pure((dictMonadThrow.Monad0()).Applicative0());\n    return function (error) {\n        return Data_Maybe.maybe(throwError1(error))(pure);\n    };\n};\nvar liftEither = function (dictMonadThrow) {\n    return Data_Either.either(throwError(dictMonadThrow))(Control_Applicative.pure((dictMonadThrow.Monad0()).Applicative0()));\n};\nvar catchError = function (dict) {\n    return dict.catchError;\n};\nvar catchJust = function (dictMonadError) {\n    var throwError1 = throwError(dictMonadError.MonadThrow0());\n    var catchError1 = catchError(dictMonadError);\n    return function (p) {\n        return function (act) {\n            return function (handler) {\n                var handle = function (e) {\n                    var v = p(e);\n                    if (v instanceof Data_Maybe.Nothing) {\n                        return throwError1(e);\n                    };\n                    if (v instanceof Data_Maybe.Just) {\n                        return handler(v.value0);\n                    };\n                    throw new Error(\"Failed pattern match at Control.Monad.Error.Class (line 57, column 5 - line 59, column 26): \" + [ v.constructor.name ]);\n                };\n                return catchError1(act)(handle);\n            };\n        };\n    };\n};\nvar $$try = function (dictMonadError) {\n    var catchError1 = catchError(dictMonadError);\n    var Monad0 = (dictMonadError.MonadThrow0()).Monad0();\n    var map = Data_Functor.map(((Monad0.Bind1()).Apply0()).Functor0());\n    var pure = Control_Applicative.pure(Monad0.Applicative0());\n    return function (a) {\n        return catchError1(map(Data_Either.Right.create)(a))(function ($52) {\n            return pure(Data_Either.Left.create($52));\n        });\n    };\n};\nvar withResource = function (dictMonadError) {\n    var MonadThrow0 = dictMonadError.MonadThrow0();\n    var Monad0 = MonadThrow0.Monad0();\n    var Bind1 = Monad0.Bind1();\n    var bind = Control_Bind.bind(Bind1);\n    var try1 = $$try(dictMonadError);\n    var discard1 = discard(Bind1);\n    var throwError1 = throwError(MonadThrow0);\n    var pure = Control_Applicative.pure(Monad0.Applicative0());\n    return function (acquire) {\n        return function (release) {\n            return function (kleisli) {\n                return bind(acquire)(function (resource) {\n                    return bind(try1(kleisli(resource)))(function (result) {\n                        return discard1(release(resource))(function () {\n                            return Data_Either.either(throwError1)(pure)(result);\n                        });\n                    });\n                });\n            };\n        };\n    };\n};\nexport {\n    catchError,\n    throwError,\n    catchJust,\n    $$try as try,\n    withResource,\n    liftMaybe,\n    liftEither,\n    monadThrowEither,\n    monadErrorEither,\n    monadThrowMaybe,\n    monadErrorMaybe,\n    monadThrowEffect,\n    monadErrorEffect\n};\n", "// Generated by purs version 0.15.15\nimport * as Data_Eq from \"../Data.Eq/index.js\";\nimport * as Data_Functor_Invariant from \"../Data.Functor.Invariant/index.js\";\nimport * as Data_Ord from \"../Data.Ord/index.js\";\nimport * as Data_Show from \"../Data.Show/index.js\";\nvar Identity = function (x) {\n    return x;\n};\nvar showIdentity = function (dictShow) {\n    var show = Data_Show.show(dictShow);\n    return {\n        show: function (v) {\n            return \"(Identity \" + (show(v) + \")\");\n        }\n    };\n};\nvar semiringIdentity = function (dictSemiring) {\n    return dictSemiring;\n};\nvar semigroupIdentity = function (dictSemigroup) {\n    return dictSemigroup;\n};\nvar ringIdentity = function (dictRing) {\n    return dictRing;\n};\nvar ordIdentity = function (dictOrd) {\n    return dictOrd;\n};\nvar newtypeIdentity = {\n    Coercible0: function () {\n        return undefined;\n    }\n};\nvar monoidIdentity = function (dictMonoid) {\n    return dictMonoid;\n};\nvar lazyIdentity = function (dictLazy) {\n    return dictLazy;\n};\nvar heytingAlgebraIdentity = function (dictHeytingAlgebra) {\n    return dictHeytingAlgebra;\n};\nvar functorIdentity = {\n    map: function (f) {\n        return function (m) {\n            return f(m);\n        };\n    }\n};\nvar invariantIdentity = {\n    imap: /* #__PURE__ */ Data_Functor_Invariant.imapF(functorIdentity)\n};\nvar extendIdentity = {\n    extend: function (f) {\n        return function (m) {\n            return f(m);\n        };\n    },\n    Functor0: function () {\n        return functorIdentity;\n    }\n};\nvar euclideanRingIdentity = function (dictEuclideanRing) {\n    return dictEuclideanRing;\n};\nvar eqIdentity = function (dictEq) {\n    return dictEq;\n};\nvar eq1Identity = {\n    eq1: function (dictEq) {\n        return Data_Eq.eq(eqIdentity(dictEq));\n    }\n};\nvar ord1Identity = {\n    compare1: function (dictOrd) {\n        return Data_Ord.compare(ordIdentity(dictOrd));\n    },\n    Eq10: function () {\n        return eq1Identity;\n    }\n};\nvar comonadIdentity = {\n    extract: function (v) {\n        return v;\n    },\n    Extend0: function () {\n        return extendIdentity;\n    }\n};\nvar commutativeRingIdentity = function (dictCommutativeRing) {\n    return dictCommutativeRing;\n};\nvar boundedIdentity = function (dictBounded) {\n    return dictBounded;\n};\nvar booleanAlgebraIdentity = function (dictBooleanAlgebra) {\n    return dictBooleanAlgebra;\n};\nvar applyIdentity = {\n    apply: function (v) {\n        return function (v1) {\n            return v(v1);\n        };\n    },\n    Functor0: function () {\n        return functorIdentity;\n    }\n};\nvar bindIdentity = {\n    bind: function (v) {\n        return function (f) {\n            return f(v);\n        };\n    },\n    Apply0: function () {\n        return applyIdentity;\n    }\n};\nvar applicativeIdentity = {\n    pure: Identity,\n    Apply0: function () {\n        return applyIdentity;\n    }\n};\nvar monadIdentity = {\n    Applicative0: function () {\n        return applicativeIdentity;\n    },\n    Bind1: function () {\n        return bindIdentity;\n    }\n};\nvar altIdentity = {\n    alt: function (x) {\n        return function (v) {\n            return x;\n        };\n    },\n    Functor0: function () {\n        return functorIdentity;\n    }\n};\nexport {\n    Identity,\n    newtypeIdentity,\n    eqIdentity,\n    ordIdentity,\n    boundedIdentity,\n    heytingAlgebraIdentity,\n    booleanAlgebraIdentity,\n    semigroupIdentity,\n    monoidIdentity,\n    semiringIdentity,\n    euclideanRingIdentity,\n    ringIdentity,\n    commutativeRingIdentity,\n    lazyIdentity,\n    showIdentity,\n    eq1Identity,\n    ord1Identity,\n    functorIdentity,\n    invariantIdentity,\n    altIdentity,\n    applyIdentity,\n    applicativeIdentity,\n    bindIdentity,\n    monadIdentity,\n    extendIdentity,\n    comonadIdentity\n};\n", "export const _new = function (val) {\n  return function () {\n    return { value: val };\n  };\n};\n\nexport const newWithSelf = function (f) {\n  return function () {\n    var ref = { value: null };\n    ref.value = f(ref);\n    return ref;\n  };\n};\n\nexport const read = function (ref) {\n  return function () {\n    return ref.value;\n  };\n};\n\nexport const modifyImpl = function (f) {\n  return function (ref) {\n    return function () {\n      var t = f(ref.value);\n      ref.value = t.state;\n      return t.value;\n    };\n  };\n};\n\nexport const write = function (val) {\n  return function (ref) {\n    return function () {\n      ref.value = val;\n    };\n  };\n};\n", "// Generated by purs version 0.15.15\nimport * as $foreign from \"./foreign.js\";\nimport * as Data_Functor from \"../Data.Functor/index.js\";\nimport * as Effect from \"../Effect/index.js\";\nvar $$void = /* #__PURE__ */ Data_Functor[\"void\"](Effect.functorEffect);\nvar $$new = $foreign[\"_new\"];\nvar modify$prime = $foreign.modifyImpl;\nvar modify = function (f) {\n    return modify$prime(function (s) {\n        var s$prime = f(s);\n        return {\n            state: s$prime,\n            value: s$prime\n        };\n    });\n};\nvar modify_ = function (f) {\n    return function (s) {\n        return $$void(modify(f)(s));\n    };\n};\nexport {\n    newWithSelf,\n    read,\n    write\n} from \"./foreign.js\";\nexport {\n    $$new as new,\n    modify$prime,\n    modify,\n    modify_\n};\n", "// Generated by purs version 0.15.15\nimport * as Control_Bind from \"../Control.Bind/index.js\";\nimport * as Control_Monad from \"../Control.Monad/index.js\";\nimport * as Data_Either from \"../Data.Either/index.js\";\nimport * as Data_Functor from \"../Data.Functor/index.js\";\nimport * as Data_Identity from \"../Data.Identity/index.js\";\nimport * as Data_Maybe from \"../Data.Maybe/index.js\";\nimport * as Data_Monoid from \"../Data.Monoid/index.js\";\nimport * as Data_Semigroup from \"../Data.Semigroup/index.js\";\nimport * as Data_Unit from \"../Data.Unit/index.js\";\nimport * as Effect from \"../Effect/index.js\";\nimport * as Effect_Ref from \"../Effect.Ref/index.js\";\nvar bindFlipped = /* #__PURE__ */ Control_Bind.bindFlipped(Effect.bindEffect);\nvar map = /* #__PURE__ */ Data_Functor.map(Effect.functorEffect);\nvar Loop = /* #__PURE__ */ (function () {\n    function Loop(value0) {\n        this.value0 = value0;\n    };\n    Loop.create = function (value0) {\n        return new Loop(value0);\n    };\n    return Loop;\n})();\nvar Done = /* #__PURE__ */ (function () {\n    function Done(value0) {\n        this.value0 = value0;\n    };\n    Done.create = function (value0) {\n        return new Done(value0);\n    };\n    return Done;\n})();\nvar tailRecM = function (dict) {\n    return dict.tailRecM;\n};\nvar tailRecM2 = function (dictMonadRec) {\n    var tailRecM1 = tailRecM(dictMonadRec);\n    return function (f) {\n        return function (a) {\n            return function (b) {\n                return tailRecM1(function (o) {\n                    return f(o.a)(o.b);\n                })({\n                    a: a,\n                    b: b\n                });\n            };\n        };\n    };\n};\nvar tailRecM3 = function (dictMonadRec) {\n    var tailRecM1 = tailRecM(dictMonadRec);\n    return function (f) {\n        return function (a) {\n            return function (b) {\n                return function (c) {\n                    return tailRecM1(function (o) {\n                        return f(o.a)(o.b)(o.c);\n                    })({\n                        a: a,\n                        b: b,\n                        c: c\n                    });\n                };\n            };\n        };\n    };\n};\nvar untilJust = function (dictMonadRec) {\n    var tailRecM1 = tailRecM(dictMonadRec);\n    var mapFlipped = Data_Functor.mapFlipped((((dictMonadRec.Monad0()).Bind1()).Apply0()).Functor0());\n    return function (m) {\n        return tailRecM1(function (v) {\n            return mapFlipped(m)(function (v1) {\n                if (v1 instanceof Data_Maybe.Nothing) {\n                    return new Loop(Data_Unit.unit);\n                };\n                if (v1 instanceof Data_Maybe.Just) {\n                    return new Done(v1.value0);\n                };\n                throw new Error(\"Failed pattern match at Control.Monad.Rec.Class (line 179, column 43 - line 181, column 19): \" + [ v1.constructor.name ]);\n            });\n        })(Data_Unit.unit);\n    };\n};\nvar whileJust = function (dictMonoid) {\n    var append = Data_Semigroup.append(dictMonoid.Semigroup0());\n    var mempty = Data_Monoid.mempty(dictMonoid);\n    return function (dictMonadRec) {\n        var tailRecM1 = tailRecM(dictMonadRec);\n        var mapFlipped = Data_Functor.mapFlipped((((dictMonadRec.Monad0()).Bind1()).Apply0()).Functor0());\n        return function (m) {\n            return tailRecM1(function (v) {\n                return mapFlipped(m)(function (v1) {\n                    if (v1 instanceof Data_Maybe.Nothing) {\n                        return new Done(v);\n                    };\n                    if (v1 instanceof Data_Maybe.Just) {\n                        return new Loop(append(v)(v1.value0));\n                    };\n                    throw new Error(\"Failed pattern match at Control.Monad.Rec.Class (line 172, column 45 - line 174, column 26): \" + [ v1.constructor.name ]);\n                });\n            })(mempty);\n        };\n    };\n};\nvar tailRec = function (f) {\n    var go = function ($copy_v) {\n        var $tco_done = false;\n        var $tco_result;\n        function $tco_loop(v) {\n            if (v instanceof Loop) {\n                $copy_v = f(v.value0);\n                return;\n            };\n            if (v instanceof Done) {\n                $tco_done = true;\n                return v.value0;\n            };\n            throw new Error(\"Failed pattern match at Control.Monad.Rec.Class (line 103, column 3 - line 103, column 25): \" + [ v.constructor.name ]);\n        };\n        while (!$tco_done) {\n            $tco_result = $tco_loop($copy_v);\n        };\n        return $tco_result;\n    };\n    return function ($85) {\n        return go(f($85));\n    };\n};\nvar tailRec2 = function (f) {\n    return function (a) {\n        return function (b) {\n            return tailRec(function (o) {\n                return f(o.a)(o.b);\n            })({\n                a: a,\n                b: b\n            });\n        };\n    };\n};\nvar tailRec3 = function (f) {\n    return function (a) {\n        return function (b) {\n            return function (c) {\n                return tailRec(function (o) {\n                    return f(o.a)(o.b)(o.c);\n                })({\n                    a: a,\n                    b: b,\n                    c: c\n                });\n            };\n        };\n    };\n};\nvar monadRecMaybe = {\n    tailRecM: function (f) {\n        return function (a0) {\n            var g = function (v) {\n                if (v instanceof Data_Maybe.Nothing) {\n                    return new Done(Data_Maybe.Nothing.value);\n                };\n                if (v instanceof Data_Maybe.Just && v.value0 instanceof Loop) {\n                    return new Loop(f(v.value0.value0));\n                };\n                if (v instanceof Data_Maybe.Just && v.value0 instanceof Done) {\n                    return new Done(new Data_Maybe.Just(v.value0.value0));\n                };\n                throw new Error(\"Failed pattern match at Control.Monad.Rec.Class (line 153, column 7 - line 153, column 31): \" + [ v.constructor.name ]);\n            };\n            return tailRec(g)(f(a0));\n        };\n    },\n    Monad0: function () {\n        return Data_Maybe.monadMaybe;\n    }\n};\nvar monadRecIdentity = {\n    tailRecM: function (f) {\n        var runIdentity = function (v) {\n            return v;\n        };\n        var $86 = tailRec(function ($88) {\n            return runIdentity(f($88));\n        });\n        return function ($87) {\n            return Data_Identity.Identity($86($87));\n        };\n    },\n    Monad0: function () {\n        return Data_Identity.monadIdentity;\n    }\n};\nvar monadRecFunction = {\n    tailRecM: function (f) {\n        return function (a0) {\n            return function (e) {\n                return tailRec(function (a) {\n                    return f(a)(e);\n                })(a0);\n            };\n        };\n    },\n    Monad0: function () {\n        return Control_Monad.monadFn;\n    }\n};\nvar monadRecEither = {\n    tailRecM: function (f) {\n        return function (a0) {\n            var g = function (v) {\n                if (v instanceof Data_Either.Left) {\n                    return new Done(new Data_Either.Left(v.value0));\n                };\n                if (v instanceof Data_Either.Right && v.value0 instanceof Loop) {\n                    return new Loop(f(v.value0.value0));\n                };\n                if (v instanceof Data_Either.Right && v.value0 instanceof Done) {\n                    return new Done(new Data_Either.Right(v.value0.value0));\n                };\n                throw new Error(\"Failed pattern match at Control.Monad.Rec.Class (line 145, column 7 - line 145, column 33): \" + [ v.constructor.name ]);\n            };\n            return tailRec(g)(f(a0));\n        };\n    },\n    Monad0: function () {\n        return Data_Either.monadEither;\n    }\n};\nvar monadRecEffect = {\n    tailRecM: function (f) {\n        return function (a) {\n            var fromDone = function (v) {\n                if (v instanceof Done) {\n                    return v.value0;\n                };\n                throw new Error(\"Failed pattern match at Control.Monad.Rec.Class (line 137, column 30 - line 137, column 44): \" + [ v.constructor.name ]);\n            };\n            return function __do() {\n                var r = bindFlipped(Effect_Ref[\"new\"])(f(a))();\n                (function () {\n                    while (!(function __do() {\n                        var v = Effect_Ref.read(r)();\n                        if (v instanceof Loop) {\n                            var e = f(v.value0)();\n                            Effect_Ref.write(e)(r)();\n                            return false;\n                        };\n                        if (v instanceof Done) {\n                            return true;\n                        };\n                        throw new Error(\"Failed pattern match at Control.Monad.Rec.Class (line 128, column 22 - line 133, column 28): \" + [ v.constructor.name ]);\n                    })()) {\n\n                    };\n                    return {};\n                })();\n                return map(fromDone)(Effect_Ref.read(r))();\n            };\n        };\n    },\n    Monad0: function () {\n        return Effect.monadEffect;\n    }\n};\nvar loop3 = function (a) {\n    return function (b) {\n        return function (c) {\n            return new Loop({\n                a: a,\n                b: b,\n                c: c\n            });\n        };\n    };\n};\nvar loop2 = function (a) {\n    return function (b) {\n        return new Loop({\n            a: a,\n            b: b\n        });\n    };\n};\nvar functorStep = {\n    map: function (f) {\n        return function (m) {\n            if (m instanceof Loop) {\n                return new Loop(m.value0);\n            };\n            if (m instanceof Done) {\n                return new Done(f(m.value0));\n            };\n            throw new Error(\"Failed pattern match at Control.Monad.Rec.Class (line 0, column 0 - line 0, column 0): \" + [ m.constructor.name ]);\n        };\n    }\n};\nvar forever = function (dictMonadRec) {\n    var tailRecM1 = tailRecM(dictMonadRec);\n    var voidRight = Data_Functor.voidRight((((dictMonadRec.Monad0()).Bind1()).Apply0()).Functor0());\n    return function (ma) {\n        return tailRecM1(function (u) {\n            return voidRight(new Loop(u))(ma);\n        })(Data_Unit.unit);\n    };\n};\nvar bifunctorStep = {\n    bimap: function (v) {\n        return function (v1) {\n            return function (v2) {\n                if (v2 instanceof Loop) {\n                    return new Loop(v(v2.value0));\n                };\n                if (v2 instanceof Done) {\n                    return new Done(v1(v2.value0));\n                };\n                throw new Error(\"Failed pattern match at Control.Monad.Rec.Class (line 33, column 1 - line 35, column 34): \" + [ v.constructor.name, v1.constructor.name, v2.constructor.name ]);\n            };\n        };\n    }\n};\nexport {\n    Loop,\n    Done,\n    tailRec,\n    tailRec2,\n    tailRec3,\n    tailRecM,\n    tailRecM2,\n    tailRecM3,\n    forever,\n    whileJust,\n    untilJust,\n    loop2,\n    loop3,\n    functorStep,\n    bifunctorStep,\n    monadRecIdentity,\n    monadRecEffect,\n    monadRecFunction,\n    monadRecEither,\n    monadRecMaybe\n};\n", "// module Unsafe.Coerce\n\nexport const unsafeCoerce = function (x) {\n  return x;\n};\n", "// Generated by purs version 0.15.15\nimport * as Control_Category from \"../Control.Category/index.js\";\nimport * as Control_Monad from \"../Control.Monad/index.js\";\nimport * as Control_Semigroupoid from \"../Control.Semigroupoid/index.js\";\nimport * as Data_Functor from \"../Data.Functor/index.js\";\nvar monadAskFun = {\n    ask: /* #__PURE__ */ Control_Category.identity(Control_Category.categoryFn),\n    Monad0: function () {\n        return Control_Monad.monadFn;\n    }\n};\nvar monadReaderFun = {\n    local: /* #__PURE__ */ Control_Semigroupoid.composeFlipped(Control_Semigroupoid.semigroupoidFn),\n    MonadAsk0: function () {\n        return monadAskFun;\n    }\n};\nvar local = function (dict) {\n    return dict.local;\n};\nvar ask = function (dict) {\n    return dict.ask;\n};\nvar asks = function (dictMonadAsk) {\n    var map = Data_Functor.map((((dictMonadAsk.Monad0()).Bind1()).Apply0()).Functor0());\n    var ask1 = ask(dictMonadAsk);\n    return function (f) {\n        return map(f)(ask1);\n    };\n};\nexport {\n    ask,\n    local,\n    asks,\n    monadAskFun,\n    monadReaderFun\n};\n", "export const boolConj = function (b1) {\n  return function (b2) {\n    return b1 && b2;\n  };\n};\n\nexport const boolDisj = function (b1) {\n  return function (b2) {\n    return b1 || b2;\n  };\n};\n\nexport const boolNot = function (b) {\n  return !b;\n};\n", "// Generated by purs version 0.15.15\nimport * as $foreign from \"./foreign.js\";\nimport * as Data_Symbol from \"../Data.Symbol/index.js\";\nimport * as Data_Unit from \"../Data.Unit/index.js\";\nimport * as Record_Unsafe from \"../Record.Unsafe/index.js\";\nimport * as Type_Proxy from \"../Type.Proxy/index.js\";\nvar ttRecord = function (dict) {\n    return dict.ttRecord;\n};\nvar tt = function (dict) {\n    return dict.tt;\n};\nvar notRecord = function (dict) {\n    return dict.notRecord;\n};\nvar not = function (dict) {\n    return dict.not;\n};\nvar impliesRecord = function (dict) {\n    return dict.impliesRecord;\n};\nvar implies = function (dict) {\n    return dict.implies;\n};\nvar heytingAlgebraUnit = {\n    ff: Data_Unit.unit,\n    tt: Data_Unit.unit,\n    implies: function (v) {\n        return function (v1) {\n            return Data_Unit.unit;\n        };\n    },\n    conj: function (v) {\n        return function (v1) {\n            return Data_Unit.unit;\n        };\n    },\n    disj: function (v) {\n        return function (v1) {\n            return Data_Unit.unit;\n        };\n    },\n    not: function (v) {\n        return Data_Unit.unit;\n    }\n};\nvar heytingAlgebraRecordNil = {\n    conjRecord: function (v) {\n        return function (v1) {\n            return function (v2) {\n                return {};\n            };\n        };\n    },\n    disjRecord: function (v) {\n        return function (v1) {\n            return function (v2) {\n                return {};\n            };\n        };\n    },\n    ffRecord: function (v) {\n        return function (v1) {\n            return {};\n        };\n    },\n    impliesRecord: function (v) {\n        return function (v1) {\n            return function (v2) {\n                return {};\n            };\n        };\n    },\n    notRecord: function (v) {\n        return function (v1) {\n            return {};\n        };\n    },\n    ttRecord: function (v) {\n        return function (v1) {\n            return {};\n        };\n    }\n};\nvar heytingAlgebraProxy = /* #__PURE__ */ (function () {\n    return {\n        conj: function (v) {\n            return function (v1) {\n                return Type_Proxy[\"Proxy\"].value;\n            };\n        },\n        disj: function (v) {\n            return function (v1) {\n                return Type_Proxy[\"Proxy\"].value;\n            };\n        },\n        implies: function (v) {\n            return function (v1) {\n                return Type_Proxy[\"Proxy\"].value;\n            };\n        },\n        ff: Type_Proxy[\"Proxy\"].value,\n        not: function (v) {\n            return Type_Proxy[\"Proxy\"].value;\n        },\n        tt: Type_Proxy[\"Proxy\"].value\n    };\n})();\nvar ffRecord = function (dict) {\n    return dict.ffRecord;\n};\nvar ff = function (dict) {\n    return dict.ff;\n};\nvar disjRecord = function (dict) {\n    return dict.disjRecord;\n};\nvar disj = function (dict) {\n    return dict.disj;\n};\nvar heytingAlgebraBoolean = {\n    ff: false,\n    tt: true,\n    implies: function (a) {\n        return function (b) {\n            return disj(heytingAlgebraBoolean)(not(heytingAlgebraBoolean)(a))(b);\n        };\n    },\n    conj: $foreign.boolConj,\n    disj: $foreign.boolDisj,\n    not: $foreign.boolNot\n};\nvar conjRecord = function (dict) {\n    return dict.conjRecord;\n};\nvar heytingAlgebraRecord = function () {\n    return function (dictHeytingAlgebraRecord) {\n        return {\n            ff: ffRecord(dictHeytingAlgebraRecord)(Type_Proxy[\"Proxy\"].value)(Type_Proxy[\"Proxy\"].value),\n            tt: ttRecord(dictHeytingAlgebraRecord)(Type_Proxy[\"Proxy\"].value)(Type_Proxy[\"Proxy\"].value),\n            conj: conjRecord(dictHeytingAlgebraRecord)(Type_Proxy[\"Proxy\"].value),\n            disj: disjRecord(dictHeytingAlgebraRecord)(Type_Proxy[\"Proxy\"].value),\n            implies: impliesRecord(dictHeytingAlgebraRecord)(Type_Proxy[\"Proxy\"].value),\n            not: notRecord(dictHeytingAlgebraRecord)(Type_Proxy[\"Proxy\"].value)\n        };\n    };\n};\nvar conj = function (dict) {\n    return dict.conj;\n};\nvar heytingAlgebraFunction = function (dictHeytingAlgebra) {\n    var ff1 = ff(dictHeytingAlgebra);\n    var tt1 = tt(dictHeytingAlgebra);\n    var implies1 = implies(dictHeytingAlgebra);\n    var conj1 = conj(dictHeytingAlgebra);\n    var disj1 = disj(dictHeytingAlgebra);\n    var not1 = not(dictHeytingAlgebra);\n    return {\n        ff: function (v) {\n            return ff1;\n        },\n        tt: function (v) {\n            return tt1;\n        },\n        implies: function (f) {\n            return function (g) {\n                return function (a) {\n                    return implies1(f(a))(g(a));\n                };\n            };\n        },\n        conj: function (f) {\n            return function (g) {\n                return function (a) {\n                    return conj1(f(a))(g(a));\n                };\n            };\n        },\n        disj: function (f) {\n            return function (g) {\n                return function (a) {\n                    return disj1(f(a))(g(a));\n                };\n            };\n        },\n        not: function (f) {\n            return function (a) {\n                return not1(f(a));\n            };\n        }\n    };\n};\nvar heytingAlgebraRecordCons = function (dictIsSymbol) {\n    var reflectSymbol = Data_Symbol.reflectSymbol(dictIsSymbol);\n    return function () {\n        return function (dictHeytingAlgebraRecord) {\n            var conjRecord1 = conjRecord(dictHeytingAlgebraRecord);\n            var disjRecord1 = disjRecord(dictHeytingAlgebraRecord);\n            var impliesRecord1 = impliesRecord(dictHeytingAlgebraRecord);\n            var ffRecord1 = ffRecord(dictHeytingAlgebraRecord);\n            var notRecord1 = notRecord(dictHeytingAlgebraRecord);\n            var ttRecord1 = ttRecord(dictHeytingAlgebraRecord);\n            return function (dictHeytingAlgebra) {\n                var conj1 = conj(dictHeytingAlgebra);\n                var disj1 = disj(dictHeytingAlgebra);\n                var implies1 = implies(dictHeytingAlgebra);\n                var ff1 = ff(dictHeytingAlgebra);\n                var not1 = not(dictHeytingAlgebra);\n                var tt1 = tt(dictHeytingAlgebra);\n                return {\n                    conjRecord: function (v) {\n                        return function (ra) {\n                            return function (rb) {\n                                var tail = conjRecord1(Type_Proxy[\"Proxy\"].value)(ra)(rb);\n                                var key = reflectSymbol(Type_Proxy[\"Proxy\"].value);\n                                var insert = Record_Unsafe.unsafeSet(key);\n                                var get = Record_Unsafe.unsafeGet(key);\n                                return insert(conj1(get(ra))(get(rb)))(tail);\n                            };\n                        };\n                    },\n                    disjRecord: function (v) {\n                        return function (ra) {\n                            return function (rb) {\n                                var tail = disjRecord1(Type_Proxy[\"Proxy\"].value)(ra)(rb);\n                                var key = reflectSymbol(Type_Proxy[\"Proxy\"].value);\n                                var insert = Record_Unsafe.unsafeSet(key);\n                                var get = Record_Unsafe.unsafeGet(key);\n                                return insert(disj1(get(ra))(get(rb)))(tail);\n                            };\n                        };\n                    },\n                    impliesRecord: function (v) {\n                        return function (ra) {\n                            return function (rb) {\n                                var tail = impliesRecord1(Type_Proxy[\"Proxy\"].value)(ra)(rb);\n                                var key = reflectSymbol(Type_Proxy[\"Proxy\"].value);\n                                var insert = Record_Unsafe.unsafeSet(key);\n                                var get = Record_Unsafe.unsafeGet(key);\n                                return insert(implies1(get(ra))(get(rb)))(tail);\n                            };\n                        };\n                    },\n                    ffRecord: function (v) {\n                        return function (row) {\n                            var tail = ffRecord1(Type_Proxy[\"Proxy\"].value)(row);\n                            var key = reflectSymbol(Type_Proxy[\"Proxy\"].value);\n                            var insert = Record_Unsafe.unsafeSet(key);\n                            return insert(ff1)(tail);\n                        };\n                    },\n                    notRecord: function (v) {\n                        return function (row) {\n                            var tail = notRecord1(Type_Proxy[\"Proxy\"].value)(row);\n                            var key = reflectSymbol(Type_Proxy[\"Proxy\"].value);\n                            var insert = Record_Unsafe.unsafeSet(key);\n                            var get = Record_Unsafe.unsafeGet(key);\n                            return insert(not1(get(row)))(tail);\n                        };\n                    },\n                    ttRecord: function (v) {\n                        return function (row) {\n                            var tail = ttRecord1(Type_Proxy[\"Proxy\"].value)(row);\n                            var key = reflectSymbol(Type_Proxy[\"Proxy\"].value);\n                            var insert = Record_Unsafe.unsafeSet(key);\n                            return insert(tt1)(tail);\n                        };\n                    }\n                };\n            };\n        };\n    };\n};\nexport {\n    tt,\n    ff,\n    implies,\n    conj,\n    disj,\n    not,\n    ffRecord,\n    ttRecord,\n    impliesRecord,\n    conjRecord,\n    disjRecord,\n    notRecord,\n    heytingAlgebraBoolean,\n    heytingAlgebraUnit,\n    heytingAlgebraFunction,\n    heytingAlgebraProxy,\n    heytingAlgebraRecord,\n    heytingAlgebraRecordNil,\n    heytingAlgebraRecordCons\n};\n", "// Generated by purs version 0.15.15\nimport * as Control_Lazy from \"../Control.Lazy/index.js\";\nimport * as Data_Bounded from \"../Data.Bounded/index.js\";\nimport * as Data_Eq from \"../Data.Eq/index.js\";\nimport * as Data_Functor_Invariant from \"../Data.Functor.Invariant/index.js\";\nimport * as Data_Generic_Rep from \"../Data.Generic.Rep/index.js\";\nimport * as Data_HeytingAlgebra from \"../Data.HeytingAlgebra/index.js\";\nimport * as Data_Monoid from \"../Data.Monoid/index.js\";\nimport * as Data_Ord from \"../Data.Ord/index.js\";\nimport * as Data_Ordering from \"../Data.Ordering/index.js\";\nimport * as Data_Ring from \"../Data.Ring/index.js\";\nimport * as Data_Semigroup from \"../Data.Semigroup/index.js\";\nimport * as Data_Semiring from \"../Data.Semiring/index.js\";\nimport * as Data_Show from \"../Data.Show/index.js\";\nimport * as Data_Unit from \"../Data.Unit/index.js\";\nvar Tuple = /* #__PURE__ */ (function () {\n    function Tuple(value0, value1) {\n        this.value0 = value0;\n        this.value1 = value1;\n    };\n    Tuple.create = function (value0) {\n        return function (value1) {\n            return new Tuple(value0, value1);\n        };\n    };\n    return Tuple;\n})();\nvar uncurry = function (f) {\n    return function (v) {\n        return f(v.value0)(v.value1);\n    };\n};\nvar swap = function (v) {\n    return new Tuple(v.value1, v.value0);\n};\nvar snd = function (v) {\n    return v.value1;\n};\nvar showTuple = function (dictShow) {\n    var show = Data_Show.show(dictShow);\n    return function (dictShow1) {\n        var show1 = Data_Show.show(dictShow1);\n        return {\n            show: function (v) {\n                return \"(Tuple \" + (show(v.value0) + (\" \" + (show1(v.value1) + \")\")));\n            }\n        };\n    };\n};\nvar semiringTuple = function (dictSemiring) {\n    var add = Data_Semiring.add(dictSemiring);\n    var one = Data_Semiring.one(dictSemiring);\n    var mul = Data_Semiring.mul(dictSemiring);\n    var zero = Data_Semiring.zero(dictSemiring);\n    return function (dictSemiring1) {\n        var add1 = Data_Semiring.add(dictSemiring1);\n        var mul1 = Data_Semiring.mul(dictSemiring1);\n        return {\n            add: function (v) {\n                return function (v1) {\n                    return new Tuple(add(v.value0)(v1.value0), add1(v.value1)(v1.value1));\n                };\n            },\n            one: new Tuple(one, Data_Semiring.one(dictSemiring1)),\n            mul: function (v) {\n                return function (v1) {\n                    return new Tuple(mul(v.value0)(v1.value0), mul1(v.value1)(v1.value1));\n                };\n            },\n            zero: new Tuple(zero, Data_Semiring.zero(dictSemiring1))\n        };\n    };\n};\nvar semigroupoidTuple = {\n    compose: function (v) {\n        return function (v1) {\n            return new Tuple(v1.value0, v.value1);\n        };\n    }\n};\nvar semigroupTuple = function (dictSemigroup) {\n    var append1 = Data_Semigroup.append(dictSemigroup);\n    return function (dictSemigroup1) {\n        var append2 = Data_Semigroup.append(dictSemigroup1);\n        return {\n            append: function (v) {\n                return function (v1) {\n                    return new Tuple(append1(v.value0)(v1.value0), append2(v.value1)(v1.value1));\n                };\n            }\n        };\n    };\n};\nvar ringTuple = function (dictRing) {\n    var sub = Data_Ring.sub(dictRing);\n    var semiringTuple1 = semiringTuple(dictRing.Semiring0());\n    return function (dictRing1) {\n        var sub1 = Data_Ring.sub(dictRing1);\n        var semiringTuple2 = semiringTuple1(dictRing1.Semiring0());\n        return {\n            sub: function (v) {\n                return function (v1) {\n                    return new Tuple(sub(v.value0)(v1.value0), sub1(v.value1)(v1.value1));\n                };\n            },\n            Semiring0: function () {\n                return semiringTuple2;\n            }\n        };\n    };\n};\nvar monoidTuple = function (dictMonoid) {\n    var mempty = Data_Monoid.mempty(dictMonoid);\n    var semigroupTuple1 = semigroupTuple(dictMonoid.Semigroup0());\n    return function (dictMonoid1) {\n        var semigroupTuple2 = semigroupTuple1(dictMonoid1.Semigroup0());\n        return {\n            mempty: new Tuple(mempty, Data_Monoid.mempty(dictMonoid1)),\n            Semigroup0: function () {\n                return semigroupTuple2;\n            }\n        };\n    };\n};\nvar heytingAlgebraTuple = function (dictHeytingAlgebra) {\n    var tt = Data_HeytingAlgebra.tt(dictHeytingAlgebra);\n    var ff = Data_HeytingAlgebra.ff(dictHeytingAlgebra);\n    var implies = Data_HeytingAlgebra.implies(dictHeytingAlgebra);\n    var conj1 = Data_HeytingAlgebra.conj(dictHeytingAlgebra);\n    var disj = Data_HeytingAlgebra.disj(dictHeytingAlgebra);\n    var not = Data_HeytingAlgebra.not(dictHeytingAlgebra);\n    return function (dictHeytingAlgebra1) {\n        var implies1 = Data_HeytingAlgebra.implies(dictHeytingAlgebra1);\n        var conj2 = Data_HeytingAlgebra.conj(dictHeytingAlgebra1);\n        var disj1 = Data_HeytingAlgebra.disj(dictHeytingAlgebra1);\n        var not1 = Data_HeytingAlgebra.not(dictHeytingAlgebra1);\n        return {\n            tt: new Tuple(tt, Data_HeytingAlgebra.tt(dictHeytingAlgebra1)),\n            ff: new Tuple(ff, Data_HeytingAlgebra.ff(dictHeytingAlgebra1)),\n            implies: function (v) {\n                return function (v1) {\n                    return new Tuple(implies(v.value0)(v1.value0), implies1(v.value1)(v1.value1));\n                };\n            },\n            conj: function (v) {\n                return function (v1) {\n                    return new Tuple(conj1(v.value0)(v1.value0), conj2(v.value1)(v1.value1));\n                };\n            },\n            disj: function (v) {\n                return function (v1) {\n                    return new Tuple(disj(v.value0)(v1.value0), disj1(v.value1)(v1.value1));\n                };\n            },\n            not: function (v) {\n                return new Tuple(not(v.value0), not1(v.value1));\n            }\n        };\n    };\n};\nvar genericTuple = {\n    to: function (x) {\n        return new Tuple(x.value0, x.value1);\n    },\n    from: function (x) {\n        return new Data_Generic_Rep.Product(x.value0, x.value1);\n    }\n};\nvar functorTuple = {\n    map: function (f) {\n        return function (m) {\n            return new Tuple(m.value0, f(m.value1));\n        };\n    }\n};\nvar invariantTuple = {\n    imap: /* #__PURE__ */ Data_Functor_Invariant.imapF(functorTuple)\n};\nvar fst = function (v) {\n    return v.value0;\n};\nvar lazyTuple = function (dictLazy) {\n    var defer = Control_Lazy.defer(dictLazy);\n    return function (dictLazy1) {\n        var defer1 = Control_Lazy.defer(dictLazy1);\n        return {\n            defer: function (f) {\n                return new Tuple(defer(function (v) {\n                    return fst(f(Data_Unit.unit));\n                }), defer1(function (v) {\n                    return snd(f(Data_Unit.unit));\n                }));\n            }\n        };\n    };\n};\nvar extendTuple = {\n    extend: function (f) {\n        return function (v) {\n            return new Tuple(v.value0, f(v));\n        };\n    },\n    Functor0: function () {\n        return functorTuple;\n    }\n};\nvar eqTuple = function (dictEq) {\n    var eq = Data_Eq.eq(dictEq);\n    return function (dictEq1) {\n        var eq1 = Data_Eq.eq(dictEq1);\n        return {\n            eq: function (x) {\n                return function (y) {\n                    return eq(x.value0)(y.value0) && eq1(x.value1)(y.value1);\n                };\n            }\n        };\n    };\n};\nvar ordTuple = function (dictOrd) {\n    var compare = Data_Ord.compare(dictOrd);\n    var eqTuple1 = eqTuple(dictOrd.Eq0());\n    return function (dictOrd1) {\n        var compare1 = Data_Ord.compare(dictOrd1);\n        var eqTuple2 = eqTuple1(dictOrd1.Eq0());\n        return {\n            compare: function (x) {\n                return function (y) {\n                    var v = compare(x.value0)(y.value0);\n                    if (v instanceof Data_Ordering.LT) {\n                        return Data_Ordering.LT.value;\n                    };\n                    if (v instanceof Data_Ordering.GT) {\n                        return Data_Ordering.GT.value;\n                    };\n                    return compare1(x.value1)(y.value1);\n                };\n            },\n            Eq0: function () {\n                return eqTuple2;\n            }\n        };\n    };\n};\nvar eq1Tuple = function (dictEq) {\n    var eqTuple1 = eqTuple(dictEq);\n    return {\n        eq1: function (dictEq1) {\n            return Data_Eq.eq(eqTuple1(dictEq1));\n        }\n    };\n};\nvar ord1Tuple = function (dictOrd) {\n    var ordTuple1 = ordTuple(dictOrd);\n    var eq1Tuple1 = eq1Tuple(dictOrd.Eq0());\n    return {\n        compare1: function (dictOrd1) {\n            return Data_Ord.compare(ordTuple1(dictOrd1));\n        },\n        Eq10: function () {\n            return eq1Tuple1;\n        }\n    };\n};\nvar curry = function (f) {\n    return function (a) {\n        return function (b) {\n            return f(new Tuple(a, b));\n        };\n    };\n};\nvar comonadTuple = {\n    extract: snd,\n    Extend0: function () {\n        return extendTuple;\n    }\n};\nvar commutativeRingTuple = function (dictCommutativeRing) {\n    var ringTuple1 = ringTuple(dictCommutativeRing.Ring0());\n    return function (dictCommutativeRing1) {\n        var ringTuple2 = ringTuple1(dictCommutativeRing1.Ring0());\n        return {\n            Ring0: function () {\n                return ringTuple2;\n            }\n        };\n    };\n};\nvar boundedTuple = function (dictBounded) {\n    var top = Data_Bounded.top(dictBounded);\n    var bottom = Data_Bounded.bottom(dictBounded);\n    var ordTuple1 = ordTuple(dictBounded.Ord0());\n    return function (dictBounded1) {\n        var ordTuple2 = ordTuple1(dictBounded1.Ord0());\n        return {\n            top: new Tuple(top, Data_Bounded.top(dictBounded1)),\n            bottom: new Tuple(bottom, Data_Bounded.bottom(dictBounded1)),\n            Ord0: function () {\n                return ordTuple2;\n            }\n        };\n    };\n};\nvar booleanAlgebraTuple = function (dictBooleanAlgebra) {\n    var heytingAlgebraTuple1 = heytingAlgebraTuple(dictBooleanAlgebra.HeytingAlgebra0());\n    return function (dictBooleanAlgebra1) {\n        var heytingAlgebraTuple2 = heytingAlgebraTuple1(dictBooleanAlgebra1.HeytingAlgebra0());\n        return {\n            HeytingAlgebra0: function () {\n                return heytingAlgebraTuple2;\n            }\n        };\n    };\n};\nvar applyTuple = function (dictSemigroup) {\n    var append1 = Data_Semigroup.append(dictSemigroup);\n    return {\n        apply: function (v) {\n            return function (v1) {\n                return new Tuple(append1(v.value0)(v1.value0), v.value1(v1.value1));\n            };\n        },\n        Functor0: function () {\n            return functorTuple;\n        }\n    };\n};\nvar bindTuple = function (dictSemigroup) {\n    var append1 = Data_Semigroup.append(dictSemigroup);\n    var applyTuple1 = applyTuple(dictSemigroup);\n    return {\n        bind: function (v) {\n            return function (f) {\n                var v1 = f(v.value1);\n                return new Tuple(append1(v.value0)(v1.value0), v1.value1);\n            };\n        },\n        Apply0: function () {\n            return applyTuple1;\n        }\n    };\n};\nvar applicativeTuple = function (dictMonoid) {\n    var applyTuple1 = applyTuple(dictMonoid.Semigroup0());\n    return {\n        pure: Tuple.create(Data_Monoid.mempty(dictMonoid)),\n        Apply0: function () {\n            return applyTuple1;\n        }\n    };\n};\nvar monadTuple = function (dictMonoid) {\n    var applicativeTuple1 = applicativeTuple(dictMonoid);\n    var bindTuple1 = bindTuple(dictMonoid.Semigroup0());\n    return {\n        Applicative0: function () {\n            return applicativeTuple1;\n        },\n        Bind1: function () {\n            return bindTuple1;\n        }\n    };\n};\nexport {\n    Tuple,\n    fst,\n    snd,\n    curry,\n    uncurry,\n    swap,\n    showTuple,\n    eqTuple,\n    eq1Tuple,\n    ordTuple,\n    ord1Tuple,\n    boundedTuple,\n    semigroupoidTuple,\n    semigroupTuple,\n    monoidTuple,\n    semiringTuple,\n    ringTuple,\n    commutativeRingTuple,\n    heytingAlgebraTuple,\n    booleanAlgebraTuple,\n    functorTuple,\n    genericTuple,\n    invariantTuple,\n    applyTuple,\n    applicativeTuple,\n    bindTuple,\n    monadTuple,\n    extendTuple,\n    comonadTuple,\n    lazyTuple\n};\n", "// Generated by purs version 0.15.15\nimport * as Data_Tuple from \"../Data.Tuple/index.js\";\nimport * as Data_Unit from \"../Data.Unit/index.js\";\nvar state = function (dict) {\n    return dict.state;\n};\nvar put = function (dictMonadState) {\n    var state1 = state(dictMonadState);\n    return function (s) {\n        return state1(function (v) {\n            return new Data_Tuple.Tuple(Data_Unit.unit, s);\n        });\n    };\n};\nvar modify_ = function (dictMonadState) {\n    var state1 = state(dictMonadState);\n    return function (f) {\n        return state1(function (s) {\n            return new Data_Tuple.Tuple(Data_Unit.unit, f(s));\n        });\n    };\n};\nvar modify = function (dictMonadState) {\n    var state1 = state(dictMonadState);\n    return function (f) {\n        return state1(function (s) {\n            var s$prime = f(s);\n            return new Data_Tuple.Tuple(s$prime, s$prime);\n        });\n    };\n};\nvar gets = function (dictMonadState) {\n    var state1 = state(dictMonadState);\n    return function (f) {\n        return state1(function (s) {\n            return new Data_Tuple.Tuple(f(s), s);\n        });\n    };\n};\nvar get = function (dictMonadState) {\n    return state(dictMonadState)(function (s) {\n        return new Data_Tuple.Tuple(s, s);\n    });\n};\nexport {\n    state,\n    get,\n    gets,\n    put,\n    modify,\n    modify_\n};\n", "// Generated by purs version 0.15.15\nvar lift = function (dict) {\n    return dict.lift;\n};\nexport {\n    lift\n};\n", "// Generated by purs version 0.15.15\nimport * as Control_Category from \"../Control.Category/index.js\";\nimport * as Effect from \"../Effect/index.js\";\nvar monadEffectEffect = {\n    liftEffect: /* #__PURE__ */ Control_Category.identity(Control_Category.categoryFn),\n    Monad0: function () {\n        return Effect.monadEffect;\n    }\n};\nvar liftEffect = function (dict) {\n    return dict.liftEffect;\n};\nexport {\n    liftEffect,\n    monadEffectEffect\n};\n", "// Generated by purs version 0.15.15\nimport * as Control_Applicative from \"../Control.Applicative/index.js\";\nimport * as Control_Bind from \"../Control.Bind/index.js\";\nimport * as Data_Tuple from \"../Data.Tuple/index.js\";\nvar tell = function (dict) {\n    return dict.tell;\n};\nvar pass = function (dict) {\n    return dict.pass;\n};\nvar listen = function (dict) {\n    return dict.listen;\n};\nvar listens = function (dictMonadWriter) {\n    var Monad1 = (dictMonadWriter.MonadTell1()).Monad1();\n    var bind = Control_Bind.bind(Monad1.Bind1());\n    var listen1 = listen(dictMonadWriter);\n    var pure = Control_Applicative.pure(Monad1.Applicative0());\n    return function (f) {\n        return function (m) {\n            return bind(listen1(m))(function (v) {\n                return pure(new Data_Tuple.Tuple(v.value0, f(v.value1)));\n            });\n        };\n    };\n};\nvar censor = function (dictMonadWriter) {\n    var pass1 = pass(dictMonadWriter);\n    var Monad1 = (dictMonadWriter.MonadTell1()).Monad1();\n    var bind = Control_Bind.bind(Monad1.Bind1());\n    var pure = Control_Applicative.pure(Monad1.Applicative0());\n    return function (f) {\n        return function (m) {\n            return pass1(bind(m)(function (a) {\n                return pure(new Data_Tuple.Tuple(a, f));\n            }));\n        };\n    };\n};\nexport {\n    listen,\n    pass,\n    tell,\n    listens,\n    censor\n};\n", "// Generated by purs version 0.15.15\nimport * as Control_Applicative from \"../Control.Applicative/index.js\";\nimport * as Control_Apply from \"../Control.Apply/index.js\";\nimport * as Control_Bind from \"../Control.Bind/index.js\";\nimport * as Control_Category from \"../Control.Category/index.js\";\nimport * as Control_Monad from \"../Control.Monad/index.js\";\nimport * as Control_Monad_Cont_Class from \"../Control.Monad.Cont.Class/index.js\";\nimport * as Control_Monad_Error_Class from \"../Control.Monad.Error.Class/index.js\";\nimport * as Control_Monad_Reader_Class from \"../Control.Monad.Reader.Class/index.js\";\nimport * as Control_Monad_Rec_Class from \"../Control.Monad.Rec.Class/index.js\";\nimport * as Control_Monad_State_Class from \"../Control.Monad.State.Class/index.js\";\nimport * as Control_Monad_Trans_Class from \"../Control.Monad.Trans.Class/index.js\";\nimport * as Control_Monad_Writer_Class from \"../Control.Monad.Writer.Class/index.js\";\nimport * as Data_Either from \"../Data.Either/index.js\";\nimport * as Data_Functor from \"../Data.Functor/index.js\";\nimport * as Data_Monoid from \"../Data.Monoid/index.js\";\nimport * as Data_Semigroup from \"../Data.Semigroup/index.js\";\nimport * as Data_Tuple from \"../Data.Tuple/index.js\";\nimport * as Effect_Class from \"../Effect.Class/index.js\";\nvar map = /* #__PURE__ */ Data_Functor.map(Data_Either.functorEither);\nvar identity = /* #__PURE__ */ Control_Category.identity(Control_Category.categoryFn);\nvar ExceptT = function (x) {\n    return x;\n};\nvar withExceptT = function (dictFunctor) {\n    var map1 = Data_Functor.map(dictFunctor);\n    return function (f) {\n        return function (v) {\n            var mapLeft = function (v1) {\n                return function (v2) {\n                    if (v2 instanceof Data_Either.Right) {\n                        return new Data_Either.Right(v2.value0);\n                    };\n                    if (v2 instanceof Data_Either.Left) {\n                        return new Data_Either.Left(v1(v2.value0));\n                    };\n                    throw new Error(\"Failed pattern match at Control.Monad.Except.Trans (line 42, column 3 - line 42, column 32): \" + [ v1.constructor.name, v2.constructor.name ]);\n                };\n            };\n            return map1(mapLeft(f))(v);\n        };\n    };\n};\nvar runExceptT = function (v) {\n    return v;\n};\nvar newtypeExceptT = {\n    Coercible0: function () {\n        return undefined;\n    }\n};\nvar monadTransExceptT = {\n    lift: function (dictMonad) {\n        var bind = Control_Bind.bind(dictMonad.Bind1());\n        var pure = Control_Applicative.pure(dictMonad.Applicative0());\n        return function (m) {\n            return bind(m)(function (a) {\n                return pure(new Data_Either.Right(a));\n            });\n        };\n    }\n};\nvar lift = /* #__PURE__ */ Control_Monad_Trans_Class.lift(monadTransExceptT);\nvar mapExceptT = function (f) {\n    return function (v) {\n        return f(v);\n    };\n};\nvar functorExceptT = function (dictFunctor) {\n    var map1 = Data_Functor.map(dictFunctor);\n    return {\n        map: function (f) {\n            return mapExceptT(map1(map(f)));\n        }\n    };\n};\nvar except = function (dictApplicative) {\n    var $185 = Control_Applicative.pure(dictApplicative);\n    return function ($186) {\n        return ExceptT($185($186));\n    };\n};\nvar monadExceptT = function (dictMonad) {\n    return {\n        Applicative0: function () {\n            return applicativeExceptT(dictMonad);\n        },\n        Bind1: function () {\n            return bindExceptT(dictMonad);\n        }\n    };\n};\nvar bindExceptT = function (dictMonad) {\n    var bind = Control_Bind.bind(dictMonad.Bind1());\n    var pure = Control_Applicative.pure(dictMonad.Applicative0());\n    return {\n        bind: function (v) {\n            return function (k) {\n                return bind(v)(Data_Either.either(function ($187) {\n                    return pure(Data_Either.Left.create($187));\n                })(function (a) {\n                    var v1 = k(a);\n                    return v1;\n                }));\n            };\n        },\n        Apply0: function () {\n            return applyExceptT(dictMonad);\n        }\n    };\n};\nvar applyExceptT = function (dictMonad) {\n    var functorExceptT1 = functorExceptT(((dictMonad.Bind1()).Apply0()).Functor0());\n    return {\n        apply: Control_Monad.ap(monadExceptT(dictMonad)),\n        Functor0: function () {\n            return functorExceptT1;\n        }\n    };\n};\nvar applicativeExceptT = function (dictMonad) {\n    return {\n        pure: (function () {\n            var $188 = Control_Applicative.pure(dictMonad.Applicative0());\n            return function ($189) {\n                return ExceptT($188(Data_Either.Right.create($189)));\n            };\n        })(),\n        Apply0: function () {\n            return applyExceptT(dictMonad);\n        }\n    };\n};\nvar semigroupExceptT = function (dictMonad) {\n    var lift2 = Control_Apply.lift2(applyExceptT(dictMonad));\n    return function (dictSemigroup) {\n        return {\n            append: lift2(Data_Semigroup.append(dictSemigroup))\n        };\n    };\n};\nvar monadAskExceptT = function (dictMonadAsk) {\n    var Monad0 = dictMonadAsk.Monad0();\n    var monadExceptT1 = monadExceptT(Monad0);\n    return {\n        ask: lift(Monad0)(Control_Monad_Reader_Class.ask(dictMonadAsk)),\n        Monad0: function () {\n            return monadExceptT1;\n        }\n    };\n};\nvar monadReaderExceptT = function (dictMonadReader) {\n    var local = Control_Monad_Reader_Class.local(dictMonadReader);\n    var monadAskExceptT1 = monadAskExceptT(dictMonadReader.MonadAsk0());\n    return {\n        local: function (f) {\n            return mapExceptT(local(f));\n        },\n        MonadAsk0: function () {\n            return monadAskExceptT1;\n        }\n    };\n};\nvar monadContExceptT = function (dictMonadCont) {\n    var callCC = Control_Monad_Cont_Class.callCC(dictMonadCont);\n    var monadExceptT1 = monadExceptT(dictMonadCont.Monad0());\n    return {\n        callCC: function (f) {\n            return callCC(function (c) {\n                var v = f(function (a) {\n                    return c(new Data_Either.Right(a));\n                });\n                return v;\n            });\n        },\n        Monad0: function () {\n            return monadExceptT1;\n        }\n    };\n};\nvar monadEffectExceptT = function (dictMonadEffect) {\n    var Monad0 = dictMonadEffect.Monad0();\n    var monadExceptT1 = monadExceptT(Monad0);\n    return {\n        liftEffect: (function () {\n            var $190 = lift(Monad0);\n            var $191 = Effect_Class.liftEffect(dictMonadEffect);\n            return function ($192) {\n                return $190($191($192));\n            };\n        })(),\n        Monad0: function () {\n            return monadExceptT1;\n        }\n    };\n};\nvar monadRecExceptT = function (dictMonadRec) {\n    var tailRecM = Control_Monad_Rec_Class.tailRecM(dictMonadRec);\n    var Monad0 = dictMonadRec.Monad0();\n    var bind = Control_Bind.bind(Monad0.Bind1());\n    var pure = Control_Applicative.pure(Monad0.Applicative0());\n    var monadExceptT1 = monadExceptT(Monad0);\n    return {\n        tailRecM: function (f) {\n            var $193 = tailRecM(function (a) {\n                var v = f(a);\n                return bind(v)(function (m$prime) {\n                    return pure((function () {\n                        if (m$prime instanceof Data_Either.Left) {\n                            return new Control_Monad_Rec_Class.Done(new Data_Either.Left(m$prime.value0));\n                        };\n                        if (m$prime instanceof Data_Either.Right && m$prime.value0 instanceof Control_Monad_Rec_Class.Loop) {\n                            return new Control_Monad_Rec_Class.Loop(m$prime.value0.value0);\n                        };\n                        if (m$prime instanceof Data_Either.Right && m$prime.value0 instanceof Control_Monad_Rec_Class.Done) {\n                            return new Control_Monad_Rec_Class.Done(new Data_Either.Right(m$prime.value0.value0));\n                        };\n                        throw new Error(\"Failed pattern match at Control.Monad.Except.Trans (line 74, column 14 - line 77, column 43): \" + [ m$prime.constructor.name ]);\n                    })());\n                });\n            });\n            return function ($194) {\n                return ExceptT($193($194));\n            };\n        },\n        Monad0: function () {\n            return monadExceptT1;\n        }\n    };\n};\nvar monadStateExceptT = function (dictMonadState) {\n    var Monad0 = dictMonadState.Monad0();\n    var lift1 = lift(Monad0);\n    var state = Control_Monad_State_Class.state(dictMonadState);\n    var monadExceptT1 = monadExceptT(Monad0);\n    return {\n        state: function (f) {\n            return lift1(state(f));\n        },\n        Monad0: function () {\n            return monadExceptT1;\n        }\n    };\n};\nvar monadTellExceptT = function (dictMonadTell) {\n    var Monad1 = dictMonadTell.Monad1();\n    var Semigroup0 = dictMonadTell.Semigroup0();\n    var monadExceptT1 = monadExceptT(Monad1);\n    return {\n        tell: (function () {\n            var $195 = lift(Monad1);\n            var $196 = Control_Monad_Writer_Class.tell(dictMonadTell);\n            return function ($197) {\n                return $195($196($197));\n            };\n        })(),\n        Semigroup0: function () {\n            return Semigroup0;\n        },\n        Monad1: function () {\n            return monadExceptT1;\n        }\n    };\n};\nvar monadWriterExceptT = function (dictMonadWriter) {\n    var MonadTell1 = dictMonadWriter.MonadTell1();\n    var Monad1 = MonadTell1.Monad1();\n    var bind = Control_Bind.bind(Monad1.Bind1());\n    var listen = Control_Monad_Writer_Class.listen(dictMonadWriter);\n    var pure = Control_Applicative.pure(Monad1.Applicative0());\n    var pass = Control_Monad_Writer_Class.pass(dictMonadWriter);\n    var Monoid0 = dictMonadWriter.Monoid0();\n    var monadTellExceptT1 = monadTellExceptT(MonadTell1);\n    return {\n        listen: mapExceptT(function (m) {\n            return bind(listen(m))(function (v) {\n                return pure(map(function (r) {\n                    return new Data_Tuple.Tuple(r, v.value1);\n                })(v.value0));\n            });\n        }),\n        pass: mapExceptT(function (m) {\n            return pass(bind(m)(function (a) {\n                return pure((function () {\n                    if (a instanceof Data_Either.Left) {\n                        return new Data_Tuple.Tuple(new Data_Either.Left(a.value0), identity);\n                    };\n                    if (a instanceof Data_Either.Right) {\n                        return new Data_Tuple.Tuple(new Data_Either.Right(a.value0.value0), a.value0.value1);\n                    };\n                    throw new Error(\"Failed pattern match at Control.Monad.Except.Trans (line 134, column 10 - line 136, column 45): \" + [ a.constructor.name ]);\n                })());\n            }));\n        }),\n        Monoid0: function () {\n            return Monoid0;\n        },\n        MonadTell1: function () {\n            return monadTellExceptT1;\n        }\n    };\n};\nvar monadThrowExceptT = function (dictMonad) {\n    var monadExceptT1 = monadExceptT(dictMonad);\n    return {\n        throwError: (function () {\n            var $198 = Control_Applicative.pure(dictMonad.Applicative0());\n            return function ($199) {\n                return ExceptT($198(Data_Either.Left.create($199)));\n            };\n        })(),\n        Monad0: function () {\n            return monadExceptT1;\n        }\n    };\n};\nvar monadErrorExceptT = function (dictMonad) {\n    var bind = Control_Bind.bind(dictMonad.Bind1());\n    var pure = Control_Applicative.pure(dictMonad.Applicative0());\n    var monadThrowExceptT1 = monadThrowExceptT(dictMonad);\n    return {\n        catchError: function (v) {\n            return function (k) {\n                return bind(v)(Data_Either.either(function (a) {\n                    var v1 = k(a);\n                    return v1;\n                })(function ($200) {\n                    return pure(Data_Either.Right.create($200));\n                }));\n            };\n        },\n        MonadThrow0: function () {\n            return monadThrowExceptT1;\n        }\n    };\n};\nvar monoidExceptT = function (dictMonad) {\n    var pure = Control_Applicative.pure(applicativeExceptT(dictMonad));\n    var semigroupExceptT1 = semigroupExceptT(dictMonad);\n    return function (dictMonoid) {\n        var semigroupExceptT2 = semigroupExceptT1(dictMonoid.Semigroup0());\n        return {\n            mempty: pure(Data_Monoid.mempty(dictMonoid)),\n            Semigroup0: function () {\n                return semigroupExceptT2;\n            }\n        };\n    };\n};\nvar altExceptT = function (dictSemigroup) {\n    var append = Data_Semigroup.append(dictSemigroup);\n    return function (dictMonad) {\n        var Bind1 = dictMonad.Bind1();\n        var bind = Control_Bind.bind(Bind1);\n        var pure = Control_Applicative.pure(dictMonad.Applicative0());\n        var functorExceptT1 = functorExceptT((Bind1.Apply0()).Functor0());\n        return {\n            alt: function (v) {\n                return function (v1) {\n                    return bind(v)(function (rm) {\n                        if (rm instanceof Data_Either.Right) {\n                            return pure(new Data_Either.Right(rm.value0));\n                        };\n                        if (rm instanceof Data_Either.Left) {\n                            return bind(v1)(function (rn) {\n                                if (rn instanceof Data_Either.Right) {\n                                    return pure(new Data_Either.Right(rn.value0));\n                                };\n                                if (rn instanceof Data_Either.Left) {\n                                    return pure(new Data_Either.Left(append(rm.value0)(rn.value0)));\n                                };\n                                throw new Error(\"Failed pattern match at Control.Monad.Except.Trans (line 86, column 9 - line 88, column 49): \" + [ rn.constructor.name ]);\n                            });\n                        };\n                        throw new Error(\"Failed pattern match at Control.Monad.Except.Trans (line 82, column 5 - line 88, column 49): \" + [ rm.constructor.name ]);\n                    });\n                };\n            },\n            Functor0: function () {\n                return functorExceptT1;\n            }\n        };\n    };\n};\nvar plusExceptT = function (dictMonoid) {\n    var mempty = Data_Monoid.mempty(dictMonoid);\n    var altExceptT1 = altExceptT(dictMonoid.Semigroup0());\n    return function (dictMonad) {\n        var altExceptT2 = altExceptT1(dictMonad);\n        return {\n            empty: Control_Monad_Error_Class.throwError(monadThrowExceptT(dictMonad))(mempty),\n            Alt0: function () {\n                return altExceptT2;\n            }\n        };\n    };\n};\nvar alternativeExceptT = function (dictMonoid) {\n    var plusExceptT1 = plusExceptT(dictMonoid);\n    return function (dictMonad) {\n        var applicativeExceptT1 = applicativeExceptT(dictMonad);\n        var plusExceptT2 = plusExceptT1(dictMonad);\n        return {\n            Applicative0: function () {\n                return applicativeExceptT1;\n            },\n            Plus1: function () {\n                return plusExceptT2;\n            }\n        };\n    };\n};\nvar monadPlusExceptT = function (dictMonoid) {\n    var alternativeExceptT1 = alternativeExceptT(dictMonoid);\n    return function (dictMonad) {\n        var monadExceptT1 = monadExceptT(dictMonad);\n        var alternativeExceptT2 = alternativeExceptT1(dictMonad);\n        return {\n            Monad0: function () {\n                return monadExceptT1;\n            },\n            Alternative1: function () {\n                return alternativeExceptT2;\n            }\n        };\n    };\n};\nexport {\n    ExceptT,\n    runExceptT,\n    withExceptT,\n    mapExceptT,\n    except,\n    newtypeExceptT,\n    functorExceptT,\n    applyExceptT,\n    applicativeExceptT,\n    bindExceptT,\n    monadExceptT,\n    monadRecExceptT,\n    altExceptT,\n    plusExceptT,\n    alternativeExceptT,\n    monadPlusExceptT,\n    monadTransExceptT,\n    monadEffectExceptT,\n    monadContExceptT,\n    monadThrowExceptT,\n    monadErrorExceptT,\n    monadAskExceptT,\n    monadReaderExceptT,\n    monadStateExceptT,\n    monadTellExceptT,\n    monadWriterExceptT,\n    semigroupExceptT,\n    monoidExceptT\n};\nexport {\n    catchError,\n    throwError\n} from \"../Control.Monad.Error.Class/index.js\";\nexport {\n    lift\n} from \"../Control.Monad.Trans.Class/index.js\";\n", "// Generated by purs version 0.15.15\nimport * as Control_Alt from \"../Control.Alt/index.js\";\nimport * as Data_Functor from \"../Data.Functor/index.js\";\nvar plusArray = {\n    empty: [  ],\n    Alt0: function () {\n        return Control_Alt.altArray;\n    }\n};\nvar empty = function (dict) {\n    return dict.empty;\n};\nexport {\n    empty,\n    plusArray\n};\nexport {\n    alt\n} from \"../Control.Alt/index.js\";\nexport {\n    map,\n    void\n} from \"../Data.Functor/index.js\";\n", "// Generated by purs version 0.15.15\nimport * as Unsafe_Coerce from \"../Unsafe.Coerce/index.js\";\nvar coerce = function () {\n    return Unsafe_Coerce.unsafeCoerce;\n};\nexport {\n    coerce\n};\n", "// Generated by purs version 0.15.15\nimport * as Safe_Coerce from \"../Safe.Coerce/index.js\";\nvar coerce = /* #__PURE__ */ Safe_Coerce.coerce();\nvar wrap = function () {\n    return coerce;\n};\nvar wrap1 = /* #__PURE__ */ wrap();\nvar unwrap = function () {\n    return coerce;\n};\nvar unwrap1 = /* #__PURE__ */ unwrap();\nvar underF2 = function () {\n    return function () {\n        return function () {\n            return function () {\n                return function (v) {\n                    return coerce;\n                };\n            };\n        };\n    };\n};\nvar underF = function () {\n    return function () {\n        return function () {\n            return function () {\n                return function (v) {\n                    return coerce;\n                };\n            };\n        };\n    };\n};\nvar under2 = function () {\n    return function () {\n        return function (v) {\n            return coerce;\n        };\n    };\n};\nvar under = function () {\n    return function () {\n        return function (v) {\n            return coerce;\n        };\n    };\n};\nvar un = function () {\n    return function (v) {\n        return unwrap1;\n    };\n};\nvar traverse = function () {\n    return function () {\n        return function (v) {\n            return coerce;\n        };\n    };\n};\nvar overF2 = function () {\n    return function () {\n        return function () {\n            return function () {\n                return function (v) {\n                    return coerce;\n                };\n            };\n        };\n    };\n};\nvar overF = function () {\n    return function () {\n        return function () {\n            return function () {\n                return function (v) {\n                    return coerce;\n                };\n            };\n        };\n    };\n};\nvar over2 = function () {\n    return function () {\n        return function (v) {\n            return coerce;\n        };\n    };\n};\nvar over = function () {\n    return function () {\n        return function (v) {\n            return coerce;\n        };\n    };\n};\nvar newtypeMultiplicative = {\n    Coercible0: function () {\n        return undefined;\n    }\n};\nvar newtypeLast = {\n    Coercible0: function () {\n        return undefined;\n    }\n};\nvar newtypeFirst = {\n    Coercible0: function () {\n        return undefined;\n    }\n};\nvar newtypeEndo = {\n    Coercible0: function () {\n        return undefined;\n    }\n};\nvar newtypeDual = {\n    Coercible0: function () {\n        return undefined;\n    }\n};\nvar newtypeDisj = {\n    Coercible0: function () {\n        return undefined;\n    }\n};\nvar newtypeConj = {\n    Coercible0: function () {\n        return undefined;\n    }\n};\nvar newtypeAdditive = {\n    Coercible0: function () {\n        return undefined;\n    }\n};\nvar modify = function () {\n    return function (fn) {\n        return function (t) {\n            return wrap1(fn(unwrap1(t)));\n        };\n    };\n};\nvar collect = function () {\n    return function () {\n        return function (v) {\n            return coerce;\n        };\n    };\n};\nvar alaF = function () {\n    return function () {\n        return function () {\n            return function () {\n                return function (v) {\n                    return coerce;\n                };\n            };\n        };\n    };\n};\nvar ala = function () {\n    return function () {\n        return function () {\n            return function (v) {\n                return function (f) {\n                    return coerce(f(wrap1));\n                };\n            };\n        };\n    };\n};\nexport {\n    wrap,\n    unwrap,\n    un,\n    modify,\n    ala,\n    alaF,\n    over,\n    overF,\n    under,\n    underF,\n    over2,\n    overF2,\n    under2,\n    underF2,\n    traverse,\n    collect,\n    newtypeAdditive,\n    newtypeMultiplicative,\n    newtypeConj,\n    newtypeDisj,\n    newtypeDual,\n    newtypeEndo,\n    newtypeFirst,\n    newtypeLast\n};\n", "// Generated by purs version 0.15.15\nimport * as Control_Alt from \"../Control.Alt/index.js\";\nimport * as Control_Applicative from \"../Control.Applicative/index.js\";\nimport * as Control_Apply from \"../Control.Apply/index.js\";\nimport * as Control_Bind from \"../Control.Bind/index.js\";\nimport * as Control_Monad_Cont_Class from \"../Control.Monad.Cont.Class/index.js\";\nimport * as Control_Monad_Error_Class from \"../Control.Monad.Error.Class/index.js\";\nimport * as Control_Monad_Reader_Class from \"../Control.Monad.Reader.Class/index.js\";\nimport * as Control_Monad_Rec_Class from \"../Control.Monad.Rec.Class/index.js\";\nimport * as Control_Monad_State_Class from \"../Control.Monad.State.Class/index.js\";\nimport * as Control_Monad_Trans_Class from \"../Control.Monad.Trans.Class/index.js\";\nimport * as Control_Monad_Writer_Class from \"../Control.Monad.Writer.Class/index.js\";\nimport * as Control_Plus from \"../Control.Plus/index.js\";\nimport * as Data_Distributive from \"../Data.Distributive/index.js\";\nimport * as Data_Function from \"../Data.Function/index.js\";\nimport * as Data_Functor from \"../Data.Functor/index.js\";\nimport * as Data_Monoid from \"../Data.Monoid/index.js\";\nimport * as Data_Semigroup from \"../Data.Semigroup/index.js\";\nimport * as Effect_Class from \"../Effect.Class/index.js\";\nvar ReaderT = function (x) {\n    return x;\n};\nvar withReaderT = function (f) {\n    return function (v) {\n        return function ($146) {\n            return v(f($146));\n        };\n    };\n};\nvar runReaderT = function (v) {\n    return v;\n};\nvar newtypeReaderT = {\n    Coercible0: function () {\n        return undefined;\n    }\n};\nvar monadTransReaderT = {\n    lift: function (dictMonad) {\n        return function ($147) {\n            return ReaderT(Data_Function[\"const\"]($147));\n        };\n    }\n};\nvar lift = /* #__PURE__ */ Control_Monad_Trans_Class.lift(monadTransReaderT);\nvar mapReaderT = function (f) {\n    return function (v) {\n        return function ($148) {\n            return f(v($148));\n        };\n    };\n};\nvar functorReaderT = function (dictFunctor) {\n    return {\n        map: (function () {\n            var $149 = Data_Functor.map(dictFunctor);\n            return function ($150) {\n                return mapReaderT($149($150));\n            };\n        })()\n    };\n};\nvar distributiveReaderT = function (dictDistributive) {\n    var collect = Data_Distributive.collect(dictDistributive);\n    var functorReaderT1 = functorReaderT(dictDistributive.Functor0());\n    return {\n        distribute: function (dictFunctor) {\n            var collect1 = collect(dictFunctor);\n            return function (a) {\n                return function (e) {\n                    return collect1(function (r) {\n                        return r(e);\n                    })(a);\n                };\n            };\n        },\n        collect: function (dictFunctor) {\n            var map = Data_Functor.map(dictFunctor);\n            return function (f) {\n                var $151 = Data_Distributive.distribute(distributiveReaderT(dictDistributive))(dictFunctor);\n                var $152 = map(f);\n                return function ($153) {\n                    return $151($152($153));\n                };\n            };\n        },\n        Functor0: function () {\n            return functorReaderT1;\n        }\n    };\n};\nvar applyReaderT = function (dictApply) {\n    var apply = Control_Apply.apply(dictApply);\n    var functorReaderT1 = functorReaderT(dictApply.Functor0());\n    return {\n        apply: function (v) {\n            return function (v1) {\n                return function (r) {\n                    return apply(v(r))(v1(r));\n                };\n            };\n        },\n        Functor0: function () {\n            return functorReaderT1;\n        }\n    };\n};\nvar bindReaderT = function (dictBind) {\n    var bind = Control_Bind.bind(dictBind);\n    var applyReaderT1 = applyReaderT(dictBind.Apply0());\n    return {\n        bind: function (v) {\n            return function (k) {\n                return function (r) {\n                    return bind(v(r))(function (a) {\n                        var v1 = k(a);\n                        return v1(r);\n                    });\n                };\n            };\n        },\n        Apply0: function () {\n            return applyReaderT1;\n        }\n    };\n};\nvar semigroupReaderT = function (dictApply) {\n    var lift2 = Control_Apply.lift2(applyReaderT(dictApply));\n    return function (dictSemigroup) {\n        return {\n            append: lift2(Data_Semigroup.append(dictSemigroup))\n        };\n    };\n};\nvar applicativeReaderT = function (dictApplicative) {\n    var applyReaderT1 = applyReaderT(dictApplicative.Apply0());\n    return {\n        pure: (function () {\n            var $154 = Control_Applicative.pure(dictApplicative);\n            return function ($155) {\n                return ReaderT(Data_Function[\"const\"]($154($155)));\n            };\n        })(),\n        Apply0: function () {\n            return applyReaderT1;\n        }\n    };\n};\nvar monadReaderT = function (dictMonad) {\n    var applicativeReaderT1 = applicativeReaderT(dictMonad.Applicative0());\n    var bindReaderT1 = bindReaderT(dictMonad.Bind1());\n    return {\n        Applicative0: function () {\n            return applicativeReaderT1;\n        },\n        Bind1: function () {\n            return bindReaderT1;\n        }\n    };\n};\nvar monadAskReaderT = function (dictMonad) {\n    var monadReaderT1 = monadReaderT(dictMonad);\n    return {\n        ask: Control_Applicative.pure(dictMonad.Applicative0()),\n        Monad0: function () {\n            return monadReaderT1;\n        }\n    };\n};\nvar monadReaderReaderT = function (dictMonad) {\n    var monadAskReaderT1 = monadAskReaderT(dictMonad);\n    return {\n        local: withReaderT,\n        MonadAsk0: function () {\n            return monadAskReaderT1;\n        }\n    };\n};\nvar monadContReaderT = function (dictMonadCont) {\n    var callCC = Control_Monad_Cont_Class.callCC(dictMonadCont);\n    var monadReaderT1 = monadReaderT(dictMonadCont.Monad0());\n    return {\n        callCC: function (f) {\n            return function (r) {\n                return callCC(function (c) {\n                    var v = f(function ($156) {\n                        return ReaderT(Data_Function[\"const\"](c($156)));\n                    });\n                    return v(r);\n                });\n            };\n        },\n        Monad0: function () {\n            return monadReaderT1;\n        }\n    };\n};\nvar monadEffectReader = function (dictMonadEffect) {\n    var Monad0 = dictMonadEffect.Monad0();\n    var monadReaderT1 = monadReaderT(Monad0);\n    return {\n        liftEffect: (function () {\n            var $157 = lift(Monad0);\n            var $158 = Effect_Class.liftEffect(dictMonadEffect);\n            return function ($159) {\n                return $157($158($159));\n            };\n        })(),\n        Monad0: function () {\n            return monadReaderT1;\n        }\n    };\n};\nvar monadRecReaderT = function (dictMonadRec) {\n    var Monad0 = dictMonadRec.Monad0();\n    var bindFlipped = Control_Bind.bindFlipped(Monad0.Bind1());\n    var pure = Control_Applicative.pure(Monad0.Applicative0());\n    var tailRecM = Control_Monad_Rec_Class.tailRecM(dictMonadRec);\n    var monadReaderT1 = monadReaderT(Monad0);\n    return {\n        tailRecM: function (k) {\n            return function (a) {\n                var k$prime = function (r) {\n                    return function (a$prime) {\n                        var v = k(a$prime);\n                        return bindFlipped(pure)(v(r));\n                    };\n                };\n                return function (r) {\n                    return tailRecM(k$prime(r))(a);\n                };\n            };\n        },\n        Monad0: function () {\n            return monadReaderT1;\n        }\n    };\n};\nvar monadStateReaderT = function (dictMonadState) {\n    var Monad0 = dictMonadState.Monad0();\n    var monadReaderT1 = monadReaderT(Monad0);\n    return {\n        state: (function () {\n            var $160 = lift(Monad0);\n            var $161 = Control_Monad_State_Class.state(dictMonadState);\n            return function ($162) {\n                return $160($161($162));\n            };\n        })(),\n        Monad0: function () {\n            return monadReaderT1;\n        }\n    };\n};\nvar monadTellReaderT = function (dictMonadTell) {\n    var Monad1 = dictMonadTell.Monad1();\n    var Semigroup0 = dictMonadTell.Semigroup0();\n    var monadReaderT1 = monadReaderT(Monad1);\n    return {\n        tell: (function () {\n            var $163 = lift(Monad1);\n            var $164 = Control_Monad_Writer_Class.tell(dictMonadTell);\n            return function ($165) {\n                return $163($164($165));\n            };\n        })(),\n        Semigroup0: function () {\n            return Semigroup0;\n        },\n        Monad1: function () {\n            return monadReaderT1;\n        }\n    };\n};\nvar monadWriterReaderT = function (dictMonadWriter) {\n    var Monoid0 = dictMonadWriter.Monoid0();\n    var monadTellReaderT1 = monadTellReaderT(dictMonadWriter.MonadTell1());\n    return {\n        listen: mapReaderT(Control_Monad_Writer_Class.listen(dictMonadWriter)),\n        pass: mapReaderT(Control_Monad_Writer_Class.pass(dictMonadWriter)),\n        Monoid0: function () {\n            return Monoid0;\n        },\n        MonadTell1: function () {\n            return monadTellReaderT1;\n        }\n    };\n};\nvar monadThrowReaderT = function (dictMonadThrow) {\n    var Monad0 = dictMonadThrow.Monad0();\n    var monadReaderT1 = monadReaderT(Monad0);\n    return {\n        throwError: (function () {\n            var $166 = lift(Monad0);\n            var $167 = Control_Monad_Error_Class.throwError(dictMonadThrow);\n            return function ($168) {\n                return $166($167($168));\n            };\n        })(),\n        Monad0: function () {\n            return monadReaderT1;\n        }\n    };\n};\nvar monadErrorReaderT = function (dictMonadError) {\n    var catchError = Control_Monad_Error_Class.catchError(dictMonadError);\n    var monadThrowReaderT1 = monadThrowReaderT(dictMonadError.MonadThrow0());\n    return {\n        catchError: function (v) {\n            return function (h) {\n                return function (r) {\n                    return catchError(v(r))(function (e) {\n                        var v1 = h(e);\n                        return v1(r);\n                    });\n                };\n            };\n        },\n        MonadThrow0: function () {\n            return monadThrowReaderT1;\n        }\n    };\n};\nvar monoidReaderT = function (dictApplicative) {\n    var pure = Control_Applicative.pure(applicativeReaderT(dictApplicative));\n    var semigroupReaderT1 = semigroupReaderT(dictApplicative.Apply0());\n    return function (dictMonoid) {\n        var semigroupReaderT2 = semigroupReaderT1(dictMonoid.Semigroup0());\n        return {\n            mempty: pure(Data_Monoid.mempty(dictMonoid)),\n            Semigroup0: function () {\n                return semigroupReaderT2;\n            }\n        };\n    };\n};\nvar altReaderT = function (dictAlt) {\n    var alt = Control_Alt.alt(dictAlt);\n    var functorReaderT1 = functorReaderT(dictAlt.Functor0());\n    return {\n        alt: function (v) {\n            return function (v1) {\n                return function (r) {\n                    return alt(v(r))(v1(r));\n                };\n            };\n        },\n        Functor0: function () {\n            return functorReaderT1;\n        }\n    };\n};\nvar plusReaderT = function (dictPlus) {\n    var altReaderT1 = altReaderT(dictPlus.Alt0());\n    return {\n        empty: Data_Function[\"const\"](Control_Plus.empty(dictPlus)),\n        Alt0: function () {\n            return altReaderT1;\n        }\n    };\n};\nvar alternativeReaderT = function (dictAlternative) {\n    var applicativeReaderT1 = applicativeReaderT(dictAlternative.Applicative0());\n    var plusReaderT1 = plusReaderT(dictAlternative.Plus1());\n    return {\n        Applicative0: function () {\n            return applicativeReaderT1;\n        },\n        Plus1: function () {\n            return plusReaderT1;\n        }\n    };\n};\nvar monadPlusReaderT = function (dictMonadPlus) {\n    var monadReaderT1 = monadReaderT(dictMonadPlus.Monad0());\n    var alternativeReaderT1 = alternativeReaderT(dictMonadPlus.Alternative1());\n    return {\n        Monad0: function () {\n            return monadReaderT1;\n        },\n        Alternative1: function () {\n            return alternativeReaderT1;\n        }\n    };\n};\nexport {\n    ReaderT,\n    runReaderT,\n    withReaderT,\n    mapReaderT,\n    newtypeReaderT,\n    functorReaderT,\n    applyReaderT,\n    applicativeReaderT,\n    altReaderT,\n    plusReaderT,\n    alternativeReaderT,\n    bindReaderT,\n    monadReaderT,\n    semigroupReaderT,\n    monoidReaderT,\n    monadPlusReaderT,\n    monadTransReaderT,\n    monadEffectReader,\n    monadContReaderT,\n    monadThrowReaderT,\n    monadErrorReaderT,\n    monadAskReaderT,\n    monadReaderReaderT,\n    monadStateReaderT,\n    monadTellReaderT,\n    monadWriterReaderT,\n    distributiveReaderT,\n    monadRecReaderT\n};\nexport {\n    ask,\n    asks,\n    local\n} from \"../Control.Monad.Reader.Class/index.js\";\nexport {\n    lift\n} from \"../Control.Monad.Trans.Class/index.js\";\n", "// Generated by purs version 0.15.15\nimport * as Control_Alt from \"../Control.Alt/index.js\";\nimport * as Control_Applicative from \"../Control.Applicative/index.js\";\nimport * as Control_Apply from \"../Control.Apply/index.js\";\nimport * as Control_Bind from \"../Control.Bind/index.js\";\nimport * as Control_Monad_Cont_Class from \"../Control.Monad.Cont.Class/index.js\";\nimport * as Control_Monad_Error_Class from \"../Control.Monad.Error.Class/index.js\";\nimport * as Control_Monad_Reader_Class from \"../Control.Monad.Reader.Class/index.js\";\nimport * as Control_Monad_Rec_Class from \"../Control.Monad.Rec.Class/index.js\";\nimport * as Control_Monad_State_Class from \"../Control.Monad.State.Class/index.js\";\nimport * as Control_Monad_Trans_Class from \"../Control.Monad.Trans.Class/index.js\";\nimport * as Control_Monad_Writer_Class from \"../Control.Monad.Writer.Class/index.js\";\nimport * as Control_Plus from \"../Control.Plus/index.js\";\nimport * as Data_Functor from \"../Data.Functor/index.js\";\nimport * as Data_Monoid from \"../Data.Monoid/index.js\";\nimport * as Data_Semigroup from \"../Data.Semigroup/index.js\";\nimport * as Data_Tuple from \"../Data.Tuple/index.js\";\nimport * as Data_Unit from \"../Data.Unit/index.js\";\nimport * as Effect_Class from \"../Effect.Class/index.js\";\nvar WriterT = function (x) {\n    return x;\n};\nvar runWriterT = function (v) {\n    return v;\n};\nvar newtypeWriterT = {\n    Coercible0: function () {\n        return undefined;\n    }\n};\nvar monadTransWriterT = function (dictMonoid) {\n    var mempty = Data_Monoid.mempty(dictMonoid);\n    return {\n        lift: function (dictMonad) {\n            var bind = Control_Bind.bind(dictMonad.Bind1());\n            var pure = Control_Applicative.pure(dictMonad.Applicative0());\n            return function (m) {\n                return bind(m)(function (a) {\n                    return pure(new Data_Tuple.Tuple(a, mempty));\n                });\n            };\n        }\n    };\n};\nvar mapWriterT = function (f) {\n    return function (v) {\n        return f(v);\n    };\n};\nvar functorWriterT = function (dictFunctor) {\n    var map = Data_Functor.map(dictFunctor);\n    return {\n        map: function (f) {\n            return mapWriterT(map(function (v) {\n                return new Data_Tuple.Tuple(f(v.value0), v.value1);\n            }));\n        }\n    };\n};\nvar execWriterT = function (dictFunctor) {\n    var map = Data_Functor.map(dictFunctor);\n    return function (v) {\n        return map(Data_Tuple.snd)(v);\n    };\n};\nvar applyWriterT = function (dictSemigroup) {\n    var append = Data_Semigroup.append(dictSemigroup);\n    return function (dictApply) {\n        var apply = Control_Apply.apply(dictApply);\n        var Functor0 = dictApply.Functor0();\n        var map = Data_Functor.map(Functor0);\n        var functorWriterT1 = functorWriterT(Functor0);\n        return {\n            apply: function (v) {\n                return function (v1) {\n                    var k = function (v3) {\n                        return function (v4) {\n                            return new Data_Tuple.Tuple(v3.value0(v4.value0), append(v3.value1)(v4.value1));\n                        };\n                    };\n                    return apply(map(k)(v))(v1);\n                };\n            },\n            Functor0: function () {\n                return functorWriterT1;\n            }\n        };\n    };\n};\nvar bindWriterT = function (dictSemigroup) {\n    var append = Data_Semigroup.append(dictSemigroup);\n    var applyWriterT1 = applyWriterT(dictSemigroup);\n    return function (dictBind) {\n        var bind = Control_Bind.bind(dictBind);\n        var Apply0 = dictBind.Apply0();\n        var map = Data_Functor.map(Apply0.Functor0());\n        var applyWriterT2 = applyWriterT1(Apply0);\n        return {\n            bind: function (v) {\n                return function (k) {\n                    return bind(v)(function (v1) {\n                        var v2 = k(v1.value0);\n                        return map(function (v3) {\n                            return new Data_Tuple.Tuple(v3.value0, append(v1.value1)(v3.value1));\n                        })(v2);\n                    });\n                };\n            },\n            Apply0: function () {\n                return applyWriterT2;\n            }\n        };\n    };\n};\nvar semigroupWriterT = function (dictApply) {\n    return function (dictSemigroup) {\n        var lift2 = Control_Apply.lift2(applyWriterT(dictSemigroup)(dictApply));\n        return function (dictSemigroup1) {\n            return {\n                append: lift2(Data_Semigroup.append(dictSemigroup1))\n            };\n        };\n    };\n};\nvar applicativeWriterT = function (dictMonoid) {\n    var mempty = Data_Monoid.mempty(dictMonoid);\n    var applyWriterT1 = applyWriterT(dictMonoid.Semigroup0());\n    return function (dictApplicative) {\n        var pure = Control_Applicative.pure(dictApplicative);\n        var applyWriterT2 = applyWriterT1(dictApplicative.Apply0());\n        return {\n            pure: function (a) {\n                return pure(new Data_Tuple.Tuple(a, mempty));\n            },\n            Apply0: function () {\n                return applyWriterT2;\n            }\n        };\n    };\n};\nvar monadWriterT = function (dictMonoid) {\n    var applicativeWriterT1 = applicativeWriterT(dictMonoid);\n    var bindWriterT1 = bindWriterT(dictMonoid.Semigroup0());\n    return function (dictMonad) {\n        var applicativeWriterT2 = applicativeWriterT1(dictMonad.Applicative0());\n        var bindWriterT2 = bindWriterT1(dictMonad.Bind1());\n        return {\n            Applicative0: function () {\n                return applicativeWriterT2;\n            },\n            Bind1: function () {\n                return bindWriterT2;\n            }\n        };\n    };\n};\nvar monadAskWriterT = function (dictMonoid) {\n    var lift = Control_Monad_Trans_Class.lift(monadTransWriterT(dictMonoid));\n    var monadWriterT1 = monadWriterT(dictMonoid);\n    return function (dictMonadAsk) {\n        var Monad0 = dictMonadAsk.Monad0();\n        var monadWriterT2 = monadWriterT1(Monad0);\n        return {\n            ask: lift(Monad0)(Control_Monad_Reader_Class.ask(dictMonadAsk)),\n            Monad0: function () {\n                return monadWriterT2;\n            }\n        };\n    };\n};\nvar monadReaderWriterT = function (dictMonoid) {\n    var monadAskWriterT1 = monadAskWriterT(dictMonoid);\n    return function (dictMonadReader) {\n        var local = Control_Monad_Reader_Class.local(dictMonadReader);\n        var monadAskWriterT2 = monadAskWriterT1(dictMonadReader.MonadAsk0());\n        return {\n            local: function (f) {\n                return mapWriterT(local(f));\n            },\n            MonadAsk0: function () {\n                return monadAskWriterT2;\n            }\n        };\n    };\n};\nvar monadContWriterT = function (dictMonoid) {\n    var mempty = Data_Monoid.mempty(dictMonoid);\n    var monadWriterT1 = monadWriterT(dictMonoid);\n    return function (dictMonadCont) {\n        var callCC = Control_Monad_Cont_Class.callCC(dictMonadCont);\n        var monadWriterT2 = monadWriterT1(dictMonadCont.Monad0());\n        return {\n            callCC: function (f) {\n                return callCC(function (c) {\n                    var v = f(function (a) {\n                        return c(new Data_Tuple.Tuple(a, mempty));\n                    });\n                    return v;\n                });\n            },\n            Monad0: function () {\n                return monadWriterT2;\n            }\n        };\n    };\n};\nvar monadEffectWriter = function (dictMonoid) {\n    var lift = Control_Monad_Trans_Class.lift(monadTransWriterT(dictMonoid));\n    var monadWriterT1 = monadWriterT(dictMonoid);\n    return function (dictMonadEffect) {\n        var Monad0 = dictMonadEffect.Monad0();\n        var monadWriterT2 = monadWriterT1(Monad0);\n        return {\n            liftEffect: (function () {\n                var $249 = lift(Monad0);\n                var $250 = Effect_Class.liftEffect(dictMonadEffect);\n                return function ($251) {\n                    return $249($250($251));\n                };\n            })(),\n            Monad0: function () {\n                return monadWriterT2;\n            }\n        };\n    };\n};\nvar monadRecWriterT = function (dictMonoid) {\n    var append = Data_Semigroup.append(dictMonoid.Semigroup0());\n    var mempty = Data_Monoid.mempty(dictMonoid);\n    var monadWriterT1 = monadWriterT(dictMonoid);\n    return function (dictMonadRec) {\n        var Monad0 = dictMonadRec.Monad0();\n        var bind = Control_Bind.bind(Monad0.Bind1());\n        var pure = Control_Applicative.pure(Monad0.Applicative0());\n        var tailRecM = Control_Monad_Rec_Class.tailRecM(dictMonadRec);\n        var monadWriterT2 = monadWriterT1(Monad0);\n        return {\n            tailRecM: function (f) {\n                return function (a) {\n                    var f$prime = function (v) {\n                        var v1 = f(v.value0);\n                        return bind(v1)(function (v2) {\n                            return pure((function () {\n                                if (v2.value0 instanceof Control_Monad_Rec_Class.Loop) {\n                                    return new Control_Monad_Rec_Class.Loop(new Data_Tuple.Tuple(v2.value0.value0, append(v.value1)(v2.value1)));\n                                };\n                                if (v2.value0 instanceof Control_Monad_Rec_Class.Done) {\n                                    return new Control_Monad_Rec_Class.Done(new Data_Tuple.Tuple(v2.value0.value0, append(v.value1)(v2.value1)));\n                                };\n                                throw new Error(\"Failed pattern match at Control.Monad.Writer.Trans (line 83, column 16 - line 85, column 47): \" + [ v2.value0.constructor.name ]);\n                            })());\n                        });\n                    };\n                    return tailRecM(f$prime)(new Data_Tuple.Tuple(a, mempty));\n                };\n            },\n            Monad0: function () {\n                return monadWriterT2;\n            }\n        };\n    };\n};\nvar monadStateWriterT = function (dictMonoid) {\n    var lift = Control_Monad_Trans_Class.lift(monadTransWriterT(dictMonoid));\n    var monadWriterT1 = monadWriterT(dictMonoid);\n    return function (dictMonadState) {\n        var Monad0 = dictMonadState.Monad0();\n        var lift1 = lift(Monad0);\n        var state = Control_Monad_State_Class.state(dictMonadState);\n        var monadWriterT2 = monadWriterT1(Monad0);\n        return {\n            state: function (f) {\n                return lift1(state(f));\n            },\n            Monad0: function () {\n                return monadWriterT2;\n            }\n        };\n    };\n};\nvar monadTellWriterT = function (dictMonoid) {\n    var Semigroup0 = dictMonoid.Semigroup0();\n    var monadWriterT1 = monadWriterT(dictMonoid);\n    return function (dictMonad) {\n        var monadWriterT2 = monadWriterT1(dictMonad);\n        return {\n            tell: (function () {\n                var $252 = Control_Applicative.pure(dictMonad.Applicative0());\n                var $253 = Data_Tuple.Tuple.create(Data_Unit.unit);\n                return function ($254) {\n                    return WriterT($252($253($254)));\n                };\n            })(),\n            Semigroup0: function () {\n                return Semigroup0;\n            },\n            Monad1: function () {\n                return monadWriterT2;\n            }\n        };\n    };\n};\nvar monadWriterWriterT = function (dictMonoid) {\n    var monadTellWriterT1 = monadTellWriterT(dictMonoid);\n    return function (dictMonad) {\n        var bind = Control_Bind.bind(dictMonad.Bind1());\n        var pure = Control_Applicative.pure(dictMonad.Applicative0());\n        var monadTellWriterT2 = monadTellWriterT1(dictMonad);\n        return {\n            listen: function (v) {\n                return bind(v)(function (v1) {\n                    return pure(new Data_Tuple.Tuple(new Data_Tuple.Tuple(v1.value0, v1.value1), v1.value1));\n                });\n            },\n            pass: function (v) {\n                return bind(v)(function (v1) {\n                    return pure(new Data_Tuple.Tuple(v1.value0.value0, v1.value0.value1(v1.value1)));\n                });\n            },\n            Monoid0: function () {\n                return dictMonoid;\n            },\n            MonadTell1: function () {\n                return monadTellWriterT2;\n            }\n        };\n    };\n};\nvar monadThrowWriterT = function (dictMonoid) {\n    var lift = Control_Monad_Trans_Class.lift(monadTransWriterT(dictMonoid));\n    var monadWriterT1 = monadWriterT(dictMonoid);\n    return function (dictMonadThrow) {\n        var Monad0 = dictMonadThrow.Monad0();\n        var lift1 = lift(Monad0);\n        var throwError = Control_Monad_Error_Class.throwError(dictMonadThrow);\n        var monadWriterT2 = monadWriterT1(Monad0);\n        return {\n            throwError: function (e) {\n                return lift1(throwError(e));\n            },\n            Monad0: function () {\n                return monadWriterT2;\n            }\n        };\n    };\n};\nvar monadErrorWriterT = function (dictMonoid) {\n    var monadThrowWriterT1 = monadThrowWriterT(dictMonoid);\n    return function (dictMonadError) {\n        var catchError = Control_Monad_Error_Class.catchError(dictMonadError);\n        var monadThrowWriterT2 = monadThrowWriterT1(dictMonadError.MonadThrow0());\n        return {\n            catchError: function (v) {\n                return function (h) {\n                    return catchError(v)(function (e) {\n                        var v1 = h(e);\n                        return v1;\n                    });\n                };\n            },\n            MonadThrow0: function () {\n                return monadThrowWriterT2;\n            }\n        };\n    };\n};\nvar monoidWriterT = function (dictApplicative) {\n    var semigroupWriterT1 = semigroupWriterT(dictApplicative.Apply0());\n    return function (dictMonoid) {\n        var pure = Control_Applicative.pure(applicativeWriterT(dictMonoid)(dictApplicative));\n        var semigroupWriterT2 = semigroupWriterT1(dictMonoid.Semigroup0());\n        return function (dictMonoid1) {\n            var semigroupWriterT3 = semigroupWriterT2(dictMonoid1.Semigroup0());\n            return {\n                mempty: pure(Data_Monoid.mempty(dictMonoid1)),\n                Semigroup0: function () {\n                    return semigroupWriterT3;\n                }\n            };\n        };\n    };\n};\nvar altWriterT = function (dictAlt) {\n    var alt = Control_Alt.alt(dictAlt);\n    var functorWriterT1 = functorWriterT(dictAlt.Functor0());\n    return {\n        alt: function (v) {\n            return function (v1) {\n                return alt(v)(v1);\n            };\n        },\n        Functor0: function () {\n            return functorWriterT1;\n        }\n    };\n};\nvar plusWriterT = function (dictPlus) {\n    var altWriterT1 = altWriterT(dictPlus.Alt0());\n    return {\n        empty: Control_Plus.empty(dictPlus),\n        Alt0: function () {\n            return altWriterT1;\n        }\n    };\n};\nvar alternativeWriterT = function (dictMonoid) {\n    var applicativeWriterT1 = applicativeWriterT(dictMonoid);\n    return function (dictAlternative) {\n        var applicativeWriterT2 = applicativeWriterT1(dictAlternative.Applicative0());\n        var plusWriterT1 = plusWriterT(dictAlternative.Plus1());\n        return {\n            Applicative0: function () {\n                return applicativeWriterT2;\n            },\n            Plus1: function () {\n                return plusWriterT1;\n            }\n        };\n    };\n};\nvar monadPlusWriterT = function (dictMonoid) {\n    var monadWriterT1 = monadWriterT(dictMonoid);\n    var alternativeWriterT1 = alternativeWriterT(dictMonoid);\n    return function (dictMonadPlus) {\n        var monadWriterT2 = monadWriterT1(dictMonadPlus.Monad0());\n        var alternativeWriterT2 = alternativeWriterT1(dictMonadPlus.Alternative1());\n        return {\n            Monad0: function () {\n                return monadWriterT2;\n            },\n            Alternative1: function () {\n                return alternativeWriterT2;\n            }\n        };\n    };\n};\nexport {\n    WriterT,\n    runWriterT,\n    execWriterT,\n    mapWriterT,\n    newtypeWriterT,\n    functorWriterT,\n    applyWriterT,\n    applicativeWriterT,\n    altWriterT,\n    plusWriterT,\n    alternativeWriterT,\n    bindWriterT,\n    monadWriterT,\n    monadRecWriterT,\n    monadPlusWriterT,\n    monadTransWriterT,\n    monadEffectWriter,\n    monadContWriterT,\n    monadThrowWriterT,\n    monadErrorWriterT,\n    monadAskWriterT,\n    monadReaderWriterT,\n    monadStateWriterT,\n    monadTellWriterT,\n    monadWriterWriterT,\n    semigroupWriterT,\n    monoidWriterT\n};\nexport {\n    lift\n} from \"../Control.Monad.Trans.Class/index.js\";\nexport {\n    censor,\n    listen,\n    listens,\n    pass,\n    tell\n} from \"../Control.Monad.Writer.Class/index.js\";\n", "// Generated by purs version 0.15.15\nimport * as Control_Category from \"../Control.Category/index.js\";\nimport * as Data_Newtype from \"../Data.Newtype/index.js\";\nvar identity = /* #__PURE__ */ Control_Category.identity(Control_Category.categoryFn);\nvar wrap = /* #__PURE__ */ Data_Newtype.wrap();\nvar unwrap = /* #__PURE__ */ Data_Newtype.unwrap();\nvar profunctorFn = {\n    dimap: function (a2b) {\n        return function (c2d) {\n            return function (b2c) {\n                return function ($18) {\n                    return c2d(b2c(a2b($18)));\n                };\n            };\n        };\n    }\n};\nvar dimap = function (dict) {\n    return dict.dimap;\n};\nvar lcmap = function (dictProfunctor) {\n    var dimap1 = dimap(dictProfunctor);\n    return function (a2b) {\n        return dimap1(a2b)(identity);\n    };\n};\nvar rmap = function (dictProfunctor) {\n    var dimap1 = dimap(dictProfunctor);\n    return function (b2c) {\n        return dimap1(identity)(b2c);\n    };\n};\nvar unwrapIso = function (dictProfunctor) {\n    var dimap1 = dimap(dictProfunctor);\n    return function () {\n        return dimap1(wrap)(unwrap);\n    };\n};\nvar wrapIso = function (dictProfunctor) {\n    var dimap1 = dimap(dictProfunctor);\n    return function () {\n        return function (v) {\n            return dimap1(unwrap)(wrap);\n        };\n    };\n};\nvar arr = function (dictCategory) {\n    var identity1 = Control_Category.identity(dictCategory);\n    return function (dictProfunctor) {\n        var rmap1 = rmap(dictProfunctor);\n        return function (f) {\n            return rmap1(f)(identity1);\n        };\n    };\n};\nexport {\n    dimap,\n    lcmap,\n    rmap,\n    arr,\n    unwrapIso,\n    wrapIso,\n    profunctorFn\n};\n", "// Generated by purs version 0.15.15\nimport * as Control_Applicative from \"../Control.Applicative/index.js\";\nimport * as Control_Bind from \"../Control.Bind/index.js\";\nimport * as Control_Monad_Cont_Trans from \"../Control.Monad.Cont.Trans/index.js\";\nimport * as Control_Monad_Except_Trans from \"../Control.Monad.Except.Trans/index.js\";\nimport * as Control_Monad_Maybe_Trans from \"../Control.Monad.Maybe.Trans/index.js\";\nimport * as Control_Monad_Reader_Trans from \"../Control.Monad.Reader.Trans/index.js\";\nimport * as Control_Monad_Writer_Trans from \"../Control.Monad.Writer.Trans/index.js\";\nimport * as Data_Either from \"../Data.Either/index.js\";\nimport * as Data_Functor from \"../Data.Functor/index.js\";\nimport * as Data_Functor_Compose from \"../Data.Functor.Compose/index.js\";\nimport * as Data_Functor_Costar from \"../Data.Functor.Costar/index.js\";\nimport * as Data_Maybe from \"../Data.Maybe/index.js\";\nimport * as Data_Profunctor_Star from \"../Data.Profunctor.Star/index.js\";\nimport * as Data_Unit from \"../Data.Unit/index.js\";\nimport * as Effect_Class from \"../Effect.Class/index.js\";\nimport * as Effect_Ref from \"../Effect.Ref/index.js\";\nvar discard = /* #__PURE__ */ Control_Bind.discard(Control_Bind.discardUnit);\nvar ParCont = function (x) {\n    return x;\n};\nvar sequential = function (dict) {\n    return dict.sequential;\n};\nvar parallel = function (dict) {\n    return dict.parallel;\n};\nvar newtypeParCont = {\n    Coercible0: function () {\n        return undefined;\n    }\n};\nvar monadParWriterT = function (dictMonoid) {\n    var applyWriterT = Control_Monad_Writer_Trans.applyWriterT(dictMonoid.Semigroup0());\n    return function (dictParallel) {\n        var applyWriterT1 = applyWriterT(dictParallel.Apply0());\n        var applyWriterT2 = applyWriterT(dictParallel.Apply1());\n        return {\n            parallel: Control_Monad_Writer_Trans.mapWriterT(parallel(dictParallel)),\n            sequential: Control_Monad_Writer_Trans.mapWriterT(sequential(dictParallel)),\n            Apply0: function () {\n                return applyWriterT1;\n            },\n            Apply1: function () {\n                return applyWriterT2;\n            }\n        };\n    };\n};\nvar monadParStar = function (dictParallel) {\n    var parallel1 = parallel(dictParallel);\n    var sequential1 = sequential(dictParallel);\n    var applyStar = Data_Profunctor_Star.applyStar(dictParallel.Apply0());\n    var applyStar1 = Data_Profunctor_Star.applyStar(dictParallel.Apply1());\n    return {\n        parallel: function (v) {\n            return function ($124) {\n                return parallel1(v($124));\n            };\n        },\n        sequential: function (v) {\n            return function ($125) {\n                return sequential1(v($125));\n            };\n        },\n        Apply0: function () {\n            return applyStar;\n        },\n        Apply1: function () {\n            return applyStar1;\n        }\n    };\n};\nvar monadParReaderT = function (dictParallel) {\n    var applyReaderT = Control_Monad_Reader_Trans.applyReaderT(dictParallel.Apply0());\n    var applyReaderT1 = Control_Monad_Reader_Trans.applyReaderT(dictParallel.Apply1());\n    return {\n        parallel: Control_Monad_Reader_Trans.mapReaderT(parallel(dictParallel)),\n        sequential: Control_Monad_Reader_Trans.mapReaderT(sequential(dictParallel)),\n        Apply0: function () {\n            return applyReaderT;\n        },\n        Apply1: function () {\n            return applyReaderT1;\n        }\n    };\n};\nvar monadParMaybeT = function (dictParallel) {\n    var parallel1 = parallel(dictParallel);\n    var sequential1 = sequential(dictParallel);\n    var applyCompose = Data_Functor_Compose.applyCompose(dictParallel.Apply1())(Data_Maybe.applyMaybe);\n    return function (dictMonad) {\n        var applyMaybeT = Control_Monad_Maybe_Trans.applyMaybeT(dictMonad);\n        return {\n            parallel: function (v) {\n                return parallel1(v);\n            },\n            sequential: function (v) {\n                return sequential1(v);\n            },\n            Apply0: function () {\n                return applyMaybeT;\n            },\n            Apply1: function () {\n                return applyCompose;\n            }\n        };\n    };\n};\nvar monadParExceptT = function (dictParallel) {\n    var parallel1 = parallel(dictParallel);\n    var sequential1 = sequential(dictParallel);\n    var applyCompose = Data_Functor_Compose.applyCompose(dictParallel.Apply1())(Data_Either.applyEither);\n    return function (dictMonad) {\n        var applyExceptT = Control_Monad_Except_Trans.applyExceptT(dictMonad);\n        return {\n            parallel: function (v) {\n                return parallel1(v);\n            },\n            sequential: function (v) {\n                return sequential1(v);\n            },\n            Apply0: function () {\n                return applyExceptT;\n            },\n            Apply1: function () {\n                return applyCompose;\n            }\n        };\n    };\n};\nvar monadParCostar = function (dictParallel) {\n    var sequential1 = sequential(dictParallel);\n    var parallel1 = parallel(dictParallel);\n    return {\n        parallel: function (v) {\n            return function ($126) {\n                return v(sequential1($126));\n            };\n        },\n        sequential: function (v) {\n            return function ($127) {\n                return v(parallel1($127));\n            };\n        },\n        Apply0: function () {\n            return Data_Functor_Costar.applyCostar;\n        },\n        Apply1: function () {\n            return Data_Functor_Costar.applyCostar;\n        }\n    };\n};\nvar monadParParCont = function (dictMonadEffect) {\n    var applyContT = Control_Monad_Cont_Trans.applyContT(((dictMonadEffect.Monad0()).Bind1()).Apply0());\n    return {\n        parallel: ParCont,\n        sequential: function (v) {\n            return v;\n        },\n        Apply0: function () {\n            return applyContT;\n        },\n        Apply1: function () {\n            return applyParCont(dictMonadEffect);\n        }\n    };\n};\nvar functorParCont = function (dictMonadEffect) {\n    var map = Data_Functor.map(Control_Monad_Cont_Trans.functorContT((((dictMonadEffect.Monad0()).Bind1()).Apply0()).Functor0()));\n    return {\n        map: function (f) {\n            var $128 = parallel(monadParParCont(dictMonadEffect));\n            var $129 = map(f);\n            var $130 = sequential(monadParParCont(dictMonadEffect));\n            return function ($131) {\n                return $128($129($130($131)));\n            };\n        }\n    };\n};\nvar applyParCont = function (dictMonadEffect) {\n    var Bind1 = (dictMonadEffect.Monad0()).Bind1();\n    var bind = Control_Bind.bind(Bind1);\n    var liftEffect = Effect_Class.liftEffect(dictMonadEffect);\n    var discard1 = discard(Bind1);\n    return {\n        apply: function (v) {\n            return function (v1) {\n                return function (k) {\n                    return bind(liftEffect(Effect_Ref[\"new\"](Data_Maybe.Nothing.value)))(function (ra) {\n                        return bind(liftEffect(Effect_Ref[\"new\"](Data_Maybe.Nothing.value)))(function (rb) {\n                            return discard1(Control_Monad_Cont_Trans.runContT(v)(function (a) {\n                                return bind(liftEffect(Effect_Ref.read(rb)))(function (mb) {\n                                    if (mb instanceof Data_Maybe.Nothing) {\n                                        return liftEffect(Effect_Ref.write(new Data_Maybe.Just(a))(ra));\n                                    };\n                                    if (mb instanceof Data_Maybe.Just) {\n                                        return k(a(mb.value0));\n                                    };\n                                    throw new Error(\"Failed pattern match at Control.Parallel.Class (line 83, column 7 - line 85, column 26): \" + [ mb.constructor.name ]);\n                                });\n                            }))(function () {\n                                return Control_Monad_Cont_Trans.runContT(v1)(function (b) {\n                                    return bind(liftEffect(Effect_Ref.read(ra)))(function (ma) {\n                                        if (ma instanceof Data_Maybe.Nothing) {\n                                            return liftEffect(Effect_Ref.write(new Data_Maybe.Just(b))(rb));\n                                        };\n                                        if (ma instanceof Data_Maybe.Just) {\n                                            return k(ma.value0(b));\n                                        };\n                                        throw new Error(\"Failed pattern match at Control.Parallel.Class (line 89, column 7 - line 91, column 26): \" + [ ma.constructor.name ]);\n                                    });\n                                });\n                            });\n                        });\n                    });\n                };\n            };\n        },\n        Functor0: function () {\n            return functorParCont(dictMonadEffect);\n        }\n    };\n};\nvar applicativeParCont = function (dictMonadEffect) {\n    var applyParCont1 = applyParCont(dictMonadEffect);\n    return {\n        pure: (function () {\n            var $132 = parallel(monadParParCont(dictMonadEffect));\n            var $133 = Control_Applicative.pure(Control_Monad_Cont_Trans.applicativeContT((dictMonadEffect.Monad0()).Applicative0()));\n            return function ($134) {\n                return $132($133($134));\n            };\n        })(),\n        Apply0: function () {\n            return applyParCont1;\n        }\n    };\n};\nvar altParCont = function (dictMonadEffect) {\n    var Monad0 = dictMonadEffect.Monad0();\n    var Bind1 = Monad0.Bind1();\n    var bind = Control_Bind.bind(Bind1);\n    var liftEffect = Effect_Class.liftEffect(dictMonadEffect);\n    var discard1 = discard(Bind1);\n    var pure = Control_Applicative.pure(Monad0.Applicative0());\n    var functorParCont1 = functorParCont(dictMonadEffect);\n    return {\n        alt: function (v) {\n            return function (v1) {\n                return function (k) {\n                    return bind(liftEffect(Effect_Ref[\"new\"](false)))(function (done) {\n                        return discard1(Control_Monad_Cont_Trans.runContT(v)(function (a) {\n                            return bind(liftEffect(Effect_Ref.read(done)))(function (b) {\n                                if (b) {\n                                    return pure(Data_Unit.unit);\n                                };\n                                return discard1(liftEffect(Effect_Ref.write(true)(done)))(function () {\n                                    return k(a);\n                                });\n                            });\n                        }))(function () {\n                            return Control_Monad_Cont_Trans.runContT(v1)(function (a) {\n                                return bind(liftEffect(Effect_Ref.read(done)))(function (b) {\n                                    if (b) {\n                                        return pure(Data_Unit.unit);\n                                    };\n                                    return discard1(liftEffect(Effect_Ref.write(true)(done)))(function () {\n                                        return k(a);\n                                    });\n                                });\n                            });\n                        });\n                    });\n                };\n            };\n        },\n        Functor0: function () {\n            return functorParCont1;\n        }\n    };\n};\nvar plusParCont = function (dictMonadEffect) {\n    var pure = Control_Applicative.pure((dictMonadEffect.Monad0()).Applicative0());\n    var altParCont1 = altParCont(dictMonadEffect);\n    return {\n        empty: function (v) {\n            return pure(Data_Unit.unit);\n        },\n        Alt0: function () {\n            return altParCont1;\n        }\n    };\n};\nvar alternativeParCont = function (dictMonadEffect) {\n    var applicativeParCont1 = applicativeParCont(dictMonadEffect);\n    var plusParCont1 = plusParCont(dictMonadEffect);\n    return {\n        Applicative0: function () {\n            return applicativeParCont1;\n        },\n        Plus1: function () {\n            return plusParCont1;\n        }\n    };\n};\nexport {\n    parallel,\n    sequential,\n    ParCont,\n    monadParExceptT,\n    monadParReaderT,\n    monadParWriterT,\n    monadParMaybeT,\n    monadParStar,\n    monadParCostar,\n    newtypeParCont,\n    functorParCont,\n    applyParCont,\n    applicativeParCont,\n    altParCont,\n    plusParCont,\n    alternativeParCont,\n    monadParParCont\n};\n", "export const foldrArray = function (f) {\n  return function (init) {\n    return function (xs) {\n      var acc = init;\n      var len = xs.length;\n      for (var i = len - 1; i >= 0; i--) {\n        acc = f(xs[i])(acc);\n      }\n      return acc;\n    };\n  };\n};\n\nexport const foldlArray = function (f) {\n  return function (init) {\n    return function (xs) {\n      var acc = init;\n      var len = xs.length;\n      for (var i = 0; i < len; i++) {\n        acc = f(acc)(xs[i]);\n      }\n      return acc;\n    };\n  };\n};\n", "// Generated by purs version 0.15.15\nimport * as Control_Category from \"../Control.Category/index.js\";\nimport * as Data_Either from \"../Data.Either/index.js\";\nimport * as Data_Tuple from \"../Data.Tuple/index.js\";\nvar identity = /* #__PURE__ */ Control_Category.identity(Control_Category.categoryFn);\nvar bimap = function (dict) {\n    return dict.bimap;\n};\nvar lmap = function (dictBifunctor) {\n    var bimap1 = bimap(dictBifunctor);\n    return function (f) {\n        return bimap1(f)(identity);\n    };\n};\nvar rmap = function (dictBifunctor) {\n    return bimap(dictBifunctor)(identity);\n};\nvar bifunctorTuple = {\n    bimap: function (f) {\n        return function (g) {\n            return function (v) {\n                return new Data_Tuple.Tuple(f(v.value0), g(v.value1));\n            };\n        };\n    }\n};\nvar bifunctorEither = {\n    bimap: function (v) {\n        return function (v1) {\n            return function (v2) {\n                if (v2 instanceof Data_Either.Left) {\n                    return new Data_Either.Left(v(v2.value0));\n                };\n                if (v2 instanceof Data_Either.Right) {\n                    return new Data_Either.Right(v1(v2.value0));\n                };\n                throw new Error(\"Failed pattern match at Data.Bifunctor (line 32, column 1 - line 34, column 36): \" + [ v.constructor.name, v1.constructor.name, v2.constructor.name ]);\n            };\n        };\n    }\n};\nvar bifunctorConst = {\n    bimap: function (f) {\n        return function (v) {\n            return function (v1) {\n                return f(v1);\n            };\n        };\n    }\n};\nexport {\n    bimap,\n    lmap,\n    rmap,\n    bifunctorEither,\n    bifunctorTuple,\n    bifunctorConst\n};\n", "// Generated by purs version 0.15.15\nimport * as $foreign from \"./foreign.js\";\nimport * as Control_Alt from \"../Control.Alt/index.js\";\nimport * as Control_Applicative from \"../Control.Applicative/index.js\";\nimport * as Control_Apply from \"../Control.Apply/index.js\";\nimport * as Control_Bind from \"../Control.Bind/index.js\";\nimport * as Control_Category from \"../Control.Category/index.js\";\nimport * as Control_Plus from \"../Control.Plus/index.js\";\nimport * as Data_Either from \"../Data.Either/index.js\";\nimport * as Data_Eq from \"../Data.Eq/index.js\";\nimport * as Data_Function from \"../Data.Function/index.js\";\nimport * as Data_Functor_Coproduct from \"../Data.Functor.Coproduct/index.js\";\nimport * as Data_HeytingAlgebra from \"../Data.HeytingAlgebra/index.js\";\nimport * as Data_Maybe from \"../Data.Maybe/index.js\";\nimport * as Data_Maybe_First from \"../Data.Maybe.First/index.js\";\nimport * as Data_Monoid from \"../Data.Monoid/index.js\";\nimport * as Data_Monoid_Conj from \"../Data.Monoid.Conj/index.js\";\nimport * as Data_Monoid_Disj from \"../Data.Monoid.Disj/index.js\";\nimport * as Data_Monoid_Dual from \"../Data.Monoid.Dual/index.js\";\nimport * as Data_Monoid_Endo from \"../Data.Monoid.Endo/index.js\";\nimport * as Data_Newtype from \"../Data.Newtype/index.js\";\nimport * as Data_Ord from \"../Data.Ord/index.js\";\nimport * as Data_Ordering from \"../Data.Ordering/index.js\";\nimport * as Data_Semigroup from \"../Data.Semigroup/index.js\";\nimport * as Data_Semiring from \"../Data.Semiring/index.js\";\nimport * as Data_Unit from \"../Data.Unit/index.js\";\nvar identity = /* #__PURE__ */ Control_Category.identity(Control_Category.categoryFn);\nvar eq1 = /* #__PURE__ */ Data_Eq.eq(Data_Ordering.eqOrdering);\nvar unwrap = /* #__PURE__ */ Data_Newtype.unwrap();\nvar monoidEndo = /* #__PURE__ */ Data_Monoid_Endo.monoidEndo(Control_Category.categoryFn);\nvar monoidDual = /* #__PURE__ */ Data_Monoid_Dual.monoidDual(monoidEndo);\nvar alaF = /* #__PURE__ */ Data_Newtype.alaF()()()();\nvar foldr = function (dict) {\n    return dict.foldr;\n};\nvar indexr = function (dictFoldable) {\n    var foldr2 = foldr(dictFoldable);\n    return function (idx) {\n        var go = function (a) {\n            return function (cursor) {\n                if (cursor.elem instanceof Data_Maybe.Just) {\n                    return cursor;\n                };\n                var $292 = cursor.pos === idx;\n                if ($292) {\n                    return {\n                        elem: new Data_Maybe.Just(a),\n                        pos: cursor.pos\n                    };\n                };\n                return {\n                    pos: cursor.pos + 1 | 0,\n                    elem: cursor.elem\n                };\n            };\n        };\n        var $451 = foldr2(go)({\n            elem: Data_Maybe.Nothing.value,\n            pos: 0\n        });\n        return function ($452) {\n            return (function (v) {\n                return v.elem;\n            })($451($452));\n        };\n    };\n};\nvar $$null = function (dictFoldable) {\n    return foldr(dictFoldable)(function (v) {\n        return function (v1) {\n            return false;\n        };\n    })(true);\n};\nvar oneOf = function (dictFoldable) {\n    var foldr2 = foldr(dictFoldable);\n    return function (dictPlus) {\n        return foldr2(Control_Alt.alt(dictPlus.Alt0()))(Control_Plus.empty(dictPlus));\n    };\n};\nvar oneOfMap = function (dictFoldable) {\n    var foldr2 = foldr(dictFoldable);\n    return function (dictPlus) {\n        var alt = Control_Alt.alt(dictPlus.Alt0());\n        var empty = Control_Plus.empty(dictPlus);\n        return function (f) {\n            return foldr2(function ($453) {\n                return alt(f($453));\n            })(empty);\n        };\n    };\n};\nvar traverse_ = function (dictApplicative) {\n    var applySecond = Control_Apply.applySecond(dictApplicative.Apply0());\n    var pure = Control_Applicative.pure(dictApplicative);\n    return function (dictFoldable) {\n        var foldr2 = foldr(dictFoldable);\n        return function (f) {\n            return foldr2(function ($454) {\n                return applySecond(f($454));\n            })(pure(Data_Unit.unit));\n        };\n    };\n};\nvar for_ = function (dictApplicative) {\n    var traverse_1 = traverse_(dictApplicative);\n    return function (dictFoldable) {\n        return Data_Function.flip(traverse_1(dictFoldable));\n    };\n};\nvar sequence_ = function (dictApplicative) {\n    var traverse_1 = traverse_(dictApplicative);\n    return function (dictFoldable) {\n        return traverse_1(dictFoldable)(identity);\n    };\n};\nvar foldl = function (dict) {\n    return dict.foldl;\n};\nvar indexl = function (dictFoldable) {\n    var foldl2 = foldl(dictFoldable);\n    return function (idx) {\n        var go = function (cursor) {\n            return function (a) {\n                if (cursor.elem instanceof Data_Maybe.Just) {\n                    return cursor;\n                };\n                var $296 = cursor.pos === idx;\n                if ($296) {\n                    return {\n                        elem: new Data_Maybe.Just(a),\n                        pos: cursor.pos\n                    };\n                };\n                return {\n                    pos: cursor.pos + 1 | 0,\n                    elem: cursor.elem\n                };\n            };\n        };\n        var $455 = foldl2(go)({\n            elem: Data_Maybe.Nothing.value,\n            pos: 0\n        });\n        return function ($456) {\n            return (function (v) {\n                return v.elem;\n            })($455($456));\n        };\n    };\n};\nvar intercalate = function (dictFoldable) {\n    var foldl2 = foldl(dictFoldable);\n    return function (dictMonoid) {\n        var append = Data_Semigroup.append(dictMonoid.Semigroup0());\n        var mempty = Data_Monoid.mempty(dictMonoid);\n        return function (sep) {\n            return function (xs) {\n                var go = function (v) {\n                    return function (v1) {\n                        if (v.init) {\n                            return {\n                                init: false,\n                                acc: v1\n                            };\n                        };\n                        return {\n                            init: false,\n                            acc: append(v.acc)(append(sep)(v1))\n                        };\n                    };\n                };\n                return (foldl2(go)({\n                    init: true,\n                    acc: mempty\n                })(xs)).acc;\n            };\n        };\n    };\n};\nvar length = function (dictFoldable) {\n    var foldl2 = foldl(dictFoldable);\n    return function (dictSemiring) {\n        var add1 = Data_Semiring.add(dictSemiring);\n        var one = Data_Semiring.one(dictSemiring);\n        return foldl2(function (c) {\n            return function (v) {\n                return add1(one)(c);\n            };\n        })(Data_Semiring.zero(dictSemiring));\n    };\n};\nvar maximumBy = function (dictFoldable) {\n    var foldl2 = foldl(dictFoldable);\n    return function (cmp) {\n        var max$prime = function (v) {\n            return function (v1) {\n                if (v instanceof Data_Maybe.Nothing) {\n                    return new Data_Maybe.Just(v1);\n                };\n                if (v instanceof Data_Maybe.Just) {\n                    return new Data_Maybe.Just((function () {\n                        var $303 = eq1(cmp(v.value0)(v1))(Data_Ordering.GT.value);\n                        if ($303) {\n                            return v.value0;\n                        };\n                        return v1;\n                    })());\n                };\n                throw new Error(\"Failed pattern match at Data.Foldable (line 441, column 3 - line 441, column 27): \" + [ v.constructor.name, v1.constructor.name ]);\n            };\n        };\n        return foldl2(max$prime)(Data_Maybe.Nothing.value);\n    };\n};\nvar maximum = function (dictOrd) {\n    var compare = Data_Ord.compare(dictOrd);\n    return function (dictFoldable) {\n        return maximumBy(dictFoldable)(compare);\n    };\n};\nvar minimumBy = function (dictFoldable) {\n    var foldl2 = foldl(dictFoldable);\n    return function (cmp) {\n        var min$prime = function (v) {\n            return function (v1) {\n                if (v instanceof Data_Maybe.Nothing) {\n                    return new Data_Maybe.Just(v1);\n                };\n                if (v instanceof Data_Maybe.Just) {\n                    return new Data_Maybe.Just((function () {\n                        var $307 = eq1(cmp(v.value0)(v1))(Data_Ordering.LT.value);\n                        if ($307) {\n                            return v.value0;\n                        };\n                        return v1;\n                    })());\n                };\n                throw new Error(\"Failed pattern match at Data.Foldable (line 454, column 3 - line 454, column 27): \" + [ v.constructor.name, v1.constructor.name ]);\n            };\n        };\n        return foldl2(min$prime)(Data_Maybe.Nothing.value);\n    };\n};\nvar minimum = function (dictOrd) {\n    var compare = Data_Ord.compare(dictOrd);\n    return function (dictFoldable) {\n        return minimumBy(dictFoldable)(compare);\n    };\n};\nvar product = function (dictFoldable) {\n    var foldl2 = foldl(dictFoldable);\n    return function (dictSemiring) {\n        return foldl2(Data_Semiring.mul(dictSemiring))(Data_Semiring.one(dictSemiring));\n    };\n};\nvar sum = function (dictFoldable) {\n    var foldl2 = foldl(dictFoldable);\n    return function (dictSemiring) {\n        return foldl2(Data_Semiring.add(dictSemiring))(Data_Semiring.zero(dictSemiring));\n    };\n};\nvar foldableTuple = {\n    foldr: function (f) {\n        return function (z) {\n            return function (v) {\n                return f(v.value1)(z);\n            };\n        };\n    },\n    foldl: function (f) {\n        return function (z) {\n            return function (v) {\n                return f(z)(v.value1);\n            };\n        };\n    },\n    foldMap: function (dictMonoid) {\n        return function (f) {\n            return function (v) {\n                return f(v.value1);\n            };\n        };\n    }\n};\nvar foldableMultiplicative = {\n    foldr: function (f) {\n        return function (z) {\n            return function (v) {\n                return f(v)(z);\n            };\n        };\n    },\n    foldl: function (f) {\n        return function (z) {\n            return function (v) {\n                return f(z)(v);\n            };\n        };\n    },\n    foldMap: function (dictMonoid) {\n        return function (f) {\n            return function (v) {\n                return f(v);\n            };\n        };\n    }\n};\nvar foldableMaybe = {\n    foldr: function (v) {\n        return function (v1) {\n            return function (v2) {\n                if (v2 instanceof Data_Maybe.Nothing) {\n                    return v1;\n                };\n                if (v2 instanceof Data_Maybe.Just) {\n                    return v(v2.value0)(v1);\n                };\n                throw new Error(\"Failed pattern match at Data.Foldable (line 138, column 1 - line 144, column 27): \" + [ v.constructor.name, v1.constructor.name, v2.constructor.name ]);\n            };\n        };\n    },\n    foldl: function (v) {\n        return function (v1) {\n            return function (v2) {\n                if (v2 instanceof Data_Maybe.Nothing) {\n                    return v1;\n                };\n                if (v2 instanceof Data_Maybe.Just) {\n                    return v(v1)(v2.value0);\n                };\n                throw new Error(\"Failed pattern match at Data.Foldable (line 138, column 1 - line 144, column 27): \" + [ v.constructor.name, v1.constructor.name, v2.constructor.name ]);\n            };\n        };\n    },\n    foldMap: function (dictMonoid) {\n        var mempty = Data_Monoid.mempty(dictMonoid);\n        return function (v) {\n            return function (v1) {\n                if (v1 instanceof Data_Maybe.Nothing) {\n                    return mempty;\n                };\n                if (v1 instanceof Data_Maybe.Just) {\n                    return v(v1.value0);\n                };\n                throw new Error(\"Failed pattern match at Data.Foldable (line 138, column 1 - line 144, column 27): \" + [ v.constructor.name, v1.constructor.name ]);\n            };\n        };\n    }\n};\nvar foldr1 = /* #__PURE__ */ foldr(foldableMaybe);\nvar foldl1 = /* #__PURE__ */ foldl(foldableMaybe);\nvar foldableIdentity = {\n    foldr: function (f) {\n        return function (z) {\n            return function (v) {\n                return f(v)(z);\n            };\n        };\n    },\n    foldl: function (f) {\n        return function (z) {\n            return function (v) {\n                return f(z)(v);\n            };\n        };\n    },\n    foldMap: function (dictMonoid) {\n        return function (f) {\n            return function (v) {\n                return f(v);\n            };\n        };\n    }\n};\nvar foldableEither = {\n    foldr: function (v) {\n        return function (v1) {\n            return function (v2) {\n                if (v2 instanceof Data_Either.Left) {\n                    return v1;\n                };\n                if (v2 instanceof Data_Either.Right) {\n                    return v(v2.value0)(v1);\n                };\n                throw new Error(\"Failed pattern match at Data.Foldable (line 181, column 1 - line 187, column 28): \" + [ v.constructor.name, v1.constructor.name, v2.constructor.name ]);\n            };\n        };\n    },\n    foldl: function (v) {\n        return function (v1) {\n            return function (v2) {\n                if (v2 instanceof Data_Either.Left) {\n                    return v1;\n                };\n                if (v2 instanceof Data_Either.Right) {\n                    return v(v1)(v2.value0);\n                };\n                throw new Error(\"Failed pattern match at Data.Foldable (line 181, column 1 - line 187, column 28): \" + [ v.constructor.name, v1.constructor.name, v2.constructor.name ]);\n            };\n        };\n    },\n    foldMap: function (dictMonoid) {\n        var mempty = Data_Monoid.mempty(dictMonoid);\n        return function (v) {\n            return function (v1) {\n                if (v1 instanceof Data_Either.Left) {\n                    return mempty;\n                };\n                if (v1 instanceof Data_Either.Right) {\n                    return v(v1.value0);\n                };\n                throw new Error(\"Failed pattern match at Data.Foldable (line 181, column 1 - line 187, column 28): \" + [ v.constructor.name, v1.constructor.name ]);\n            };\n        };\n    }\n};\nvar foldableDual = {\n    foldr: function (f) {\n        return function (z) {\n            return function (v) {\n                return f(v)(z);\n            };\n        };\n    },\n    foldl: function (f) {\n        return function (z) {\n            return function (v) {\n                return f(z)(v);\n            };\n        };\n    },\n    foldMap: function (dictMonoid) {\n        return function (f) {\n            return function (v) {\n                return f(v);\n            };\n        };\n    }\n};\nvar foldableDisj = {\n    foldr: function (f) {\n        return function (z) {\n            return function (v) {\n                return f(v)(z);\n            };\n        };\n    },\n    foldl: function (f) {\n        return function (z) {\n            return function (v) {\n                return f(z)(v);\n            };\n        };\n    },\n    foldMap: function (dictMonoid) {\n        return function (f) {\n            return function (v) {\n                return f(v);\n            };\n        };\n    }\n};\nvar foldableConst = {\n    foldr: function (v) {\n        return function (z) {\n            return function (v1) {\n                return z;\n            };\n        };\n    },\n    foldl: function (v) {\n        return function (z) {\n            return function (v1) {\n                return z;\n            };\n        };\n    },\n    foldMap: function (dictMonoid) {\n        var mempty = Data_Monoid.mempty(dictMonoid);\n        return function (v) {\n            return function (v1) {\n                return mempty;\n            };\n        };\n    }\n};\nvar foldableConj = {\n    foldr: function (f) {\n        return function (z) {\n            return function (v) {\n                return f(v)(z);\n            };\n        };\n    },\n    foldl: function (f) {\n        return function (z) {\n            return function (v) {\n                return f(z)(v);\n            };\n        };\n    },\n    foldMap: function (dictMonoid) {\n        return function (f) {\n            return function (v) {\n                return f(v);\n            };\n        };\n    }\n};\nvar foldableAdditive = {\n    foldr: function (f) {\n        return function (z) {\n            return function (v) {\n                return f(v)(z);\n            };\n        };\n    },\n    foldl: function (f) {\n        return function (z) {\n            return function (v) {\n                return f(z)(v);\n            };\n        };\n    },\n    foldMap: function (dictMonoid) {\n        return function (f) {\n            return function (v) {\n                return f(v);\n            };\n        };\n    }\n};\nvar foldMapDefaultR = function (dictFoldable) {\n    var foldr2 = foldr(dictFoldable);\n    return function (dictMonoid) {\n        var append = Data_Semigroup.append(dictMonoid.Semigroup0());\n        var mempty = Data_Monoid.mempty(dictMonoid);\n        return function (f) {\n            return foldr2(function (x) {\n                return function (acc) {\n                    return append(f(x))(acc);\n                };\n            })(mempty);\n        };\n    };\n};\nvar foldableArray = {\n    foldr: $foreign.foldrArray,\n    foldl: $foreign.foldlArray,\n    foldMap: function (dictMonoid) {\n        return foldMapDefaultR(foldableArray)(dictMonoid);\n    }\n};\nvar foldMapDefaultL = function (dictFoldable) {\n    var foldl2 = foldl(dictFoldable);\n    return function (dictMonoid) {\n        var append = Data_Semigroup.append(dictMonoid.Semigroup0());\n        var mempty = Data_Monoid.mempty(dictMonoid);\n        return function (f) {\n            return foldl2(function (acc) {\n                return function (x) {\n                    return append(acc)(f(x));\n                };\n            })(mempty);\n        };\n    };\n};\nvar foldMap = function (dict) {\n    return dict.foldMap;\n};\nvar foldMap1 = /* #__PURE__ */ foldMap(foldableMaybe);\nvar foldableApp = function (dictFoldable) {\n    var foldr2 = foldr(dictFoldable);\n    var foldl2 = foldl(dictFoldable);\n    var foldMap2 = foldMap(dictFoldable);\n    return {\n        foldr: function (f) {\n            return function (i) {\n                return function (v) {\n                    return foldr2(f)(i)(v);\n                };\n            };\n        },\n        foldl: function (f) {\n            return function (i) {\n                return function (v) {\n                    return foldl2(f)(i)(v);\n                };\n            };\n        },\n        foldMap: function (dictMonoid) {\n            var foldMap3 = foldMap2(dictMonoid);\n            return function (f) {\n                return function (v) {\n                    return foldMap3(f)(v);\n                };\n            };\n        }\n    };\n};\nvar foldableCompose = function (dictFoldable) {\n    var foldr2 = foldr(dictFoldable);\n    var foldl2 = foldl(dictFoldable);\n    var foldMap2 = foldMap(dictFoldable);\n    return function (dictFoldable1) {\n        var foldr3 = foldr(dictFoldable1);\n        var foldl3 = foldl(dictFoldable1);\n        var foldMap3 = foldMap(dictFoldable1);\n        return {\n            foldr: function (f) {\n                return function (i) {\n                    return function (v) {\n                        return foldr2(Data_Function.flip(foldr3(f)))(i)(v);\n                    };\n                };\n            },\n            foldl: function (f) {\n                return function (i) {\n                    return function (v) {\n                        return foldl2(foldl3(f))(i)(v);\n                    };\n                };\n            },\n            foldMap: function (dictMonoid) {\n                var foldMap4 = foldMap2(dictMonoid);\n                var foldMap5 = foldMap3(dictMonoid);\n                return function (f) {\n                    return function (v) {\n                        return foldMap4(foldMap5(f))(v);\n                    };\n                };\n            }\n        };\n    };\n};\nvar foldableCoproduct = function (dictFoldable) {\n    var foldr2 = foldr(dictFoldable);\n    var foldl2 = foldl(dictFoldable);\n    var foldMap2 = foldMap(dictFoldable);\n    return function (dictFoldable1) {\n        var foldr3 = foldr(dictFoldable1);\n        var foldl3 = foldl(dictFoldable1);\n        var foldMap3 = foldMap(dictFoldable1);\n        return {\n            foldr: function (f) {\n                return function (z) {\n                    return Data_Functor_Coproduct.coproduct(foldr2(f)(z))(foldr3(f)(z));\n                };\n            },\n            foldl: function (f) {\n                return function (z) {\n                    return Data_Functor_Coproduct.coproduct(foldl2(f)(z))(foldl3(f)(z));\n                };\n            },\n            foldMap: function (dictMonoid) {\n                var foldMap4 = foldMap2(dictMonoid);\n                var foldMap5 = foldMap3(dictMonoid);\n                return function (f) {\n                    return Data_Functor_Coproduct.coproduct(foldMap4(f))(foldMap5(f));\n                };\n            }\n        };\n    };\n};\nvar foldableFirst = {\n    foldr: function (f) {\n        return function (z) {\n            return function (v) {\n                return foldr1(f)(z)(v);\n            };\n        };\n    },\n    foldl: function (f) {\n        return function (z) {\n            return function (v) {\n                return foldl1(f)(z)(v);\n            };\n        };\n    },\n    foldMap: function (dictMonoid) {\n        var foldMap2 = foldMap1(dictMonoid);\n        return function (f) {\n            return function (v) {\n                return foldMap2(f)(v);\n            };\n        };\n    }\n};\nvar foldableLast = {\n    foldr: function (f) {\n        return function (z) {\n            return function (v) {\n                return foldr1(f)(z)(v);\n            };\n        };\n    },\n    foldl: function (f) {\n        return function (z) {\n            return function (v) {\n                return foldl1(f)(z)(v);\n            };\n        };\n    },\n    foldMap: function (dictMonoid) {\n        var foldMap2 = foldMap1(dictMonoid);\n        return function (f) {\n            return function (v) {\n                return foldMap2(f)(v);\n            };\n        };\n    }\n};\nvar foldableProduct = function (dictFoldable) {\n    var foldr2 = foldr(dictFoldable);\n    var foldl2 = foldl(dictFoldable);\n    var foldMap2 = foldMap(dictFoldable);\n    return function (dictFoldable1) {\n        var foldr3 = foldr(dictFoldable1);\n        var foldl3 = foldl(dictFoldable1);\n        var foldMap3 = foldMap(dictFoldable1);\n        return {\n            foldr: function (f) {\n                return function (z) {\n                    return function (v) {\n                        return foldr2(f)(foldr3(f)(z)(v.value1))(v.value0);\n                    };\n                };\n            },\n            foldl: function (f) {\n                return function (z) {\n                    return function (v) {\n                        return foldl3(f)(foldl2(f)(z)(v.value0))(v.value1);\n                    };\n                };\n            },\n            foldMap: function (dictMonoid) {\n                var append = Data_Semigroup.append(dictMonoid.Semigroup0());\n                var foldMap4 = foldMap2(dictMonoid);\n                var foldMap5 = foldMap3(dictMonoid);\n                return function (f) {\n                    return function (v) {\n                        return append(foldMap4(f)(v.value0))(foldMap5(f)(v.value1));\n                    };\n                };\n            }\n        };\n    };\n};\nvar foldlDefault = function (dictFoldable) {\n    var foldMap2 = foldMap(dictFoldable)(monoidDual);\n    return function (c) {\n        return function (u) {\n            return function (xs) {\n                return unwrap(unwrap(foldMap2((function () {\n                    var $457 = Data_Function.flip(c);\n                    return function ($458) {\n                        return Data_Monoid_Dual.Dual(Data_Monoid_Endo.Endo($457($458)));\n                    };\n                })())(xs)))(u);\n            };\n        };\n    };\n};\nvar foldrDefault = function (dictFoldable) {\n    var foldMap2 = foldMap(dictFoldable)(monoidEndo);\n    return function (c) {\n        return function (u) {\n            return function (xs) {\n                return unwrap(foldMap2(function ($459) {\n                    return Data_Monoid_Endo.Endo(c($459));\n                })(xs))(u);\n            };\n        };\n    };\n};\nvar lookup = function (dictFoldable) {\n    var foldMap2 = foldMap(dictFoldable)(Data_Maybe_First.monoidFirst);\n    return function (dictEq) {\n        var eq2 = Data_Eq.eq(dictEq);\n        return function (a) {\n            var $460 = foldMap2(function (v) {\n                var $444 = eq2(a)(v.value0);\n                if ($444) {\n                    return new Data_Maybe.Just(v.value1);\n                };\n                return Data_Maybe.Nothing.value;\n            });\n            return function ($461) {\n                return unwrap($460($461));\n            };\n        };\n    };\n};\nvar surroundMap = function (dictFoldable) {\n    var foldMap2 = foldMap(dictFoldable)(monoidEndo);\n    return function (dictSemigroup) {\n        var append = Data_Semigroup.append(dictSemigroup);\n        return function (d) {\n            return function (t) {\n                return function (f) {\n                    var joined = function (a) {\n                        return function (m) {\n                            return append(d)(append(t(a))(m));\n                        };\n                    };\n                    return unwrap(foldMap2(joined)(f))(d);\n                };\n            };\n        };\n    };\n};\nvar surround = function (dictFoldable) {\n    var surroundMap1 = surroundMap(dictFoldable);\n    return function (dictSemigroup) {\n        var surroundMap2 = surroundMap1(dictSemigroup);\n        return function (d) {\n            return surroundMap2(d)(identity);\n        };\n    };\n};\nvar foldM = function (dictFoldable) {\n    var foldl2 = foldl(dictFoldable);\n    return function (dictMonad) {\n        var bind = Control_Bind.bind(dictMonad.Bind1());\n        var pure = Control_Applicative.pure(dictMonad.Applicative0());\n        return function (f) {\n            return function (b0) {\n                return foldl2(function (b) {\n                    return function (a) {\n                        return bind(b)(Data_Function.flip(f)(a));\n                    };\n                })(pure(b0));\n            };\n        };\n    };\n};\nvar fold = function (dictFoldable) {\n    var foldMap2 = foldMap(dictFoldable);\n    return function (dictMonoid) {\n        return foldMap2(dictMonoid)(identity);\n    };\n};\nvar findMap = function (dictFoldable) {\n    var foldl2 = foldl(dictFoldable);\n    return function (p) {\n        var go = function (v) {\n            return function (v1) {\n                if (v instanceof Data_Maybe.Nothing) {\n                    return p(v1);\n                };\n                return v;\n            };\n        };\n        return foldl2(go)(Data_Maybe.Nothing.value);\n    };\n};\nvar find = function (dictFoldable) {\n    var foldl2 = foldl(dictFoldable);\n    return function (p) {\n        var go = function (v) {\n            return function (v1) {\n                if (v instanceof Data_Maybe.Nothing && p(v1)) {\n                    return new Data_Maybe.Just(v1);\n                };\n                return v;\n            };\n        };\n        return foldl2(go)(Data_Maybe.Nothing.value);\n    };\n};\nvar any = function (dictFoldable) {\n    var foldMap2 = foldMap(dictFoldable);\n    return function (dictHeytingAlgebra) {\n        return alaF(Data_Monoid_Disj.Disj)(foldMap2(Data_Monoid_Disj.monoidDisj(dictHeytingAlgebra)));\n    };\n};\nvar elem = function (dictFoldable) {\n    var any1 = any(dictFoldable)(Data_HeytingAlgebra.heytingAlgebraBoolean);\n    return function (dictEq) {\n        var $462 = Data_Eq.eq(dictEq);\n        return function ($463) {\n            return any1($462($463));\n        };\n    };\n};\nvar notElem = function (dictFoldable) {\n    var elem1 = elem(dictFoldable);\n    return function (dictEq) {\n        var elem2 = elem1(dictEq);\n        return function (x) {\n            var $464 = elem2(x);\n            return function ($465) {\n                return !$464($465);\n            };\n        };\n    };\n};\nvar or = function (dictFoldable) {\n    var any1 = any(dictFoldable);\n    return function (dictHeytingAlgebra) {\n        return any1(dictHeytingAlgebra)(identity);\n    };\n};\nvar all = function (dictFoldable) {\n    var foldMap2 = foldMap(dictFoldable);\n    return function (dictHeytingAlgebra) {\n        return alaF(Data_Monoid_Conj.Conj)(foldMap2(Data_Monoid_Conj.monoidConj(dictHeytingAlgebra)));\n    };\n};\nvar and = function (dictFoldable) {\n    var all1 = all(dictFoldable);\n    return function (dictHeytingAlgebra) {\n        return all1(dictHeytingAlgebra)(identity);\n    };\n};\nexport {\n    foldr,\n    foldl,\n    foldMap,\n    foldrDefault,\n    foldlDefault,\n    foldMapDefaultL,\n    foldMapDefaultR,\n    fold,\n    foldM,\n    traverse_,\n    for_,\n    sequence_,\n    oneOf,\n    oneOfMap,\n    intercalate,\n    surroundMap,\n    surround,\n    and,\n    or,\n    all,\n    any,\n    sum,\n    product,\n    elem,\n    notElem,\n    indexl,\n    indexr,\n    find,\n    findMap,\n    maximum,\n    maximumBy,\n    minimum,\n    minimumBy,\n    $$null as null,\n    length,\n    lookup,\n    foldableArray,\n    foldableMaybe,\n    foldableFirst,\n    foldableLast,\n    foldableAdditive,\n    foldableDual,\n    foldableDisj,\n    foldableConj,\n    foldableMultiplicative,\n    foldableEither,\n    foldableTuple,\n    foldableIdentity,\n    foldableConst,\n    foldableProduct,\n    foldableCoproduct,\n    foldableCompose,\n    foldableApp\n};\n", "// jshint maxparams: 3\n\nexport const traverseArrayImpl = (function () {\n  function array1(a) {\n    return [a];\n  }\n\n  function array2(a) {\n    return function (b) {\n      return [a, b];\n    };\n  }\n\n  function array3(a) {\n    return function (b) {\n      return function (c) {\n        return [a, b, c];\n      };\n    };\n  }\n\n  function concat2(xs) {\n    return function (ys) {\n      return xs.concat(ys);\n    };\n  }\n\n  return function (apply) {\n    return function (map) {\n      return function (pure) {\n        return function (f) {\n          return function (array) {\n            function go(bot, top) {\n              switch (top - bot) {\n              case 0: return pure([]);\n              case 1: return map(array1)(f(array[bot]));\n              case 2: return apply(map(array2)(f(array[bot])))(f(array[bot + 1]));\n              case 3: return apply(apply(map(array3)(f(array[bot])))(f(array[bot + 1])))(f(array[bot + 2]));\n              default:\n                // This slightly tricky pivot selection aims to produce two\n                // even-length partitions where possible.\n                var pivot = bot + Math.floor((top - bot) / 4) * 2;\n                return apply(map(concat2)(go(bot, pivot)))(go(pivot, top));\n              }\n            }\n            return go(0, array.length);\n          };\n        };\n      };\n    };\n  };\n})();\n", "// Generated by purs version 0.15.15\nimport * as $foreign from \"./foreign.js\";\nimport * as Control_Applicative from \"../Control.Applicative/index.js\";\nimport * as Control_Apply from \"../Control.Apply/index.js\";\nimport * as Control_Category from \"../Control.Category/index.js\";\nimport * as Data_Const from \"../Data.Const/index.js\";\nimport * as Data_Either from \"../Data.Either/index.js\";\nimport * as Data_Foldable from \"../Data.Foldable/index.js\";\nimport * as Data_Functor from \"../Data.Functor/index.js\";\nimport * as Data_Functor_App from \"../Data.Functor.App/index.js\";\nimport * as Data_Functor_Compose from \"../Data.Functor.Compose/index.js\";\nimport * as Data_Functor_Coproduct from \"../Data.Functor.Coproduct/index.js\";\nimport * as Data_Functor_Product from \"../Data.Functor.Product/index.js\";\nimport * as Data_Identity from \"../Data.Identity/index.js\";\nimport * as Data_Maybe from \"../Data.Maybe/index.js\";\nimport * as Data_Maybe_First from \"../Data.Maybe.First/index.js\";\nimport * as Data_Maybe_Last from \"../Data.Maybe.Last/index.js\";\nimport * as Data_Monoid_Additive from \"../Data.Monoid.Additive/index.js\";\nimport * as Data_Monoid_Conj from \"../Data.Monoid.Conj/index.js\";\nimport * as Data_Monoid_Disj from \"../Data.Monoid.Disj/index.js\";\nimport * as Data_Monoid_Dual from \"../Data.Monoid.Dual/index.js\";\nimport * as Data_Monoid_Multiplicative from \"../Data.Monoid.Multiplicative/index.js\";\nimport * as Data_Traversable_Accum from \"../Data.Traversable.Accum/index.js\";\nimport * as Data_Traversable_Accum_Internal from \"../Data.Traversable.Accum.Internal/index.js\";\nimport * as Data_Tuple from \"../Data.Tuple/index.js\";\nvar identity = /* #__PURE__ */ Control_Category.identity(Control_Category.categoryFn);\nvar traverse = function (dict) {\n    return dict.traverse;\n};\nvar traversableTuple = {\n    traverse: function (dictApplicative) {\n        var map = Data_Functor.map((dictApplicative.Apply0()).Functor0());\n        return function (f) {\n            return function (v) {\n                return map(Data_Tuple.Tuple.create(v.value0))(f(v.value1));\n            };\n        };\n    },\n    sequence: function (dictApplicative) {\n        var map = Data_Functor.map((dictApplicative.Apply0()).Functor0());\n        return function (v) {\n            return map(Data_Tuple.Tuple.create(v.value0))(v.value1);\n        };\n    },\n    Functor0: function () {\n        return Data_Tuple.functorTuple;\n    },\n    Foldable1: function () {\n        return Data_Foldable.foldableTuple;\n    }\n};\nvar traversableMultiplicative = {\n    traverse: function (dictApplicative) {\n        var map = Data_Functor.map((dictApplicative.Apply0()).Functor0());\n        return function (f) {\n            return function (v) {\n                return map(Data_Monoid_Multiplicative.Multiplicative)(f(v));\n            };\n        };\n    },\n    sequence: function (dictApplicative) {\n        var map = Data_Functor.map((dictApplicative.Apply0()).Functor0());\n        return function (v) {\n            return map(Data_Monoid_Multiplicative.Multiplicative)(v);\n        };\n    },\n    Functor0: function () {\n        return Data_Monoid_Multiplicative.functorMultiplicative;\n    },\n    Foldable1: function () {\n        return Data_Foldable.foldableMultiplicative;\n    }\n};\nvar traversableMaybe = {\n    traverse: function (dictApplicative) {\n        var pure = Control_Applicative.pure(dictApplicative);\n        var map = Data_Functor.map((dictApplicative.Apply0()).Functor0());\n        return function (v) {\n            return function (v1) {\n                if (v1 instanceof Data_Maybe.Nothing) {\n                    return pure(Data_Maybe.Nothing.value);\n                };\n                if (v1 instanceof Data_Maybe.Just) {\n                    return map(Data_Maybe.Just.create)(v(v1.value0));\n                };\n                throw new Error(\"Failed pattern match at Data.Traversable (line 115, column 1 - line 119, column 33): \" + [ v.constructor.name, v1.constructor.name ]);\n            };\n        };\n    },\n    sequence: function (dictApplicative) {\n        var pure = Control_Applicative.pure(dictApplicative);\n        var map = Data_Functor.map((dictApplicative.Apply0()).Functor0());\n        return function (v) {\n            if (v instanceof Data_Maybe.Nothing) {\n                return pure(Data_Maybe.Nothing.value);\n            };\n            if (v instanceof Data_Maybe.Just) {\n                return map(Data_Maybe.Just.create)(v.value0);\n            };\n            throw new Error(\"Failed pattern match at Data.Traversable (line 115, column 1 - line 119, column 33): \" + [ v.constructor.name ]);\n        };\n    },\n    Functor0: function () {\n        return Data_Maybe.functorMaybe;\n    },\n    Foldable1: function () {\n        return Data_Foldable.foldableMaybe;\n    }\n};\nvar traverse1 = /* #__PURE__ */ traverse(traversableMaybe);\nvar traversableIdentity = {\n    traverse: function (dictApplicative) {\n        var map = Data_Functor.map((dictApplicative.Apply0()).Functor0());\n        return function (f) {\n            return function (v) {\n                return map(Data_Identity.Identity)(f(v));\n            };\n        };\n    },\n    sequence: function (dictApplicative) {\n        var map = Data_Functor.map((dictApplicative.Apply0()).Functor0());\n        return function (v) {\n            return map(Data_Identity.Identity)(v);\n        };\n    },\n    Functor0: function () {\n        return Data_Identity.functorIdentity;\n    },\n    Foldable1: function () {\n        return Data_Foldable.foldableIdentity;\n    }\n};\nvar traversableEither = {\n    traverse: function (dictApplicative) {\n        var pure = Control_Applicative.pure(dictApplicative);\n        var map = Data_Functor.map((dictApplicative.Apply0()).Functor0());\n        return function (v) {\n            return function (v1) {\n                if (v1 instanceof Data_Either.Left) {\n                    return pure(new Data_Either.Left(v1.value0));\n                };\n                if (v1 instanceof Data_Either.Right) {\n                    return map(Data_Either.Right.create)(v(v1.value0));\n                };\n                throw new Error(\"Failed pattern match at Data.Traversable (line 149, column 1 - line 153, column 36): \" + [ v.constructor.name, v1.constructor.name ]);\n            };\n        };\n    },\n    sequence: function (dictApplicative) {\n        var pure = Control_Applicative.pure(dictApplicative);\n        var map = Data_Functor.map((dictApplicative.Apply0()).Functor0());\n        return function (v) {\n            if (v instanceof Data_Either.Left) {\n                return pure(new Data_Either.Left(v.value0));\n            };\n            if (v instanceof Data_Either.Right) {\n                return map(Data_Either.Right.create)(v.value0);\n            };\n            throw new Error(\"Failed pattern match at Data.Traversable (line 149, column 1 - line 153, column 36): \" + [ v.constructor.name ]);\n        };\n    },\n    Functor0: function () {\n        return Data_Either.functorEither;\n    },\n    Foldable1: function () {\n        return Data_Foldable.foldableEither;\n    }\n};\nvar traversableDual = {\n    traverse: function (dictApplicative) {\n        var map = Data_Functor.map((dictApplicative.Apply0()).Functor0());\n        return function (f) {\n            return function (v) {\n                return map(Data_Monoid_Dual.Dual)(f(v));\n            };\n        };\n    },\n    sequence: function (dictApplicative) {\n        var map = Data_Functor.map((dictApplicative.Apply0()).Functor0());\n        return function (v) {\n            return map(Data_Monoid_Dual.Dual)(v);\n        };\n    },\n    Functor0: function () {\n        return Data_Monoid_Dual.functorDual;\n    },\n    Foldable1: function () {\n        return Data_Foldable.foldableDual;\n    }\n};\nvar traversableDisj = {\n    traverse: function (dictApplicative) {\n        var map = Data_Functor.map((dictApplicative.Apply0()).Functor0());\n        return function (f) {\n            return function (v) {\n                return map(Data_Monoid_Disj.Disj)(f(v));\n            };\n        };\n    },\n    sequence: function (dictApplicative) {\n        var map = Data_Functor.map((dictApplicative.Apply0()).Functor0());\n        return function (v) {\n            return map(Data_Monoid_Disj.Disj)(v);\n        };\n    },\n    Functor0: function () {\n        return Data_Monoid_Disj.functorDisj;\n    },\n    Foldable1: function () {\n        return Data_Foldable.foldableDisj;\n    }\n};\nvar traversableConst = {\n    traverse: function (dictApplicative) {\n        var pure = Control_Applicative.pure(dictApplicative);\n        return function (v) {\n            return function (v1) {\n                return pure(v1);\n            };\n        };\n    },\n    sequence: function (dictApplicative) {\n        var pure = Control_Applicative.pure(dictApplicative);\n        return function (v) {\n            return pure(v);\n        };\n    },\n    Functor0: function () {\n        return Data_Const.functorConst;\n    },\n    Foldable1: function () {\n        return Data_Foldable.foldableConst;\n    }\n};\nvar traversableConj = {\n    traverse: function (dictApplicative) {\n        var map = Data_Functor.map((dictApplicative.Apply0()).Functor0());\n        return function (f) {\n            return function (v) {\n                return map(Data_Monoid_Conj.Conj)(f(v));\n            };\n        };\n    },\n    sequence: function (dictApplicative) {\n        var map = Data_Functor.map((dictApplicative.Apply0()).Functor0());\n        return function (v) {\n            return map(Data_Monoid_Conj.Conj)(v);\n        };\n    },\n    Functor0: function () {\n        return Data_Monoid_Conj.functorConj;\n    },\n    Foldable1: function () {\n        return Data_Foldable.foldableConj;\n    }\n};\nvar traversableCompose = function (dictTraversable) {\n    var traverse2 = traverse(dictTraversable);\n    var functorCompose = Data_Functor_Compose.functorCompose(dictTraversable.Functor0());\n    var foldableCompose = Data_Foldable.foldableCompose(dictTraversable.Foldable1());\n    return function (dictTraversable1) {\n        var traverse3 = traverse(dictTraversable1);\n        var functorCompose1 = functorCompose(dictTraversable1.Functor0());\n        var foldableCompose1 = foldableCompose(dictTraversable1.Foldable1());\n        return {\n            traverse: function (dictApplicative) {\n                var map = Data_Functor.map((dictApplicative.Apply0()).Functor0());\n                var traverse4 = traverse2(dictApplicative);\n                var traverse5 = traverse3(dictApplicative);\n                return function (f) {\n                    return function (v) {\n                        return map(Data_Functor_Compose.Compose)(traverse4(traverse5(f))(v));\n                    };\n                };\n            },\n            sequence: function (dictApplicative) {\n                return traverse(traversableCompose(dictTraversable)(dictTraversable1))(dictApplicative)(identity);\n            },\n            Functor0: function () {\n                return functorCompose1;\n            },\n            Foldable1: function () {\n                return foldableCompose1;\n            }\n        };\n    };\n};\nvar traversableAdditive = {\n    traverse: function (dictApplicative) {\n        var map = Data_Functor.map((dictApplicative.Apply0()).Functor0());\n        return function (f) {\n            return function (v) {\n                return map(Data_Monoid_Additive.Additive)(f(v));\n            };\n        };\n    },\n    sequence: function (dictApplicative) {\n        var map = Data_Functor.map((dictApplicative.Apply0()).Functor0());\n        return function (v) {\n            return map(Data_Monoid_Additive.Additive)(v);\n        };\n    },\n    Functor0: function () {\n        return Data_Monoid_Additive.functorAdditive;\n    },\n    Foldable1: function () {\n        return Data_Foldable.foldableAdditive;\n    }\n};\nvar sequenceDefault = function (dictTraversable) {\n    var traverse2 = traverse(dictTraversable);\n    return function (dictApplicative) {\n        return traverse2(dictApplicative)(identity);\n    };\n};\nvar traversableArray = {\n    traverse: function (dictApplicative) {\n        var Apply0 = dictApplicative.Apply0();\n        return $foreign.traverseArrayImpl(Control_Apply.apply(Apply0))(Data_Functor.map(Apply0.Functor0()))(Control_Applicative.pure(dictApplicative));\n    },\n    sequence: function (dictApplicative) {\n        return sequenceDefault(traversableArray)(dictApplicative);\n    },\n    Functor0: function () {\n        return Data_Functor.functorArray;\n    },\n    Foldable1: function () {\n        return Data_Foldable.foldableArray;\n    }\n};\nvar sequence = function (dict) {\n    return dict.sequence;\n};\nvar sequence1 = /* #__PURE__ */ sequence(traversableMaybe);\nvar traversableApp = function (dictTraversable) {\n    var traverse2 = traverse(dictTraversable);\n    var sequence2 = sequence(dictTraversable);\n    var functorApp = Data_Functor_App.functorApp(dictTraversable.Functor0());\n    var foldableApp = Data_Foldable.foldableApp(dictTraversable.Foldable1());\n    return {\n        traverse: function (dictApplicative) {\n            var map = Data_Functor.map((dictApplicative.Apply0()).Functor0());\n            var traverse3 = traverse2(dictApplicative);\n            return function (f) {\n                return function (v) {\n                    return map(Data_Functor_App.App)(traverse3(f)(v));\n                };\n            };\n        },\n        sequence: function (dictApplicative) {\n            var map = Data_Functor.map((dictApplicative.Apply0()).Functor0());\n            var sequence3 = sequence2(dictApplicative);\n            return function (v) {\n                return map(Data_Functor_App.App)(sequence3(v));\n            };\n        },\n        Functor0: function () {\n            return functorApp;\n        },\n        Foldable1: function () {\n            return foldableApp;\n        }\n    };\n};\nvar traversableCoproduct = function (dictTraversable) {\n    var traverse2 = traverse(dictTraversable);\n    var sequence2 = sequence(dictTraversable);\n    var functorCoproduct = Data_Functor_Coproduct.functorCoproduct(dictTraversable.Functor0());\n    var foldableCoproduct = Data_Foldable.foldableCoproduct(dictTraversable.Foldable1());\n    return function (dictTraversable1) {\n        var traverse3 = traverse(dictTraversable1);\n        var sequence3 = sequence(dictTraversable1);\n        var functorCoproduct1 = functorCoproduct(dictTraversable1.Functor0());\n        var foldableCoproduct1 = foldableCoproduct(dictTraversable1.Foldable1());\n        return {\n            traverse: function (dictApplicative) {\n                var map = Data_Functor.map((dictApplicative.Apply0()).Functor0());\n                var traverse4 = traverse2(dictApplicative);\n                var traverse5 = traverse3(dictApplicative);\n                return function (f) {\n                    return Data_Functor_Coproduct.coproduct((function () {\n                        var $313 = map(function ($316) {\n                            return Data_Functor_Coproduct.Coproduct(Data_Either.Left.create($316));\n                        });\n                        var $314 = traverse4(f);\n                        return function ($315) {\n                            return $313($314($315));\n                        };\n                    })())((function () {\n                        var $317 = map(function ($320) {\n                            return Data_Functor_Coproduct.Coproduct(Data_Either.Right.create($320));\n                        });\n                        var $318 = traverse5(f);\n                        return function ($319) {\n                            return $317($318($319));\n                        };\n                    })());\n                };\n            },\n            sequence: function (dictApplicative) {\n                var map = Data_Functor.map((dictApplicative.Apply0()).Functor0());\n                return Data_Functor_Coproduct.coproduct((function () {\n                    var $321 = map(function ($324) {\n                        return Data_Functor_Coproduct.Coproduct(Data_Either.Left.create($324));\n                    });\n                    var $322 = sequence2(dictApplicative);\n                    return function ($323) {\n                        return $321($322($323));\n                    };\n                })())((function () {\n                    var $325 = map(function ($328) {\n                        return Data_Functor_Coproduct.Coproduct(Data_Either.Right.create($328));\n                    });\n                    var $326 = sequence3(dictApplicative);\n                    return function ($327) {\n                        return $325($326($327));\n                    };\n                })());\n            },\n            Functor0: function () {\n                return functorCoproduct1;\n            },\n            Foldable1: function () {\n                return foldableCoproduct1;\n            }\n        };\n    };\n};\nvar traversableFirst = {\n    traverse: function (dictApplicative) {\n        var map = Data_Functor.map((dictApplicative.Apply0()).Functor0());\n        var traverse2 = traverse1(dictApplicative);\n        return function (f) {\n            return function (v) {\n                return map(Data_Maybe_First.First)(traverse2(f)(v));\n            };\n        };\n    },\n    sequence: function (dictApplicative) {\n        var map = Data_Functor.map((dictApplicative.Apply0()).Functor0());\n        var sequence2 = sequence1(dictApplicative);\n        return function (v) {\n            return map(Data_Maybe_First.First)(sequence2(v));\n        };\n    },\n    Functor0: function () {\n        return Data_Maybe_First.functorFirst;\n    },\n    Foldable1: function () {\n        return Data_Foldable.foldableFirst;\n    }\n};\nvar traversableLast = {\n    traverse: function (dictApplicative) {\n        var map = Data_Functor.map((dictApplicative.Apply0()).Functor0());\n        var traverse2 = traverse1(dictApplicative);\n        return function (f) {\n            return function (v) {\n                return map(Data_Maybe_Last.Last)(traverse2(f)(v));\n            };\n        };\n    },\n    sequence: function (dictApplicative) {\n        var map = Data_Functor.map((dictApplicative.Apply0()).Functor0());\n        var sequence2 = sequence1(dictApplicative);\n        return function (v) {\n            return map(Data_Maybe_Last.Last)(sequence2(v));\n        };\n    },\n    Functor0: function () {\n        return Data_Maybe_Last.functorLast;\n    },\n    Foldable1: function () {\n        return Data_Foldable.foldableLast;\n    }\n};\nvar traversableProduct = function (dictTraversable) {\n    var traverse2 = traverse(dictTraversable);\n    var sequence2 = sequence(dictTraversable);\n    var functorProduct = Data_Functor_Product.functorProduct(dictTraversable.Functor0());\n    var foldableProduct = Data_Foldable.foldableProduct(dictTraversable.Foldable1());\n    return function (dictTraversable1) {\n        var traverse3 = traverse(dictTraversable1);\n        var sequence3 = sequence(dictTraversable1);\n        var functorProduct1 = functorProduct(dictTraversable1.Functor0());\n        var foldableProduct1 = foldableProduct(dictTraversable1.Foldable1());\n        return {\n            traverse: function (dictApplicative) {\n                var lift2 = Control_Apply.lift2(dictApplicative.Apply0());\n                var traverse4 = traverse2(dictApplicative);\n                var traverse5 = traverse3(dictApplicative);\n                return function (f) {\n                    return function (v) {\n                        return lift2(Data_Functor_Product.product)(traverse4(f)(v.value0))(traverse5(f)(v.value1));\n                    };\n                };\n            },\n            sequence: function (dictApplicative) {\n                var lift2 = Control_Apply.lift2(dictApplicative.Apply0());\n                var sequence4 = sequence2(dictApplicative);\n                var sequence5 = sequence3(dictApplicative);\n                return function (v) {\n                    return lift2(Data_Functor_Product.product)(sequence4(v.value0))(sequence5(v.value1));\n                };\n            },\n            Functor0: function () {\n                return functorProduct1;\n            },\n            Foldable1: function () {\n                return foldableProduct1;\n            }\n        };\n    };\n};\nvar traverseDefault = function (dictTraversable) {\n    var sequence2 = sequence(dictTraversable);\n    var map = Data_Functor.map(dictTraversable.Functor0());\n    return function (dictApplicative) {\n        var sequence3 = sequence2(dictApplicative);\n        return function (f) {\n            return function (ta) {\n                return sequence3(map(f)(ta));\n            };\n        };\n    };\n};\nvar mapAccumR = function (dictTraversable) {\n    var traverse2 = traverse(dictTraversable)(Data_Traversable_Accum_Internal.applicativeStateR);\n    return function (f) {\n        return function (s0) {\n            return function (xs) {\n                return Data_Traversable_Accum_Internal.stateR(traverse2(function (a) {\n                    return function (s) {\n                        return f(s)(a);\n                    };\n                })(xs))(s0);\n            };\n        };\n    };\n};\nvar scanr = function (dictTraversable) {\n    var mapAccumR1 = mapAccumR(dictTraversable);\n    return function (f) {\n        return function (b0) {\n            return function (xs) {\n                return (mapAccumR1(function (b) {\n                    return function (a) {\n                        var b$prime = f(a)(b);\n                        return {\n                            accum: b$prime,\n                            value: b$prime\n                        };\n                    };\n                })(b0)(xs)).value;\n            };\n        };\n    };\n};\nvar mapAccumL = function (dictTraversable) {\n    var traverse2 = traverse(dictTraversable)(Data_Traversable_Accum_Internal.applicativeStateL);\n    return function (f) {\n        return function (s0) {\n            return function (xs) {\n                return Data_Traversable_Accum_Internal.stateL(traverse2(function (a) {\n                    return function (s) {\n                        return f(s)(a);\n                    };\n                })(xs))(s0);\n            };\n        };\n    };\n};\nvar scanl = function (dictTraversable) {\n    var mapAccumL1 = mapAccumL(dictTraversable);\n    return function (f) {\n        return function (b0) {\n            return function (xs) {\n                return (mapAccumL1(function (b) {\n                    return function (a) {\n                        var b$prime = f(b)(a);\n                        return {\n                            accum: b$prime,\n                            value: b$prime\n                        };\n                    };\n                })(b0)(xs)).value;\n            };\n        };\n    };\n};\nvar $$for = function (dictApplicative) {\n    return function (dictTraversable) {\n        var traverse2 = traverse(dictTraversable)(dictApplicative);\n        return function (x) {\n            return function (f) {\n                return traverse2(f)(x);\n            };\n        };\n    };\n};\nexport {\n    traverse,\n    sequence,\n    traverseDefault,\n    sequenceDefault,\n    $$for as for,\n    scanl,\n    scanr,\n    mapAccumL,\n    mapAccumR,\n    traversableArray,\n    traversableMaybe,\n    traversableFirst,\n    traversableLast,\n    traversableAdditive,\n    traversableDual,\n    traversableConj,\n    traversableDisj,\n    traversableMultiplicative,\n    traversableEither,\n    traversableTuple,\n    traversableIdentity,\n    traversableConst,\n    traversableProduct,\n    traversableCoproduct,\n    traversableCompose,\n    traversableApp\n};\nexport {\n    all,\n    and,\n    any,\n    elem,\n    find,\n    fold,\n    foldMap,\n    foldMapDefaultL,\n    foldMapDefaultR,\n    foldl,\n    foldlDefault,\n    foldr,\n    foldrDefault,\n    for_,\n    intercalate,\n    maximum,\n    maximumBy,\n    minimum,\n    minimumBy,\n    notElem,\n    oneOf,\n    or,\n    sequence_,\n    sum,\n    traverse_\n} from \"../Data.Foldable/index.js\";\n", "// Generated by purs version 0.15.15\nimport * as Control_Apply from \"../Control.Apply/index.js\";\nimport * as Control_Category from \"../Control.Category/index.js\";\nimport * as Control_Parallel_Class from \"../Control.Parallel.Class/index.js\";\nimport * as Data_Foldable from \"../Data.Foldable/index.js\";\nimport * as Data_Traversable from \"../Data.Traversable/index.js\";\nvar identity = /* #__PURE__ */ Control_Category.identity(Control_Category.categoryFn);\nvar parTraverse_ = function (dictParallel) {\n    var sequential = Control_Parallel_Class.sequential(dictParallel);\n    var parallel = Control_Parallel_Class.parallel(dictParallel);\n    return function (dictApplicative) {\n        var traverse_ = Data_Foldable.traverse_(dictApplicative);\n        return function (dictFoldable) {\n            var traverse_1 = traverse_(dictFoldable);\n            return function (f) {\n                var $51 = traverse_1(function ($53) {\n                    return parallel(f($53));\n                });\n                return function ($52) {\n                    return sequential($51($52));\n                };\n            };\n        };\n    };\n};\nvar parTraverse = function (dictParallel) {\n    var sequential = Control_Parallel_Class.sequential(dictParallel);\n    var parallel = Control_Parallel_Class.parallel(dictParallel);\n    return function (dictApplicative) {\n        return function (dictTraversable) {\n            var traverse = Data_Traversable.traverse(dictTraversable)(dictApplicative);\n            return function (f) {\n                var $54 = traverse(function ($56) {\n                    return parallel(f($56));\n                });\n                return function ($55) {\n                    return sequential($54($55));\n                };\n            };\n        };\n    };\n};\nvar parSequence_ = function (dictParallel) {\n    var parTraverse_1 = parTraverse_(dictParallel);\n    return function (dictApplicative) {\n        var parTraverse_2 = parTraverse_1(dictApplicative);\n        return function (dictFoldable) {\n            return parTraverse_2(dictFoldable)(identity);\n        };\n    };\n};\nvar parSequence = function (dictParallel) {\n    var parTraverse1 = parTraverse(dictParallel);\n    return function (dictApplicative) {\n        var parTraverse2 = parTraverse1(dictApplicative);\n        return function (dictTraversable) {\n            return parTraverse2(dictTraversable)(identity);\n        };\n    };\n};\nvar parOneOfMap = function (dictParallel) {\n    var sequential = Control_Parallel_Class.sequential(dictParallel);\n    var parallel = Control_Parallel_Class.parallel(dictParallel);\n    return function (dictAlternative) {\n        var Plus1 = dictAlternative.Plus1();\n        return function (dictFoldable) {\n            var oneOfMap = Data_Foldable.oneOfMap(dictFoldable)(Plus1);\n            return function (dictFunctor) {\n                return function (f) {\n                    var $57 = oneOfMap(function ($59) {\n                        return parallel(f($59));\n                    });\n                    return function ($58) {\n                        return sequential($57($58));\n                    };\n                };\n            };\n        };\n    };\n};\nvar parOneOf = function (dictParallel) {\n    var sequential = Control_Parallel_Class.sequential(dictParallel);\n    var parallel = Control_Parallel_Class.parallel(dictParallel);\n    return function (dictAlternative) {\n        var Plus1 = dictAlternative.Plus1();\n        return function (dictFoldable) {\n            var oneOfMap = Data_Foldable.oneOfMap(dictFoldable)(Plus1);\n            return function (dictFunctor) {\n                var $60 = oneOfMap(parallel);\n                return function ($61) {\n                    return sequential($60($61));\n                };\n            };\n        };\n    };\n};\nvar parApply = function (dictParallel) {\n    var sequential = Control_Parallel_Class.sequential(dictParallel);\n    var apply = Control_Apply.apply(dictParallel.Apply1());\n    var parallel = Control_Parallel_Class.parallel(dictParallel);\n    return function (mf) {\n        return function (ma) {\n            return sequential(apply(parallel(mf))(parallel(ma)));\n        };\n    };\n};\nexport {\n    parApply,\n    parTraverse,\n    parTraverse_,\n    parSequence,\n    parSequence_,\n    parOneOf,\n    parOneOfMap\n};\nexport {\n    ParCont,\n    parallel,\n    sequential\n} from \"../Control.Parallel.Class/index.js\";\n", "export const unsafePerformEffect = function (f) {\n  return f();\n};\n", "// module Partial.Unsafe\n\nexport const _unsafePartial = function (f) {\n  return f();\n};\n", "// module Partial\n\nexport const _crashWith = function (msg) {\n  throw new Error(msg);\n};\n", "// Generated by purs version 0.15.15\nimport * as $foreign from \"./foreign.js\";\nvar crashWith = function () {\n    return $foreign[\"_crashWith\"];\n};\nvar crashWith1 = /* #__PURE__ */ crashWith();\nvar crash = function () {\n    return crashWith1(\"Partial.crash: partial function\");\n};\nexport {\n    crash,\n    crashWith\n};\n", "// Generated by purs version 0.15.15\nimport * as $foreign from \"./foreign.js\";\nimport * as Partial from \"../Partial/index.js\";\nvar crashWith = /* #__PURE__ */ Partial.crashWith();\nvar unsafePartial = $foreign[\"_unsafePartial\"];\nvar unsafeCrashWith = function (msg) {\n    return unsafePartial(function () {\n        return crashWith(msg);\n    });\n};\nexport {\n    unsafePartial,\n    unsafeCrashWith\n};\n", "// Generated by purs version 0.15.15\nimport * as $foreign from \"./foreign.js\";\nimport * as Control_Applicative from \"../Control.Applicative/index.js\";\nimport * as Control_Apply from \"../Control.Apply/index.js\";\nimport * as Control_Bind from \"../Control.Bind/index.js\";\nimport * as Control_Monad from \"../Control.Monad/index.js\";\nimport * as Control_Monad_Error_Class from \"../Control.Monad.Error.Class/index.js\";\nimport * as Control_Monad_Rec_Class from \"../Control.Monad.Rec.Class/index.js\";\nimport * as Control_Monad_ST_Class from \"../Control.Monad.ST.Class/index.js\";\nimport * as Control_Parallel from \"../Control.Parallel/index.js\";\nimport * as Control_Parallel_Class from \"../Control.Parallel.Class/index.js\";\nimport * as Control_Plus from \"../Control.Plus/index.js\";\nimport * as Data_Either from \"../Data.Either/index.js\";\nimport * as Data_Foldable from \"../Data.Foldable/index.js\";\nimport * as Data_Function from \"../Data.Function/index.js\";\nimport * as Data_Functor from \"../Data.Functor/index.js\";\nimport * as Data_Monoid from \"../Data.Monoid/index.js\";\nimport * as Data_Semigroup from \"../Data.Semigroup/index.js\";\nimport * as Data_Time_Duration from \"../Data.Time.Duration/index.js\";\nimport * as Data_Unit from \"../Data.Unit/index.js\";\nimport * as Effect from \"../Effect/index.js\";\nimport * as Effect_Class from \"../Effect.Class/index.js\";\nimport * as Effect_Exception from \"../Effect.Exception/index.js\";\nimport * as Effect_Unsafe from \"../Effect.Unsafe/index.js\";\nimport * as Partial_Unsafe from \"../Partial.Unsafe/index.js\";\nimport * as Unsafe_Coerce from \"../Unsafe.Coerce/index.js\";\nvar $runtime_lazy = function (name, moduleName, init) {\n    var state = 0;\n    var val;\n    return function (lineNumber) {\n        if (state === 2) return val;\n        if (state === 1) throw new ReferenceError(name + \" was needed before it finished initializing (module \" + moduleName + \", line \" + lineNumber + \")\", moduleName, lineNumber);\n        state = 1;\n        val = init();\n        state = 2;\n        return val;\n    };\n};\nvar pure = /* #__PURE__ */ Control_Applicative.pure(Effect.applicativeEffect);\nvar $$void = /* #__PURE__ */ Data_Functor[\"void\"](Effect.functorEffect);\nvar map = /* #__PURE__ */ Data_Functor.map(Effect.functorEffect);\nvar pure1 = /* #__PURE__ */ Control_Applicative.pure(Data_Either.applicativeEither);\nvar Fiber = function (x) {\n    return x;\n};\nvar FFIUtil = function (x) {\n    return x;\n};\nvar Canceler = function (x) {\n    return x;\n};\nvar suspendAff = /* #__PURE__ */ $foreign[\"_fork\"](false);\nvar newtypeCanceler = {\n    Coercible0: function () {\n        return undefined;\n    }\n};\nvar functorParAff = {\n    map: $foreign[\"_parAffMap\"]\n};\nvar functorAff = {\n    map: $foreign[\"_map\"]\n};\nvar map1 = /* #__PURE__ */ Data_Functor.map(functorAff);\nvar forkAff = /* #__PURE__ */ $foreign[\"_fork\"](true);\nvar ffiUtil = /* #__PURE__ */ (function () {\n    var unsafeFromRight = function (v) {\n        if (v instanceof Data_Either.Right) {\n            return v.value0;\n        };\n        if (v instanceof Data_Either.Left) {\n            return Partial_Unsafe.unsafeCrashWith(\"unsafeFromRight: Left\");\n        };\n        throw new Error(\"Failed pattern match at Effect.Aff (line 412, column 21 - line 414, column 54): \" + [ v.constructor.name ]);\n    };\n    var unsafeFromLeft = function (v) {\n        if (v instanceof Data_Either.Left) {\n            return v.value0;\n        };\n        if (v instanceof Data_Either.Right) {\n            return Partial_Unsafe.unsafeCrashWith(\"unsafeFromLeft: Right\");\n        };\n        throw new Error(\"Failed pattern match at Effect.Aff (line 407, column 20 - line 409, column 55): \" + [ v.constructor.name ]);\n    };\n    var isLeft = function (v) {\n        if (v instanceof Data_Either.Left) {\n            return true;\n        };\n        if (v instanceof Data_Either.Right) {\n            return false;\n        };\n        throw new Error(\"Failed pattern match at Effect.Aff (line 402, column 12 - line 404, column 21): \" + [ v.constructor.name ]);\n    };\n    return {\n        isLeft: isLeft,\n        fromLeft: unsafeFromLeft,\n        fromRight: unsafeFromRight,\n        left: Data_Either.Left.create,\n        right: Data_Either.Right.create\n    };\n})();\nvar makeFiber = function (aff) {\n    return $foreign[\"_makeFiber\"](ffiUtil, aff);\n};\nvar launchAff = function (aff) {\n    return function __do() {\n        var fiber = makeFiber(aff)();\n        fiber.run();\n        return fiber;\n    };\n};\nvar launchAff_ = function ($75) {\n    return $$void(launchAff($75));\n};\nvar launchSuspendedAff = makeFiber;\nvar delay = function (v) {\n    return $foreign[\"_delay\"](Data_Either.Right.create, v);\n};\nvar bracket = function (acquire) {\n    return function (completed) {\n        return $foreign.generalBracket(acquire)({\n            killed: Data_Function[\"const\"](completed),\n            failed: Data_Function[\"const\"](completed),\n            completed: Data_Function[\"const\"](completed)\n        });\n    };\n};\nvar applyParAff = {\n    apply: $foreign[\"_parAffApply\"],\n    Functor0: function () {\n        return functorParAff;\n    }\n};\nvar lift2 = /* #__PURE__ */ Control_Apply.lift2(applyParAff);\nvar semigroupParAff = function (dictSemigroup) {\n    return {\n        append: lift2(Data_Semigroup.append(dictSemigroup))\n    };\n};\nvar monadAff = {\n    Applicative0: function () {\n        return applicativeAff;\n    },\n    Bind1: function () {\n        return bindAff;\n    }\n};\nvar bindAff = {\n    bind: $foreign[\"_bind\"],\n    Apply0: function () {\n        return $lazy_applyAff(0);\n    }\n};\nvar applicativeAff = {\n    pure: $foreign[\"_pure\"],\n    Apply0: function () {\n        return $lazy_applyAff(0);\n    }\n};\nvar $lazy_applyAff = /* #__PURE__ */ $runtime_lazy(\"applyAff\", \"Effect.Aff\", function () {\n    return {\n        apply: Control_Monad.ap(monadAff),\n        Functor0: function () {\n            return functorAff;\n        }\n    };\n});\nvar applyAff = /* #__PURE__ */ $lazy_applyAff(73);\nvar pure2 = /* #__PURE__ */ Control_Applicative.pure(applicativeAff);\nvar bind1 = /* #__PURE__ */ Control_Bind.bind(bindAff);\nvar lift21 = /* #__PURE__ */ Control_Apply.lift2(applyAff);\nvar apply = /* #__PURE__ */ Control_Apply.apply(applyAff);\nvar bindFlipped = /* #__PURE__ */ Control_Bind.bindFlipped(bindAff);\nvar cancelWith = function (aff) {\n    return function (v) {\n        return $foreign.generalBracket(pure2(Data_Unit.unit))({\n            killed: function (e) {\n                return function (v1) {\n                    return v(e);\n                };\n            },\n            failed: Data_Function[\"const\"](pure2),\n            completed: Data_Function[\"const\"](pure2)\n        })(Data_Function[\"const\"](aff));\n    };\n};\nvar $$finally = function (fin) {\n    return function (a) {\n        return bracket(pure2(Data_Unit.unit))(Data_Function[\"const\"](fin))(Data_Function[\"const\"](a));\n    };\n};\nvar invincible = function (a) {\n    return bracket(a)(Data_Function[\"const\"](pure2(Data_Unit.unit)))(pure2);\n};\nvar lazyAff = {\n    defer: function (f) {\n        return bind1(pure2(Data_Unit.unit))(f);\n    }\n};\nvar parallelAff = {\n    parallel: Unsafe_Coerce.unsafeCoerce,\n    sequential: $foreign[\"_sequential\"],\n    Apply0: function () {\n        return applyAff;\n    },\n    Apply1: function () {\n        return applyParAff;\n    }\n};\nvar parallel = /* #__PURE__ */ Control_Parallel_Class.parallel(parallelAff);\nvar applicativeParAff = {\n    pure: function ($76) {\n        return parallel(pure2($76));\n    },\n    Apply0: function () {\n        return applyParAff;\n    }\n};\nvar pure3 = /* #__PURE__ */ Control_Applicative.pure(applicativeParAff);\nvar parSequence_ = /* #__PURE__ */ Control_Parallel.parSequence_(parallelAff)(applicativeParAff)(Data_Foldable.foldableArray);\nvar monoidParAff = function (dictMonoid) {\n    var semigroupParAff1 = semigroupParAff(dictMonoid.Semigroup0());\n    return {\n        mempty: pure3(Data_Monoid.mempty(dictMonoid)),\n        Semigroup0: function () {\n            return semigroupParAff1;\n        }\n    };\n};\nvar semigroupCanceler = {\n    append: function (v) {\n        return function (v1) {\n            return function (err) {\n                return parSequence_([ v(err), v1(err) ]);\n            };\n        };\n    }\n};\nvar semigroupAff = function (dictSemigroup) {\n    return {\n        append: lift21(Data_Semigroup.append(dictSemigroup))\n    };\n};\nvar monadEffectAff = {\n    liftEffect: $foreign[\"_liftEffect\"],\n    Monad0: function () {\n        return monadAff;\n    }\n};\nvar liftEffect = /* #__PURE__ */ Effect_Class.liftEffect(monadEffectAff);\nvar effectCanceler = function ($77) {\n    return Canceler(Data_Function[\"const\"](liftEffect($77)));\n};\nvar joinFiber = function (v) {\n    return $foreign.makeAff(function (k) {\n        return map(effectCanceler)(v.join(k));\n    });\n};\nvar functorFiber = {\n    map: function (f) {\n        return function (t) {\n            return Effect_Unsafe.unsafePerformEffect(makeFiber(map1(f)(joinFiber(t))));\n        };\n    }\n};\nvar applyFiber = {\n    apply: function (t1) {\n        return function (t2) {\n            return Effect_Unsafe.unsafePerformEffect(makeFiber(apply(joinFiber(t1))(joinFiber(t2))));\n        };\n    },\n    Functor0: function () {\n        return functorFiber;\n    }\n};\nvar applicativeFiber = {\n    pure: function (a) {\n        return Effect_Unsafe.unsafePerformEffect(makeFiber(pure2(a)));\n    },\n    Apply0: function () {\n        return applyFiber;\n    }\n};\nvar killFiber = function (e) {\n    return function (v) {\n        return bind1(liftEffect(v.isSuspended))(function (suspended) {\n            if (suspended) {\n                return liftEffect($$void(v.kill(e, Data_Function[\"const\"](pure(Data_Unit.unit)))));\n            };\n            return $foreign.makeAff(function (k) {\n                return map(effectCanceler)(v.kill(e, k));\n            });\n        });\n    };\n};\nvar fiberCanceler = /* #__PURE__ */ (function () {\n    var $78 = Data_Function.flip(killFiber);\n    return function ($79) {\n        return Canceler($78($79));\n    };\n})();\nvar supervise = function (aff) {\n    var killError = Effect_Exception.error(\"[Aff] Child fiber outlived parent\");\n    var killAll = function (err) {\n        return function (sup) {\n            return $foreign.makeAff(function (k) {\n                return $foreign[\"_killAll\"](err, sup.supervisor, k(pure1(Data_Unit.unit)));\n            });\n        };\n    };\n    var acquire = function __do() {\n        var sup = $foreign[\"_makeSupervisedFiber\"](ffiUtil, aff)();\n        sup.fiber.run();\n        return sup;\n    };\n    return $foreign.generalBracket(liftEffect(acquire))({\n        killed: function (err) {\n            return function (sup) {\n                return parSequence_([ killFiber(err)(sup.fiber), killAll(err)(sup) ]);\n            };\n        },\n        failed: Data_Function[\"const\"](killAll(killError)),\n        completed: Data_Function[\"const\"](killAll(killError))\n    })(function ($80) {\n        return joinFiber((function (v) {\n            return v.fiber;\n        })($80));\n    });\n};\nvar monadSTAff = {\n    liftST: /* #__PURE__ */ (function () {\n        var $81 = Control_Monad_ST_Class.liftST(Control_Monad_ST_Class.monadSTEffect);\n        return function ($82) {\n            return liftEffect($81($82));\n        };\n    })(),\n    Monad0: function () {\n        return monadAff;\n    }\n};\nvar monadThrowAff = {\n    throwError: $foreign[\"_throwError\"],\n    Monad0: function () {\n        return monadAff;\n    }\n};\nvar monadErrorAff = {\n    catchError: $foreign[\"_catchError\"],\n    MonadThrow0: function () {\n        return monadThrowAff;\n    }\n};\nvar $$try = /* #__PURE__ */ Control_Monad_Error_Class[\"try\"](monadErrorAff);\nvar catchError = /* #__PURE__ */ Control_Monad_Error_Class.catchError(monadErrorAff);\nvar attempt = $$try;\nvar runAff = function (k) {\n    return function (aff) {\n        return launchAff(bindFlipped(function ($83) {\n            return liftEffect(k($83));\n        })($$try(aff)));\n    };\n};\nvar runAff_ = function (k) {\n    return function (aff) {\n        return $$void(runAff(k)(aff));\n    };\n};\nvar runSuspendedAff = function (k) {\n    return function (aff) {\n        return launchSuspendedAff(bindFlipped(function ($84) {\n            return liftEffect(k($84));\n        })($$try(aff)));\n    };\n};\nvar monadRecAff = {\n    tailRecM: function (k) {\n        var go = function (a) {\n            return bind1(k(a))(function (res) {\n                if (res instanceof Control_Monad_Rec_Class.Done) {\n                    return pure2(res.value0);\n                };\n                if (res instanceof Control_Monad_Rec_Class.Loop) {\n                    return go(res.value0);\n                };\n                throw new Error(\"Failed pattern match at Effect.Aff (line 104, column 7 - line 106, column 23): \" + [ res.constructor.name ]);\n            });\n        };\n        return go;\n    },\n    Monad0: function () {\n        return monadAff;\n    }\n};\nvar monoidAff = function (dictMonoid) {\n    var semigroupAff1 = semigroupAff(dictMonoid.Semigroup0());\n    return {\n        mempty: pure2(Data_Monoid.mempty(dictMonoid)),\n        Semigroup0: function () {\n            return semigroupAff1;\n        }\n    };\n};\nvar nonCanceler = /* #__PURE__ */ Data_Function[\"const\"](/* #__PURE__ */ pure2(Data_Unit.unit));\nvar monoidCanceler = {\n    mempty: nonCanceler,\n    Semigroup0: function () {\n        return semigroupCanceler;\n    }\n};\nvar mempty = /* #__PURE__ */ Data_Monoid.mempty(monoidCanceler);\nvar never = /* #__PURE__ */ $foreign.makeAff(function (v) {\n    return pure(mempty);\n});\nvar apathize = /* #__PURE__ */ (function () {\n    var $85 = map1(Data_Function[\"const\"](Data_Unit.unit));\n    return function ($86) {\n        return $85(attempt($86));\n    };\n})();\nvar altParAff = {\n    alt: $foreign[\"_parAffAlt\"],\n    Functor0: function () {\n        return functorParAff;\n    }\n};\nvar altAff = {\n    alt: function (a1) {\n        return function (a2) {\n            return catchError(a1)(Data_Function[\"const\"](a2));\n        };\n    },\n    Functor0: function () {\n        return functorAff;\n    }\n};\nvar plusAff = {\n    empty: /* #__PURE__ */ Control_Monad_Error_Class.throwError(monadThrowAff)(/* #__PURE__ */ Effect_Exception.error(\"Always fails\")),\n    Alt0: function () {\n        return altAff;\n    }\n};\nvar plusParAff = {\n    empty: /* #__PURE__ */ parallel(/* #__PURE__ */ Control_Plus.empty(plusAff)),\n    Alt0: function () {\n        return altParAff;\n    }\n};\nvar alternativeParAff = {\n    Applicative0: function () {\n        return applicativeParAff;\n    },\n    Plus1: function () {\n        return plusParAff;\n    }\n};\nexport {\n    makeAff,\n    generalBracket\n} from \"./foreign.js\";\nexport {\n    Canceler,\n    launchAff,\n    launchAff_,\n    launchSuspendedAff,\n    runAff,\n    runAff_,\n    runSuspendedAff,\n    forkAff,\n    suspendAff,\n    supervise,\n    attempt,\n    apathize,\n    delay,\n    never,\n    $$finally as finally,\n    invincible,\n    killFiber,\n    joinFiber,\n    cancelWith,\n    bracket,\n    nonCanceler,\n    effectCanceler,\n    fiberCanceler,\n    functorAff,\n    applyAff,\n    applicativeAff,\n    bindAff,\n    monadAff,\n    semigroupAff,\n    monoidAff,\n    altAff,\n    plusAff,\n    monadRecAff,\n    monadThrowAff,\n    monadErrorAff,\n    monadEffectAff,\n    lazyAff,\n    monadSTAff,\n    functorParAff,\n    applyParAff,\n    applicativeParAff,\n    semigroupParAff,\n    monoidParAff,\n    altParAff,\n    plusParAff,\n    alternativeParAff,\n    parallelAff,\n    functorFiber,\n    applyFiber,\n    applicativeFiber,\n    newtypeCanceler,\n    semigroupCanceler,\n    monoidCanceler\n};\nexport {\n    catchError,\n    throwError,\n    try\n} from \"../Control.Monad.Error.Class/index.js\";\nexport {\n    parallel,\n    sequential\n} from \"../Control.Parallel.Class/index.js\";\nexport {\n    Milliseconds\n} from \"../Data.Time.Duration/index.js\";\nexport {\n    error,\n    message\n} from \"../Effect.Exception/index.js\";\n", "export const log = function (s) {\n  return function () {\n    console.log(s);\n  };\n};\n\nexport const warn = function (s) {\n  return function () {\n    console.warn(s);\n  };\n};\n\nexport const error = function (s) {\n  return function () {\n    console.error(s);\n  };\n};\n\nexport const info = function (s) {\n  return function () {\n    console.info(s);\n  };\n};\n\nexport const debug = function (s) {\n  return function () {\n    console.debug(s);\n  };\n};\n\nexport const time = function (s) {\n  return function () {\n    console.time(s);\n  };\n};\n\nexport const timeLog = function (s) {\n  return function () {\n    console.timeLog(s);\n  };\n};\n\nexport const timeEnd = function (s) {\n  return function () {\n    console.timeEnd(s);\n  };\n};\n\nexport const clear = function () {\n  console.clear();\n};\n\nexport const group = function (s) {\n  return function () {\n    console.group(s);\n  };\n};\n\nexport const groupCollapsed = function (s) {\n  return function () {\n    console.groupCollapsed(s);\n  };\n};\n\nexport const groupEnd = function () {\n  console.groupEnd();\n};\n", "// Generated by purs version 0.15.15\nimport * as Control_Applicative from \"../Control.Applicative/index.js\";\nimport * as Control_Bind from \"../Control.Bind/index.js\";\nimport * as Effect_Class from \"../Effect.Class/index.js\";\nimport * as Effect_Console from \"../Effect.Console/index.js\";\nvar discard = /* #__PURE__ */ Control_Bind.discard(Control_Bind.discardUnit);\nvar warnShow = function (dictMonadEffect) {\n    var liftEffect = Effect_Class.liftEffect(dictMonadEffect);\n    return function (dictShow) {\n        var $55 = Effect_Console.warnShow(dictShow);\n        return function ($56) {\n            return liftEffect($55($56));\n        };\n    };\n};\nvar warn = function (dictMonadEffect) {\n    var $57 = Effect_Class.liftEffect(dictMonadEffect);\n    return function ($58) {\n        return $57(Effect_Console.warn($58));\n    };\n};\nvar timeLog = function (dictMonadEffect) {\n    var $59 = Effect_Class.liftEffect(dictMonadEffect);\n    return function ($60) {\n        return $59(Effect_Console.timeLog($60));\n    };\n};\nvar timeEnd = function (dictMonadEffect) {\n    var $61 = Effect_Class.liftEffect(dictMonadEffect);\n    return function ($62) {\n        return $61(Effect_Console.timeEnd($62));\n    };\n};\nvar time = function (dictMonadEffect) {\n    var $63 = Effect_Class.liftEffect(dictMonadEffect);\n    return function ($64) {\n        return $63(Effect_Console.time($64));\n    };\n};\nvar logShow = function (dictMonadEffect) {\n    var liftEffect = Effect_Class.liftEffect(dictMonadEffect);\n    return function (dictShow) {\n        var $65 = Effect_Console.logShow(dictShow);\n        return function ($66) {\n            return liftEffect($65($66));\n        };\n    };\n};\nvar log = function (dictMonadEffect) {\n    var $67 = Effect_Class.liftEffect(dictMonadEffect);\n    return function ($68) {\n        return $67(Effect_Console.log($68));\n    };\n};\nvar infoShow = function (dictMonadEffect) {\n    var liftEffect = Effect_Class.liftEffect(dictMonadEffect);\n    return function (dictShow) {\n        var $69 = Effect_Console.infoShow(dictShow);\n        return function ($70) {\n            return liftEffect($69($70));\n        };\n    };\n};\nvar info = function (dictMonadEffect) {\n    var $71 = Effect_Class.liftEffect(dictMonadEffect);\n    return function ($72) {\n        return $71(Effect_Console.info($72));\n    };\n};\nvar groupEnd = function (dictMonadEffect) {\n    return Effect_Class.liftEffect(dictMonadEffect)(Effect_Console.groupEnd);\n};\nvar groupCollapsed = function (dictMonadEffect) {\n    var $73 = Effect_Class.liftEffect(dictMonadEffect);\n    return function ($74) {\n        return $73(Effect_Console.groupCollapsed($74));\n    };\n};\nvar group = function (dictMonadEffect) {\n    var $75 = Effect_Class.liftEffect(dictMonadEffect);\n    return function ($76) {\n        return $75(Effect_Console.group($76));\n    };\n};\nvar grouped = function (dictMonadEffect) {\n    var Monad0 = dictMonadEffect.Monad0();\n    var Bind1 = Monad0.Bind1();\n    var discard1 = discard(Bind1);\n    var group1 = group(dictMonadEffect);\n    var bind = Control_Bind.bind(Bind1);\n    var groupEnd1 = groupEnd(dictMonadEffect);\n    var pure = Control_Applicative.pure(Monad0.Applicative0());\n    return function (name) {\n        return function (inner) {\n            return discard1(group1(name))(function () {\n                return bind(inner)(function (result) {\n                    return discard1(groupEnd1)(function () {\n                        return pure(result);\n                    });\n                });\n            });\n        };\n    };\n};\nvar errorShow = function (dictMonadEffect) {\n    var liftEffect = Effect_Class.liftEffect(dictMonadEffect);\n    return function (dictShow) {\n        var $77 = Effect_Console.errorShow(dictShow);\n        return function ($78) {\n            return liftEffect($77($78));\n        };\n    };\n};\nvar error = function (dictMonadEffect) {\n    var $79 = Effect_Class.liftEffect(dictMonadEffect);\n    return function ($80) {\n        return $79(Effect_Console.error($80));\n    };\n};\nvar debugShow = function (dictMonadEffect) {\n    var liftEffect = Effect_Class.liftEffect(dictMonadEffect);\n    return function (dictShow) {\n        var $81 = Effect_Console.debugShow(dictShow);\n        return function ($82) {\n            return liftEffect($81($82));\n        };\n    };\n};\nvar debug = function (dictMonadEffect) {\n    var $83 = Effect_Class.liftEffect(dictMonadEffect);\n    return function ($84) {\n        return $83(Effect_Console.debug($84));\n    };\n};\nvar clear = function (dictMonadEffect) {\n    return Effect_Class.liftEffect(dictMonadEffect)(Effect_Console.clear);\n};\nexport {\n    log,\n    logShow,\n    warn,\n    warnShow,\n    error,\n    errorShow,\n    info,\n    infoShow,\n    debug,\n    debugShow,\n    time,\n    timeLog,\n    timeEnd,\n    clear,\n    group,\n    groupCollapsed,\n    groupEnd,\n    grouped\n};\n", "export const defer = function (thunk) {\n  var v = null;\n  return function() {\n    if (thunk === undefined) return v;\n\n    v = thunk();\n    thunk = undefined; // eslint-disable-line no-param-reassign\n    return v;\n  };\n};\n\nexport const force = function (l) {\n  return l();\n};\n", "// Alias require to prevent webpack or browserify from actually requiring.\nconst req = typeof module === \"undefined\" ? undefined : module.require;\nconst util = (function() {\n  try {\n    return req === undefined ? undefined : req(\"util\");\n  } catch(e) {\n    return undefined;\n  }\n})();\n\nexport function _trace(x, k) {\n  // node only recurses two levels into an object before printing\n  // \"[object]\" for further objects when using console.log()\n  if (util !== undefined) {\n    console.log(util.inspect(x, { depth: null, colors: true }));\n  } else {\n    console.log(x);\n  }\n  return k({});\n}\n\nexport function _spy(tag, x) {\n  if (util !== undefined) {\n    console.log(tag + \":\", util.inspect(x, { depth: null, colors: true }));\n  } else {\n    console.log(tag + \":\", x);\n  }\n  return x;\n}\n\nexport function _debugger(f) {\n  debugger;\n  return f();\n\n}\n\nconst now = (function () {\n  var perf;\n  if (typeof performance !== \"undefined\") {\n    // In browsers, `performance` is available in the global context\n    perf = performance;\n  } else if (req) {\n    // In Node, `performance` is an export of `perf_hooks`\n    try { perf = req(\"perf_hooks\").performance; }\n    catch(e) { }\n  }\n\n  return (function() { return (perf || Date).now(); });\n})();\n\nexport function _traceTime(name, f) {\n  var start = now();\n  var res = f();\n  var end = now();\n  console.log(name + \" took \" + (end - start) + \"ms\");\n  return res;\n}\n", "// module Data.Function.Uncurried\n\nexport const mkFn0 = function (fn) {\n  return function () {\n    return fn();\n  };\n};\n\nexport const mkFn2 = function (fn) {\n  /* jshint maxparams: 2 */\n  return function (a, b) {\n    return fn(a)(b);\n  };\n};\n\nexport const mkFn3 = function (fn) {\n  /* jshint maxparams: 3 */\n  return function (a, b, c) {\n    return fn(a)(b)(c);\n  };\n};\n\nexport const mkFn4 = function (fn) {\n  /* jshint maxparams: 4 */\n  return function (a, b, c, d) {\n    return fn(a)(b)(c)(d);\n  };\n};\n\nexport const mkFn5 = function (fn) {\n  /* jshint maxparams: 5 */\n  return function (a, b, c, d, e) {\n    return fn(a)(b)(c)(d)(e);\n  };\n};\n\nexport const mkFn6 = function (fn) {\n  /* jshint maxparams: 6 */\n  return function (a, b, c, d, e, f) {\n    return fn(a)(b)(c)(d)(e)(f);\n  };\n};\n\nexport const mkFn7 = function (fn) {\n  /* jshint maxparams: 7 */\n  return function (a, b, c, d, e, f, g) {\n    return fn(a)(b)(c)(d)(e)(f)(g);\n  };\n};\n\nexport const mkFn8 = function (fn) {\n  /* jshint maxparams: 8 */\n  return function (a, b, c, d, e, f, g, h) {\n    return fn(a)(b)(c)(d)(e)(f)(g)(h);\n  };\n};\n\nexport const mkFn9 = function (fn) {\n  /* jshint maxparams: 9 */\n  return function (a, b, c, d, e, f, g, h, i) {\n    return fn(a)(b)(c)(d)(e)(f)(g)(h)(i);\n  };\n};\n\nexport const mkFn10 = function (fn) {\n  /* jshint maxparams: 10 */\n  return function (a, b, c, d, e, f, g, h, i, j) {\n    return fn(a)(b)(c)(d)(e)(f)(g)(h)(i)(j);\n  };\n};\n\nexport const runFn0 = function (fn) {\n  return fn();\n};\n\nexport const runFn2 = function (fn) {\n  return function (a) {\n    return function (b) {\n      return fn(a, b);\n    };\n  };\n};\n\nexport const runFn3 = function (fn) {\n  return function (a) {\n    return function (b) {\n      return function (c) {\n        return fn(a, b, c);\n      };\n    };\n  };\n};\n\nexport const runFn4 = function (fn) {\n  return function (a) {\n    return function (b) {\n      return function (c) {\n        return function (d) {\n          return fn(a, b, c, d);\n        };\n      };\n    };\n  };\n};\n\nexport const runFn5 = function (fn) {\n  return function (a) {\n    return function (b) {\n      return function (c) {\n        return function (d) {\n          return function (e) {\n            return fn(a, b, c, d, e);\n          };\n        };\n      };\n    };\n  };\n};\n\nexport const runFn6 = function (fn) {\n  return function (a) {\n    return function (b) {\n      return function (c) {\n        return function (d) {\n          return function (e) {\n            return function (f) {\n              return fn(a, b, c, d, e, f);\n            };\n          };\n        };\n      };\n    };\n  };\n};\n\nexport const runFn7 = function (fn) {\n  return function (a) {\n    return function (b) {\n      return function (c) {\n        return function (d) {\n          return function (e) {\n            return function (f) {\n              return function (g) {\n                return fn(a, b, c, d, e, f, g);\n              };\n            };\n          };\n        };\n      };\n    };\n  };\n};\n\nexport const runFn8 = function (fn) {\n  return function (a) {\n    return function (b) {\n      return function (c) {\n        return function (d) {\n          return function (e) {\n            return function (f) {\n              return function (g) {\n                return function (h) {\n                  return fn(a, b, c, d, e, f, g, h);\n                };\n              };\n            };\n          };\n        };\n      };\n    };\n  };\n};\n\nexport const runFn9 = function (fn) {\n  return function (a) {\n    return function (b) {\n      return function (c) {\n        return function (d) {\n          return function (e) {\n            return function (f) {\n              return function (g) {\n                return function (h) {\n                  return function (i) {\n                    return fn(a, b, c, d, e, f, g, h, i);\n                  };\n                };\n              };\n            };\n          };\n        };\n      };\n    };\n  };\n};\n\nexport const runFn10 = function (fn) {\n  return function (a) {\n    return function (b) {\n      return function (c) {\n        return function (d) {\n          return function (e) {\n            return function (f) {\n              return function (g) {\n                return function (h) {\n                  return function (i) {\n                    return function (j) {\n                      return fn(a, b, c, d, e, f, g, h, i, j);\n                    };\n                  };\n                };\n              };\n            };\n          };\n        };\n      };\n    };\n  };\n};\n", "// Generated by purs version 0.15.15\nimport * as $foreign from \"./foreign.js\";\nimport * as Control_Applicative from \"../Control.Applicative/index.js\";\nimport * as Control_Bind from \"../Control.Bind/index.js\";\nimport * as Data_Function from \"../Data.Function/index.js\";\nimport * as Data_Function_Uncurried from \"../Data.Function.Uncurried/index.js\";\nimport * as Data_Unit from \"../Data.Unit/index.js\";\nvar discard = /* #__PURE__ */ Control_Bind.discard(Control_Bind.discardUnit);\nvar warn = function () {\n    return {};\n};\nvar traceTime = function () {\n    return Data_Function_Uncurried.runFn2($foreign[\"_traceTime\"]);\n};\nvar trace = function () {\n    return function (a) {\n        return function (k) {\n            return $foreign[\"_trace\"](a, k);\n        };\n    };\n};\nvar trace1 = /* #__PURE__ */ trace();\nvar traceM = function () {\n    return function (dictMonad) {\n        var discard1 = discard(dictMonad.Bind1());\n        var pure = Control_Applicative.pure(dictMonad.Applicative0());\n        return function (s) {\n            return discard1(pure(Data_Unit.unit))(function () {\n                return trace1(s)(function (v) {\n                    return pure(Data_Unit.unit);\n                });\n            });\n        };\n    };\n};\nvar spy = function () {\n    return function (tag) {\n        return function (a) {\n            return $foreign[\"_spy\"](tag, a);\n        };\n    };\n};\nvar spy1 = /* #__PURE__ */ spy();\nvar spyWith = function () {\n    return function (msg) {\n        return function (f) {\n            return function (a) {\n                return Data_Function[\"const\"](a)(spy1(msg)(f(a)));\n            };\n        };\n    };\n};\nvar $$debugger = function () {\n    return function (f) {\n        return $foreign[\"_debugger\"](f);\n    };\n};\nexport {\n    trace,\n    traceM,\n    traceTime,\n    spy,\n    spyWith,\n    $$debugger as debugger,\n    warn\n};\n", "//------------------------------------------------------------------------------\n// Array creation --------------------------------------------------------------\n//------------------------------------------------------------------------------\n\nexport const rangeImpl = function (start, end) {\n  var step = start > end ? -1 : 1;\n  var result = new Array(step * (end - start) + 1);\n  var i = start, n = 0;\n  while (i !== end) {\n    result[n++] = i;\n    i += step;\n  }\n  result[n] = i;\n  return result;\n};\n\nvar replicateFill = function (count, value) {\n  if (count < 1) {\n    return [];\n  }\n  var result = new Array(count);\n  return result.fill(value);\n};\n\nvar replicatePolyfill = function (count, value) {\n  var result = [];\n  var n = 0;\n  for (var i = 0; i < count; i++) {\n    result[n++] = value;\n  }\n  return result;\n};\n\n// In browsers that have Array.prototype.fill we use it, as it's faster.\nexport const replicateImpl = typeof Array.prototype.fill === \"function\" ? replicateFill : replicatePolyfill;\n\nexport const fromFoldableImpl = (function () {\n  function Cons(head, tail) {\n    this.head = head;\n    this.tail = tail;\n  }\n  var emptyList = {};\n\n  function curryCons(head) {\n    return function (tail) {\n      return new Cons(head, tail);\n    };\n  }\n\n  function listToArray(list) {\n    var result = [];\n    var count = 0;\n    var xs = list;\n    while (xs !== emptyList) {\n      result[count++] = xs.head;\n      xs = xs.tail;\n    }\n    return result;\n  }\n\n  return function (foldr, xs) {\n    return listToArray(foldr(curryCons)(emptyList)(xs));\n  };\n})();\n\n//------------------------------------------------------------------------------\n// Array size ------------------------------------------------------------------\n//------------------------------------------------------------------------------\n\nexport const length = function (xs) {\n  return xs.length;\n};\n\n//------------------------------------------------------------------------------\n// Non-indexed reads -----------------------------------------------------------\n//------------------------------------------------------------------------------\n\nexport const unconsImpl = function (empty, next, xs) {\n  return xs.length === 0 ? empty({}) : next(xs[0])(xs.slice(1));\n};\n\n//------------------------------------------------------------------------------\n// Indexed operations ----------------------------------------------------------\n//------------------------------------------------------------------------------\n\nexport const indexImpl = function (just, nothing, xs, i) {\n  return i < 0 || i >= xs.length ? nothing :  just(xs[i]);\n};\n\nexport const findMapImpl = function (nothing, isJust, f, xs) {\n  for (var i = 0; i < xs.length; i++) {\n    var result = f(xs[i]);\n    if (isJust(result)) return result;\n  }\n  return nothing;\n};\n\nexport const findIndexImpl = function (just, nothing, f, xs) {\n  for (var i = 0, l = xs.length; i < l; i++) {\n    if (f(xs[i])) return just(i);\n  }\n  return nothing;\n};\n\nexport const findLastIndexImpl = function (just, nothing, f, xs) {\n  for (var i = xs.length - 1; i >= 0; i--) {\n    if (f(xs[i])) return just(i);\n  }\n  return nothing;\n};\n\nexport const _insertAt = function (just, nothing, i, a, l) {\n  if (i < 0 || i > l.length) return nothing;\n  var l1 = l.slice();\n  l1.splice(i, 0, a);\n  return just(l1);\n};\n\nexport const _deleteAt = function (just, nothing, i, l) {\n  if (i < 0 || i >= l.length) return nothing;\n  var l1 = l.slice();\n  l1.splice(i, 1);\n  return just(l1);\n};\n\nexport const _updateAt = function (just, nothing, i, a, l) {\n  if (i < 0 || i >= l.length) return nothing;\n  var l1 = l.slice();\n  l1[i] = a;\n  return just(l1);\n};\n\n//------------------------------------------------------------------------------\n// Transformations -------------------------------------------------------------\n//------------------------------------------------------------------------------\n\nexport const reverse = function (l) {\n  return l.slice().reverse();\n};\n\nexport const concat = function (xss) {\n  if (xss.length <= 10000) {\n    // This method is faster, but it crashes on big arrays.\n    // So we use it when can and fallback to simple variant otherwise.\n    return Array.prototype.concat.apply([], xss);\n  }\n\n  var result = [];\n  for (var i = 0, l = xss.length; i < l; i++) {\n    var xs = xss[i];\n    for (var j = 0, m = xs.length; j < m; j++) {\n      result.push(xs[j]);\n    }\n  }\n  return result;\n};\n\nexport const filterImpl = function (f, xs) {\n  return xs.filter(f);\n};\n\nexport const partitionImpl = function (f, xs) {\n  var yes = [];\n  var no  = [];\n  for (var i = 0; i < xs.length; i++) {\n    var x = xs[i];\n    if (f(x))\n      yes.push(x);\n    else\n      no.push(x);\n  }\n  return { yes: yes, no: no };\n};\n\nexport const scanlImpl = function (f, b, xs) {\n  var len = xs.length;\n  var acc = b;\n  var out = new Array(len);\n  for (var i = 0; i < len; i++) {\n    acc = f(acc)(xs[i]);\n    out[i] = acc;\n  }\n  return out;\n};\n\nexport const scanrImpl = function (f, b, xs) {\n  var len = xs.length;\n  var acc = b;\n  var out = new Array(len);\n  for (var i = len - 1; i >= 0; i--) {\n    acc = f(xs[i])(acc);\n    out[i] = acc;\n  }\n  return out;\n};\n\n//------------------------------------------------------------------------------\n// Sorting ---------------------------------------------------------------------\n//------------------------------------------------------------------------------\n\nexport const sortByImpl = (function () {\n  function mergeFromTo(compare, fromOrdering, xs1, xs2, from, to) {\n    var mid;\n    var i;\n    var j;\n    var k;\n    var x;\n    var y;\n    var c;\n\n    mid = from + ((to - from) >> 1);\n    if (mid - from > 1) mergeFromTo(compare, fromOrdering, xs2, xs1, from, mid);\n    if (to - mid > 1) mergeFromTo(compare, fromOrdering, xs2, xs1, mid, to);\n\n    i = from;\n    j = mid;\n    k = from;\n    while (i < mid && j < to) {\n      x = xs2[i];\n      y = xs2[j];\n      c = fromOrdering(compare(x)(y));\n      if (c > 0) {\n        xs1[k++] = y;\n        ++j;\n      }\n      else {\n        xs1[k++] = x;\n        ++i;\n      }\n    }\n    while (i < mid) {\n      xs1[k++] = xs2[i++];\n    }\n    while (j < to) {\n      xs1[k++] = xs2[j++];\n    }\n  }\n\n  return function (compare, fromOrdering, xs) {\n    var out;\n\n    if (xs.length < 2) return xs;\n\n    out = xs.slice(0);\n    mergeFromTo(compare, fromOrdering, out, xs.slice(0), 0, xs.length);\n\n    return out;\n  };\n})();\n\n//------------------------------------------------------------------------------\n// Subarrays -------------------------------------------------------------------\n//------------------------------------------------------------------------------\n\nexport const sliceImpl = function (s, e, l) {\n  return l.slice(s, e);\n};\n\n//------------------------------------------------------------------------------\n// Zipping ---------------------------------------------------------------------\n//------------------------------------------------------------------------------\n\nexport const zipWithImpl = function (f, xs, ys) {\n  var l = xs.length < ys.length ? xs.length : ys.length;\n  var result = new Array(l);\n  for (var i = 0; i < l; i++) {\n    result[i] = f(xs[i])(ys[i]);\n  }\n  return result;\n};\n\n//------------------------------------------------------------------------------\n// Folding ---------------------------------------------------------------------\n//------------------------------------------------------------------------------\n\nexport const anyImpl = function (p, xs) {\n  var len = xs.length;\n  for (var i = 0; i < len; i++) {\n    if (p(xs[i])) return true;\n  }\n  return false;\n};\n\nexport const allImpl = function (p, xs) {\n  var len = xs.length;\n  for (var i = 0; i < len; i++) {\n    if (!p(xs[i])) return false;\n  }\n  return true;\n};\n\n//------------------------------------------------------------------------------\n// Partial ---------------------------------------------------------------------\n//------------------------------------------------------------------------------\n\nexport const unsafeIndexImpl = function (xs, n) {\n  return xs[n];\n};\n", "function newSTArray() {\n  return [];\n}\nexport { newSTArray as new };\n\nexport const peekImpl = function (just, nothing, i, xs) {\n  return i >= 0 && i < xs.length ? just(xs[i]) : nothing;\n};\n\nexport const pokeImpl = function (i, a, xs) {\n  var ret = i >= 0 && i < xs.length;\n  if (ret) xs[i] = a;\n  return ret;\n};\n\nexport const lengthImpl = function (xs) {\n  return xs.length;\n};\n\nexport const popImpl = function (just, nothing, xs) {\n  return xs.length > 0 ? just(xs.pop()) : nothing;\n};\n\nexport const pushAllImpl = function (as, xs) {\n  return xs.push.apply(xs, as);\n};\n\nexport const shiftImpl = function (just, nothing, xs) {\n  return xs.length > 0 ? just(xs.shift()) : nothing;\n};\n\nexport const unshiftAllImpl = function (as, xs) {\n  return xs.unshift.apply(xs, as);\n};\n\nexport const spliceImpl = function (i, howMany, bs, xs) {\n  return xs.splice.apply(xs, [i, howMany].concat(bs));\n};\n\nfunction unsafeFreezeThawImpl(xs) {\n  return xs;\n}\n\nexport const unsafeFreezeImpl = unsafeFreezeThawImpl;\n\nexport const unsafeThawImpl = unsafeFreezeThawImpl;\n\nfunction copyImpl(xs) {\n  return xs.slice();\n}\n\nexport const freezeImpl = copyImpl;\n\nexport const thawImpl = copyImpl;\n\nexport const cloneImpl = copyImpl;\n\nexport const sortByImpl = (function () {\n  function mergeFromTo(compare, fromOrdering, xs1, xs2, from, to) {\n    var mid;\n    var i;\n    var j;\n    var k;\n    var x;\n    var y;\n    var c;\n\n    mid = from + ((to - from) >> 1);\n    if (mid - from > 1) mergeFromTo(compare, fromOrdering, xs2, xs1, from, mid);\n    if (to - mid > 1) mergeFromTo(compare, fromOrdering, xs2, xs1, mid, to);\n\n    i = from;\n    j = mid;\n    k = from;\n    while (i < mid && j < to) {\n      x = xs2[i];\n      y = xs2[j];\n      c = fromOrdering(compare(x)(y));\n      if (c > 0) {\n        xs1[k++] = y;\n        ++j;\n      } else {\n        xs1[k++] = x;\n        ++i;\n      }\n    }\n    while (i < mid) {\n      xs1[k++] = xs2[i++];\n    }\n    while (j < to) {\n      xs1[k++] = xs2[j++];\n    }\n  }\n\n  return function (compare, fromOrdering, xs) {\n    if (xs.length < 2) return xs;\n\n    mergeFromTo(compare, fromOrdering, xs, xs.slice(0), 0, xs.length);\n\n    return xs;\n  };\n})();\n\nexport const toAssocArrayImpl = function (xs) {\n  var n = xs.length;\n  var as = new Array(n);\n  for (var i = 0; i < n; i++) as[i] = { value: xs[i], index: i };\n  return as;\n};\n\nexport const pushImpl = function (a, xs) {\n  return xs.push(a);\n};\n", "export const mkSTFn1 = function mkSTFn1(fn) {\n  return function(x) {\n    return fn(x)();\n  };\n};\n  \nexport const mkSTFn2 = function mkSTFn2(fn) {\n  return function(a, b) {\n    return fn(a)(b)();\n  };\n};\n  \nexport const mkSTFn3 = function mkSTFn3(fn) {\n  return function(a, b, c) {\n    return fn(a)(b)(c)();\n  };\n};\n  \nexport const mkSTFn4 = function mkSTFn4(fn) {\n  return function(a, b, c, d) {\n    return fn(a)(b)(c)(d)();\n  };\n};\n  \nexport const mkSTFn5 = function mkSTFn5(fn) {\n  return function(a, b, c, d, e) {\n    return fn(a)(b)(c)(d)(e)();\n  };\n};\n  \nexport const mkSTFn6 = function mkSTFn6(fn) {\n  return function(a, b, c, d, e, f) {\n    return fn(a)(b)(c)(d)(e)(f)();\n  };\n};\n  \nexport const mkSTFn7 = function mkSTFn7(fn) {\n  return function(a, b, c, d, e, f, g) {\n    return fn(a)(b)(c)(d)(e)(f)(g)();\n  };\n};\n  \nexport const mkSTFn8 = function mkSTFn8(fn) {\n  return function(a, b, c, d, e, f, g, h) {\n    return fn(a)(b)(c)(d)(e)(f)(g)(h)();\n  };\n};\n  \nexport const mkSTFn9 = function mkSTFn9(fn) {\n  return function(a, b, c, d, e, f, g, h, i) {\n    return fn(a)(b)(c)(d)(e)(f)(g)(h)(i)();\n  };\n};\n  \nexport const mkSTFn10 = function mkSTFn10(fn) {\n  return function(a, b, c, d, e, f, g, h, i, j) {\n    return fn(a)(b)(c)(d)(e)(f)(g)(h)(i)(j)();\n  };\n};\n  \nexport const runSTFn1 = function runSTFn1(fn) {\n  return function(a) {\n    return function() {\n      return fn(a);\n    };\n  };\n};\n  \nexport const runSTFn2 = function runSTFn2(fn) {\n  return function(a) {\n    return function(b) {\n      return function() {\n        return fn(a, b);\n      };\n    };\n  };\n};\n  \nexport const runSTFn3 = function runSTFn3(fn) {\n  return function(a) {\n    return function(b) {\n      return function(c) {\n        return function() {\n          return fn(a, b, c);\n        };\n      };\n    };\n  };\n};\n  \nexport const runSTFn4 = function runSTFn4(fn) {\n  return function(a) {\n    return function(b) {\n      return function(c) {\n        return function(d) {\n          return function() {\n            return fn(a, b, c, d);\n          };\n        };\n      };\n    };\n  };\n};\n  \nexport const runSTFn5 = function runSTFn5(fn) {\n  return function(a) {\n    return function(b) {\n      return function(c) {\n        return function(d) {\n          return function(e) {\n            return function() {\n              return fn(a, b, c, d, e);\n            };\n          };\n        };\n      };\n    };\n  };\n};\n  \nexport const runSTFn6 = function runSTFn6(fn) {\n  return function(a) {\n    return function(b) {\n      return function(c) {\n        return function(d) {\n          return function(e) {\n            return function(f) {\n              return function() {\n                return fn(a, b, c, d, e, f);\n              };\n            };\n          };\n        };\n      };\n    };\n  };\n};\n  \nexport const runSTFn7 = function runSTFn7(fn) {\n  return function(a) {\n    return function(b) {\n      return function(c) {\n        return function(d) {\n          return function(e) {\n            return function(f) {\n              return function(g) {\n                return function() {\n                  return fn(a, b, c, d, e, f, g);\n                };\n              };\n            };\n          };\n        };\n      };\n    };\n  };\n};\n  \nexport const runSTFn8 = function runSTFn8(fn) {\n  return function(a) {\n    return function(b) {\n      return function(c) {\n        return function(d) {\n          return function(e) {\n            return function(f) {\n              return function(g) {\n                return function(h) {\n                  return function() {\n                    return fn(a, b, c, d, e, f, g, h);\n                  };\n                };\n              };\n            };\n          };\n        };\n      };\n    };\n  };\n};\n  \nexport const runSTFn9 = function runSTFn9(fn) {\n  return function(a) {\n    return function(b) {\n      return function(c) {\n        return function(d) {\n          return function(e) {\n            return function(f) {\n              return function(g) {\n                return function(h) {\n                  return function(i) {\n                    return function() {\n                      return fn(a, b, c, d, e, f, g, h, i);\n                    };\n                  };\n                };\n              };\n            };\n          };\n        };\n      };\n    };\n  };\n};\n  \nexport const runSTFn10 = function runSTFn10(fn) {\n  return function(a) {\n    return function(b) {\n      return function(c) {\n        return function(d) {\n          return function(e) {\n            return function(f) {\n              return function(g) {\n                return function(h) {\n                  return function(i) {\n                    return function(j) {\n                      return function() {\n                        return fn(a, b, c, d, e, f, g, h, i, j);\n                      };\n                    };\n                  };\n                };\n              };\n            };\n          };\n        };\n      };\n    };\n  };\n};", "// Generated by purs version 0.15.15\nimport * as $foreign from \"./foreign.js\";\nimport * as Control_Bind from \"../Control.Bind/index.js\";\nimport * as Control_Monad_ST_Internal from \"../Control.Monad.ST.Internal/index.js\";\nimport * as Control_Monad_ST_Uncurried from \"../Control.Monad.ST.Uncurried/index.js\";\nimport * as Data_Maybe from \"../Data.Maybe/index.js\";\nimport * as Data_Ord from \"../Data.Ord/index.js\";\nimport * as Data_Ordering from \"../Data.Ordering/index.js\";\nvar bind = /* #__PURE__ */ Control_Bind.bind(Control_Monad_ST_Internal.bindST);\nvar unshiftAll = /* #__PURE__ */ Control_Monad_ST_Uncurried.runSTFn2($foreign.unshiftAllImpl);\nvar unshift = function (a) {\n    return Control_Monad_ST_Uncurried.runSTFn2($foreign.unshiftAllImpl)([ a ]);\n};\nvar unsafeThaw = /* #__PURE__ */ Control_Monad_ST_Uncurried.runSTFn1($foreign.unsafeThawImpl);\nvar unsafeFreeze = /* #__PURE__ */ Control_Monad_ST_Uncurried.runSTFn1($foreign.unsafeFreezeImpl);\nvar toAssocArray = /* #__PURE__ */ Control_Monad_ST_Uncurried.runSTFn1($foreign.toAssocArrayImpl);\nvar thaw = /* #__PURE__ */ Control_Monad_ST_Uncurried.runSTFn1($foreign.thawImpl);\nvar withArray = function (f) {\n    return function (xs) {\n        return function __do() {\n            var result = thaw(xs)();\n            f(result)();\n            return unsafeFreeze(result)();\n        };\n    };\n};\nvar splice = /* #__PURE__ */ Control_Monad_ST_Uncurried.runSTFn4($foreign.spliceImpl);\nvar sortBy = function (comp) {\n    return Control_Monad_ST_Uncurried.runSTFn3($foreign.sortByImpl)(comp)(function (v) {\n        if (v instanceof Data_Ordering.GT) {\n            return 1;\n        };\n        if (v instanceof Data_Ordering.EQ) {\n            return 0;\n        };\n        if (v instanceof Data_Ordering.LT) {\n            return -1 | 0;\n        };\n        throw new Error(\"Failed pattern match at Data.Array.ST (line 129, column 40 - line 132, column 11): \" + [ v.constructor.name ]);\n    });\n};\nvar sortWith = function (dictOrd) {\n    var comparing = Data_Ord.comparing(dictOrd);\n    return function (f) {\n        return sortBy(comparing(f));\n    };\n};\nvar sort = function (dictOrd) {\n    return sortBy(Data_Ord.compare(dictOrd));\n};\nvar shift = /* #__PURE__ */ (function () {\n    return Control_Monad_ST_Uncurried.runSTFn3($foreign.shiftImpl)(Data_Maybe.Just.create)(Data_Maybe.Nothing.value);\n})();\nvar run = function (st) {\n    return bind(st)(unsafeFreeze)();\n};\nvar pushAll = /* #__PURE__ */ Control_Monad_ST_Uncurried.runSTFn2($foreign.pushAllImpl);\nvar push = /* #__PURE__ */ Control_Monad_ST_Uncurried.runSTFn2($foreign.pushImpl);\nvar pop = /* #__PURE__ */ (function () {\n    return Control_Monad_ST_Uncurried.runSTFn3($foreign.popImpl)(Data_Maybe.Just.create)(Data_Maybe.Nothing.value);\n})();\nvar poke = /* #__PURE__ */ Control_Monad_ST_Uncurried.runSTFn3($foreign.pokeImpl);\nvar peek = /* #__PURE__ */ (function () {\n    return Control_Monad_ST_Uncurried.runSTFn4($foreign.peekImpl)(Data_Maybe.Just.create)(Data_Maybe.Nothing.value);\n})();\nvar modify = function (i) {\n    return function (f) {\n        return function (xs) {\n            return function __do() {\n                var entry = peek(i)(xs)();\n                if (entry instanceof Data_Maybe.Just) {\n                    return poke(i)(f(entry.value0))(xs)();\n                };\n                if (entry instanceof Data_Maybe.Nothing) {\n                    return false;\n                };\n                throw new Error(\"Failed pattern match at Data.Array.ST (line 234, column 3 - line 236, column 26): \" + [ entry.constructor.name ]);\n            };\n        };\n    };\n};\nvar length = /* #__PURE__ */ Control_Monad_ST_Uncurried.runSTFn1($foreign.lengthImpl);\nvar freeze = /* #__PURE__ */ Control_Monad_ST_Uncurried.runSTFn1($foreign.freezeImpl);\nvar clone = /* #__PURE__ */ Control_Monad_ST_Uncurried.runSTFn1($foreign.cloneImpl);\nexport {\n    new\n} from \"./foreign.js\";\nexport {\n    run,\n    withArray,\n    peek,\n    poke,\n    modify,\n    length,\n    pop,\n    push,\n    pushAll,\n    shift,\n    unshift,\n    unshiftAll,\n    splice,\n    sort,\n    sortBy,\n    sortWith,\n    freeze,\n    thaw,\n    clone,\n    unsafeFreeze,\n    unsafeThaw,\n    toAssocArray\n};\n", "export const mapWithIndexArray = function (f) {\n  return function (xs) {\n    var l = xs.length;\n    var result = Array(l);\n    for (var i = 0; i < l; i++) {\n      result[i] = f(i)(xs[i]);\n    }\n    return result;\n  };\n};\n", "// Generated by purs version 0.15.15\nimport * as $foreign from \"./foreign.js\";\nimport * as Data_Bifunctor from \"../Data.Bifunctor/index.js\";\nimport * as Data_Const from \"../Data.Const/index.js\";\nimport * as Data_Either from \"../Data.Either/index.js\";\nimport * as Data_Function from \"../Data.Function/index.js\";\nimport * as Data_Functor from \"../Data.Functor/index.js\";\nimport * as Data_Functor_App from \"../Data.Functor.App/index.js\";\nimport * as Data_Functor_Compose from \"../Data.Functor.Compose/index.js\";\nimport * as Data_Functor_Coproduct from \"../Data.Functor.Coproduct/index.js\";\nimport * as Data_Functor_Product from \"../Data.Functor.Product/index.js\";\nimport * as Data_Identity from \"../Data.Identity/index.js\";\nimport * as Data_Maybe from \"../Data.Maybe/index.js\";\nimport * as Data_Maybe_First from \"../Data.Maybe.First/index.js\";\nimport * as Data_Maybe_Last from \"../Data.Maybe.Last/index.js\";\nimport * as Data_Monoid_Additive from \"../Data.Monoid.Additive/index.js\";\nimport * as Data_Monoid_Conj from \"../Data.Monoid.Conj/index.js\";\nimport * as Data_Monoid_Disj from \"../Data.Monoid.Disj/index.js\";\nimport * as Data_Monoid_Dual from \"../Data.Monoid.Dual/index.js\";\nimport * as Data_Monoid_Multiplicative from \"../Data.Monoid.Multiplicative/index.js\";\nimport * as Data_Tuple from \"../Data.Tuple/index.js\";\nimport * as Data_Unit from \"../Data.Unit/index.js\";\nvar map = /* #__PURE__ */ Data_Functor.map(Data_Tuple.functorTuple);\nvar bimap = /* #__PURE__ */ Data_Bifunctor.bimap(Data_Bifunctor.bifunctorTuple);\nvar map1 = /* #__PURE__ */ Data_Functor.map(Data_Monoid_Multiplicative.functorMultiplicative);\nvar map2 = /* #__PURE__ */ Data_Functor.map(Data_Maybe.functorMaybe);\nvar map3 = /* #__PURE__ */ Data_Functor.map(Data_Maybe_Last.functorLast);\nvar map4 = /* #__PURE__ */ Data_Functor.map(Data_Maybe_First.functorFirst);\nvar map5 = /* #__PURE__ */ Data_Functor.map(Data_Either.functorEither);\nvar map6 = /* #__PURE__ */ Data_Functor.map(Data_Monoid_Dual.functorDual);\nvar map7 = /* #__PURE__ */ Data_Functor.map(Data_Monoid_Disj.functorDisj);\nvar bimap1 = /* #__PURE__ */ Data_Bifunctor.bimap(Data_Bifunctor.bifunctorEither);\nvar map8 = /* #__PURE__ */ Data_Functor.map(Data_Monoid_Conj.functorConj);\nvar map9 = /* #__PURE__ */ Data_Functor.map(Data_Monoid_Additive.functorAdditive);\nvar mapWithIndex = function (dict) {\n    return dict.mapWithIndex;\n};\nvar mapDefault = function (dictFunctorWithIndex) {\n    var mapWithIndex1 = mapWithIndex(dictFunctorWithIndex);\n    return function (f) {\n        return mapWithIndex1(Data_Function[\"const\"](f));\n    };\n};\nvar functorWithIndexTuple = {\n    mapWithIndex: function (f) {\n        return map(f(Data_Unit.unit));\n    },\n    Functor0: function () {\n        return Data_Tuple.functorTuple;\n    }\n};\nvar functorWithIndexProduct = function (dictFunctorWithIndex) {\n    var mapWithIndex1 = mapWithIndex(dictFunctorWithIndex);\n    var functorProduct = Data_Functor_Product.functorProduct(dictFunctorWithIndex.Functor0());\n    return function (dictFunctorWithIndex1) {\n        var mapWithIndex2 = mapWithIndex(dictFunctorWithIndex1);\n        var functorProduct1 = functorProduct(dictFunctorWithIndex1.Functor0());\n        return {\n            mapWithIndex: function (f) {\n                return function (v) {\n                    return bimap(mapWithIndex1(function ($63) {\n                        return f(Data_Either.Left.create($63));\n                    }))(mapWithIndex2(function ($64) {\n                        return f(Data_Either.Right.create($64));\n                    }))(v);\n                };\n            },\n            Functor0: function () {\n                return functorProduct1;\n            }\n        };\n    };\n};\nvar functorWithIndexMultiplicative = {\n    mapWithIndex: function (f) {\n        return map1(f(Data_Unit.unit));\n    },\n    Functor0: function () {\n        return Data_Monoid_Multiplicative.functorMultiplicative;\n    }\n};\nvar functorWithIndexMaybe = {\n    mapWithIndex: function (f) {\n        return map2(f(Data_Unit.unit));\n    },\n    Functor0: function () {\n        return Data_Maybe.functorMaybe;\n    }\n};\nvar functorWithIndexLast = {\n    mapWithIndex: function (f) {\n        return map3(f(Data_Unit.unit));\n    },\n    Functor0: function () {\n        return Data_Maybe_Last.functorLast;\n    }\n};\nvar functorWithIndexIdentity = {\n    mapWithIndex: function (f) {\n        return function (v) {\n            return f(Data_Unit.unit)(v);\n        };\n    },\n    Functor0: function () {\n        return Data_Identity.functorIdentity;\n    }\n};\nvar functorWithIndexFirst = {\n    mapWithIndex: function (f) {\n        return map4(f(Data_Unit.unit));\n    },\n    Functor0: function () {\n        return Data_Maybe_First.functorFirst;\n    }\n};\nvar functorWithIndexEither = {\n    mapWithIndex: function (f) {\n        return map5(f(Data_Unit.unit));\n    },\n    Functor0: function () {\n        return Data_Either.functorEither;\n    }\n};\nvar functorWithIndexDual = {\n    mapWithIndex: function (f) {\n        return map6(f(Data_Unit.unit));\n    },\n    Functor0: function () {\n        return Data_Monoid_Dual.functorDual;\n    }\n};\nvar functorWithIndexDisj = {\n    mapWithIndex: function (f) {\n        return map7(f(Data_Unit.unit));\n    },\n    Functor0: function () {\n        return Data_Monoid_Disj.functorDisj;\n    }\n};\nvar functorWithIndexCoproduct = function (dictFunctorWithIndex) {\n    var mapWithIndex1 = mapWithIndex(dictFunctorWithIndex);\n    var functorCoproduct = Data_Functor_Coproduct.functorCoproduct(dictFunctorWithIndex.Functor0());\n    return function (dictFunctorWithIndex1) {\n        var mapWithIndex2 = mapWithIndex(dictFunctorWithIndex1);\n        var functorCoproduct1 = functorCoproduct(dictFunctorWithIndex1.Functor0());\n        return {\n            mapWithIndex: function (f) {\n                return function (v) {\n                    return bimap1(mapWithIndex1(function ($65) {\n                        return f(Data_Either.Left.create($65));\n                    }))(mapWithIndex2(function ($66) {\n                        return f(Data_Either.Right.create($66));\n                    }))(v);\n                };\n            },\n            Functor0: function () {\n                return functorCoproduct1;\n            }\n        };\n    };\n};\nvar functorWithIndexConst = {\n    mapWithIndex: function (v) {\n        return function (v1) {\n            return v1;\n        };\n    },\n    Functor0: function () {\n        return Data_Const.functorConst;\n    }\n};\nvar functorWithIndexConj = {\n    mapWithIndex: function (f) {\n        return map8(f(Data_Unit.unit));\n    },\n    Functor0: function () {\n        return Data_Monoid_Conj.functorConj;\n    }\n};\nvar functorWithIndexCompose = function (dictFunctorWithIndex) {\n    var mapWithIndex1 = mapWithIndex(dictFunctorWithIndex);\n    var functorCompose = Data_Functor_Compose.functorCompose(dictFunctorWithIndex.Functor0());\n    return function (dictFunctorWithIndex1) {\n        var mapWithIndex2 = mapWithIndex(dictFunctorWithIndex1);\n        var functorCompose1 = functorCompose(dictFunctorWithIndex1.Functor0());\n        return {\n            mapWithIndex: function (f) {\n                return function (v) {\n                    return mapWithIndex1((function () {\n                        var $67 = Data_Tuple.curry(f);\n                        return function ($68) {\n                            return mapWithIndex2($67($68));\n                        };\n                    })())(v);\n                };\n            },\n            Functor0: function () {\n                return functorCompose1;\n            }\n        };\n    };\n};\nvar functorWithIndexArray = {\n    mapWithIndex: $foreign.mapWithIndexArray,\n    Functor0: function () {\n        return Data_Functor.functorArray;\n    }\n};\nvar functorWithIndexApp = function (dictFunctorWithIndex) {\n    var mapWithIndex1 = mapWithIndex(dictFunctorWithIndex);\n    var functorApp = Data_Functor_App.functorApp(dictFunctorWithIndex.Functor0());\n    return {\n        mapWithIndex: function (f) {\n            return function (v) {\n                return mapWithIndex1(f)(v);\n            };\n        },\n        Functor0: function () {\n            return functorApp;\n        }\n    };\n};\nvar functorWithIndexAdditive = {\n    mapWithIndex: function (f) {\n        return map9(f(Data_Unit.unit));\n    },\n    Functor0: function () {\n        return Data_Monoid_Additive.functorAdditive;\n    }\n};\nexport {\n    mapWithIndex,\n    mapDefault,\n    functorWithIndexArray,\n    functorWithIndexMaybe,\n    functorWithIndexFirst,\n    functorWithIndexLast,\n    functorWithIndexAdditive,\n    functorWithIndexDual,\n    functorWithIndexConj,\n    functorWithIndexDisj,\n    functorWithIndexMultiplicative,\n    functorWithIndexEither,\n    functorWithIndexTuple,\n    functorWithIndexIdentity,\n    functorWithIndexConst,\n    functorWithIndexProduct,\n    functorWithIndexCoproduct,\n    functorWithIndexCompose,\n    functorWithIndexApp\n};\n", "// Generated by purs version 0.15.15\nimport * as $foreign from \"./foreign.js\";\nimport * as Control_Alt from \"../Control.Alt/index.js\";\nimport * as Control_Applicative from \"../Control.Applicative/index.js\";\nimport * as Control_Apply from \"../Control.Apply/index.js\";\nimport * as Control_Bind from \"../Control.Bind/index.js\";\nimport * as Control_Category from \"../Control.Category/index.js\";\nimport * as Control_Lazy from \"../Control.Lazy/index.js\";\nimport * as Control_Monad_Rec_Class from \"../Control.Monad.Rec.Class/index.js\";\nimport * as Control_Monad_ST_Internal from \"../Control.Monad.ST.Internal/index.js\";\nimport * as Data_Array_ST from \"../Data.Array.ST/index.js\";\nimport * as Data_Array_ST_Iterator from \"../Data.Array.ST.Iterator/index.js\";\nimport * as Data_Boolean from \"../Data.Boolean/index.js\";\nimport * as Data_Eq from \"../Data.Eq/index.js\";\nimport * as Data_Foldable from \"../Data.Foldable/index.js\";\nimport * as Data_Function from \"../Data.Function/index.js\";\nimport * as Data_Function_Uncurried from \"../Data.Function.Uncurried/index.js\";\nimport * as Data_Functor from \"../Data.Functor/index.js\";\nimport * as Data_FunctorWithIndex from \"../Data.FunctorWithIndex/index.js\";\nimport * as Data_Maybe from \"../Data.Maybe/index.js\";\nimport * as Data_Ord from \"../Data.Ord/index.js\";\nimport * as Data_Ordering from \"../Data.Ordering/index.js\";\nimport * as Data_Semigroup from \"../Data.Semigroup/index.js\";\nimport * as Data_Traversable from \"../Data.Traversable/index.js\";\nimport * as Data_Tuple from \"../Data.Tuple/index.js\";\nimport * as Data_Unfoldable from \"../Data.Unfoldable/index.js\";\nvar sequence = /* #__PURE__ */ Data_Traversable.sequence(Data_Traversable.traversableArray);\nvar traverse_ = /* #__PURE__ */ Data_Foldable.traverse_(Control_Monad_ST_Internal.applicativeST);\nvar $$void = /* #__PURE__ */ Data_Functor[\"void\"](Control_Monad_ST_Internal.functorST);\nvar intercalate1 = /* #__PURE__ */ Data_Foldable.intercalate(Data_Foldable.foldableArray);\nvar apply = /* #__PURE__ */ Control_Apply.apply(Data_Maybe.applyMaybe);\nvar map = /* #__PURE__ */ Data_Functor.map(Data_Maybe.functorMaybe);\nvar map1 = /* #__PURE__ */ Data_Functor.map(Data_Functor.functorArray);\nvar map2 = /* #__PURE__ */ Data_Functor.map(Control_Monad_ST_Internal.functorST);\nvar fromJust = /* #__PURE__ */ Data_Maybe.fromJust();\nvar when = /* #__PURE__ */ Control_Applicative.when(Control_Monad_ST_Internal.applicativeST);\nvar notEq = /* #__PURE__ */ Data_Eq.notEq(Data_Ordering.eqOrdering);\nvar eq1 = /* #__PURE__ */ Data_Eq.eq(Data_Ordering.eqOrdering);\nvar foldMap1 = /* #__PURE__ */ Data_Foldable.foldMap(Data_Foldable.foldableArray);\nvar fold1 = /* #__PURE__ */ Data_Foldable.fold(Data_Foldable.foldableArray);\nvar append = /* #__PURE__ */ Data_Semigroup.append(Data_Semigroup.semigroupArray);\nvar traverse = /* #__PURE__ */ Data_Traversable.traverse(Data_Traversable.traversableArray);\nvar zipWith = /* #__PURE__ */ Data_Function_Uncurried.runFn3($foreign.zipWithImpl);\nvar zipWithA = function (dictApplicative) {\n    var sequence1 = sequence(dictApplicative);\n    return function (f) {\n        return function (xs) {\n            return function (ys) {\n                return sequence1(zipWith(f)(xs)(ys));\n            };\n        };\n    };\n};\nvar zip = /* #__PURE__ */ (function () {\n    return zipWith(Data_Tuple.Tuple.create);\n})();\nvar updateAtIndices = function (dictFoldable) {\n    var traverse_1 = traverse_(dictFoldable);\n    return function (us) {\n        return function (xs) {\n            return Data_Array_ST.withArray(function (res) {\n                return traverse_1(function (v) {\n                    return Data_Array_ST.poke(v.value0)(v.value1)(res);\n                })(us);\n            })(xs)();\n        };\n    };\n};\nvar updateAt = /* #__PURE__ */ (function () {\n    return Data_Function_Uncurried.runFn5($foreign[\"_updateAt\"])(Data_Maybe.Just.create)(Data_Maybe.Nothing.value);\n})();\nvar unsafeIndex = function () {\n    return Data_Function_Uncurried.runFn2($foreign.unsafeIndexImpl);\n};\nvar unsafeIndex1 = /* #__PURE__ */ unsafeIndex();\nvar uncons = /* #__PURE__ */ (function () {\n    return Data_Function_Uncurried.runFn3($foreign.unconsImpl)(Data_Function[\"const\"](Data_Maybe.Nothing.value))(function (x) {\n        return function (xs) {\n            return new Data_Maybe.Just({\n                head: x,\n                tail: xs\n            });\n        };\n    });\n})();\nvar toUnfoldable = function (dictUnfoldable) {\n    var unfoldr = Data_Unfoldable.unfoldr(dictUnfoldable);\n    return function (xs) {\n        var len = $foreign.length(xs);\n        var f = function (i) {\n            if (i < len) {\n                return new Data_Maybe.Just(new Data_Tuple.Tuple(unsafeIndex1(xs)(i), i + 1 | 0));\n            };\n            if (Data_Boolean.otherwise) {\n                return Data_Maybe.Nothing.value;\n            };\n            throw new Error(\"Failed pattern match at Data.Array (line 163, column 3 - line 165, column 26): \" + [ i.constructor.name ]);\n        };\n        return unfoldr(f)(0);\n    };\n};\nvar tail = /* #__PURE__ */ (function () {\n    return Data_Function_Uncurried.runFn3($foreign.unconsImpl)(Data_Function[\"const\"](Data_Maybe.Nothing.value))(function (v) {\n        return function (xs) {\n            return new Data_Maybe.Just(xs);\n        };\n    });\n})();\nvar sortBy = function (comp) {\n    return Data_Function_Uncurried.runFn3($foreign.sortByImpl)(comp)(function (v) {\n        if (v instanceof Data_Ordering.GT) {\n            return 1;\n        };\n        if (v instanceof Data_Ordering.EQ) {\n            return 0;\n        };\n        if (v instanceof Data_Ordering.LT) {\n            return -1 | 0;\n        };\n        throw new Error(\"Failed pattern match at Data.Array (line 897, column 38 - line 900, column 11): \" + [ v.constructor.name ]);\n    });\n};\nvar sortWith = function (dictOrd) {\n    var comparing = Data_Ord.comparing(dictOrd);\n    return function (f) {\n        return sortBy(comparing(f));\n    };\n};\nvar sortWith1 = /* #__PURE__ */ sortWith(Data_Ord.ordInt);\nvar sort = function (dictOrd) {\n    var compare = Data_Ord.compare(dictOrd);\n    return function (xs) {\n        return sortBy(compare)(xs);\n    };\n};\nvar snoc = function (xs) {\n    return function (x) {\n        return Data_Array_ST.withArray(Data_Array_ST.push(x))(xs)();\n    };\n};\nvar slice = /* #__PURE__ */ Data_Function_Uncurried.runFn3($foreign.sliceImpl);\nvar splitAt = function (v) {\n    return function (v1) {\n        if (v <= 0) {\n            return {\n                before: [  ],\n                after: v1\n            };\n        };\n        return {\n            before: slice(0)(v)(v1),\n            after: slice(v)($foreign.length(v1))(v1)\n        };\n    };\n};\nvar take = function (n) {\n    return function (xs) {\n        var $152 = n < 1;\n        if ($152) {\n            return [  ];\n        };\n        return slice(0)(n)(xs);\n    };\n};\nvar singleton = function (a) {\n    return [ a ];\n};\nvar scanr = /* #__PURE__ */ Data_Function_Uncurried.runFn3($foreign.scanrImpl);\nvar scanl = /* #__PURE__ */ Data_Function_Uncurried.runFn3($foreign.scanlImpl);\nvar replicate = /* #__PURE__ */ Data_Function_Uncurried.runFn2($foreign.replicateImpl);\nvar range = /* #__PURE__ */ Data_Function_Uncurried.runFn2($foreign.rangeImpl);\nvar partition = /* #__PURE__ */ Data_Function_Uncurried.runFn2($foreign.partitionImpl);\nvar $$null = function (xs) {\n    return $foreign.length(xs) === 0;\n};\nvar modifyAtIndices = function (dictFoldable) {\n    var traverse_1 = traverse_(dictFoldable);\n    return function (is) {\n        return function (f) {\n            return function (xs) {\n                return Data_Array_ST.withArray(function (res) {\n                    return traverse_1(function (i) {\n                        return Data_Array_ST.modify(i)(f)(res);\n                    })(is);\n                })(xs)();\n            };\n        };\n    };\n};\nvar mapWithIndex = /* #__PURE__ */ Data_FunctorWithIndex.mapWithIndex(Data_FunctorWithIndex.functorWithIndexArray);\nvar intersperse = function (a) {\n    return function (arr) {\n        var v = $foreign.length(arr);\n        if (v < 2) {\n            return arr;\n        };\n        if (Data_Boolean.otherwise) {\n            return Data_Array_ST.run((function () {\n                var unsafeGetElem = function (idx) {\n                    return unsafeIndex1(arr)(idx);\n                };\n                return function __do() {\n                    var out = Data_Array_ST[\"new\"]();\n                    Data_Array_ST.push(unsafeGetElem(0))(out)();\n                    Control_Monad_ST_Internal[\"for\"](1)(v)(function (idx) {\n                        return function __do() {\n                            Data_Array_ST.push(a)(out)();\n                            return $$void(Data_Array_ST.push(unsafeGetElem(idx))(out))();\n                        };\n                    })();\n                    return out;\n                };\n            })());\n        };\n        throw new Error(\"Failed pattern match at Data.Array (line 623, column 21 - line 633, column 17): \" + [ v.constructor.name ]);\n    };\n};\nvar intercalate = function (dictMonoid) {\n    return intercalate1(dictMonoid);\n};\nvar insertAt = /* #__PURE__ */ (function () {\n    return Data_Function_Uncurried.runFn5($foreign[\"_insertAt\"])(Data_Maybe.Just.create)(Data_Maybe.Nothing.value);\n})();\nvar init = function (xs) {\n    if ($$null(xs)) {\n        return Data_Maybe.Nothing.value;\n    };\n    if (Data_Boolean.otherwise) {\n        return new Data_Maybe.Just(slice(0)($foreign.length(xs) - 1 | 0)(xs));\n    };\n    throw new Error(\"Failed pattern match at Data.Array (line 351, column 1 - line 351, column 45): \" + [ xs.constructor.name ]);\n};\nvar index = /* #__PURE__ */ (function () {\n    return Data_Function_Uncurried.runFn4($foreign.indexImpl)(Data_Maybe.Just.create)(Data_Maybe.Nothing.value);\n})();\nvar last = function (xs) {\n    return index(xs)($foreign.length(xs) - 1 | 0);\n};\nvar unsnoc = function (xs) {\n    return apply(map(function (v) {\n        return function (v1) {\n            return {\n                init: v,\n                last: v1\n            };\n        };\n    })(init(xs)))(last(xs));\n};\nvar modifyAt = function (i) {\n    return function (f) {\n        return function (xs) {\n            var go = function (x) {\n                return updateAt(i)(f(x))(xs);\n            };\n            return Data_Maybe.maybe(Data_Maybe.Nothing.value)(go)(index(xs)(i));\n        };\n    };\n};\nvar span = function (p) {\n    return function (arr) {\n        var go = function ($copy_i) {\n            var $tco_done = false;\n            var $tco_result;\n            function $tco_loop(i) {\n                var v = index(arr)(i);\n                if (v instanceof Data_Maybe.Just) {\n                    var $156 = p(v.value0);\n                    if ($156) {\n                        $copy_i = i + 1 | 0;\n                        return;\n                    };\n                    $tco_done = true;\n                    return new Data_Maybe.Just(i);\n                };\n                if (v instanceof Data_Maybe.Nothing) {\n                    $tco_done = true;\n                    return Data_Maybe.Nothing.value;\n                };\n                throw new Error(\"Failed pattern match at Data.Array (line 1035, column 5 - line 1037, column 25): \" + [ v.constructor.name ]);\n            };\n            while (!$tco_done) {\n                $tco_result = $tco_loop($copy_i);\n            };\n            return $tco_result;\n        };\n        var breakIndex = go(0);\n        if (breakIndex instanceof Data_Maybe.Just && breakIndex.value0 === 0) {\n            return {\n                init: [  ],\n                rest: arr\n            };\n        };\n        if (breakIndex instanceof Data_Maybe.Just) {\n            return {\n                init: slice(0)(breakIndex.value0)(arr),\n                rest: slice(breakIndex.value0)($foreign.length(arr))(arr)\n            };\n        };\n        if (breakIndex instanceof Data_Maybe.Nothing) {\n            return {\n                init: arr,\n                rest: [  ]\n            };\n        };\n        throw new Error(\"Failed pattern match at Data.Array (line 1022, column 3 - line 1028, column 30): \" + [ breakIndex.constructor.name ]);\n    };\n};\nvar takeWhile = function (p) {\n    return function (xs) {\n        return (span(p)(xs)).init;\n    };\n};\nvar unzip = function (xs) {\n    return (function __do() {\n        var fsts = Data_Array_ST[\"new\"]();\n        var snds = Data_Array_ST[\"new\"]();\n        var iter = Data_Array_ST_Iterator.iterator(function (v) {\n            return index(xs)(v);\n        })();\n        Data_Array_ST_Iterator.iterate(iter)(function (v) {\n            return function __do() {\n                $$void(Data_Array_ST.push(v.value0)(fsts))();\n                return $$void(Data_Array_ST.push(v.value1)(snds))();\n            };\n        })();\n        var fsts$prime = Data_Array_ST.unsafeFreeze(fsts)();\n        var snds$prime = Data_Array_ST.unsafeFreeze(snds)();\n        return new Data_Tuple.Tuple(fsts$prime, snds$prime);\n    })();\n};\nvar head = function (xs) {\n    return index(xs)(0);\n};\nvar nubBy = function (comp) {\n    return function (xs) {\n        var indexedAndSorted = sortBy(function (x) {\n            return function (y) {\n                return comp(Data_Tuple.snd(x))(Data_Tuple.snd(y));\n            };\n        })(mapWithIndex(Data_Tuple.Tuple.create)(xs));\n        var v = head(indexedAndSorted);\n        if (v instanceof Data_Maybe.Nothing) {\n            return [  ];\n        };\n        if (v instanceof Data_Maybe.Just) {\n            return map1(Data_Tuple.snd)(sortWith1(Data_Tuple.fst)((function __do() {\n                var result = Data_Array_ST.unsafeThaw(singleton(v.value0))();\n                Control_Monad_ST_Internal.foreach(indexedAndSorted)(function (v1) {\n                    return function __do() {\n                        var lst = map2((function () {\n                            var $183 = function ($185) {\n                                return fromJust(last($185));\n                            };\n                            return function ($184) {\n                                return Data_Tuple.snd($183($184));\n                            };\n                        })())(Data_Array_ST.unsafeFreeze(result))();\n                        return when(notEq(comp(lst)(v1.value1))(Data_Ordering.EQ.value))($$void(Data_Array_ST.push(v1)(result)))();\n                    };\n                })();\n                return Data_Array_ST.unsafeFreeze(result)();\n            })()));\n        };\n        throw new Error(\"Failed pattern match at Data.Array (line 1115, column 17 - line 1123, column 28): \" + [ v.constructor.name ]);\n    };\n};\nvar nub = function (dictOrd) {\n    return nubBy(Data_Ord.compare(dictOrd));\n};\nvar groupBy = function (op) {\n    return function (xs) {\n        return (function __do() {\n            var result = Data_Array_ST[\"new\"]();\n            var iter = Data_Array_ST_Iterator.iterator(function (v) {\n                return index(xs)(v);\n            })();\n            Data_Array_ST_Iterator.iterate(iter)(function (x) {\n                return $$void(function __do() {\n                    var sub1 = Data_Array_ST[\"new\"]();\n                    Data_Array_ST.push(x)(sub1)();\n                    Data_Array_ST_Iterator.pushWhile(op(x))(iter)(sub1)();\n                    var grp = Data_Array_ST.unsafeFreeze(sub1)();\n                    return Data_Array_ST.push(grp)(result)();\n                });\n            })();\n            return Data_Array_ST.unsafeFreeze(result)();\n        })();\n    };\n};\nvar groupAllBy = function (cmp) {\n    var $186 = groupBy(function (x) {\n        return function (y) {\n            return eq1(cmp(x)(y))(Data_Ordering.EQ.value);\n        };\n    });\n    var $187 = sortBy(cmp);\n    return function ($188) {\n        return $186($187($188));\n    };\n};\nvar groupAll = function (dictOrd) {\n    return groupAllBy(Data_Ord.compare(dictOrd));\n};\nvar group = function (dictEq) {\n    var eq2 = Data_Eq.eq(dictEq);\n    return function (xs) {\n        return groupBy(eq2)(xs);\n    };\n};\nvar fromFoldable = function (dictFoldable) {\n    return Data_Function_Uncurried.runFn2($foreign.fromFoldableImpl)(Data_Foldable.foldr(dictFoldable));\n};\nvar foldr = /* #__PURE__ */ Data_Foldable.foldr(Data_Foldable.foldableArray);\nvar foldl = /* #__PURE__ */ Data_Foldable.foldl(Data_Foldable.foldableArray);\nvar transpose = function (xs) {\n    var buildNext = function (idx) {\n        return Data_Function.flip(foldl)(Data_Maybe.Nothing.value)(function (acc) {\n            return function (nextArr) {\n                return Data_Maybe.maybe(acc)(function (el) {\n                    return new Data_Maybe.Just(Data_Maybe.maybe([ el ])(Data_Function.flip(snoc)(el))(acc));\n                })(index(nextArr)(idx));\n            };\n        })(xs);\n    };\n    var go = function ($copy_idx) {\n        return function ($copy_allArrays) {\n            var $tco_var_idx = $copy_idx;\n            var $tco_done = false;\n            var $tco_result;\n            function $tco_loop(idx, allArrays) {\n                var v = buildNext(idx);\n                if (v instanceof Data_Maybe.Nothing) {\n                    $tco_done = true;\n                    return allArrays;\n                };\n                if (v instanceof Data_Maybe.Just) {\n                    $tco_var_idx = idx + 1 | 0;\n                    $copy_allArrays = snoc(allArrays)(v.value0);\n                    return;\n                };\n                throw new Error(\"Failed pattern match at Data.Array (line 837, column 22 - line 839, column 52): \" + [ v.constructor.name ]);\n            };\n            while (!$tco_done) {\n                $tco_result = $tco_loop($tco_var_idx, $copy_allArrays);\n            };\n            return $tco_result;\n        };\n    };\n    return go(0)([  ]);\n};\nvar foldRecM = function (dictMonadRec) {\n    var Monad0 = dictMonadRec.Monad0();\n    var pure1 = Control_Applicative.pure(Monad0.Applicative0());\n    var bind1 = Control_Bind.bind(Monad0.Bind1());\n    var tailRecM2 = Control_Monad_Rec_Class.tailRecM2(dictMonadRec);\n    return function (f) {\n        return function (b) {\n            return function (array) {\n                var go = function (res) {\n                    return function (i) {\n                        if (i >= $foreign.length(array)) {\n                            return pure1(new Control_Monad_Rec_Class.Done(res));\n                        };\n                        if (Data_Boolean.otherwise) {\n                            return bind1(f(res)(unsafeIndex1(array)(i)))(function (res$prime) {\n                                return pure1(new Control_Monad_Rec_Class.Loop({\n                                    a: res$prime,\n                                    b: i + 1 | 0\n                                }));\n                            });\n                        };\n                        throw new Error(\"Failed pattern match at Data.Array (line 1349, column 3 - line 1353, column 42): \" + [ res.constructor.name, i.constructor.name ]);\n                    };\n                };\n                return tailRecM2(go)(b)(0);\n            };\n        };\n    };\n};\nvar foldMap = function (dictMonoid) {\n    return foldMap1(dictMonoid);\n};\nvar foldM = function (dictMonad) {\n    var pure1 = Control_Applicative.pure(dictMonad.Applicative0());\n    var bind1 = Control_Bind.bind(dictMonad.Bind1());\n    return function (f) {\n        return function (b) {\n            return Data_Function_Uncurried.runFn3($foreign.unconsImpl)(function (v) {\n                return pure1(b);\n            })(function (a) {\n                return function (as) {\n                    return bind1(f(b)(a))(function (b$prime) {\n                        return foldM(dictMonad)(f)(b$prime)(as);\n                    });\n                };\n            });\n        };\n    };\n};\nvar fold = function (dictMonoid) {\n    return fold1(dictMonoid);\n};\nvar findMap = /* #__PURE__ */ (function () {\n    return Data_Function_Uncurried.runFn4($foreign.findMapImpl)(Data_Maybe.Nothing.value)(Data_Maybe.isJust);\n})();\nvar findLastIndex = /* #__PURE__ */ (function () {\n    return Data_Function_Uncurried.runFn4($foreign.findLastIndexImpl)(Data_Maybe.Just.create)(Data_Maybe.Nothing.value);\n})();\nvar insertBy = function (cmp) {\n    return function (x) {\n        return function (ys) {\n            var i = Data_Maybe.maybe(0)(function (v) {\n                return v + 1 | 0;\n            })(findLastIndex(function (y) {\n                return eq1(cmp(x)(y))(Data_Ordering.GT.value);\n            })(ys));\n            return fromJust(insertAt(i)(x)(ys));\n        };\n    };\n};\nvar insert = function (dictOrd) {\n    return insertBy(Data_Ord.compare(dictOrd));\n};\nvar findIndex = /* #__PURE__ */ (function () {\n    return Data_Function_Uncurried.runFn4($foreign.findIndexImpl)(Data_Maybe.Just.create)(Data_Maybe.Nothing.value);\n})();\nvar find = function (f) {\n    return function (xs) {\n        return map(unsafeIndex1(xs))(findIndex(f)(xs));\n    };\n};\nvar filter = /* #__PURE__ */ Data_Function_Uncurried.runFn2($foreign.filterImpl);\nvar intersectBy = function (eq2) {\n    return function (xs) {\n        return function (ys) {\n            return filter(function (x) {\n                return Data_Maybe.isJust(findIndex(eq2(x))(ys));\n            })(xs);\n        };\n    };\n};\nvar intersect = function (dictEq) {\n    return intersectBy(Data_Eq.eq(dictEq));\n};\nvar elemLastIndex = function (dictEq) {\n    var eq2 = Data_Eq.eq(dictEq);\n    return function (x) {\n        return findLastIndex(function (v) {\n            return eq2(v)(x);\n        });\n    };\n};\nvar elemIndex = function (dictEq) {\n    var eq2 = Data_Eq.eq(dictEq);\n    return function (x) {\n        return findIndex(function (v) {\n            return eq2(v)(x);\n        });\n    };\n};\nvar notElem = function (dictEq) {\n    var elemIndex1 = elemIndex(dictEq);\n    return function (a) {\n        return function (arr) {\n            return Data_Maybe.isNothing(elemIndex1(a)(arr));\n        };\n    };\n};\nvar elem = function (dictEq) {\n    var elemIndex1 = elemIndex(dictEq);\n    return function (a) {\n        return function (arr) {\n            return Data_Maybe.isJust(elemIndex1(a)(arr));\n        };\n    };\n};\nvar dropWhile = function (p) {\n    return function (xs) {\n        return (span(p)(xs)).rest;\n    };\n};\nvar dropEnd = function (n) {\n    return function (xs) {\n        return take($foreign.length(xs) - n | 0)(xs);\n    };\n};\nvar drop = function (n) {\n    return function (xs) {\n        var $173 = n < 1;\n        if ($173) {\n            return xs;\n        };\n        return slice(n)($foreign.length(xs))(xs);\n    };\n};\nvar takeEnd = function (n) {\n    return function (xs) {\n        return drop($foreign.length(xs) - n | 0)(xs);\n    };\n};\nvar deleteAt = /* #__PURE__ */ (function () {\n    return Data_Function_Uncurried.runFn4($foreign[\"_deleteAt\"])(Data_Maybe.Just.create)(Data_Maybe.Nothing.value);\n})();\nvar deleteBy = function (v) {\n    return function (v1) {\n        return function (v2) {\n            if (v2.length === 0) {\n                return [  ];\n            };\n            return Data_Maybe.maybe(v2)(function (i) {\n                return fromJust(deleteAt(i)(v2));\n            })(findIndex(v(v1))(v2));\n        };\n    };\n};\nvar $$delete = function (dictEq) {\n    return deleteBy(Data_Eq.eq(dictEq));\n};\nvar difference = function (dictEq) {\n    return foldr($$delete(dictEq));\n};\nvar cons = function (x) {\n    return function (xs) {\n        return append([ x ])(xs);\n    };\n};\nvar some = function (dictAlternative) {\n    var apply1 = Control_Apply.apply((dictAlternative.Applicative0()).Apply0());\n    var map3 = Data_Functor.map(((dictAlternative.Plus1()).Alt0()).Functor0());\n    return function (dictLazy) {\n        var defer = Control_Lazy.defer(dictLazy);\n        return function (v) {\n            return apply1(map3(cons)(v))(defer(function (v1) {\n                return many(dictAlternative)(dictLazy)(v);\n            }));\n        };\n    };\n};\nvar many = function (dictAlternative) {\n    var alt = Control_Alt.alt((dictAlternative.Plus1()).Alt0());\n    var pure1 = Control_Applicative.pure(dictAlternative.Applicative0());\n    return function (dictLazy) {\n        return function (v) {\n            return alt(some(dictAlternative)(dictLazy)(v))(pure1([  ]));\n        };\n    };\n};\nvar concatMap = /* #__PURE__ */ Data_Function.flip(/* #__PURE__ */ Control_Bind.bind(Control_Bind.bindArray));\nvar mapMaybe = function (f) {\n    return concatMap((function () {\n        var $189 = Data_Maybe.maybe([  ])(singleton);\n        return function ($190) {\n            return $189(f($190));\n        };\n    })());\n};\nvar filterA = function (dictApplicative) {\n    var traverse1 = traverse(dictApplicative);\n    var map3 = Data_Functor.map((dictApplicative.Apply0()).Functor0());\n    return function (p) {\n        var $191 = map3(mapMaybe(function (v) {\n            if (v.value1) {\n                return new Data_Maybe.Just(v.value0);\n            };\n            return Data_Maybe.Nothing.value;\n        }));\n        var $192 = traverse1(function (x) {\n            return map3(Data_Tuple.Tuple.create(x))(p(x));\n        });\n        return function ($193) {\n            return $191($192($193));\n        };\n    };\n};\nvar catMaybes = /* #__PURE__ */ mapMaybe(/* #__PURE__ */ Control_Category.identity(Control_Category.categoryFn));\nvar any = /* #__PURE__ */ Data_Function_Uncurried.runFn2($foreign.anyImpl);\nvar nubByEq = function (eq2) {\n    return function (xs) {\n        return (function __do() {\n            var arr = Data_Array_ST[\"new\"]();\n            Control_Monad_ST_Internal.foreach(xs)(function (x) {\n                return function __do() {\n                    var e = map2((function () {\n                        var $194 = any(function (v) {\n                            return eq2(v)(x);\n                        });\n                        return function ($195) {\n                            return !$194($195);\n                        };\n                    })())(Data_Array_ST.unsafeFreeze(arr))();\n                    return when(e)($$void(Data_Array_ST.push(x)(arr)))();\n                };\n            })();\n            return Data_Array_ST.unsafeFreeze(arr)();\n        })();\n    };\n};\nvar nubEq = function (dictEq) {\n    return nubByEq(Data_Eq.eq(dictEq));\n};\nvar unionBy = function (eq2) {\n    return function (xs) {\n        return function (ys) {\n            return append(xs)(foldl(Data_Function.flip(deleteBy(eq2)))(nubByEq(eq2)(ys))(xs));\n        };\n    };\n};\nvar union = function (dictEq) {\n    return unionBy(Data_Eq.eq(dictEq));\n};\nvar alterAt = function (i) {\n    return function (f) {\n        return function (xs) {\n            var go = function (x) {\n                var v = f(x);\n                if (v instanceof Data_Maybe.Nothing) {\n                    return deleteAt(i)(xs);\n                };\n                if (v instanceof Data_Maybe.Just) {\n                    return updateAt(i)(v.value0)(xs);\n                };\n                throw new Error(\"Failed pattern match at Data.Array (line 601, column 10 - line 603, column 32): \" + [ v.constructor.name ]);\n            };\n            return Data_Maybe.maybe(Data_Maybe.Nothing.value)(go)(index(xs)(i));\n        };\n    };\n};\nvar all = /* #__PURE__ */ Data_Function_Uncurried.runFn2($foreign.allImpl);\nexport {\n    length,\n    reverse,\n    concat\n} from \"./foreign.js\";\nexport {\n    fromFoldable,\n    toUnfoldable,\n    singleton,\n    range,\n    replicate,\n    some,\n    many,\n    $$null as null,\n    cons,\n    snoc,\n    insert,\n    insertBy,\n    head,\n    last,\n    tail,\n    init,\n    uncons,\n    unsnoc,\n    index,\n    elem,\n    notElem,\n    elemIndex,\n    elemLastIndex,\n    find,\n    findMap,\n    findIndex,\n    findLastIndex,\n    insertAt,\n    deleteAt,\n    updateAt,\n    updateAtIndices,\n    modifyAt,\n    modifyAtIndices,\n    alterAt,\n    intersperse,\n    concatMap,\n    filter,\n    partition,\n    splitAt,\n    filterA,\n    mapMaybe,\n    catMaybes,\n    mapWithIndex,\n    foldl,\n    foldr,\n    foldMap,\n    fold,\n    intercalate,\n    transpose,\n    scanl,\n    scanr,\n    sort,\n    sortBy,\n    sortWith,\n    slice,\n    take,\n    takeEnd,\n    takeWhile,\n    drop,\n    dropEnd,\n    dropWhile,\n    span,\n    group,\n    groupAll,\n    groupBy,\n    groupAllBy,\n    nub,\n    nubEq,\n    nubBy,\n    nubByEq,\n    union,\n    unionBy,\n    $$delete as delete,\n    deleteBy,\n    difference,\n    intersect,\n    intersectBy,\n    zipWith,\n    zipWithA,\n    zip,\n    unzip,\n    any,\n    all,\n    foldM,\n    foldRecM,\n    unsafeIndex\n};\n", "export const _localeCompare = function (lt) {\n  return function (eq) {\n    return function (gt) {\n      return function (s1) {\n        return function (s2) {\n          var result = s1.localeCompare(s2);\n          return result < 0 ? lt : result > 0 ? gt : eq;\n        };\n      };\n    };\n  };\n};\n\nexport const replace = function (s1) {\n  return function (s2) {\n    return function (s3) {\n      return s3.replace(s1, s2);\n    };\n  };\n};\n\nexport const replaceAll = function (s1) {\n  return function (s2) {\n    return function (s3) {\n      return s3.replace(new RegExp(s1.replace(/[-\\/\\\\^$*+?.()|[\\]{}]/g, \"\\\\$&\"), \"g\"), s2); // eslint-disable-line no-useless-escape\n    };\n  };\n};\n\nexport const split = function (sep) {\n  return function (s) {\n    return s.split(sep);\n  };\n};\n\nexport const toLower = function (s) {\n  return s.toLowerCase();\n};\n\nexport const toUpper = function (s) {\n  return s.toUpperCase();\n};\n\nexport const trim = function (s) {\n  return s.trim();\n};\n\nexport const joinWith = function (s) {\n  return function (xs) {\n    return xs.join(s);\n  };\n};\n", "// Generated by purs version 0.15.15\nimport * as Data_Eq from \"../Data.Eq/index.js\";\nimport * as Data_Ord from \"../Data.Ord/index.js\";\nvar RefLabel = function (x) {\n    return x;\n};\nvar RefUpdate = /* #__PURE__ */ (function () {\n    function RefUpdate(value0, value1) {\n        this.value0 = value0;\n        this.value1 = value1;\n    };\n    RefUpdate.create = function (value0) {\n        return function (value1) {\n            return new RefUpdate(value0, value1);\n        };\n    };\n    return RefUpdate;\n})();\nvar Action = /* #__PURE__ */ (function () {\n    function Action(value0) {\n        this.value0 = value0;\n    };\n    Action.create = function (value0) {\n        return new Action(value0);\n    };\n    return Action;\n})();\nvar ordRefLabel = Data_Ord.ordString;\nvar newtypeRefLabel = {\n    Coercible0: function () {\n        return undefined;\n    }\n};\nvar functorInput = {\n    map: function (f) {\n        return function (m) {\n            if (m instanceof RefUpdate) {\n                return new RefUpdate(m.value0, m.value1);\n            };\n            if (m instanceof Action) {\n                return new Action(f(m.value0));\n            };\n            throw new Error(\"Failed pattern match at Halogen.Query.Input (line 0, column 0 - line 0, column 0): \" + [ m.constructor.name ]);\n        };\n    }\n};\nvar eqRefLabel = Data_Eq.eqString;\nexport {\n    RefLabel,\n    RefUpdate,\n    Action,\n    newtypeRefLabel,\n    eqRefLabel,\n    ordRefLabel,\n    functorInput\n};\n", "/* eslint-disable no-eq-null, eqeqeq */\n\nconst nullImpl = null;\nexport { nullImpl as null };\n\nexport function nullable(a, r, f) {\n  return a == null ? r : f(a);\n}\n\nexport function notNull(x) {\n  return x;\n}\n", "// Generated by purs version 0.15.15\nimport * as $foreign from \"./foreign.js\";\nimport * as Data_Eq from \"../Data.Eq/index.js\";\nimport * as Data_Function from \"../Data.Function/index.js\";\nimport * as Data_Maybe from \"../Data.Maybe/index.js\";\nimport * as Data_Ord from \"../Data.Ord/index.js\";\nimport * as Data_Show from \"../Data.Show/index.js\";\nvar toNullable = /* #__PURE__ */ Data_Maybe.maybe($foreign[\"null\"])($foreign.notNull);\nvar toMaybe = function (n) {\n    return $foreign.nullable(n, Data_Maybe.Nothing.value, Data_Maybe.Just.create);\n};\nvar showNullable = function (dictShow) {\n    return {\n        show: (function () {\n            var $17 = Data_Maybe.maybe(\"null\")(Data_Show.show(dictShow));\n            return function ($18) {\n                return $17(toMaybe($18));\n            };\n        })()\n    };\n};\nvar eqNullable = function (dictEq) {\n    return {\n        eq: Data_Function.on(Data_Eq.eq(Data_Maybe.eqMaybe(dictEq)))(toMaybe)\n    };\n};\nvar ordNullable = function (dictOrd) {\n    var eqNullable1 = eqNullable(dictOrd.Eq0());\n    return {\n        compare: Data_Function.on(Data_Ord.compare(Data_Maybe.ordMaybe(dictOrd)))(toMaybe),\n        Eq0: function () {\n            return eqNullable1;\n        }\n    };\n};\nvar eq1Nullable = {\n    eq1: function (dictEq) {\n        return Data_Eq.eq(eqNullable(dictEq));\n    }\n};\nvar ord1Nullable = {\n    compare1: function (dictOrd) {\n        return Data_Ord.compare(ordNullable(dictOrd));\n    },\n    Eq10: function () {\n        return eq1Nullable;\n    }\n};\nexport {\n    null,\n    notNull\n} from \"./foreign.js\";\nexport {\n    toMaybe,\n    toNullable,\n    showNullable,\n    eqNullable,\n    eq1Nullable,\n    ordNullable,\n    ord1Nullable\n};\n", "// Generated by purs version 0.15.15\nimport * as Unsafe_Coerce from \"../Unsafe.Coerce/index.js\";\nvar Step = /* #__PURE__ */ (function () {\n    function Step(value0, value1, value2, value3) {\n        this.value0 = value0;\n        this.value1 = value1;\n        this.value2 = value2;\n        this.value3 = value3;\n    };\n    Step.create = function (value0) {\n        return function (value1) {\n            return function (value2) {\n                return function (value3) {\n                    return new Step(value0, value1, value2, value3);\n                };\n            };\n        };\n    };\n    return Step;\n})();\nvar unStep = Unsafe_Coerce.unsafeCoerce;\nvar step = function (v, a) {\n    return v.value2(v.value1, a);\n};\nvar mkStep = Unsafe_Coerce.unsafeCoerce;\nvar halt = function (v) {\n    return v.value3(v.value1);\n};\nvar extract = /* #__PURE__ */ unStep(function (v) {\n    return v.value0;\n});\nexport {\n    Step,\n    mkStep,\n    unStep,\n    extract,\n    step,\n    halt\n};\n", "// Generated by purs version 0.15.15\nimport * as Control_Category from \"../Control.Category/index.js\";\nimport * as Data_Bifunctor from \"../Data.Bifunctor/index.js\";\nimport * as Data_Eq from \"../Data.Eq/index.js\";\nimport * as Data_Functor from \"../Data.Functor/index.js\";\nimport * as Data_Ord from \"../Data.Ord/index.js\";\nimport * as Data_Tuple from \"../Data.Tuple/index.js\";\nimport * as Unsafe_Coerce from \"../Unsafe.Coerce/index.js\";\nvar identity = /* #__PURE__ */ Control_Category.identity(Control_Category.categoryFn);\nvar map = /* #__PURE__ */ Data_Functor.map(Data_Functor.functorArray);\nvar map1 = /* #__PURE__ */ Data_Functor.map(Data_Tuple.functorTuple);\nvar Namespace = function (x) {\n    return x;\n};\nvar ElemName = function (x) {\n    return x;\n};\nvar Text = /* #__PURE__ */ (function () {\n    function Text(value0) {\n        this.value0 = value0;\n    };\n    Text.create = function (value0) {\n        return new Text(value0);\n    };\n    return Text;\n})();\nvar Elem = /* #__PURE__ */ (function () {\n    function Elem(value0, value1, value2, value3) {\n        this.value0 = value0;\n        this.value1 = value1;\n        this.value2 = value2;\n        this.value3 = value3;\n    };\n    Elem.create = function (value0) {\n        return function (value1) {\n            return function (value2) {\n                return function (value3) {\n                    return new Elem(value0, value1, value2, value3);\n                };\n            };\n        };\n    };\n    return Elem;\n})();\nvar Keyed = /* #__PURE__ */ (function () {\n    function Keyed(value0, value1, value2, value3) {\n        this.value0 = value0;\n        this.value1 = value1;\n        this.value2 = value2;\n        this.value3 = value3;\n    };\n    Keyed.create = function (value0) {\n        return function (value1) {\n            return function (value2) {\n                return function (value3) {\n                    return new Keyed(value0, value1, value2, value3);\n                };\n            };\n        };\n    };\n    return Keyed;\n})();\nvar Widget = /* #__PURE__ */ (function () {\n    function Widget(value0) {\n        this.value0 = value0;\n    };\n    Widget.create = function (value0) {\n        return new Widget(value0);\n    };\n    return Widget;\n})();\nvar Grafted = /* #__PURE__ */ (function () {\n    function Grafted(value0) {\n        this.value0 = value0;\n    };\n    Grafted.create = function (value0) {\n        return new Grafted(value0);\n    };\n    return Grafted;\n})();\nvar Graft = /* #__PURE__ */ (function () {\n    function Graft(value0, value1, value2) {\n        this.value0 = value0;\n        this.value1 = value1;\n        this.value2 = value2;\n    };\n    Graft.create = function (value0) {\n        return function (value1) {\n            return function (value2) {\n                return new Graft(value0, value1, value2);\n            };\n        };\n    };\n    return Graft;\n})();\nvar unGraft = function (f) {\n    return function ($61) {\n        return f($61);\n    };\n};\nvar ordNamespace = Data_Ord.ordString;\nvar ordElemName = Data_Ord.ordString;\nvar newtypeNamespace = {\n    Coercible0: function () {\n        return undefined;\n    }\n};\nvar newtypeElemName = {\n    Coercible0: function () {\n        return undefined;\n    }\n};\nvar graft = Unsafe_Coerce.unsafeCoerce;\nvar functorGraft = {\n    map: function (g) {\n        return unGraft(function (v) {\n            return graft(new Graft(v.value0, function ($62) {\n                return g(v.value1($62));\n            }, v.value2));\n        });\n    }\n};\nvar map2 = /* #__PURE__ */ Data_Functor.map(functorGraft);\nvar functorVDom = {\n    map: function (v) {\n        return function (v1) {\n            if (v1 instanceof Text) {\n                return new Text(v1.value0);\n            };\n            if (v1 instanceof Grafted) {\n                return new Grafted(map2(v)(v1.value0));\n            };\n            return new Grafted(graft(new Graft(identity, v, v1)));\n        };\n    }\n};\nvar eqNamespace = Data_Eq.eqString;\nvar eqElemName = Data_Eq.eqString;\nvar bifunctorGraft = {\n    bimap: function (f) {\n        return function (g) {\n            return unGraft(function (v) {\n                return graft(new Graft(function ($63) {\n                    return f(v.value0($63));\n                }, function ($64) {\n                    return g(v.value1($64));\n                }, v.value2));\n            });\n        };\n    }\n};\nvar bimap = /* #__PURE__ */ Data_Bifunctor.bimap(bifunctorGraft);\nvar bifunctorVDom = {\n    bimap: function (v) {\n        return function (v1) {\n            return function (v2) {\n                if (v2 instanceof Text) {\n                    return new Text(v2.value0);\n                };\n                if (v2 instanceof Grafted) {\n                    return new Grafted(bimap(v)(v1)(v2.value0));\n                };\n                return new Grafted(graft(new Graft(v, v1, v2)));\n            };\n        };\n    }\n};\nvar runGraft = /* #__PURE__ */ unGraft(function (v) {\n    var go = function (v2) {\n        if (v2 instanceof Text) {\n            return new Text(v2.value0);\n        };\n        if (v2 instanceof Elem) {\n            return new Elem(v2.value0, v2.value1, v.value0(v2.value2), map(go)(v2.value3));\n        };\n        if (v2 instanceof Keyed) {\n            return new Keyed(v2.value0, v2.value1, v.value0(v2.value2), map(map1(go))(v2.value3));\n        };\n        if (v2 instanceof Widget) {\n            return new Widget(v.value1(v2.value0));\n        };\n        if (v2 instanceof Grafted) {\n            return new Grafted(bimap(v.value0)(v.value1)(v2.value0));\n        };\n        throw new Error(\"Failed pattern match at Halogen.VDom.Types (line 86, column 7 - line 86, column 27): \" + [ v2.constructor.name ]);\n    };\n    return go(v.value2);\n});\nvar renderWidget = function (f) {\n    return function (g) {\n        return function (v) {\n            if (v instanceof Text) {\n                return new Text(v.value0);\n            };\n            if (v instanceof Elem) {\n                return new Elem(v.value0, v.value1, f(v.value2), map(renderWidget(f)(g))(v.value3));\n            };\n            if (v instanceof Keyed) {\n                return new Keyed(v.value0, v.value1, f(v.value2), map(map1(renderWidget(f)(g)))(v.value3));\n            };\n            if (v instanceof Widget) {\n                return g(v.value0);\n            };\n            if (v instanceof Grafted) {\n                return renderWidget(f)(g)(runGraft(v.value0));\n            };\n            throw new Error(\"Failed pattern match at Halogen.VDom.Types (line 48, column 20 - line 53, column 48): \" + [ v.constructor.name ]);\n        };\n    };\n};\nexport {\n    Text,\n    Elem,\n    Keyed,\n    Widget,\n    Grafted,\n    renderWidget,\n    Graft,\n    graft,\n    unGraft,\n    runGraft,\n    ElemName,\n    Namespace,\n    functorVDom,\n    bifunctorVDom,\n    functorGraft,\n    bifunctorGraft,\n    newtypeElemName,\n    eqElemName,\n    ordElemName,\n    newtypeNamespace,\n    eqNamespace,\n    ordNamespace\n};\n", "\"use strict\";\n\nexport function unsafeGetAny(key, obj) {\n  return obj[key];\n}\n\nexport function unsafeHasAny(key, obj) {\n  return obj.hasOwnProperty(key);\n}\n\nexport function unsafeSetAny(key, val, obj) {\n    obj[key] = val;\n}\n\nexport function unsafeDeleteAny(key, obj) {\n  delete obj[key];\n}\n\nexport function forE(a, f) {\n  var b = [];\n  for (var i = 0; i < a.length; i++) {\n    b.push(f(i, a[i]));\n  }\n  return b;\n}\n\nexport function forEachE(a, f) {\n  for (var i = 0; i < a.length; i++) {\n    f(a[i]);\n  }\n}\n\nexport function forInE(o, f) {\n  var ks = Object.keys(o);\n  for (var i = 0; i < ks.length; i++) {\n    var k = ks[i];\n    f(k, o[k]);\n  }\n}\n\nexport function replicateE(n, f) {\n  for (var i = 0; i < n; i++) {\n    f();\n  }\n}\n\nexport function diffWithIxE(a1, a2, f1, f2, f3) {\n  var a3 = [];\n  var l1 = a1.length;\n  var l2 = a2.length;\n  var i  = 0;\n  while (1) {\n    if (i < l1) {\n      if (i < l2) {\n        a3.push(f1(i, a1[i], a2[i]));\n      } else {\n        f2(i, a1[i]);\n      }\n    } else if (i < l2) {\n      a3.push(f3(i, a2[i]));\n    } else {\n      break;\n    }\n    i++;\n  }\n  return a3;\n}\n\nexport function strMapWithIxE(as, fk, f) {\n  var o = {};\n  for (var i = 0; i < as.length; i++) {\n    var a = as[i];\n    var k = fk(a);\n    o[k] = f(k, i, a);\n  }\n  return o;\n}\n\nexport function diffWithKeyAndIxE(o1, as, fk, f1, f2, f3) {\n  var o2 = {};\n  for (var i = 0; i < as.length; i++) {\n    var a = as[i];\n    var k = fk(a);\n    if (o1.hasOwnProperty(k)) {\n      o2[k] = f1(k, i, o1[k], a);\n    } else {\n      o2[k] = f3(k, i, a);\n    }\n  }\n  for (var k in o1) {\n    if (k in o2) {\n      continue;\n    }\n    f2(k, o1[k]);\n  }\n  return o2;\n}\n\nexport function refEq(a, b) {\n  return a === b;\n}\n\nexport function createTextNode(s, doc) {\n  return doc.createTextNode(s);\n}\n\nexport function setTextContent(s, n) {\n  n.textContent = s;\n}\n\nexport function createElement(ns, name, doc) {\n  if (ns != null) {\n    return doc.createElementNS(ns, name);\n  } else {\n    return doc.createElement(name)\n  }\n}\n\nexport function insertChildIx(i, a, b) {\n  var n = b.childNodes.item(i) || null;\n  if (n !== a) {\n    b.insertBefore(a, n);\n  }\n}\n\nexport function removeChild(a, b) {\n  if (b && a.parentNode === b) {\n    b.removeChild(a);\n  }\n}\n\nexport function parentNode(a) {\n  return a.parentNode;\n}\n\nexport function setAttribute(ns, attr, val, el) {\n  if (ns != null) {\n    el.setAttributeNS(ns, attr, val);\n  } else {\n    el.setAttribute(attr, val);\n  }\n}\n\nexport function removeAttribute(ns, attr, el) {\n  if (ns != null) {\n    el.removeAttributeNS(ns, attr);\n  } else {\n    el.removeAttribute(attr);\n  }\n}\n\nexport function hasAttribute(ns, attr, el) {\n  if (ns != null) {\n    return el.hasAttributeNS(ns, attr);\n  } else {\n    return el.hasAttribute(attr);\n  }\n}\n\nexport function addEventListener(ev, listener, el) {\n  el.addEventListener(ev, listener, false);\n}\n\nexport function removeEventListener(ev, listener, el) {\n  el.removeEventListener(ev, listener, false);\n}\n\nexport var jsUndefined = void 0;\n", "const newImpl = function () {\n  return {};\n};\nexport { newImpl as new };\n\nexport function peekImpl(just) {\n  return function (nothing) {\n    return function (k) {\n      return function (m) {\n        return function () {\n          return {}.hasOwnProperty.call(m, k) ? just(m[k]) : nothing;\n        };\n      };\n    };\n  };\n}\n\nexport function poke(k) {\n  return function (v) {\n    return function (m) {\n      return function () {\n        m[k] = v;\n        return m;\n      };\n    };\n  };\n}\n\nconst deleteImpl = function (k) {\n  return function (m) {\n    return function () {\n      delete m[k];\n      return m;\n    };\n  };\n};\nexport { deleteImpl as delete };\n", "// Generated by purs version 0.15.15\nimport * as $foreign from \"./foreign.js\";\nimport * as Foreign_Object_ST from \"../Foreign.Object.ST/index.js\";\nimport * as Unsafe_Coerce from \"../Unsafe.Coerce/index.js\";\nvar unsafeLookup = $foreign.unsafeGetAny;\nvar unsafeFreeze = Unsafe_Coerce.unsafeCoerce;\nvar pokeMutMap = $foreign.unsafeSetAny;\nvar newMutMap = Foreign_Object_ST[\"new\"];\nvar deleteMutMap = $foreign.unsafeDeleteAny;\nexport {\n    unsafeGetAny,\n    unsafeHasAny,\n    unsafeSetAny,\n    unsafeDeleteAny,\n    forE,\n    forEachE,\n    forInE,\n    replicateE,\n    diffWithIxE,\n    diffWithKeyAndIxE,\n    strMapWithIxE,\n    refEq,\n    createTextNode,\n    setTextContent,\n    createElement,\n    insertChildIx,\n    removeChild,\n    parentNode,\n    setAttribute,\n    removeAttribute,\n    hasAttribute,\n    addEventListener,\n    removeEventListener,\n    jsUndefined\n} from \"./foreign.js\";\nexport {\n    newMutMap,\n    pokeMutMap,\n    deleteMutMap,\n    unsafeFreeze,\n    unsafeLookup\n};\n", "var getProp = function (name) {\n  return function (doctype) {\n    return doctype[name];\n  };\n};\n\nexport const _namespaceURI = getProp(\"namespaceURI\");\nexport const _prefix = getProp(\"prefix\");\nexport const localName = getProp(\"localName\");\nexport const tagName = getProp(\"tagName\");\n\nexport function id(node) {\n  return function () {\n    return node.id;\n  };\n}\n\nexport function setId(id) {\n  return function (node) {\n    return function () {\n      node.id = id;\n    };\n  };\n}\n\nexport function className(node) {\n  return function () {\n    return node.className;\n  };\n}\n\nexport function classList(element) {\n  return function () {\n    return element.classList;\n  };\n}\n\nexport function setClassName(className) {\n  return function (node) {\n    return function () {\n      node.className = className;\n    };\n  };\n}\n\nexport function getElementsByTagName(localName) {\n  return function (doc) {\n    return function () {\n      return doc.getElementsByTagName(localName);\n    };\n  };\n}\n\nexport function _getElementsByTagNameNS(ns) {\n  return function (localName) {\n    return function (doc) {\n      return function () {\n        return doc.getElementsByTagNameNS(ns, localName);\n      };\n    };\n  };\n}\n\nexport function getElementsByClassName(classNames) {\n  return function (doc) {\n    return function () {\n      return doc.getElementsByClassName(classNames);\n    };\n  };\n}\n\nexport function setAttribute(name) {\n  return function (value) {\n    return function (element) {\n      return function () {\n        element.setAttribute(name, value);\n      };\n    };\n  };\n}\n\nexport function _getAttribute(name) {\n  return function (element) {\n    return function () {\n      return element.getAttribute(name);\n    };\n  };\n}\n\nexport function hasAttribute(name) {\n  return function (element) {\n    return function () {\n      return element.hasAttribute(name);\n    };\n  };\n}\n\nexport function removeAttribute(name) {\n  return function (element) {\n    return function () {\n      element.removeAttribute(name);\n    };\n  };\n}\n\nexport function matches(selector) {\n  return function(element) {\n    return function () {\n      return element.matches(selector);\n    };\n  };\n}\n\nexport function _closest(selector) {\n  return function(element) {\n    return function () {\n      return element.closest(selector);\n    };\n  };\n}\n\n// - CSSOM ---------------------------------------------------------------------\n\nexport function scrollTop(node) {\n  return function () {\n    return node.scrollTop;\n  };\n}\n\nexport function setScrollTop(scrollTop) {\n  return function (node) {\n    return function () {\n      node.scrollTop = scrollTop;\n    };\n  };\n}\n\nexport function scrollLeft(node) {\n  return function () {\n    return node.scrollLeft;\n  };\n}\n\nexport function setScrollLeft(scrollLeft) {\n  return function (node) {\n    return function () {\n      node.scrollLeft = scrollLeft;\n    };\n  };\n}\n\nexport function scrollWidth(el) {\n  return function () {\n    return el.scrollWidth;\n  };\n}\n\nexport function scrollHeight(el) {\n  return function () {\n    return el.scrollHeight;\n  };\n}\n\nexport function clientTop(el) {\n  return function () {\n    return el.clientTop;\n  };\n}\n\nexport function clientLeft(el) {\n  return function () {\n    return el.clientLeft;\n  };\n}\n\nexport function clientWidth(el) {\n  return function () {\n    return el.clientWidth;\n  };\n}\n\nexport function clientHeight(el) {\n  return function () {\n    return el.clientHeight;\n  };\n}\n\nexport function getBoundingClientRect(el) {\n  return function () {\n    var rect = el.getBoundingClientRect();\n    return {\n      top: rect.top,\n      right: rect.right,\n      bottom: rect.bottom,\n      left: rect.left,\n      width: rect.width,\n      height: rect.height,\n      x: rect.x,\n      y: rect.y\n    };\n  };\n}\n\nexport function _attachShadow(props) {\n  return function (el) {\n    return function() {\n      return el.attachShadow(props);\n    };\n  };\n}\n", "var getEffProp = function (name) {\n  return function (node) {\n    return function () {\n      return node[name];\n    };\n  };\n};\n\nexport const children = getEffProp(\"children\");\nexport const _firstElementChild = getEffProp(\"firstElementChild\");\nexport const _lastElementChild = getEffProp(\"lastElementChild\");\nexport const childElementCount = getEffProp(\"childElementCount\");\n\nexport function _querySelector(selector) {\n  return function (node) {\n    return function () {\n      return node.querySelector(selector);\n    };\n  };\n}\n\nexport function querySelectorAll(selector) {\n  return function (node) {\n    return function () {\n      return node.querySelectorAll(selector);\n    };\n  };\n}\n", "// Generated by purs version 0.15.15\nimport * as $foreign from \"./foreign.js\";\nimport * as Data_Eq from \"../Data.Eq/index.js\";\nimport * as Data_Functor from \"../Data.Functor/index.js\";\nimport * as Data_Nullable from \"../Data.Nullable/index.js\";\nimport * as Data_Ord from \"../Data.Ord/index.js\";\nimport * as Effect from \"../Effect/index.js\";\nvar map = /* #__PURE__ */ Data_Functor.map(Effect.functorEffect);\nvar QuerySelector = function (x) {\n    return x;\n};\nvar querySelector = function (qs) {\n    var $2 = map(Data_Nullable.toMaybe);\n    var $3 = $foreign[\"_querySelector\"](qs);\n    return function ($4) {\n        return $2($3($4));\n    };\n};\nvar ordQuerySelector = Data_Ord.ordString;\nvar newtypeQuerySelector = {\n    Coercible0: function () {\n        return undefined;\n    }\n};\nvar lastElementChild = /* #__PURE__ */ (function () {\n    var $5 = map(Data_Nullable.toMaybe);\n    return function ($6) {\n        return $5($foreign[\"_lastElementChild\"]($6));\n    };\n})();\nvar firstElementChild = /* #__PURE__ */ (function () {\n    var $7 = map(Data_Nullable.toMaybe);\n    return function ($8) {\n        return $7($foreign[\"_firstElementChild\"]($8));\n    };\n})();\nvar eqQuerySelector = Data_Eq.eqString;\nexport {\n    children,\n    childElementCount,\n    querySelectorAll\n} from \"./foreign.js\";\nexport {\n    firstElementChild,\n    lastElementChild,\n    QuerySelector,\n    querySelector,\n    eqQuerySelector,\n    ordQuerySelector,\n    newtypeQuerySelector\n};\n", "// Generated by purs version 0.15.15\nimport * as $foreign from \"./foreign.js\";\nimport * as Data_Functor from \"../Data.Functor/index.js\";\nimport * as Data_Nullable from \"../Data.Nullable/index.js\";\nimport * as Data_Show from \"../Data.Show/index.js\";\nimport * as Effect from \"../Effect/index.js\";\nimport * as Unsafe_Coerce from \"../Unsafe.Coerce/index.js\";\nimport * as Web_DOM_Internal_Types from \"../Web.DOM.Internal.Types/index.js\";\nimport * as Web_DOM_ParentNode from \"../Web.DOM.ParentNode/index.js\";\nimport * as Web_DOM_ShadowRoot from \"../Web.DOM.ShadowRoot/index.js\";\nimport * as Web_Internal_FFI from \"../Web.Internal.FFI/index.js\";\nvar show = /* #__PURE__ */ Data_Show.show(Web_DOM_ShadowRoot.showShadowRootMode);\nvar map = /* #__PURE__ */ Data_Functor.map(Effect.functorEffect);\nvar toParentNode = Unsafe_Coerce.unsafeCoerce;\nvar toNonDocumentTypeChildNode = Unsafe_Coerce.unsafeCoerce;\nvar toNode = Unsafe_Coerce.unsafeCoerce;\nvar toEventTarget = Unsafe_Coerce.unsafeCoerce;\nvar toChildNode = Unsafe_Coerce.unsafeCoerce;\nvar prefix = function ($3) {\n    return Data_Nullable.toMaybe($foreign[\"_prefix\"]($3));\n};\nvar namespaceURI = function ($4) {\n    return Data_Nullable.toMaybe($foreign[\"_namespaceURI\"]($4));\n};\nvar initToProps = function (init) {\n    return {\n        mode: show(init.mode),\n        delegatesFocus: init.delegatesFocus\n    };\n};\nvar getElementsByTagNameNS = function ($5) {\n    return $foreign[\"_getElementsByTagNameNS\"](Data_Nullable.toNullable($5));\n};\nvar getAttribute = function (attr) {\n    var $6 = map(Data_Nullable.toMaybe);\n    var $7 = $foreign[\"_getAttribute\"](attr);\n    return function ($8) {\n        return $6($7($8));\n    };\n};\nvar fromParentNode = /* #__PURE__ */ Web_Internal_FFI.unsafeReadProtoTagged(\"Element\");\nvar fromNonDocumentTypeChildNode = /* #__PURE__ */ Web_Internal_FFI.unsafeReadProtoTagged(\"Element\");\nvar fromNode = /* #__PURE__ */ Web_Internal_FFI.unsafeReadProtoTagged(\"Element\");\nvar fromEventTarget = /* #__PURE__ */ Web_Internal_FFI.unsafeReadProtoTagged(\"Element\");\nvar fromChildNode = /* #__PURE__ */ Web_Internal_FFI.unsafeReadProtoTagged(\"Element\");\nvar closest = function (qs) {\n    var $9 = map(Data_Nullable.toMaybe);\n    var $10 = $foreign[\"_closest\"](qs);\n    return function ($11) {\n        return $9($10($11));\n    };\n};\nvar attachShadow = function ($12) {\n    return $foreign[\"_attachShadow\"](initToProps($12));\n};\nexport {\n    localName,\n    tagName,\n    id,\n    setId,\n    className,\n    classList,\n    setClassName,\n    getElementsByTagName,\n    getElementsByClassName,\n    setAttribute,\n    hasAttribute,\n    removeAttribute,\n    matches,\n    scrollTop,\n    setScrollTop,\n    scrollLeft,\n    setScrollLeft,\n    scrollWidth,\n    scrollHeight,\n    clientTop,\n    clientLeft,\n    clientWidth,\n    clientHeight,\n    getBoundingClientRect\n} from \"./foreign.js\";\nexport {\n    fromNode,\n    fromChildNode,\n    fromNonDocumentTypeChildNode,\n    fromParentNode,\n    fromEventTarget,\n    toNode,\n    toChildNode,\n    toNonDocumentTypeChildNode,\n    toParentNode,\n    toEventTarget,\n    namespaceURI,\n    prefix,\n    getElementsByTagNameNS,\n    getAttribute,\n    closest,\n    attachShadow\n};\n", "// Generated by purs version 0.15.15\nimport * as Data_Array from \"../Data.Array/index.js\";\nimport * as Data_Boolean from \"../Data.Boolean/index.js\";\nimport * as Data_Maybe from \"../Data.Maybe/index.js\";\nimport * as Data_Nullable from \"../Data.Nullable/index.js\";\nimport * as Data_Tuple from \"../Data.Tuple/index.js\";\nimport * as Halogen_VDom_Machine from \"../Halogen.VDom.Machine/index.js\";\nimport * as Halogen_VDom_Types from \"../Halogen.VDom.Types/index.js\";\nimport * as Halogen_VDom_Util from \"../Halogen.VDom.Util/index.js\";\nimport * as Web_DOM_Element from \"../Web.DOM.Element/index.js\";\nvar $runtime_lazy = function (name, moduleName, init) {\n    var state = 0;\n    var val;\n    return function (lineNumber) {\n        if (state === 2) return val;\n        if (state === 1) throw new ReferenceError(name + \" was needed before it finished initializing (module \" + moduleName + \", line \" + lineNumber + \")\", moduleName, lineNumber);\n        state = 1;\n        val = init();\n        state = 2;\n        return val;\n    };\n};\nvar VDomSpec = function (x) {\n    return x;\n};\nvar haltWidget = function (v) {\n    return Halogen_VDom_Machine.halt(v.widget);\n};\nvar $lazy_patchWidget = /* #__PURE__ */ $runtime_lazy(\"patchWidget\", \"Halogen.VDom.DOM\", function () {\n    return function (state, vdom) {\n        if (vdom instanceof Halogen_VDom_Types.Grafted) {\n            return $lazy_patchWidget(291)(state, Halogen_VDom_Types.runGraft(vdom.value0));\n        };\n        if (vdom instanceof Halogen_VDom_Types.Widget) {\n            var res = Halogen_VDom_Machine.step(state.widget, vdom.value0);\n            var res$prime = Halogen_VDom_Machine.unStep(function (v) {\n                return Halogen_VDom_Machine.mkStep(new Halogen_VDom_Machine.Step(v.value0, {\n                    build: state.build,\n                    widget: res\n                }, $lazy_patchWidget(296), haltWidget));\n            })(res);\n            return res$prime;\n        };\n        haltWidget(state);\n        return state.build(vdom);\n    };\n});\nvar patchWidget = /* #__PURE__ */ $lazy_patchWidget(286);\nvar haltText = function (v) {\n    var parent = Halogen_VDom_Util.parentNode(v.node);\n    return Halogen_VDom_Util.removeChild(v.node, parent);\n};\nvar $lazy_patchText = /* #__PURE__ */ $runtime_lazy(\"patchText\", \"Halogen.VDom.DOM\", function () {\n    return function (state, vdom) {\n        if (vdom instanceof Halogen_VDom_Types.Grafted) {\n            return $lazy_patchText(82)(state, Halogen_VDom_Types.runGraft(vdom.value0));\n        };\n        if (vdom instanceof Halogen_VDom_Types.Text) {\n            if (state.value === vdom.value0) {\n                return Halogen_VDom_Machine.mkStep(new Halogen_VDom_Machine.Step(state.node, state, $lazy_patchText(85), haltText));\n            };\n            if (Data_Boolean.otherwise) {\n                var nextState = {\n                    build: state.build,\n                    node: state.node,\n                    value: vdom.value0\n                };\n                Halogen_VDom_Util.setTextContent(vdom.value0, state.node);\n                return Halogen_VDom_Machine.mkStep(new Halogen_VDom_Machine.Step(state.node, nextState, $lazy_patchText(89), haltText));\n            };\n        };\n        haltText(state);\n        return state.build(vdom);\n    };\n});\nvar patchText = /* #__PURE__ */ $lazy_patchText(77);\nvar haltKeyed = function (v) {\n    var parent = Halogen_VDom_Util.parentNode(v.node);\n    Halogen_VDom_Util.removeChild(v.node, parent);\n    Halogen_VDom_Util.forInE(v.children, function (v1, s) {\n        return Halogen_VDom_Machine.halt(s);\n    });\n    return Halogen_VDom_Machine.halt(v.attrs);\n};\nvar haltElem = function (v) {\n    var parent = Halogen_VDom_Util.parentNode(v.node);\n    Halogen_VDom_Util.removeChild(v.node, parent);\n    Halogen_VDom_Util.forEachE(v.children, Halogen_VDom_Machine.halt);\n    return Halogen_VDom_Machine.halt(v.attrs);\n};\nvar eqElemSpec = function (ns1, v, ns2, v1) {\n    var $63 = v === v1;\n    if ($63) {\n        if (ns1 instanceof Data_Maybe.Just && (ns2 instanceof Data_Maybe.Just && ns1.value0 === ns2.value0)) {\n            return true;\n        };\n        if (ns1 instanceof Data_Maybe.Nothing && ns2 instanceof Data_Maybe.Nothing) {\n            return true;\n        };\n        return false;\n    };\n    return false;\n};\nvar $lazy_patchElem = /* #__PURE__ */ $runtime_lazy(\"patchElem\", \"Halogen.VDom.DOM\", function () {\n    return function (state, vdom) {\n        if (vdom instanceof Halogen_VDom_Types.Grafted) {\n            return $lazy_patchElem(135)(state, Halogen_VDom_Types.runGraft(vdom.value0));\n        };\n        if (vdom instanceof Halogen_VDom_Types.Elem && eqElemSpec(state.ns, state.name, vdom.value0, vdom.value1)) {\n            var v = Data_Array.length(vdom.value3);\n            var v1 = Data_Array.length(state.children);\n            if (v1 === 0 && v === 0) {\n                var attrs2 = Halogen_VDom_Machine.step(state.attrs, vdom.value2);\n                var nextState = {\n                    build: state.build,\n                    node: state.node,\n                    attrs: attrs2,\n                    ns: vdom.value0,\n                    name: vdom.value1,\n                    children: state.children\n                };\n                return Halogen_VDom_Machine.mkStep(new Halogen_VDom_Machine.Step(state.node, nextState, $lazy_patchElem(149), haltElem));\n            };\n            var onThis = function (v2, s) {\n                return Halogen_VDom_Machine.halt(s);\n            };\n            var onThese = function (ix, s, v2) {\n                var res = Halogen_VDom_Machine.step(s, v2);\n                Halogen_VDom_Util.insertChildIx(ix, Halogen_VDom_Machine.extract(res), state.node);\n                return res;\n            };\n            var onThat = function (ix, v2) {\n                var res = state.build(v2);\n                Halogen_VDom_Util.insertChildIx(ix, Halogen_VDom_Machine.extract(res), state.node);\n                return res;\n            };\n            var children2 = Halogen_VDom_Util.diffWithIxE(state.children, vdom.value3, onThese, onThis, onThat);\n            var attrs2 = Halogen_VDom_Machine.step(state.attrs, vdom.value2);\n            var nextState = {\n                build: state.build,\n                node: state.node,\n                attrs: attrs2,\n                ns: vdom.value0,\n                name: vdom.value1,\n                children: children2\n            };\n            return Halogen_VDom_Machine.mkStep(new Halogen_VDom_Machine.Step(state.node, nextState, $lazy_patchElem(172), haltElem));\n        };\n        haltElem(state);\n        return state.build(vdom);\n    };\n});\nvar patchElem = /* #__PURE__ */ $lazy_patchElem(130);\nvar $lazy_patchKeyed = /* #__PURE__ */ $runtime_lazy(\"patchKeyed\", \"Halogen.VDom.DOM\", function () {\n    return function (state, vdom) {\n        if (vdom instanceof Halogen_VDom_Types.Grafted) {\n            return $lazy_patchKeyed(222)(state, Halogen_VDom_Types.runGraft(vdom.value0));\n        };\n        if (vdom instanceof Halogen_VDom_Types.Keyed && eqElemSpec(state.ns, state.name, vdom.value0, vdom.value1)) {\n            var v = Data_Array.length(vdom.value3);\n            if (state.length === 0 && v === 0) {\n                var attrs2 = Halogen_VDom_Machine.step(state.attrs, vdom.value2);\n                var nextState = {\n                    build: state.build,\n                    node: state.node,\n                    attrs: attrs2,\n                    ns: vdom.value0,\n                    name: vdom.value1,\n                    children: state.children,\n                    length: 0\n                };\n                return Halogen_VDom_Machine.mkStep(new Halogen_VDom_Machine.Step(state.node, nextState, $lazy_patchKeyed(237), haltKeyed));\n            };\n            var onThis = function (v2, s) {\n                return Halogen_VDom_Machine.halt(s);\n            };\n            var onThese = function (v2, ix$prime, s, v3) {\n                var res = Halogen_VDom_Machine.step(s, v3.value1);\n                Halogen_VDom_Util.insertChildIx(ix$prime, Halogen_VDom_Machine.extract(res), state.node);\n                return res;\n            };\n            var onThat = function (v2, ix, v3) {\n                var res = state.build(v3.value1);\n                Halogen_VDom_Util.insertChildIx(ix, Halogen_VDom_Machine.extract(res), state.node);\n                return res;\n            };\n            var children2 = Halogen_VDom_Util.diffWithKeyAndIxE(state.children, vdom.value3, Data_Tuple.fst, onThese, onThis, onThat);\n            var attrs2 = Halogen_VDom_Machine.step(state.attrs, vdom.value2);\n            var nextState = {\n                build: state.build,\n                node: state.node,\n                attrs: attrs2,\n                ns: vdom.value0,\n                name: vdom.value1,\n                children: children2,\n                length: v\n            };\n            return Halogen_VDom_Machine.mkStep(new Halogen_VDom_Machine.Step(state.node, nextState, $lazy_patchKeyed(261), haltKeyed));\n        };\n        haltKeyed(state);\n        return state.build(vdom);\n    };\n});\nvar patchKeyed = /* #__PURE__ */ $lazy_patchKeyed(217);\nvar buildWidget = function (v, build, w) {\n    var res = v.buildWidget(v)(w);\n    var res$prime = Halogen_VDom_Machine.unStep(function (v1) {\n        return Halogen_VDom_Machine.mkStep(new Halogen_VDom_Machine.Step(v1.value0, {\n            build: build,\n            widget: res\n        }, patchWidget, haltWidget));\n    })(res);\n    return res$prime;\n};\nvar buildText = function (v, build, s) {\n    var node = Halogen_VDom_Util.createTextNode(s, v.document);\n    var state = {\n        build: build,\n        node: node,\n        value: s\n    };\n    return Halogen_VDom_Machine.mkStep(new Halogen_VDom_Machine.Step(node, state, patchText, haltText));\n};\nvar buildKeyed = function (v, build, ns1, name1, as1, ch1) {\n    var el = Halogen_VDom_Util.createElement(Data_Nullable.toNullable(ns1), name1, v.document);\n    var node = Web_DOM_Element.toNode(el);\n    var onChild = function (v1, ix, v2) {\n        var res = build(v2.value1);\n        Halogen_VDom_Util.insertChildIx(ix, Halogen_VDom_Machine.extract(res), node);\n        return res;\n    };\n    var children = Halogen_VDom_Util.strMapWithIxE(ch1, Data_Tuple.fst, onChild);\n    var attrs = v.buildAttributes(el)(as1);\n    var state = {\n        build: build,\n        node: node,\n        attrs: attrs,\n        ns: ns1,\n        name: name1,\n        children: children,\n        length: Data_Array.length(ch1)\n    };\n    return Halogen_VDom_Machine.mkStep(new Halogen_VDom_Machine.Step(node, state, patchKeyed, haltKeyed));\n};\nvar buildElem = function (v, build, ns1, name1, as1, ch1) {\n    var el = Halogen_VDom_Util.createElement(Data_Nullable.toNullable(ns1), name1, v.document);\n    var node = Web_DOM_Element.toNode(el);\n    var onChild = function (ix, child) {\n        var res = build(child);\n        Halogen_VDom_Util.insertChildIx(ix, Halogen_VDom_Machine.extract(res), node);\n        return res;\n    };\n    var children = Halogen_VDom_Util.forE(ch1, onChild);\n    var attrs = v.buildAttributes(el)(as1);\n    var state = {\n        build: build,\n        node: node,\n        attrs: attrs,\n        ns: ns1,\n        name: name1,\n        children: children\n    };\n    return Halogen_VDom_Machine.mkStep(new Halogen_VDom_Machine.Step(node, state, patchElem, haltElem));\n};\nvar buildVDom = function (spec) {\n    var $lazy_build = $runtime_lazy(\"build\", \"Halogen.VDom.DOM\", function () {\n        return function (v) {\n            if (v instanceof Halogen_VDom_Types.Text) {\n                return buildText(spec, $lazy_build(59), v.value0);\n            };\n            if (v instanceof Halogen_VDom_Types.Elem) {\n                return buildElem(spec, $lazy_build(60), v.value0, v.value1, v.value2, v.value3);\n            };\n            if (v instanceof Halogen_VDom_Types.Keyed) {\n                return buildKeyed(spec, $lazy_build(61), v.value0, v.value1, v.value2, v.value3);\n            };\n            if (v instanceof Halogen_VDom_Types.Widget) {\n                return buildWidget(spec, $lazy_build(62), v.value0);\n            };\n            if (v instanceof Halogen_VDom_Types.Grafted) {\n                return $lazy_build(63)(Halogen_VDom_Types.runGraft(v.value0));\n            };\n            throw new Error(\"Failed pattern match at Halogen.VDom.DOM (line 58, column 27 - line 63, column 52): \" + [ v.constructor.name ]);\n        };\n    });\n    var build = $lazy_build(58);\n    return build;\n};\nexport {\n    VDomSpec,\n    buildVDom,\n    buildText,\n    buildElem,\n    buildKeyed,\n    buildWidget\n};\n", "export function typeOf(value) {\n  return typeof value;\n}\n\nexport function tagOf(value) {\n  return Object.prototype.toString.call(value).slice(8, -1);\n}\n\nexport function isNull(value) {\n  return value === null;\n}\n\nexport function isUndefined(value) {\n  return value === undefined;\n}\n\nexport const isArray = Array.isArray || function (value) {\n  return Object.prototype.toString.call(value) === \"[object Array]\";\n};\n", "export const fromNumberImpl = function (just) {\n  return function (nothing) {\n    return function (n) {\n      /* jshint bitwise: false */\n      return (n | 0) === n ? just(n) : nothing;\n    };\n  };\n};\n\nexport const toNumber = function (n) {\n  return n;\n};\n\nexport const fromStringAsImpl = function (just) {\n  return function (nothing) {\n    return function (radix) {\n      var digits;\n      if (radix < 11) {\n        digits = \"[0-\" + (radix - 1).toString() + \"]\";\n      } else if (radix === 11) {\n        digits = \"[0-9a]\";\n      } else {\n        digits = \"[0-9a-\" + String.fromCharCode(86 + radix) + \"]\";\n      }\n      var pattern = new RegExp(\"^[\\\\+\\\\-]?\" + digits + \"+$\", \"i\");\n\n      return function (s) {\n        /* jshint bitwise: false */\n        if (pattern.test(s)) {\n          var i = parseInt(s, radix);\n          return (i | 0) === i ? just(i) : nothing;\n        } else {\n          return nothing;\n        }\n      };\n    };\n  };\n};\n\nexport const toStringAs = function (radix) {\n  return function (i) {\n    return i.toString(radix);\n  };\n};\n\n\nexport const quot = function (x) {\n  return function (y) {\n    /* jshint bitwise: false */\n    return x / y | 0;\n  };\n};\n\nexport const rem = function (x) {\n  return function (y) {\n    return x % y;\n  };\n};\n\nexport const pow = function (x) {\n  return function (y) {\n    /* jshint bitwise: false */\n    return Math.pow(x,y) | 0;\n  };\n};\n", "// Generated by purs version 0.15.15\nimport * as $foreign from \"./foreign.js\";\nimport * as Control_Category from \"../Control.Category/index.js\";\nimport * as Data_Boolean from \"../Data.Boolean/index.js\";\nimport * as Data_Bounded from \"../Data.Bounded/index.js\";\nimport * as Data_Eq from \"../Data.Eq/index.js\";\nimport * as Data_Maybe from \"../Data.Maybe/index.js\";\nimport * as Data_Number from \"../Data.Number/index.js\";\nimport * as Data_Ordering from \"../Data.Ordering/index.js\";\nimport * as Data_Semiring from \"../Data.Semiring/index.js\";\nvar top = /* #__PURE__ */ Data_Bounded.top(Data_Bounded.boundedInt);\nvar bottom = /* #__PURE__ */ Data_Bounded.bottom(Data_Bounded.boundedInt);\nvar Radix = function (x) {\n    return x;\n};\nvar Even = /* #__PURE__ */ (function () {\n    function Even() {\n\n    };\n    Even.value = new Even();\n    return Even;\n})();\nvar Odd = /* #__PURE__ */ (function () {\n    function Odd() {\n\n    };\n    Odd.value = new Odd();\n    return Odd;\n})();\nvar showParity = {\n    show: function (v) {\n        if (v instanceof Even) {\n            return \"Even\";\n        };\n        if (v instanceof Odd) {\n            return \"Odd\";\n        };\n        throw new Error(\"Failed pattern match at Data.Int (line 117, column 1 - line 119, column 19): \" + [ v.constructor.name ]);\n    }\n};\nvar radix = function (n) {\n    if (n >= 2 && n <= 36) {\n        return new Data_Maybe.Just(n);\n    };\n    if (Data_Boolean.otherwise) {\n        return Data_Maybe.Nothing.value;\n    };\n    throw new Error(\"Failed pattern match at Data.Int (line 198, column 1 - line 198, column 28): \" + [ n.constructor.name ]);\n};\nvar odd = function (x) {\n    return (x & 1) !== 0;\n};\nvar octal = 8;\nvar hexadecimal = 16;\nvar fromStringAs = /* #__PURE__ */ (function () {\n    return $foreign.fromStringAsImpl(Data_Maybe.Just.create)(Data_Maybe.Nothing.value);\n})();\nvar fromString = /* #__PURE__ */ fromStringAs(10);\nvar fromNumber = /* #__PURE__ */ (function () {\n    return $foreign.fromNumberImpl(Data_Maybe.Just.create)(Data_Maybe.Nothing.value);\n})();\nvar unsafeClamp = function (x) {\n    if (!Data_Number[\"isFinite\"](x)) {\n        return 0;\n    };\n    if (x >= $foreign.toNumber(top)) {\n        return top;\n    };\n    if (x <= $foreign.toNumber(bottom)) {\n        return bottom;\n    };\n    if (Data_Boolean.otherwise) {\n        return Data_Maybe.fromMaybe(0)(fromNumber(x));\n    };\n    throw new Error(\"Failed pattern match at Data.Int (line 72, column 1 - line 72, column 29): \" + [ x.constructor.name ]);\n};\nvar round = function ($37) {\n    return unsafeClamp(Data_Number.round($37));\n};\nvar trunc = function ($38) {\n    return unsafeClamp(Data_Number.trunc($38));\n};\nvar floor = function ($39) {\n    return unsafeClamp(Data_Number.floor($39));\n};\nvar even = function (x) {\n    return (x & 1) === 0;\n};\nvar parity = function (n) {\n    var $28 = even(n);\n    if ($28) {\n        return Even.value;\n    };\n    return Odd.value;\n};\nvar eqParity = {\n    eq: function (x) {\n        return function (y) {\n            if (x instanceof Even && y instanceof Even) {\n                return true;\n            };\n            if (x instanceof Odd && y instanceof Odd) {\n                return true;\n            };\n            return false;\n        };\n    }\n};\nvar eq1 = /* #__PURE__ */ Data_Eq.eq(eqParity);\nvar ordParity = {\n    compare: function (x) {\n        return function (y) {\n            if (x instanceof Even && y instanceof Even) {\n                return Data_Ordering.EQ.value;\n            };\n            if (x instanceof Even) {\n                return Data_Ordering.LT.value;\n            };\n            if (y instanceof Even) {\n                return Data_Ordering.GT.value;\n            };\n            if (x instanceof Odd && y instanceof Odd) {\n                return Data_Ordering.EQ.value;\n            };\n            throw new Error(\"Failed pattern match at Data.Int (line 0, column 0 - line 0, column 0): \" + [ x.constructor.name, y.constructor.name ]);\n        };\n    },\n    Eq0: function () {\n        return eqParity;\n    }\n};\nvar semiringParity = /* #__PURE__ */ (function () {\n    return {\n        zero: Even.value,\n        add: function (x) {\n            return function (y) {\n                var $33 = eq1(x)(y);\n                if ($33) {\n                    return Even.value;\n                };\n                return Odd.value;\n            };\n        },\n        one: Odd.value,\n        mul: function (v) {\n            return function (v1) {\n                if (v instanceof Odd && v1 instanceof Odd) {\n                    return Odd.value;\n                };\n                return Even.value;\n            };\n        }\n    };\n})();\nvar ringParity = {\n    sub: /* #__PURE__ */ Data_Semiring.add(semiringParity),\n    Semiring0: function () {\n        return semiringParity;\n    }\n};\nvar divisionRingParity = {\n    recip: /* #__PURE__ */ Control_Category.identity(Control_Category.categoryFn),\n    Ring0: function () {\n        return ringParity;\n    }\n};\nvar decimal = 10;\nvar commutativeRingParity = {\n    Ring0: function () {\n        return ringParity;\n    }\n};\nvar euclideanRingParity = {\n    degree: function (v) {\n        if (v instanceof Even) {\n            return 0;\n        };\n        if (v instanceof Odd) {\n            return 1;\n        };\n        throw new Error(\"Failed pattern match at Data.Int (line 137, column 1 - line 141, column 17): \" + [ v.constructor.name ]);\n    },\n    div: function (x) {\n        return function (v) {\n            return x;\n        };\n    },\n    mod: function (v) {\n        return function (v1) {\n            return Even.value;\n        };\n    },\n    CommutativeRing0: function () {\n        return commutativeRingParity;\n    }\n};\nvar ceil = function ($40) {\n    return unsafeClamp(Data_Number.ceil($40));\n};\nvar boundedParity = /* #__PURE__ */ (function () {\n    return {\n        bottom: Even.value,\n        top: Odd.value,\n        Ord0: function () {\n            return ordParity;\n        }\n    };\n})();\nvar binary = 2;\nvar base36 = 36;\nexport {\n    toNumber,\n    toStringAs,\n    quot,\n    rem,\n    pow\n} from \"./foreign.js\";\nexport {\n    fromNumber,\n    ceil,\n    floor,\n    trunc,\n    round,\n    fromString,\n    radix,\n    binary,\n    octal,\n    decimal,\n    hexadecimal,\n    base36,\n    fromStringAs,\n    Even,\n    Odd,\n    parity,\n    even,\n    odd,\n    eqParity,\n    ordParity,\n    showParity,\n    boundedParity,\n    semiringParity,\n    ringParity,\n    commutativeRingParity,\n    euclideanRingParity,\n    divisionRingParity\n};\n", "// Generated by purs version 0.15.15\nimport * as Control_Alt from \"../Control.Alt/index.js\";\nimport * as Control_Applicative from \"../Control.Applicative/index.js\";\nimport * as Control_Apply from \"../Control.Apply/index.js\";\nimport * as Control_Plus from \"../Control.Plus/index.js\";\nimport * as Data_Eq from \"../Data.Eq/index.js\";\nimport * as Data_Foldable from \"../Data.Foldable/index.js\";\nimport * as Data_FoldableWithIndex from \"../Data.FoldableWithIndex/index.js\";\nimport * as Data_Functor from \"../Data.Functor/index.js\";\nimport * as Data_FunctorWithIndex from \"../Data.FunctorWithIndex/index.js\";\nimport * as Data_Maybe from \"../Data.Maybe/index.js\";\nimport * as Data_Ord from \"../Data.Ord/index.js\";\nimport * as Data_Ordering from \"../Data.Ordering/index.js\";\nimport * as Data_Semigroup from \"../Data.Semigroup/index.js\";\nimport * as Data_Semigroup_Foldable from \"../Data.Semigroup.Foldable/index.js\";\nimport * as Data_Show from \"../Data.Show/index.js\";\nimport * as Data_Traversable from \"../Data.Traversable/index.js\";\nimport * as Data_TraversableWithIndex from \"../Data.TraversableWithIndex/index.js\";\nimport * as Data_Tuple from \"../Data.Tuple/index.js\";\nimport * as Data_Unfoldable from \"../Data.Unfoldable/index.js\";\nvar map = /* #__PURE__ */ Data_Functor.map(Data_Tuple.functorTuple);\nvar map1 = /* #__PURE__ */ Data_Functor.map(Data_Maybe.functorMaybe);\nvar NonEmpty = /* #__PURE__ */ (function () {\n    function NonEmpty(value0, value1) {\n        this.value0 = value0;\n        this.value1 = value1;\n    };\n    NonEmpty.create = function (value0) {\n        return function (value1) {\n            return new NonEmpty(value0, value1);\n        };\n    };\n    return NonEmpty;\n})();\nvar unfoldable1NonEmpty = function (dictUnfoldable) {\n    var unfoldr = Data_Unfoldable.unfoldr(dictUnfoldable);\n    return {\n        unfoldr1: function (f) {\n            return function (b) {\n                return Data_Tuple.uncurry(NonEmpty.create)(map(unfoldr(map1(f)))(f(b)));\n            };\n        }\n    };\n};\nvar tail = function (v) {\n    return v.value1;\n};\nvar singleton = function (dictPlus) {\n    var empty = Control_Plus.empty(dictPlus);\n    return function (a) {\n        return new NonEmpty(a, empty);\n    };\n};\nvar showNonEmpty = function (dictShow) {\n    var show = Data_Show.show(dictShow);\n    return function (dictShow1) {\n        var show1 = Data_Show.show(dictShow1);\n        return {\n            show: function (v) {\n                return \"(NonEmpty \" + (show(v.value0) + (\" \" + (show1(v.value1) + \")\")));\n            }\n        };\n    };\n};\nvar semigroupNonEmpty = function (dictApplicative) {\n    var pure = Control_Applicative.pure(dictApplicative);\n    return function (dictSemigroup) {\n        var append1 = Data_Semigroup.append(dictSemigroup);\n        return {\n            append: function (v) {\n                return function (v1) {\n                    return new NonEmpty(v.value0, append1(v.value1)(append1(pure(v1.value0))(v1.value1)));\n                };\n            }\n        };\n    };\n};\nvar oneOf = function (dictAlternative) {\n    var alt = Control_Alt.alt((dictAlternative.Plus1()).Alt0());\n    var pure = Control_Applicative.pure(dictAlternative.Applicative0());\n    return function (v) {\n        return alt(pure(v.value0))(v.value1);\n    };\n};\nvar head = function (v) {\n    return v.value0;\n};\nvar functorNonEmpty = function (dictFunctor) {\n    var map2 = Data_Functor.map(dictFunctor);\n    return {\n        map: function (f) {\n            return function (m) {\n                return new NonEmpty(f(m.value0), map2(f)(m.value1));\n            };\n        }\n    };\n};\nvar functorWithIndex = function (dictFunctorWithIndex) {\n    var mapWithIndex = Data_FunctorWithIndex.mapWithIndex(dictFunctorWithIndex);\n    var functorNonEmpty1 = functorNonEmpty(dictFunctorWithIndex.Functor0());\n    return {\n        mapWithIndex: function (f) {\n            return function (v) {\n                return new NonEmpty(f(Data_Maybe.Nothing.value)(v.value0), mapWithIndex(function ($245) {\n                    return f(Data_Maybe.Just.create($245));\n                })(v.value1));\n            };\n        },\n        Functor0: function () {\n            return functorNonEmpty1;\n        }\n    };\n};\nvar fromNonEmpty = function (f) {\n    return function (v) {\n        return f(v.value0)(v.value1);\n    };\n};\nvar foldableNonEmpty = function (dictFoldable) {\n    var foldMap = Data_Foldable.foldMap(dictFoldable);\n    var foldl = Data_Foldable.foldl(dictFoldable);\n    var foldr = Data_Foldable.foldr(dictFoldable);\n    return {\n        foldMap: function (dictMonoid) {\n            var append1 = Data_Semigroup.append(dictMonoid.Semigroup0());\n            var foldMap1 = foldMap(dictMonoid);\n            return function (f) {\n                return function (v) {\n                    return append1(f(v.value0))(foldMap1(f)(v.value1));\n                };\n            };\n        },\n        foldl: function (f) {\n            return function (b) {\n                return function (v) {\n                    return foldl(f)(f(b)(v.value0))(v.value1);\n                };\n            };\n        },\n        foldr: function (f) {\n            return function (b) {\n                return function (v) {\n                    return f(v.value0)(foldr(f)(b)(v.value1));\n                };\n            };\n        }\n    };\n};\nvar foldableWithIndexNonEmpty = function (dictFoldableWithIndex) {\n    var foldMapWithIndex = Data_FoldableWithIndex.foldMapWithIndex(dictFoldableWithIndex);\n    var foldlWithIndex = Data_FoldableWithIndex.foldlWithIndex(dictFoldableWithIndex);\n    var foldrWithIndex = Data_FoldableWithIndex.foldrWithIndex(dictFoldableWithIndex);\n    var foldableNonEmpty1 = foldableNonEmpty(dictFoldableWithIndex.Foldable0());\n    return {\n        foldMapWithIndex: function (dictMonoid) {\n            var append1 = Data_Semigroup.append(dictMonoid.Semigroup0());\n            var foldMapWithIndex1 = foldMapWithIndex(dictMonoid);\n            return function (f) {\n                return function (v) {\n                    return append1(f(Data_Maybe.Nothing.value)(v.value0))(foldMapWithIndex1(function ($246) {\n                        return f(Data_Maybe.Just.create($246));\n                    })(v.value1));\n                };\n            };\n        },\n        foldlWithIndex: function (f) {\n            return function (b) {\n                return function (v) {\n                    return foldlWithIndex(function ($247) {\n                        return f(Data_Maybe.Just.create($247));\n                    })(f(Data_Maybe.Nothing.value)(b)(v.value0))(v.value1);\n                };\n            };\n        },\n        foldrWithIndex: function (f) {\n            return function (b) {\n                return function (v) {\n                    return f(Data_Maybe.Nothing.value)(v.value0)(foldrWithIndex(function ($248) {\n                        return f(Data_Maybe.Just.create($248));\n                    })(b)(v.value1));\n                };\n            };\n        },\n        Foldable0: function () {\n            return foldableNonEmpty1;\n        }\n    };\n};\nvar traversableNonEmpty = function (dictTraversable) {\n    var sequence = Data_Traversable.sequence(dictTraversable);\n    var traverse = Data_Traversable.traverse(dictTraversable);\n    var functorNonEmpty1 = functorNonEmpty(dictTraversable.Functor0());\n    var foldableNonEmpty1 = foldableNonEmpty(dictTraversable.Foldable1());\n    return {\n        sequence: function (dictApplicative) {\n            var Apply0 = dictApplicative.Apply0();\n            var apply = Control_Apply.apply(Apply0);\n            var map2 = Data_Functor.map(Apply0.Functor0());\n            var sequence1 = sequence(dictApplicative);\n            return function (v) {\n                return apply(map2(NonEmpty.create)(v.value0))(sequence1(v.value1));\n            };\n        },\n        traverse: function (dictApplicative) {\n            var Apply0 = dictApplicative.Apply0();\n            var apply = Control_Apply.apply(Apply0);\n            var map2 = Data_Functor.map(Apply0.Functor0());\n            var traverse1 = traverse(dictApplicative);\n            return function (f) {\n                return function (v) {\n                    return apply(map2(NonEmpty.create)(f(v.value0)))(traverse1(f)(v.value1));\n                };\n            };\n        },\n        Functor0: function () {\n            return functorNonEmpty1;\n        },\n        Foldable1: function () {\n            return foldableNonEmpty1;\n        }\n    };\n};\nvar traversableWithIndexNonEmpty = function (dictTraversableWithIndex) {\n    var traverseWithIndex = Data_TraversableWithIndex.traverseWithIndex(dictTraversableWithIndex);\n    var functorWithIndex1 = functorWithIndex(dictTraversableWithIndex.FunctorWithIndex0());\n    var foldableWithIndexNonEmpty1 = foldableWithIndexNonEmpty(dictTraversableWithIndex.FoldableWithIndex1());\n    var traversableNonEmpty1 = traversableNonEmpty(dictTraversableWithIndex.Traversable2());\n    return {\n        traverseWithIndex: function (dictApplicative) {\n            var Apply0 = dictApplicative.Apply0();\n            var apply = Control_Apply.apply(Apply0);\n            var map2 = Data_Functor.map(Apply0.Functor0());\n            var traverseWithIndex1 = traverseWithIndex(dictApplicative);\n            return function (f) {\n                return function (v) {\n                    return apply(map2(NonEmpty.create)(f(Data_Maybe.Nothing.value)(v.value0)))(traverseWithIndex1(function ($249) {\n                        return f(Data_Maybe.Just.create($249));\n                    })(v.value1));\n                };\n            };\n        },\n        FunctorWithIndex0: function () {\n            return functorWithIndex1;\n        },\n        FoldableWithIndex1: function () {\n            return foldableWithIndexNonEmpty1;\n        },\n        Traversable2: function () {\n            return traversableNonEmpty1;\n        }\n    };\n};\nvar foldable1NonEmpty = function (dictFoldable) {\n    var foldl = Data_Foldable.foldl(dictFoldable);\n    var foldr = Data_Foldable.foldr(dictFoldable);\n    var foldableNonEmpty1 = foldableNonEmpty(dictFoldable);\n    return {\n        foldMap1: function (dictSemigroup) {\n            var append1 = Data_Semigroup.append(dictSemigroup);\n            return function (f) {\n                return function (v) {\n                    return foldl(function (s) {\n                        return function (a1) {\n                            return append1(s)(f(a1));\n                        };\n                    })(f(v.value0))(v.value1);\n                };\n            };\n        },\n        foldr1: function (f) {\n            return function (v) {\n                return Data_Maybe.maybe(v.value0)(f(v.value0))(foldr(function (a1) {\n                    var $250 = Data_Maybe.maybe(a1)(f(a1));\n                    return function ($251) {\n                        return Data_Maybe.Just.create($250($251));\n                    };\n                })(Data_Maybe.Nothing.value)(v.value1));\n            };\n        },\n        foldl1: function (f) {\n            return function (v) {\n                return foldl(f)(v.value0)(v.value1);\n            };\n        },\n        Foldable0: function () {\n            return foldableNonEmpty1;\n        }\n    };\n};\nvar foldl1 = function (dictFoldable) {\n    return Data_Semigroup_Foldable.foldl1(foldable1NonEmpty(dictFoldable));\n};\nvar eqNonEmpty = function (dictEq1) {\n    var eq1 = Data_Eq.eq1(dictEq1);\n    return function (dictEq) {\n        var eq = Data_Eq.eq(dictEq);\n        var eq11 = eq1(dictEq);\n        return {\n            eq: function (x) {\n                return function (y) {\n                    return eq(x.value0)(y.value0) && eq11(x.value1)(y.value1);\n                };\n            }\n        };\n    };\n};\nvar ordNonEmpty = function (dictOrd1) {\n    var compare1 = Data_Ord.compare1(dictOrd1);\n    var eqNonEmpty1 = eqNonEmpty(dictOrd1.Eq10());\n    return function (dictOrd) {\n        var compare = Data_Ord.compare(dictOrd);\n        var compare11 = compare1(dictOrd);\n        var eqNonEmpty2 = eqNonEmpty1(dictOrd.Eq0());\n        return {\n            compare: function (x) {\n                return function (y) {\n                    var v = compare(x.value0)(y.value0);\n                    if (v instanceof Data_Ordering.LT) {\n                        return Data_Ordering.LT.value;\n                    };\n                    if (v instanceof Data_Ordering.GT) {\n                        return Data_Ordering.GT.value;\n                    };\n                    return compare11(x.value1)(y.value1);\n                };\n            },\n            Eq0: function () {\n                return eqNonEmpty2;\n            }\n        };\n    };\n};\nvar eq1NonEmpty = function (dictEq1) {\n    var eqNonEmpty1 = eqNonEmpty(dictEq1);\n    return {\n        eq1: function (dictEq) {\n            return Data_Eq.eq(eqNonEmpty1(dictEq));\n        }\n    };\n};\nvar ord1NonEmpty = function (dictOrd1) {\n    var ordNonEmpty1 = ordNonEmpty(dictOrd1);\n    var eq1NonEmpty1 = eq1NonEmpty(dictOrd1.Eq10());\n    return {\n        compare1: function (dictOrd) {\n            return Data_Ord.compare(ordNonEmpty1(dictOrd));\n        },\n        Eq10: function () {\n            return eq1NonEmpty1;\n        }\n    };\n};\nexport {\n    NonEmpty,\n    singleton,\n    foldl1,\n    fromNonEmpty,\n    oneOf,\n    head,\n    tail,\n    showNonEmpty,\n    eqNonEmpty,\n    eq1NonEmpty,\n    ordNonEmpty,\n    ord1NonEmpty,\n    functorNonEmpty,\n    functorWithIndex,\n    foldableNonEmpty,\n    foldableWithIndexNonEmpty,\n    traversableNonEmpty,\n    traversableWithIndexNonEmpty,\n    foldable1NonEmpty,\n    unfoldable1NonEmpty,\n    semigroupNonEmpty\n};\n", "// Generated by purs version 0.15.15\nimport * as Control_Applicative from \"../Control.Applicative/index.js\";\nimport * as Control_Apply from \"../Control.Apply/index.js\";\nimport * as Control_Bind from \"../Control.Bind/index.js\";\nimport * as Control_Category from \"../Control.Category/index.js\";\nimport * as Data_Eq from \"../Data.Eq/index.js\";\nimport * as Data_Foldable from \"../Data.Foldable/index.js\";\nimport * as Data_FoldableWithIndex from \"../Data.FoldableWithIndex/index.js\";\nimport * as Data_Function from \"../Data.Function/index.js\";\nimport * as Data_Functor from \"../Data.Functor/index.js\";\nimport * as Data_FunctorWithIndex from \"../Data.FunctorWithIndex/index.js\";\nimport * as Data_Maybe from \"../Data.Maybe/index.js\";\nimport * as Data_Monoid from \"../Data.Monoid/index.js\";\nimport * as Data_NonEmpty from \"../Data.NonEmpty/index.js\";\nimport * as Data_Ord from \"../Data.Ord/index.js\";\nimport * as Data_Ordering from \"../Data.Ordering/index.js\";\nimport * as Data_Semigroup from \"../Data.Semigroup/index.js\";\nimport * as Data_Semigroup_Traversable from \"../Data.Semigroup.Traversable/index.js\";\nimport * as Data_Semiring from \"../Data.Semiring/index.js\";\nimport * as Data_Show from \"../Data.Show/index.js\";\nimport * as Data_Traversable from \"../Data.Traversable/index.js\";\nimport * as Data_TraversableWithIndex from \"../Data.TraversableWithIndex/index.js\";\nimport * as Data_Tuple from \"../Data.Tuple/index.js\";\nvar add = /* #__PURE__ */ Data_Semiring.add(Data_Semiring.semiringInt);\nvar identity = /* #__PURE__ */ Control_Category.identity(Control_Category.categoryFn);\nvar Nil = /* #__PURE__ */ (function () {\n    function Nil() {\n\n    };\n    Nil.value = new Nil();\n    return Nil;\n})();\nvar Cons = /* #__PURE__ */ (function () {\n    function Cons(value0, value1) {\n        this.value0 = value0;\n        this.value1 = value1;\n    };\n    Cons.create = function (value0) {\n        return function (value1) {\n            return new Cons(value0, value1);\n        };\n    };\n    return Cons;\n})();\nvar NonEmptyList = function (x) {\n    return x;\n};\nvar toList = function (v) {\n    return new Cons(v.value0, v.value1);\n};\nvar newtypeNonEmptyList = {\n    Coercible0: function () {\n        return undefined;\n    }\n};\nvar nelCons = function (a) {\n    return function (v) {\n        return new Data_NonEmpty.NonEmpty(a, new Cons(v.value0, v.value1));\n    };\n};\nvar listMap = function (f) {\n    var chunkedRevMap = function ($copy_v) {\n        return function ($copy_v1) {\n            var $tco_var_v = $copy_v;\n            var $tco_done = false;\n            var $tco_result;\n            function $tco_loop(v, v1) {\n                if (v1 instanceof Cons && (v1.value1 instanceof Cons && v1.value1.value1 instanceof Cons)) {\n                    $tco_var_v = new Cons(v1, v);\n                    $copy_v1 = v1.value1.value1.value1;\n                    return;\n                };\n                var unrolledMap = function (v2) {\n                    if (v2 instanceof Cons && (v2.value1 instanceof Cons && v2.value1.value1 instanceof Nil)) {\n                        return new Cons(f(v2.value0), new Cons(f(v2.value1.value0), Nil.value));\n                    };\n                    if (v2 instanceof Cons && v2.value1 instanceof Nil) {\n                        return new Cons(f(v2.value0), Nil.value);\n                    };\n                    return Nil.value;\n                };\n                var reverseUnrolledMap = function ($copy_v2) {\n                    return function ($copy_v3) {\n                        var $tco_var_v2 = $copy_v2;\n                        var $tco_done1 = false;\n                        var $tco_result;\n                        function $tco_loop(v2, v3) {\n                            if (v2 instanceof Cons && (v2.value0 instanceof Cons && (v2.value0.value1 instanceof Cons && v2.value0.value1.value1 instanceof Cons))) {\n                                $tco_var_v2 = v2.value1;\n                                $copy_v3 = new Cons(f(v2.value0.value0), new Cons(f(v2.value0.value1.value0), new Cons(f(v2.value0.value1.value1.value0), v3)));\n                                return;\n                            };\n                            $tco_done1 = true;\n                            return v3;\n                        };\n                        while (!$tco_done1) {\n                            $tco_result = $tco_loop($tco_var_v2, $copy_v3);\n                        };\n                        return $tco_result;\n                    };\n                };\n                $tco_done = true;\n                return reverseUnrolledMap(v)(unrolledMap(v1));\n            };\n            while (!$tco_done) {\n                $tco_result = $tco_loop($tco_var_v, $copy_v1);\n            };\n            return $tco_result;\n        };\n    };\n    return chunkedRevMap(Nil.value);\n};\nvar functorList = {\n    map: listMap\n};\nvar map = /* #__PURE__ */ Data_Functor.map(functorList);\nvar functorNonEmptyList = /* #__PURE__ */ Data_NonEmpty.functorNonEmpty(functorList);\nvar foldableList = {\n    foldr: function (f) {\n        return function (b) {\n            var rev = (function () {\n                var go = function ($copy_v) {\n                    return function ($copy_v1) {\n                        var $tco_var_v = $copy_v;\n                        var $tco_done = false;\n                        var $tco_result;\n                        function $tco_loop(v, v1) {\n                            if (v1 instanceof Nil) {\n                                $tco_done = true;\n                                return v;\n                            };\n                            if (v1 instanceof Cons) {\n                                $tco_var_v = new Cons(v1.value0, v);\n                                $copy_v1 = v1.value1;\n                                return;\n                            };\n                            throw new Error(\"Failed pattern match at Data.List.Types (line 107, column 7 - line 107, column 23): \" + [ v.constructor.name, v1.constructor.name ]);\n                        };\n                        while (!$tco_done) {\n                            $tco_result = $tco_loop($tco_var_v, $copy_v1);\n                        };\n                        return $tco_result;\n                    };\n                };\n                return go(Nil.value);\n            })();\n            var $284 = Data_Foldable.foldl(foldableList)(Data_Function.flip(f))(b);\n            return function ($285) {\n                return $284(rev($285));\n            };\n        };\n    },\n    foldl: function (f) {\n        var go = function ($copy_b) {\n            return function ($copy_v) {\n                var $tco_var_b = $copy_b;\n                var $tco_done1 = false;\n                var $tco_result;\n                function $tco_loop(b, v) {\n                    if (v instanceof Nil) {\n                        $tco_done1 = true;\n                        return b;\n                    };\n                    if (v instanceof Cons) {\n                        $tco_var_b = f(b)(v.value0);\n                        $copy_v = v.value1;\n                        return;\n                    };\n                    throw new Error(\"Failed pattern match at Data.List.Types (line 111, column 12 - line 113, column 30): \" + [ v.constructor.name ]);\n                };\n                while (!$tco_done1) {\n                    $tco_result = $tco_loop($tco_var_b, $copy_v);\n                };\n                return $tco_result;\n            };\n        };\n        return go;\n    },\n    foldMap: function (dictMonoid) {\n        var append2 = Data_Semigroup.append(dictMonoid.Semigroup0());\n        var mempty = Data_Monoid.mempty(dictMonoid);\n        return function (f) {\n            return Data_Foldable.foldl(foldableList)(function (acc) {\n                var $286 = append2(acc);\n                return function ($287) {\n                    return $286(f($287));\n                };\n            })(mempty);\n        };\n    }\n};\nvar foldl = /* #__PURE__ */ Data_Foldable.foldl(foldableList);\nvar foldr = /* #__PURE__ */ Data_Foldable.foldr(foldableList);\nvar intercalate = /* #__PURE__ */ Data_Foldable.intercalate(foldableList)(Data_Monoid.monoidString);\nvar foldableNonEmptyList = /* #__PURE__ */ Data_NonEmpty.foldableNonEmpty(foldableList);\nvar foldableWithIndexList = {\n    foldrWithIndex: function (f) {\n        return function (b) {\n            return function (xs) {\n                var v = (function () {\n                    var rev = foldl(function (v1) {\n                        return function (a) {\n                            return new Data_Tuple.Tuple(v1.value0 + 1 | 0, new Cons(a, v1.value1));\n                        };\n                    });\n                    return rev(new Data_Tuple.Tuple(0, Nil.value))(xs);\n                })();\n                return Data_Tuple.snd(foldl(function (v1) {\n                    return function (a) {\n                        return new Data_Tuple.Tuple(v1.value0 - 1 | 0, f(v1.value0 - 1 | 0)(a)(v1.value1));\n                    };\n                })(new Data_Tuple.Tuple(v.value0, b))(v.value1));\n            };\n        };\n    },\n    foldlWithIndex: function (f) {\n        return function (acc) {\n            var $288 = foldl(function (v) {\n                return function (a) {\n                    return new Data_Tuple.Tuple(v.value0 + 1 | 0, f(v.value0)(v.value1)(a));\n                };\n            })(new Data_Tuple.Tuple(0, acc));\n            return function ($289) {\n                return Data_Tuple.snd($288($289));\n            };\n        };\n    },\n    foldMapWithIndex: function (dictMonoid) {\n        var append2 = Data_Semigroup.append(dictMonoid.Semigroup0());\n        var mempty = Data_Monoid.mempty(dictMonoid);\n        return function (f) {\n            return Data_FoldableWithIndex.foldlWithIndex(foldableWithIndexList)(function (i) {\n                return function (acc) {\n                    var $290 = append2(acc);\n                    var $291 = f(i);\n                    return function ($292) {\n                        return $290($291($292));\n                    };\n                };\n            })(mempty);\n        };\n    },\n    Foldable0: function () {\n        return foldableList;\n    }\n};\nvar foldableWithIndexNonEmpty = /* #__PURE__ */ Data_NonEmpty.foldableWithIndexNonEmpty(foldableWithIndexList);\nvar foldMapWithIndex = /* #__PURE__ */ Data_FoldableWithIndex.foldMapWithIndex(foldableWithIndexNonEmpty);\nvar foldlWithIndex = /* #__PURE__ */ Data_FoldableWithIndex.foldlWithIndex(foldableWithIndexNonEmpty);\nvar foldrWithIndex = /* #__PURE__ */ Data_FoldableWithIndex.foldrWithIndex(foldableWithIndexNonEmpty);\nvar foldrWithIndex1 = /* #__PURE__ */ Data_FoldableWithIndex.foldrWithIndex(foldableWithIndexList);\nvar foldlWithIndex1 = /* #__PURE__ */ Data_FoldableWithIndex.foldlWithIndex(foldableWithIndexList);\nvar foldableWithIndexNonEmptyList = {\n    foldMapWithIndex: function (dictMonoid) {\n        var foldMapWithIndex1 = foldMapWithIndex(dictMonoid);\n        return function (f) {\n            return function (v) {\n                return foldMapWithIndex1((function () {\n                    var $293 = Data_Maybe.maybe(0)(add(1));\n                    return function ($294) {\n                        return f($293($294));\n                    };\n                })())(v);\n            };\n        };\n    },\n    foldlWithIndex: function (f) {\n        return function (b) {\n            return function (v) {\n                return foldlWithIndex((function () {\n                    var $295 = Data_Maybe.maybe(0)(add(1));\n                    return function ($296) {\n                        return f($295($296));\n                    };\n                })())(b)(v);\n            };\n        };\n    },\n    foldrWithIndex: function (f) {\n        return function (b) {\n            return function (v) {\n                return foldrWithIndex((function () {\n                    var $297 = Data_Maybe.maybe(0)(add(1));\n                    return function ($298) {\n                        return f($297($298));\n                    };\n                })())(b)(v);\n            };\n        };\n    },\n    Foldable0: function () {\n        return foldableNonEmptyList;\n    }\n};\nvar functorWithIndexList = {\n    mapWithIndex: function (f) {\n        return foldrWithIndex1(function (i) {\n            return function (x) {\n                return function (acc) {\n                    return new Cons(f(i)(x), acc);\n                };\n            };\n        })(Nil.value);\n    },\n    Functor0: function () {\n        return functorList;\n    }\n};\nvar mapWithIndex = /* #__PURE__ */ Data_FunctorWithIndex.mapWithIndex(/* #__PURE__ */ Data_NonEmpty.functorWithIndex(functorWithIndexList));\nvar functorWithIndexNonEmptyList = {\n    mapWithIndex: function (fn) {\n        return function (v) {\n            return mapWithIndex((function () {\n                var $299 = Data_Maybe.maybe(0)(add(1));\n                return function ($300) {\n                    return fn($299($300));\n                };\n            })())(v);\n        };\n    },\n    Functor0: function () {\n        return functorNonEmptyList;\n    }\n};\nvar semigroupList = {\n    append: function (xs) {\n        return function (ys) {\n            return foldr(Cons.create)(ys)(xs);\n        };\n    }\n};\nvar append1 = /* #__PURE__ */ Data_Semigroup.append(semigroupList);\nvar monoidList = /* #__PURE__ */ (function () {\n    return {\n        mempty: Nil.value,\n        Semigroup0: function () {\n            return semigroupList;\n        }\n    };\n})();\nvar semigroupNonEmptyList = {\n    append: function (v) {\n        return function (as$prime) {\n            return new Data_NonEmpty.NonEmpty(v.value0, append1(v.value1)(toList(as$prime)));\n        };\n    }\n};\nvar showList = function (dictShow) {\n    var show = Data_Show.show(dictShow);\n    return {\n        show: function (v) {\n            if (v instanceof Nil) {\n                return \"Nil\";\n            };\n            return \"(\" + (intercalate(\" : \")(map(show)(v)) + \" : Nil)\");\n        }\n    };\n};\nvar showNonEmptyList = function (dictShow) {\n    var show = Data_Show.show(Data_NonEmpty.showNonEmpty(dictShow)(showList(dictShow)));\n    return {\n        show: function (v) {\n            return \"(NonEmptyList \" + (show(v) + \")\");\n        }\n    };\n};\nvar traversableList = {\n    traverse: function (dictApplicative) {\n        var Apply0 = dictApplicative.Apply0();\n        var map1 = Data_Functor.map(Apply0.Functor0());\n        var lift2 = Control_Apply.lift2(Apply0);\n        var pure1 = Control_Applicative.pure(dictApplicative);\n        return function (f) {\n            var $301 = map1(foldl(Data_Function.flip(Cons.create))(Nil.value));\n            var $302 = foldl(function (acc) {\n                var $304 = lift2(Data_Function.flip(Cons.create))(acc);\n                return function ($305) {\n                    return $304(f($305));\n                };\n            })(pure1(Nil.value));\n            return function ($303) {\n                return $301($302($303));\n            };\n        };\n    },\n    sequence: function (dictApplicative) {\n        return Data_Traversable.traverse(traversableList)(dictApplicative)(identity);\n    },\n    Functor0: function () {\n        return functorList;\n    },\n    Foldable1: function () {\n        return foldableList;\n    }\n};\nvar traversableNonEmptyList = /* #__PURE__ */ Data_NonEmpty.traversableNonEmpty(traversableList);\nvar traversableWithIndexList = {\n    traverseWithIndex: function (dictApplicative) {\n        var Apply0 = dictApplicative.Apply0();\n        var map1 = Data_Functor.map(Apply0.Functor0());\n        var lift2 = Control_Apply.lift2(Apply0);\n        var pure1 = Control_Applicative.pure(dictApplicative);\n        return function (f) {\n            var rev = foldl(Data_Function.flip(Cons.create))(Nil.value);\n            var $306 = map1(rev);\n            var $307 = foldlWithIndex1(function (i) {\n                return function (acc) {\n                    var $309 = lift2(Data_Function.flip(Cons.create))(acc);\n                    var $310 = f(i);\n                    return function ($311) {\n                        return $309($310($311));\n                    };\n                };\n            })(pure1(Nil.value));\n            return function ($308) {\n                return $306($307($308));\n            };\n        };\n    },\n    FunctorWithIndex0: function () {\n        return functorWithIndexList;\n    },\n    FoldableWithIndex1: function () {\n        return foldableWithIndexList;\n    },\n    Traversable2: function () {\n        return traversableList;\n    }\n};\nvar traverseWithIndex = /* #__PURE__ */ Data_TraversableWithIndex.traverseWithIndex(/* #__PURE__ */ Data_NonEmpty.traversableWithIndexNonEmpty(traversableWithIndexList));\nvar traversableWithIndexNonEmptyList = {\n    traverseWithIndex: function (dictApplicative) {\n        var map1 = Data_Functor.map((dictApplicative.Apply0()).Functor0());\n        var traverseWithIndex1 = traverseWithIndex(dictApplicative);\n        return function (f) {\n            return function (v) {\n                return map1(NonEmptyList)(traverseWithIndex1((function () {\n                    var $312 = Data_Maybe.maybe(0)(add(1));\n                    return function ($313) {\n                        return f($312($313));\n                    };\n                })())(v));\n            };\n        };\n    },\n    FunctorWithIndex0: function () {\n        return functorWithIndexNonEmptyList;\n    },\n    FoldableWithIndex1: function () {\n        return foldableWithIndexNonEmptyList;\n    },\n    Traversable2: function () {\n        return traversableNonEmptyList;\n    }\n};\nvar unfoldable1List = {\n    unfoldr1: function (f) {\n        return function (b) {\n            var go = function ($copy_source) {\n                return function ($copy_memo) {\n                    var $tco_var_source = $copy_source;\n                    var $tco_done = false;\n                    var $tco_result;\n                    function $tco_loop(source, memo) {\n                        var v = f(source);\n                        if (v.value1 instanceof Data_Maybe.Just) {\n                            $tco_var_source = v.value1.value0;\n                            $copy_memo = new Cons(v.value0, memo);\n                            return;\n                        };\n                        if (v.value1 instanceof Data_Maybe.Nothing) {\n                            $tco_done = true;\n                            return foldl(Data_Function.flip(Cons.create))(Nil.value)(new Cons(v.value0, memo));\n                        };\n                        throw new Error(\"Failed pattern match at Data.List.Types (line 135, column 22 - line 137, column 61): \" + [ v.constructor.name ]);\n                    };\n                    while (!$tco_done) {\n                        $tco_result = $tco_loop($tco_var_source, $copy_memo);\n                    };\n                    return $tco_result;\n                };\n            };\n            return go(b)(Nil.value);\n        };\n    }\n};\nvar unfoldableList = {\n    unfoldr: function (f) {\n        return function (b) {\n            var go = function ($copy_source) {\n                return function ($copy_memo) {\n                    var $tco_var_source = $copy_source;\n                    var $tco_done = false;\n                    var $tco_result;\n                    function $tco_loop(source, memo) {\n                        var v = f(source);\n                        if (v instanceof Data_Maybe.Nothing) {\n                            $tco_done = true;\n                            return foldl(Data_Function.flip(Cons.create))(Nil.value)(memo);\n                        };\n                        if (v instanceof Data_Maybe.Just) {\n                            $tco_var_source = v.value0.value1;\n                            $copy_memo = new Cons(v.value0.value0, memo);\n                            return;\n                        };\n                        throw new Error(\"Failed pattern match at Data.List.Types (line 142, column 22 - line 144, column 52): \" + [ v.constructor.name ]);\n                    };\n                    while (!$tco_done) {\n                        $tco_result = $tco_loop($tco_var_source, $copy_memo);\n                    };\n                    return $tco_result;\n                };\n            };\n            return go(b)(Nil.value);\n        };\n    },\n    Unfoldable10: function () {\n        return unfoldable1List;\n    }\n};\nvar unfoldable1NonEmptyList = /* #__PURE__ */ Data_NonEmpty.unfoldable1NonEmpty(unfoldableList);\nvar foldable1NonEmptyList = /* #__PURE__ */ Data_NonEmpty.foldable1NonEmpty(foldableList);\nvar extendNonEmptyList = {\n    extend: function (f) {\n        return function (v) {\n            var go = function (a) {\n                return function (v1) {\n                    return {\n                        val: new Cons(f(new Data_NonEmpty.NonEmpty(a, v1.acc)), v1.val),\n                        acc: new Cons(a, v1.acc)\n                    };\n                };\n            };\n            return new Data_NonEmpty.NonEmpty(f(v), (foldr(go)({\n                val: Nil.value,\n                acc: Nil.value\n            })(v.value1)).val);\n        };\n    },\n    Functor0: function () {\n        return functorNonEmptyList;\n    }\n};\nvar extendList = {\n    extend: function (v) {\n        return function (v1) {\n            if (v1 instanceof Nil) {\n                return Nil.value;\n            };\n            if (v1 instanceof Cons) {\n                var go = function (a$prime) {\n                    return function (v2) {\n                        var acc$prime = new Cons(a$prime, v2.acc);\n                        return {\n                            val: new Cons(v(acc$prime), v2.val),\n                            acc: acc$prime\n                        };\n                    };\n                };\n                return new Cons(v(v1), (foldr(go)({\n                    val: Nil.value,\n                    acc: Nil.value\n                })(v1.value1)).val);\n            };\n            throw new Error(\"Failed pattern match at Data.List.Types (line 180, column 1 - line 187, column 42): \" + [ v.constructor.name, v1.constructor.name ]);\n        };\n    },\n    Functor0: function () {\n        return functorList;\n    }\n};\nvar eq1List = {\n    eq1: function (dictEq) {\n        var eq = Data_Eq.eq(dictEq);\n        return function (xs) {\n            return function (ys) {\n                var go = function ($copy_v) {\n                    return function ($copy_v1) {\n                        return function ($copy_v2) {\n                            var $tco_var_v = $copy_v;\n                            var $tco_var_v1 = $copy_v1;\n                            var $tco_done = false;\n                            var $tco_result;\n                            function $tco_loop(v, v1, v2) {\n                                if (!v2) {\n                                    $tco_done = true;\n                                    return false;\n                                };\n                                if (v instanceof Nil && v1 instanceof Nil) {\n                                    $tco_done = true;\n                                    return v2;\n                                };\n                                if (v instanceof Cons && v1 instanceof Cons) {\n                                    $tco_var_v = v.value1;\n                                    $tco_var_v1 = v1.value1;\n                                    $copy_v2 = v2 && eq(v1.value0)(v.value0);\n                                    return;\n                                };\n                                $tco_done = true;\n                                return false;\n                            };\n                            while (!$tco_done) {\n                                $tco_result = $tco_loop($tco_var_v, $tco_var_v1, $copy_v2);\n                            };\n                            return $tco_result;\n                        };\n                    };\n                };\n                return go(xs)(ys)(true);\n            };\n        };\n    }\n};\nvar eq1 = /* #__PURE__ */ Data_Eq.eq1(eq1List);\nvar eqNonEmpty = /* #__PURE__ */ Data_NonEmpty.eqNonEmpty(eq1List);\nvar eq1NonEmptyList = /* #__PURE__ */ Data_NonEmpty.eq1NonEmpty(eq1List);\nvar eqList = function (dictEq) {\n    return {\n        eq: eq1(dictEq)\n    };\n};\nvar eqNonEmptyList = function (dictEq) {\n    return eqNonEmpty(dictEq);\n};\nvar ord1List = {\n    compare1: function (dictOrd) {\n        var compare = Data_Ord.compare(dictOrd);\n        return function (xs) {\n            return function (ys) {\n                var go = function ($copy_v) {\n                    return function ($copy_v1) {\n                        var $tco_var_v = $copy_v;\n                        var $tco_done = false;\n                        var $tco_result;\n                        function $tco_loop(v, v1) {\n                            if (v instanceof Nil && v1 instanceof Nil) {\n                                $tco_done = true;\n                                return Data_Ordering.EQ.value;\n                            };\n                            if (v instanceof Nil) {\n                                $tco_done = true;\n                                return Data_Ordering.LT.value;\n                            };\n                            if (v1 instanceof Nil) {\n                                $tco_done = true;\n                                return Data_Ordering.GT.value;\n                            };\n                            if (v instanceof Cons && v1 instanceof Cons) {\n                                var v2 = compare(v.value0)(v1.value0);\n                                if (v2 instanceof Data_Ordering.EQ) {\n                                    $tco_var_v = v.value1;\n                                    $copy_v1 = v1.value1;\n                                    return;\n                                };\n                                $tco_done = true;\n                                return v2;\n                            };\n                            throw new Error(\"Failed pattern match at Data.List.Types (line 60, column 5 - line 60, column 20): \" + [ v.constructor.name, v1.constructor.name ]);\n                        };\n                        while (!$tco_done) {\n                            $tco_result = $tco_loop($tco_var_v, $copy_v1);\n                        };\n                        return $tco_result;\n                    };\n                };\n                return go(xs)(ys);\n            };\n        };\n    },\n    Eq10: function () {\n        return eq1List;\n    }\n};\nvar compare1 = /* #__PURE__ */ Data_Ord.compare1(ord1List);\nvar ordNonEmpty = /* #__PURE__ */ Data_NonEmpty.ordNonEmpty(ord1List);\nvar ord1NonEmptyList = /* #__PURE__ */ Data_NonEmpty.ord1NonEmpty(ord1List);\nvar ordList = function (dictOrd) {\n    var eqList1 = eqList(dictOrd.Eq0());\n    return {\n        compare: compare1(dictOrd),\n        Eq0: function () {\n            return eqList1;\n        }\n    };\n};\nvar ordNonEmptyList = function (dictOrd) {\n    return ordNonEmpty(dictOrd);\n};\nvar comonadNonEmptyList = {\n    extract: function (v) {\n        return v.value0;\n    },\n    Extend0: function () {\n        return extendNonEmptyList;\n    }\n};\nvar applyList = {\n    apply: function (v) {\n        return function (v1) {\n            if (v instanceof Nil) {\n                return Nil.value;\n            };\n            if (v instanceof Cons) {\n                return append1(map(v.value0)(v1))(Control_Apply.apply(applyList)(v.value1)(v1));\n            };\n            throw new Error(\"Failed pattern match at Data.List.Types (line 157, column 1 - line 159, column 48): \" + [ v.constructor.name, v1.constructor.name ]);\n        };\n    },\n    Functor0: function () {\n        return functorList;\n    }\n};\nvar apply = /* #__PURE__ */ Control_Apply.apply(applyList);\nvar applyNonEmptyList = {\n    apply: function (v) {\n        return function (v1) {\n            return new Data_NonEmpty.NonEmpty(v.value0(v1.value0), append1(apply(v.value1)(new Cons(v1.value0, Nil.value)))(apply(new Cons(v.value0, v.value1))(v1.value1)));\n        };\n    },\n    Functor0: function () {\n        return functorNonEmptyList;\n    }\n};\nvar bindList = {\n    bind: function (v) {\n        return function (v1) {\n            if (v instanceof Nil) {\n                return Nil.value;\n            };\n            if (v instanceof Cons) {\n                return append1(v1(v.value0))(Control_Bind.bind(bindList)(v.value1)(v1));\n            };\n            throw new Error(\"Failed pattern match at Data.List.Types (line 164, column 1 - line 166, column 37): \" + [ v.constructor.name, v1.constructor.name ]);\n        };\n    },\n    Apply0: function () {\n        return applyList;\n    }\n};\nvar bind = /* #__PURE__ */ Control_Bind.bind(bindList);\nvar bindNonEmptyList = {\n    bind: function (v) {\n        return function (f) {\n            var v1 = f(v.value0);\n            return new Data_NonEmpty.NonEmpty(v1.value0, append1(v1.value1)(bind(v.value1)(function ($314) {\n                return toList(f($314));\n            })));\n        };\n    },\n    Apply0: function () {\n        return applyNonEmptyList;\n    }\n};\nvar applicativeList = {\n    pure: function (a) {\n        return new Cons(a, Nil.value);\n    },\n    Apply0: function () {\n        return applyList;\n    }\n};\nvar monadList = {\n    Applicative0: function () {\n        return applicativeList;\n    },\n    Bind1: function () {\n        return bindList;\n    }\n};\nvar altNonEmptyList = {\n    alt: /* #__PURE__ */ Data_Semigroup.append(semigroupNonEmptyList),\n    Functor0: function () {\n        return functorNonEmptyList;\n    }\n};\nvar altList = {\n    alt: append1,\n    Functor0: function () {\n        return functorList;\n    }\n};\nvar plusList = /* #__PURE__ */ (function () {\n    return {\n        empty: Nil.value,\n        Alt0: function () {\n            return altList;\n        }\n    };\n})();\nvar alternativeList = {\n    Applicative0: function () {\n        return applicativeList;\n    },\n    Plus1: function () {\n        return plusList;\n    }\n};\nvar monadPlusList = {\n    Monad0: function () {\n        return monadList;\n    },\n    Alternative1: function () {\n        return alternativeList;\n    }\n};\nvar applicativeNonEmptyList = {\n    pure: /* #__PURE__ */ (function () {\n        var $315 = Data_NonEmpty.singleton(plusList);\n        return function ($316) {\n            return NonEmptyList($315($316));\n        };\n    })(),\n    Apply0: function () {\n        return applyNonEmptyList;\n    }\n};\nvar pure = /* #__PURE__ */ Control_Applicative.pure(applicativeNonEmptyList);\nvar monadNonEmptyList = {\n    Applicative0: function () {\n        return applicativeNonEmptyList;\n    },\n    Bind1: function () {\n        return bindNonEmptyList;\n    }\n};\nvar traversable1NonEmptyList = {\n    traverse1: function (dictApply) {\n        var Functor0 = dictApply.Functor0();\n        var mapFlipped = Data_Functor.mapFlipped(Functor0);\n        var lift2 = Control_Apply.lift2(dictApply);\n        var map1 = Data_Functor.map(Functor0);\n        return function (f) {\n            return function (v) {\n                return mapFlipped(foldl(function (acc) {\n                    var $317 = lift2(Data_Function.flip(nelCons))(acc);\n                    return function ($318) {\n                        return $317(f($318));\n                    };\n                })(map1(pure)(f(v.value0)))(v.value1))(function (v1) {\n                    return foldl(Data_Function.flip(nelCons))(pure(v1.value0))(v1.value1);\n                });\n            };\n        };\n    },\n    sequence1: function (dictApply) {\n        return Data_Semigroup_Traversable.traverse1(traversable1NonEmptyList)(dictApply)(identity);\n    },\n    Foldable10: function () {\n        return foldable1NonEmptyList;\n    },\n    Traversable1: function () {\n        return traversableNonEmptyList;\n    }\n};\nexport {\n    Nil,\n    Cons,\n    NonEmptyList,\n    toList,\n    nelCons,\n    showList,\n    eqList,\n    eq1List,\n    ordList,\n    ord1List,\n    semigroupList,\n    monoidList,\n    functorList,\n    functorWithIndexList,\n    foldableList,\n    foldableWithIndexList,\n    unfoldable1List,\n    unfoldableList,\n    traversableList,\n    traversableWithIndexList,\n    applyList,\n    applicativeList,\n    bindList,\n    monadList,\n    altList,\n    plusList,\n    alternativeList,\n    monadPlusList,\n    extendList,\n    newtypeNonEmptyList,\n    eqNonEmptyList,\n    ordNonEmptyList,\n    eq1NonEmptyList,\n    ord1NonEmptyList,\n    showNonEmptyList,\n    functorNonEmptyList,\n    applyNonEmptyList,\n    applicativeNonEmptyList,\n    bindNonEmptyList,\n    monadNonEmptyList,\n    altNonEmptyList,\n    extendNonEmptyList,\n    comonadNonEmptyList,\n    semigroupNonEmptyList,\n    foldableNonEmptyList,\n    traversableNonEmptyList,\n    foldable1NonEmptyList,\n    unfoldable1NonEmptyList,\n    functorWithIndexNonEmptyList,\n    foldableWithIndexNonEmptyList,\n    traversableWithIndexNonEmptyList,\n    traversable1NonEmptyList\n};\n", "// Generated by purs version 0.15.15\nimport * as Control_Alt from \"../Control.Alt/index.js\";\nimport * as Control_Applicative from \"../Control.Applicative/index.js\";\nimport * as Control_Apply from \"../Control.Apply/index.js\";\nimport * as Control_Bind from \"../Control.Bind/index.js\";\nimport * as Control_Category from \"../Control.Category/index.js\";\nimport * as Control_Lazy from \"../Control.Lazy/index.js\";\nimport * as Control_Monad_Rec_Class from \"../Control.Monad.Rec.Class/index.js\";\nimport * as Data_Bifunctor from \"../Data.Bifunctor/index.js\";\nimport * as Data_Boolean from \"../Data.Boolean/index.js\";\nimport * as Data_Eq from \"../Data.Eq/index.js\";\nimport * as Data_Foldable from \"../Data.Foldable/index.js\";\nimport * as Data_Function from \"../Data.Function/index.js\";\nimport * as Data_Functor from \"../Data.Functor/index.js\";\nimport * as Data_HeytingAlgebra from \"../Data.HeytingAlgebra/index.js\";\nimport * as Data_List_Internal from \"../Data.List.Internal/index.js\";\nimport * as Data_List_Types from \"../Data.List.Types/index.js\";\nimport * as Data_Maybe from \"../Data.Maybe/index.js\";\nimport * as Data_NonEmpty from \"../Data.NonEmpty/index.js\";\nimport * as Data_Ord from \"../Data.Ord/index.js\";\nimport * as Data_Ordering from \"../Data.Ordering/index.js\";\nimport * as Data_Semigroup from \"../Data.Semigroup/index.js\";\nimport * as Data_Show from \"../Data.Show/index.js\";\nimport * as Data_Traversable from \"../Data.Traversable/index.js\";\nimport * as Data_Tuple from \"../Data.Tuple/index.js\";\nimport * as Data_Unfoldable from \"../Data.Unfoldable/index.js\";\nimport * as Data_Unit from \"../Data.Unit/index.js\";\nvar map = /* #__PURE__ */ Data_Functor.map(Data_Maybe.functorMaybe);\nvar foldr = /* #__PURE__ */ Data_Foldable.foldr(Data_List_Types.foldableList);\nvar tailRecM2 = /* #__PURE__ */ Control_Monad_Rec_Class.tailRecM2(Control_Monad_Rec_Class.monadRecMaybe);\nvar eq = /* #__PURE__ */ Data_Eq.eq(Data_Ordering.eqOrdering);\nvar notEq = /* #__PURE__ */ Data_Eq.notEq(Data_Ordering.eqOrdering);\nvar sequence = /* #__PURE__ */ Data_Traversable.sequence(Data_List_Types.traversableList);\nvar bimap = /* #__PURE__ */ Data_Bifunctor.bimap(Control_Monad_Rec_Class.bifunctorStep);\nvar foldl = /* #__PURE__ */ Data_Foldable.foldl(Data_List_Types.foldableList);\nvar any = /* #__PURE__ */ Data_Foldable.any(Data_List_Types.foldableList)(Data_HeytingAlgebra.heytingAlgebraBoolean);\nvar append1 = /* #__PURE__ */ Data_Semigroup.append(Data_List_Types.semigroupList);\nvar bind = /* #__PURE__ */ Control_Bind.bind(Data_List_Types.bindList);\nvar identity = /* #__PURE__ */ Control_Category.identity(Control_Category.categoryFn);\nvar Pattern = function (x) {\n    return x;\n};\nvar updateAt = function (v) {\n    return function (v1) {\n        return function (v2) {\n            if (v === 0 && v2 instanceof Data_List_Types.Cons) {\n                return new Data_Maybe.Just(new Data_List_Types.Cons(v1, v2.value1));\n            };\n            if (v2 instanceof Data_List_Types.Cons) {\n                return map(function (v3) {\n                    return new Data_List_Types.Cons(v2.value0, v3);\n                })(updateAt(v - 1 | 0)(v1)(v2.value1));\n            };\n            return Data_Maybe.Nothing.value;\n        };\n    };\n};\nvar unzip = /* #__PURE__ */ (function () {\n    return foldr(function (v) {\n        return function (v1) {\n            return new Data_Tuple.Tuple(new Data_List_Types.Cons(v.value0, v1.value0), new Data_List_Types.Cons(v.value1, v1.value1));\n        };\n    })(new Data_Tuple.Tuple(Data_List_Types.Nil.value, Data_List_Types.Nil.value));\n})();\nvar uncons = function (v) {\n    if (v instanceof Data_List_Types.Nil) {\n        return Data_Maybe.Nothing.value;\n    };\n    if (v instanceof Data_List_Types.Cons) {\n        return new Data_Maybe.Just({\n            head: v.value0,\n            tail: v.value1\n        });\n    };\n    throw new Error(\"Failed pattern match at Data.List (line 259, column 1 - line 259, column 66): \" + [ v.constructor.name ]);\n};\nvar toUnfoldable = function (dictUnfoldable) {\n    return Data_Unfoldable.unfoldr(dictUnfoldable)(function (xs) {\n        return map(function (rec) {\n            return new Data_Tuple.Tuple(rec.head, rec.tail);\n        })(uncons(xs));\n    });\n};\nvar tail = function (v) {\n    if (v instanceof Data_List_Types.Nil) {\n        return Data_Maybe.Nothing.value;\n    };\n    if (v instanceof Data_List_Types.Cons) {\n        return new Data_Maybe.Just(v.value1);\n    };\n    throw new Error(\"Failed pattern match at Data.List (line 245, column 1 - line 245, column 43): \" + [ v.constructor.name ]);\n};\nvar stripPrefix = function (dictEq) {\n    var eq2 = Data_Eq.eq(dictEq);\n    return function (v) {\n        return function (s) {\n            var go = function (prefix) {\n                return function (input) {\n                    if (prefix instanceof Data_List_Types.Cons && (input instanceof Data_List_Types.Cons && eq2(prefix.value0)(input.value0))) {\n                        return new Data_Maybe.Just(new Control_Monad_Rec_Class.Loop({\n                            a: prefix.value1,\n                            b: input.value1\n                        }));\n                    };\n                    if (prefix instanceof Data_List_Types.Nil) {\n                        return new Data_Maybe.Just(new Control_Monad_Rec_Class.Done(input));\n                    };\n                    return Data_Maybe.Nothing.value;\n                };\n            };\n            return tailRecM2(go)(v)(s);\n        };\n    };\n};\nvar span = function (v) {\n    return function (v1) {\n        if (v1 instanceof Data_List_Types.Cons && v(v1.value0)) {\n            var v2 = span(v)(v1.value1);\n            return {\n                init: new Data_List_Types.Cons(v1.value0, v2.init),\n                rest: v2.rest\n            };\n        };\n        return {\n            init: Data_List_Types.Nil.value,\n            rest: v1\n        };\n    };\n};\nvar snoc = function (xs) {\n    return function (x) {\n        return foldr(Data_List_Types.Cons.create)(new Data_List_Types.Cons(x, Data_List_Types.Nil.value))(xs);\n    };\n};\nvar singleton = function (a) {\n    return new Data_List_Types.Cons(a, Data_List_Types.Nil.value);\n};\nvar sortBy = function (cmp) {\n    var merge = function (v) {\n        return function (v1) {\n            if (v instanceof Data_List_Types.Cons && v1 instanceof Data_List_Types.Cons) {\n                if (eq(cmp(v.value0)(v1.value0))(Data_Ordering.GT.value)) {\n                    return new Data_List_Types.Cons(v1.value0, merge(v)(v1.value1));\n                };\n                if (Data_Boolean.otherwise) {\n                    return new Data_List_Types.Cons(v.value0, merge(v.value1)(v1));\n                };\n            };\n            if (v instanceof Data_List_Types.Nil) {\n                return v1;\n            };\n            if (v1 instanceof Data_List_Types.Nil) {\n                return v;\n            };\n            throw new Error(\"Failed pattern match at Data.List (line 466, column 3 - line 466, column 38): \" + [ v.constructor.name, v1.constructor.name ]);\n        };\n    };\n    var mergePairs = function (v) {\n        if (v instanceof Data_List_Types.Cons && v.value1 instanceof Data_List_Types.Cons) {\n            return new Data_List_Types.Cons(merge(v.value0)(v.value1.value0), mergePairs(v.value1.value1));\n        };\n        return v;\n    };\n    var mergeAll = function ($copy_v) {\n        var $tco_done = false;\n        var $tco_result;\n        function $tco_loop(v) {\n            if (v instanceof Data_List_Types.Cons && v.value1 instanceof Data_List_Types.Nil) {\n                $tco_done = true;\n                return v.value0;\n            };\n            $copy_v = mergePairs(v);\n            return;\n        };\n        while (!$tco_done) {\n            $tco_result = $tco_loop($copy_v);\n        };\n        return $tco_result;\n    };\n    var sequences = function (v) {\n        if (v instanceof Data_List_Types.Cons && v.value1 instanceof Data_List_Types.Cons) {\n            if (eq(cmp(v.value0)(v.value1.value0))(Data_Ordering.GT.value)) {\n                return descending(v.value1.value0)(singleton(v.value0))(v.value1.value1);\n            };\n            if (Data_Boolean.otherwise) {\n                return ascending(v.value1.value0)(function (v1) {\n                    return new Data_List_Types.Cons(v.value0, v1);\n                })(v.value1.value1);\n            };\n        };\n        return singleton(v);\n    };\n    var descending = function ($copy_v) {\n        return function ($copy_v1) {\n            return function ($copy_v2) {\n                var $tco_var_v = $copy_v;\n                var $tco_var_v1 = $copy_v1;\n                var $tco_done1 = false;\n                var $tco_result;\n                function $tco_loop(v, v1, v2) {\n                    if (v2 instanceof Data_List_Types.Cons && eq(cmp(v)(v2.value0))(Data_Ordering.GT.value)) {\n                        $tco_var_v = v2.value0;\n                        $tco_var_v1 = new Data_List_Types.Cons(v, v1);\n                        $copy_v2 = v2.value1;\n                        return;\n                    };\n                    $tco_done1 = true;\n                    return new Data_List_Types.Cons(new Data_List_Types.Cons(v, v1), sequences(v2));\n                };\n                while (!$tco_done1) {\n                    $tco_result = $tco_loop($tco_var_v, $tco_var_v1, $copy_v2);\n                };\n                return $tco_result;\n            };\n        };\n    };\n    var ascending = function ($copy_v) {\n        return function ($copy_v1) {\n            return function ($copy_v2) {\n                var $tco_var_v = $copy_v;\n                var $tco_var_v1 = $copy_v1;\n                var $tco_done2 = false;\n                var $tco_result;\n                function $tco_loop(v, v1, v2) {\n                    if (v2 instanceof Data_List_Types.Cons && notEq(cmp(v)(v2.value0))(Data_Ordering.GT.value)) {\n                        $tco_var_v = v2.value0;\n                        $tco_var_v1 = function (ys) {\n                            return v1(new Data_List_Types.Cons(v, ys));\n                        };\n                        $copy_v2 = v2.value1;\n                        return;\n                    };\n                    $tco_done2 = true;\n                    return new Data_List_Types.Cons(v1(singleton(v)), sequences(v2));\n                };\n                while (!$tco_done2) {\n                    $tco_result = $tco_loop($tco_var_v, $tco_var_v1, $copy_v2);\n                };\n                return $tco_result;\n            };\n        };\n    };\n    return function ($444) {\n        return mergeAll(sequences($444));\n    };\n};\nvar sort = function (dictOrd) {\n    var compare = Data_Ord.compare(dictOrd);\n    return function (xs) {\n        return sortBy(compare)(xs);\n    };\n};\nvar tails = function (v) {\n    if (v instanceof Data_List_Types.Nil) {\n        return singleton(Data_List_Types.Nil.value);\n    };\n    if (v instanceof Data_List_Types.Cons) {\n        return new Data_List_Types.Cons(v, tails(v.value1));\n    };\n    throw new Error(\"Failed pattern match at Data.List (line 641, column 1 - line 641, column 43): \" + [ v.constructor.name ]);\n};\nvar showPattern = function (dictShow) {\n    var show = Data_Show.show(Data_List_Types.showList(dictShow));\n    return {\n        show: function (v) {\n            return \"(Pattern \" + (show(v) + \")\");\n        }\n    };\n};\nvar reverse = /* #__PURE__ */ (function () {\n    var go = function ($copy_v) {\n        return function ($copy_v1) {\n            var $tco_var_v = $copy_v;\n            var $tco_done = false;\n            var $tco_result;\n            function $tco_loop(v, v1) {\n                if (v1 instanceof Data_List_Types.Nil) {\n                    $tco_done = true;\n                    return v;\n                };\n                if (v1 instanceof Data_List_Types.Cons) {\n                    $tco_var_v = new Data_List_Types.Cons(v1.value0, v);\n                    $copy_v1 = v1.value1;\n                    return;\n                };\n                throw new Error(\"Failed pattern match at Data.List (line 368, column 3 - line 368, column 19): \" + [ v.constructor.name, v1.constructor.name ]);\n            };\n            while (!$tco_done) {\n                $tco_result = $tco_loop($tco_var_v, $copy_v1);\n            };\n            return $tco_result;\n        };\n    };\n    return go(Data_List_Types.Nil.value);\n})();\nvar take = /* #__PURE__ */ (function () {\n    var go = function ($copy_v) {\n        return function ($copy_v1) {\n            return function ($copy_v2) {\n                var $tco_var_v = $copy_v;\n                var $tco_var_v1 = $copy_v1;\n                var $tco_done = false;\n                var $tco_result;\n                function $tco_loop(v, v1, v2) {\n                    if (v1 < 1) {\n                        $tco_done = true;\n                        return reverse(v);\n                    };\n                    if (v2 instanceof Data_List_Types.Nil) {\n                        $tco_done = true;\n                        return reverse(v);\n                    };\n                    if (v2 instanceof Data_List_Types.Cons) {\n                        $tco_var_v = new Data_List_Types.Cons(v2.value0, v);\n                        $tco_var_v1 = v1 - 1 | 0;\n                        $copy_v2 = v2.value1;\n                        return;\n                    };\n                    throw new Error(\"Failed pattern match at Data.List (line 513, column 3 - line 513, column 35): \" + [ v.constructor.name, v1.constructor.name, v2.constructor.name ]);\n                };\n                while (!$tco_done) {\n                    $tco_result = $tco_loop($tco_var_v, $tco_var_v1, $copy_v2);\n                };\n                return $tco_result;\n            };\n        };\n    };\n    return go(Data_List_Types.Nil.value);\n})();\nvar takeWhile = function (p) {\n    var go = function ($copy_v) {\n        return function ($copy_v1) {\n            var $tco_var_v = $copy_v;\n            var $tco_done = false;\n            var $tco_result;\n            function $tco_loop(v, v1) {\n                if (v1 instanceof Data_List_Types.Cons && p(v1.value0)) {\n                    $tco_var_v = new Data_List_Types.Cons(v1.value0, v);\n                    $copy_v1 = v1.value1;\n                    return;\n                };\n                $tco_done = true;\n                return reverse(v);\n            };\n            while (!$tco_done) {\n                $tco_result = $tco_loop($tco_var_v, $copy_v1);\n            };\n            return $tco_result;\n        };\n    };\n    return go(Data_List_Types.Nil.value);\n};\nvar unsnoc = function (lst) {\n    var go = function ($copy_v) {\n        return function ($copy_v1) {\n            var $tco_var_v = $copy_v;\n            var $tco_done = false;\n            var $tco_result;\n            function $tco_loop(v, v1) {\n                if (v instanceof Data_List_Types.Nil) {\n                    $tco_done = true;\n                    return Data_Maybe.Nothing.value;\n                };\n                if (v instanceof Data_List_Types.Cons && v.value1 instanceof Data_List_Types.Nil) {\n                    $tco_done = true;\n                    return new Data_Maybe.Just({\n                        revInit: v1,\n                        last: v.value0\n                    });\n                };\n                if (v instanceof Data_List_Types.Cons) {\n                    $tco_var_v = v.value1;\n                    $copy_v1 = new Data_List_Types.Cons(v.value0, v1);\n                    return;\n                };\n                throw new Error(\"Failed pattern match at Data.List (line 270, column 3 - line 270, column 21): \" + [ v.constructor.name, v1.constructor.name ]);\n            };\n            while (!$tco_done) {\n                $tco_result = $tco_loop($tco_var_v, $copy_v1);\n            };\n            return $tco_result;\n        };\n    };\n    return map(function (h) {\n        return {\n            init: reverse(h.revInit),\n            last: h.last\n        };\n    })(go(lst)(Data_List_Types.Nil.value));\n};\nvar zipWith = function (f) {\n    return function (xs) {\n        return function (ys) {\n            var go = function ($copy_v) {\n                return function ($copy_v1) {\n                    return function ($copy_v2) {\n                        var $tco_var_v = $copy_v;\n                        var $tco_var_v1 = $copy_v1;\n                        var $tco_done = false;\n                        var $tco_result;\n                        function $tco_loop(v, v1, v2) {\n                            if (v instanceof Data_List_Types.Nil) {\n                                $tco_done = true;\n                                return v2;\n                            };\n                            if (v1 instanceof Data_List_Types.Nil) {\n                                $tco_done = true;\n                                return v2;\n                            };\n                            if (v instanceof Data_List_Types.Cons && v1 instanceof Data_List_Types.Cons) {\n                                $tco_var_v = v.value1;\n                                $tco_var_v1 = v1.value1;\n                                $copy_v2 = new Data_List_Types.Cons(f(v.value0)(v1.value0), v2);\n                                return;\n                            };\n                            throw new Error(\"Failed pattern match at Data.List (line 779, column 3 - line 779, column 21): \" + [ v.constructor.name, v1.constructor.name, v2.constructor.name ]);\n                        };\n                        while (!$tco_done) {\n                            $tco_result = $tco_loop($tco_var_v, $tco_var_v1, $copy_v2);\n                        };\n                        return $tco_result;\n                    };\n                };\n            };\n            return reverse(go(xs)(ys)(Data_List_Types.Nil.value));\n        };\n    };\n};\nvar zip = /* #__PURE__ */ (function () {\n    return zipWith(Data_Tuple.Tuple.create);\n})();\nvar zipWithA = function (dictApplicative) {\n    var sequence1 = sequence(dictApplicative);\n    return function (f) {\n        return function (xs) {\n            return function (ys) {\n                return sequence1(zipWith(f)(xs)(ys));\n            };\n        };\n    };\n};\nvar range = function (start) {\n    return function (end) {\n        if (start === end) {\n            return singleton(start);\n        };\n        if (Data_Boolean.otherwise) {\n            var go = function ($copy_s) {\n                return function ($copy_e) {\n                    return function ($copy_step) {\n                        return function ($copy_rest) {\n                            var $tco_var_s = $copy_s;\n                            var $tco_var_e = $copy_e;\n                            var $tco_var_step = $copy_step;\n                            var $tco_done = false;\n                            var $tco_result;\n                            function $tco_loop(s, e, step, rest) {\n                                if (s === e) {\n                                    $tco_done = true;\n                                    return new Data_List_Types.Cons(s, rest);\n                                };\n                                if (Data_Boolean.otherwise) {\n                                    $tco_var_s = s + step | 0;\n                                    $tco_var_e = e;\n                                    $tco_var_step = step;\n                                    $copy_rest = new Data_List_Types.Cons(s, rest);\n                                    return;\n                                };\n                                throw new Error(\"Failed pattern match at Data.List (line 148, column 3 - line 149, column 65): \" + [ s.constructor.name, e.constructor.name, step.constructor.name, rest.constructor.name ]);\n                            };\n                            while (!$tco_done) {\n                                $tco_result = $tco_loop($tco_var_s, $tco_var_e, $tco_var_step, $copy_rest);\n                            };\n                            return $tco_result;\n                        };\n                    };\n                };\n            };\n            return go(end)(start)((function () {\n                var $325 = start > end;\n                if ($325) {\n                    return 1;\n                };\n                return -1 | 0;\n            })())(Data_List_Types.Nil.value);\n        };\n        throw new Error(\"Failed pattern match at Data.List (line 144, column 1 - line 144, column 32): \" + [ start.constructor.name, end.constructor.name ]);\n    };\n};\nvar partition = function (p) {\n    return function (xs) {\n        var select = function (x) {\n            return function (v) {\n                var $328 = p(x);\n                if ($328) {\n                    return {\n                        no: v.no,\n                        yes: new Data_List_Types.Cons(x, v.yes)\n                    };\n                };\n                return {\n                    no: new Data_List_Types.Cons(x, v.no),\n                    yes: v.yes\n                };\n            };\n        };\n        return foldr(select)({\n            no: Data_List_Types.Nil.value,\n            yes: Data_List_Types.Nil.value\n        })(xs);\n    };\n};\nvar $$null = function (v) {\n    if (v instanceof Data_List_Types.Nil) {\n        return true;\n    };\n    return false;\n};\nvar nubBy = function (p) {\n    var go = function ($copy_v) {\n        return function ($copy_v1) {\n            return function ($copy_v2) {\n                var $tco_var_v = $copy_v;\n                var $tco_var_v1 = $copy_v1;\n                var $tco_done = false;\n                var $tco_result;\n                function $tco_loop(v, v1, v2) {\n                    if (v2 instanceof Data_List_Types.Nil) {\n                        $tco_done = true;\n                        return v1;\n                    };\n                    if (v2 instanceof Data_List_Types.Cons) {\n                        var v3 = Data_List_Internal.insertAndLookupBy(p)(v2.value0)(v);\n                        if (v3.found) {\n                            $tco_var_v = v3.result;\n                            $tco_var_v1 = v1;\n                            $copy_v2 = v2.value1;\n                            return;\n                        };\n                        $tco_var_v = v3.result;\n                        $tco_var_v1 = new Data_List_Types.Cons(v2.value0, v1);\n                        $copy_v2 = v2.value1;\n                        return;\n                    };\n                    throw new Error(\"Failed pattern match at Data.List (line 673, column 5 - line 673, column 23): \" + [ v.constructor.name, v1.constructor.name, v2.constructor.name ]);\n                };\n                while (!$tco_done) {\n                    $tco_result = $tco_loop($tco_var_v, $tco_var_v1, $copy_v2);\n                };\n                return $tco_result;\n            };\n        };\n    };\n    var $445 = go(Data_List_Internal.emptySet)(Data_List_Types.Nil.value);\n    return function ($446) {\n        return reverse($445($446));\n    };\n};\nvar nub = function (dictOrd) {\n    return nubBy(Data_Ord.compare(dictOrd));\n};\nvar newtypePattern = {\n    Coercible0: function () {\n        return undefined;\n    }\n};\nvar mapMaybe = function (f) {\n    var go = function ($copy_v) {\n        return function ($copy_v1) {\n            var $tco_var_v = $copy_v;\n            var $tco_done = false;\n            var $tco_result;\n            function $tco_loop(v, v1) {\n                if (v1 instanceof Data_List_Types.Nil) {\n                    $tco_done = true;\n                    return reverse(v);\n                };\n                if (v1 instanceof Data_List_Types.Cons) {\n                    var v2 = f(v1.value0);\n                    if (v2 instanceof Data_Maybe.Nothing) {\n                        $tco_var_v = v;\n                        $copy_v1 = v1.value1;\n                        return;\n                    };\n                    if (v2 instanceof Data_Maybe.Just) {\n                        $tco_var_v = new Data_List_Types.Cons(v2.value0, v);\n                        $copy_v1 = v1.value1;\n                        return;\n                    };\n                    throw new Error(\"Failed pattern match at Data.List (line 419, column 5 - line 421, column 32): \" + [ v2.constructor.name ]);\n                };\n                throw new Error(\"Failed pattern match at Data.List (line 417, column 3 - line 417, column 27): \" + [ v.constructor.name, v1.constructor.name ]);\n            };\n            while (!$tco_done) {\n                $tco_result = $tco_loop($tco_var_v, $copy_v1);\n            };\n            return $tco_result;\n        };\n    };\n    return go(Data_List_Types.Nil.value);\n};\nvar manyRec = function (dictMonadRec) {\n    var bind1 = Control_Bind.bind((dictMonadRec.Monad0()).Bind1());\n    var tailRecM = Control_Monad_Rec_Class.tailRecM(dictMonadRec);\n    return function (dictAlternative) {\n        var Alt0 = (dictAlternative.Plus1()).Alt0();\n        var alt = Control_Alt.alt(Alt0);\n        var map1 = Data_Functor.map(Alt0.Functor0());\n        var pure = Control_Applicative.pure(dictAlternative.Applicative0());\n        return function (p) {\n            var go = function (acc) {\n                return bind1(alt(map1(Control_Monad_Rec_Class.Loop.create)(p))(pure(new Control_Monad_Rec_Class.Done(Data_Unit.unit))))(function (aa) {\n                    return pure(bimap(function (v) {\n                        return new Data_List_Types.Cons(v, acc);\n                    })(function (v) {\n                        return reverse(acc);\n                    })(aa));\n                });\n            };\n            return tailRecM(go)(Data_List_Types.Nil.value);\n        };\n    };\n};\nvar someRec = function (dictMonadRec) {\n    var manyRec1 = manyRec(dictMonadRec);\n    return function (dictAlternative) {\n        var apply = Control_Apply.apply((dictAlternative.Applicative0()).Apply0());\n        var map1 = Data_Functor.map(((dictAlternative.Plus1()).Alt0()).Functor0());\n        var manyRec2 = manyRec1(dictAlternative);\n        return function (v) {\n            return apply(map1(Data_List_Types.Cons.create)(v))(manyRec2(v));\n        };\n    };\n};\nvar some = function (dictAlternative) {\n    var apply = Control_Apply.apply((dictAlternative.Applicative0()).Apply0());\n    var map1 = Data_Functor.map(((dictAlternative.Plus1()).Alt0()).Functor0());\n    return function (dictLazy) {\n        var defer = Control_Lazy.defer(dictLazy);\n        return function (v) {\n            return apply(map1(Data_List_Types.Cons.create)(v))(defer(function (v1) {\n                return many(dictAlternative)(dictLazy)(v);\n            }));\n        };\n    };\n};\nvar many = function (dictAlternative) {\n    var alt = Control_Alt.alt((dictAlternative.Plus1()).Alt0());\n    var pure = Control_Applicative.pure(dictAlternative.Applicative0());\n    return function (dictLazy) {\n        return function (v) {\n            return alt(some(dictAlternative)(dictLazy)(v))(pure(Data_List_Types.Nil.value));\n        };\n    };\n};\nvar length = /* #__PURE__ */ foldl(function (acc) {\n    return function (v) {\n        return acc + 1 | 0;\n    };\n})(0);\nvar last = function ($copy_v) {\n    var $tco_done = false;\n    var $tco_result;\n    function $tco_loop(v) {\n        if (v instanceof Data_List_Types.Cons && v.value1 instanceof Data_List_Types.Nil) {\n            $tco_done = true;\n            return new Data_Maybe.Just(v.value0);\n        };\n        if (v instanceof Data_List_Types.Cons) {\n            $copy_v = v.value1;\n            return;\n        };\n        $tco_done = true;\n        return Data_Maybe.Nothing.value;\n    };\n    while (!$tco_done) {\n        $tco_result = $tco_loop($copy_v);\n    };\n    return $tco_result;\n};\nvar insertBy = function (v) {\n    return function (v1) {\n        return function (v2) {\n            if (v2 instanceof Data_List_Types.Nil) {\n                return singleton(v1);\n            };\n            if (v2 instanceof Data_List_Types.Cons) {\n                var v3 = v(v1)(v2.value0);\n                if (v3 instanceof Data_Ordering.GT) {\n                    return new Data_List_Types.Cons(v2.value0, insertBy(v)(v1)(v2.value1));\n                };\n                return new Data_List_Types.Cons(v1, v2);\n            };\n            throw new Error(\"Failed pattern match at Data.List (line 216, column 1 - line 216, column 68): \" + [ v.constructor.name, v1.constructor.name, v2.constructor.name ]);\n        };\n    };\n};\nvar insertAt = function (v) {\n    return function (v1) {\n        return function (v2) {\n            if (v === 0) {\n                return new Data_Maybe.Just(new Data_List_Types.Cons(v1, v2));\n            };\n            if (v2 instanceof Data_List_Types.Cons) {\n                return map(function (v3) {\n                    return new Data_List_Types.Cons(v2.value0, v3);\n                })(insertAt(v - 1 | 0)(v1)(v2.value1));\n            };\n            return Data_Maybe.Nothing.value;\n        };\n    };\n};\nvar insert = function (dictOrd) {\n    return insertBy(Data_Ord.compare(dictOrd));\n};\nvar init = function (lst) {\n    return map(function (v) {\n        return v.init;\n    })(unsnoc(lst));\n};\nvar index = function ($copy_v) {\n    return function ($copy_v1) {\n        var $tco_var_v = $copy_v;\n        var $tco_done = false;\n        var $tco_result;\n        function $tco_loop(v, v1) {\n            if (v instanceof Data_List_Types.Nil) {\n                $tco_done = true;\n                return Data_Maybe.Nothing.value;\n            };\n            if (v instanceof Data_List_Types.Cons && v1 === 0) {\n                $tco_done = true;\n                return new Data_Maybe.Just(v.value0);\n            };\n            if (v instanceof Data_List_Types.Cons) {\n                $tco_var_v = v.value1;\n                $copy_v1 = v1 - 1 | 0;\n                return;\n            };\n            throw new Error(\"Failed pattern match at Data.List (line 281, column 1 - line 281, column 44): \" + [ v.constructor.name, v1.constructor.name ]);\n        };\n        while (!$tco_done) {\n            $tco_result = $tco_loop($tco_var_v, $copy_v1);\n        };\n        return $tco_result;\n    };\n};\nvar head = function (v) {\n    if (v instanceof Data_List_Types.Nil) {\n        return Data_Maybe.Nothing.value;\n    };\n    if (v instanceof Data_List_Types.Cons) {\n        return new Data_Maybe.Just(v.value0);\n    };\n    throw new Error(\"Failed pattern match at Data.List (line 230, column 1 - line 230, column 22): \" + [ v.constructor.name ]);\n};\nvar transpose = function (v) {\n    if (v instanceof Data_List_Types.Nil) {\n        return Data_List_Types.Nil.value;\n    };\n    if (v instanceof Data_List_Types.Cons && v.value0 instanceof Data_List_Types.Nil) {\n        return transpose(v.value1);\n    };\n    if (v instanceof Data_List_Types.Cons && v.value0 instanceof Data_List_Types.Cons) {\n        return new Data_List_Types.Cons(new Data_List_Types.Cons(v.value0.value0, mapMaybe(head)(v.value1)), transpose(new Data_List_Types.Cons(v.value0.value1, mapMaybe(tail)(v.value1))));\n    };\n    throw new Error(\"Failed pattern match at Data.List (line 813, column 1 - line 813, column 54): \" + [ v.constructor.name ]);\n};\nvar groupBy = function (v) {\n    return function (v1) {\n        if (v1 instanceof Data_List_Types.Nil) {\n            return Data_List_Types.Nil.value;\n        };\n        if (v1 instanceof Data_List_Types.Cons) {\n            var v2 = span(v(v1.value0))(v1.value1);\n            return new Data_List_Types.Cons(new Data_NonEmpty.NonEmpty(v1.value0, v2.init), groupBy(v)(v2.rest));\n        };\n        throw new Error(\"Failed pattern match at Data.List (line 609, column 1 - line 609, column 80): \" + [ v.constructor.name, v1.constructor.name ]);\n    };\n};\nvar groupAllBy = function (p) {\n    var $447 = groupBy(function (x) {\n        return function (y) {\n            return eq(p(x)(y))(Data_Ordering.EQ.value);\n        };\n    });\n    var $448 = sortBy(p);\n    return function ($449) {\n        return $447($448($449));\n    };\n};\nvar group = function (dictEq) {\n    return groupBy(Data_Eq.eq(dictEq));\n};\nvar groupAll = function (dictOrd) {\n    var $450 = group(dictOrd.Eq0());\n    var $451 = sort(dictOrd);\n    return function ($452) {\n        return $450($451($452));\n    };\n};\nvar fromFoldable = function (dictFoldable) {\n    return Data_Foldable.foldr(dictFoldable)(Data_List_Types.Cons.create)(Data_List_Types.Nil.value);\n};\nvar foldM = function (dictMonad) {\n    var pure = Control_Applicative.pure(dictMonad.Applicative0());\n    var bind1 = Control_Bind.bind(dictMonad.Bind1());\n    return function (v) {\n        return function (v1) {\n            return function (v2) {\n                if (v2 instanceof Data_List_Types.Nil) {\n                    return pure(v1);\n                };\n                if (v2 instanceof Data_List_Types.Cons) {\n                    return bind1(v(v1)(v2.value0))(function (b$prime) {\n                        return foldM(dictMonad)(v)(b$prime)(v2.value1);\n                    });\n                };\n                throw new Error(\"Failed pattern match at Data.List (line 824, column 1 - line 824, column 72): \" + [ v.constructor.name, v1.constructor.name, v2.constructor.name ]);\n            };\n        };\n    };\n};\nvar findIndex = function (fn) {\n    var go = function ($copy_v) {\n        return function ($copy_v1) {\n            var $tco_var_v = $copy_v;\n            var $tco_done = false;\n            var $tco_result;\n            function $tco_loop(v, v1) {\n                if (v1 instanceof Data_List_Types.Cons) {\n                    if (fn(v1.value0)) {\n                        $tco_done = true;\n                        return new Data_Maybe.Just(v);\n                    };\n                    if (Data_Boolean.otherwise) {\n                        $tco_var_v = v + 1 | 0;\n                        $copy_v1 = v1.value1;\n                        return;\n                    };\n                };\n                if (v1 instanceof Data_List_Types.Nil) {\n                    $tco_done = true;\n                    return Data_Maybe.Nothing.value;\n                };\n                throw new Error(\"Failed pattern match at Data.List (line 301, column 3 - line 301, column 35): \" + [ v.constructor.name, v1.constructor.name ]);\n            };\n            while (!$tco_done) {\n                $tco_result = $tco_loop($tco_var_v, $copy_v1);\n            };\n            return $tco_result;\n        };\n    };\n    return go(0);\n};\nvar findLastIndex = function (fn) {\n    return function (xs) {\n        return map(function (v) {\n            return (length(xs) - 1 | 0) - v | 0;\n        })(findIndex(fn)(reverse(xs)));\n    };\n};\nvar filterM = function (dictMonad) {\n    var pure = Control_Applicative.pure(dictMonad.Applicative0());\n    var bind1 = Control_Bind.bind(dictMonad.Bind1());\n    return function (v) {\n        return function (v1) {\n            if (v1 instanceof Data_List_Types.Nil) {\n                return pure(Data_List_Types.Nil.value);\n            };\n            if (v1 instanceof Data_List_Types.Cons) {\n                return bind1(v(v1.value0))(function (b) {\n                    return bind1(filterM(dictMonad)(v)(v1.value1))(function (xs$prime) {\n                        return pure((function () {\n                            if (b) {\n                                return new Data_List_Types.Cons(v1.value0, xs$prime);\n                            };\n                            return xs$prime;\n                        })());\n                    });\n                });\n            };\n            throw new Error(\"Failed pattern match at Data.List (line 403, column 1 - line 403, column 75): \" + [ v.constructor.name, v1.constructor.name ]);\n        };\n    };\n};\nvar filter = function (p) {\n    var go = function ($copy_v) {\n        return function ($copy_v1) {\n            var $tco_var_v = $copy_v;\n            var $tco_done = false;\n            var $tco_result;\n            function $tco_loop(v, v1) {\n                if (v1 instanceof Data_List_Types.Nil) {\n                    $tco_done = true;\n                    return reverse(v);\n                };\n                if (v1 instanceof Data_List_Types.Cons) {\n                    if (p(v1.value0)) {\n                        $tco_var_v = new Data_List_Types.Cons(v1.value0, v);\n                        $copy_v1 = v1.value1;\n                        return;\n                    };\n                    if (Data_Boolean.otherwise) {\n                        $tco_var_v = v;\n                        $copy_v1 = v1.value1;\n                        return;\n                    };\n                };\n                throw new Error(\"Failed pattern match at Data.List (line 390, column 3 - line 390, column 27): \" + [ v.constructor.name, v1.constructor.name ]);\n            };\n            while (!$tco_done) {\n                $tco_result = $tco_loop($tco_var_v, $copy_v1);\n            };\n            return $tco_result;\n        };\n    };\n    return go(Data_List_Types.Nil.value);\n};\nvar intersectBy = function (v) {\n    return function (v1) {\n        return function (v2) {\n            if (v1 instanceof Data_List_Types.Nil) {\n                return Data_List_Types.Nil.value;\n            };\n            if (v2 instanceof Data_List_Types.Nil) {\n                return Data_List_Types.Nil.value;\n            };\n            return filter(function (x) {\n                return any(v(x))(v2);\n            })(v1);\n        };\n    };\n};\nvar intersect = function (dictEq) {\n    return intersectBy(Data_Eq.eq(dictEq));\n};\nvar nubByEq = function (v) {\n    return function (v1) {\n        if (v1 instanceof Data_List_Types.Nil) {\n            return Data_List_Types.Nil.value;\n        };\n        if (v1 instanceof Data_List_Types.Cons) {\n            return new Data_List_Types.Cons(v1.value0, nubByEq(v)(filter(function (y) {\n                return !v(v1.value0)(y);\n            })(v1.value1)));\n        };\n        throw new Error(\"Failed pattern match at Data.List (line 705, column 1 - line 705, column 61): \" + [ v.constructor.name, v1.constructor.name ]);\n    };\n};\nvar nubEq = function (dictEq) {\n    return nubByEq(Data_Eq.eq(dictEq));\n};\nvar eqPattern = function (dictEq) {\n    var eq2 = Data_Eq.eq(Data_List_Types.eqList(dictEq));\n    return {\n        eq: function (x) {\n            return function (y) {\n                return eq2(x)(y);\n            };\n        }\n    };\n};\nvar ordPattern = function (dictOrd) {\n    var compare = Data_Ord.compare(Data_List_Types.ordList(dictOrd));\n    var eqPattern1 = eqPattern(dictOrd.Eq0());\n    return {\n        compare: function (x) {\n            return function (y) {\n                return compare(x)(y);\n            };\n        },\n        Eq0: function () {\n            return eqPattern1;\n        }\n    };\n};\nvar elemLastIndex = function (dictEq) {\n    var eq2 = Data_Eq.eq(dictEq);\n    return function (x) {\n        return findLastIndex(function (v) {\n            return eq2(v)(x);\n        });\n    };\n};\nvar elemIndex = function (dictEq) {\n    var eq2 = Data_Eq.eq(dictEq);\n    return function (x) {\n        return findIndex(function (v) {\n            return eq2(v)(x);\n        });\n    };\n};\nvar dropWhile = function (p) {\n    var go = function ($copy_v) {\n        var $tco_done = false;\n        var $tco_result;\n        function $tco_loop(v) {\n            if (v instanceof Data_List_Types.Cons && p(v.value0)) {\n                $copy_v = v.value1;\n                return;\n            };\n            $tco_done = true;\n            return v;\n        };\n        while (!$tco_done) {\n            $tco_result = $tco_loop($copy_v);\n        };\n        return $tco_result;\n    };\n    return go;\n};\nvar dropEnd = function (n) {\n    return function (xs) {\n        return take(length(xs) - n | 0)(xs);\n    };\n};\nvar drop = function ($copy_v) {\n    return function ($copy_v1) {\n        var $tco_var_v = $copy_v;\n        var $tco_done = false;\n        var $tco_result;\n        function $tco_loop(v, v1) {\n            if (v < 1) {\n                $tco_done = true;\n                return v1;\n            };\n            if (v1 instanceof Data_List_Types.Nil) {\n                $tco_done = true;\n                return Data_List_Types.Nil.value;\n            };\n            if (v1 instanceof Data_List_Types.Cons) {\n                $tco_var_v = v - 1 | 0;\n                $copy_v1 = v1.value1;\n                return;\n            };\n            throw new Error(\"Failed pattern match at Data.List (line 536, column 1 - line 536, column 42): \" + [ v.constructor.name, v1.constructor.name ]);\n        };\n        while (!$tco_done) {\n            $tco_result = $tco_loop($tco_var_v, $copy_v1);\n        };\n        return $tco_result;\n    };\n};\nvar slice = function (start) {\n    return function (end) {\n        return function (xs) {\n            return take(end - start | 0)(drop(start)(xs));\n        };\n    };\n};\nvar takeEnd = function (n) {\n    return function (xs) {\n        return drop(length(xs) - n | 0)(xs);\n    };\n};\nvar deleteBy = function (v) {\n    return function (v1) {\n        return function (v2) {\n            if (v2 instanceof Data_List_Types.Nil) {\n                return Data_List_Types.Nil.value;\n            };\n            if (v2 instanceof Data_List_Types.Cons && v(v1)(v2.value0)) {\n                return v2.value1;\n            };\n            if (v2 instanceof Data_List_Types.Cons) {\n                return new Data_List_Types.Cons(v2.value0, deleteBy(v)(v1)(v2.value1));\n            };\n            throw new Error(\"Failed pattern match at Data.List (line 732, column 1 - line 732, column 67): \" + [ v.constructor.name, v1.constructor.name, v2.constructor.name ]);\n        };\n    };\n};\nvar unionBy = function (eq2) {\n    return function (xs) {\n        return function (ys) {\n            return append1(xs)(foldl(Data_Function.flip(deleteBy(eq2)))(nubByEq(eq2)(ys))(xs));\n        };\n    };\n};\nvar union = function (dictEq) {\n    return unionBy(Data_Eq.eq(dictEq));\n};\nvar deleteAt = function (v) {\n    return function (v1) {\n        if (v === 0 && v1 instanceof Data_List_Types.Cons) {\n            return new Data_Maybe.Just(v1.value1);\n        };\n        if (v1 instanceof Data_List_Types.Cons) {\n            return map(function (v2) {\n                return new Data_List_Types.Cons(v1.value0, v2);\n            })(deleteAt(v - 1 | 0)(v1.value1));\n        };\n        return Data_Maybe.Nothing.value;\n    };\n};\nvar $$delete = function (dictEq) {\n    return deleteBy(Data_Eq.eq(dictEq));\n};\nvar difference = function (dictEq) {\n    return foldl(Data_Function.flip($$delete(dictEq)));\n};\nvar concatMap = /* #__PURE__ */ Data_Function.flip(bind);\nvar concat = function (v) {\n    return bind(v)(identity);\n};\nvar catMaybes = /* #__PURE__ */ mapMaybe(identity);\nvar alterAt = function (v) {\n    return function (v1) {\n        return function (v2) {\n            if (v === 0 && v2 instanceof Data_List_Types.Cons) {\n                return new Data_Maybe.Just((function () {\n                    var v3 = v1(v2.value0);\n                    if (v3 instanceof Data_Maybe.Nothing) {\n                        return v2.value1;\n                    };\n                    if (v3 instanceof Data_Maybe.Just) {\n                        return new Data_List_Types.Cons(v3.value0, v2.value1);\n                    };\n                    throw new Error(\"Failed pattern match at Data.List (line 352, column 3 - line 354, column 23): \" + [ v3.constructor.name ]);\n                })());\n            };\n            if (v2 instanceof Data_List_Types.Cons) {\n                return map(function (v3) {\n                    return new Data_List_Types.Cons(v2.value0, v3);\n                })(alterAt(v - 1 | 0)(v1)(v2.value1));\n            };\n            return Data_Maybe.Nothing.value;\n        };\n    };\n};\nvar modifyAt = function (n) {\n    return function (f) {\n        return alterAt(n)(function ($453) {\n            return Data_Maybe.Just.create(f($453));\n        });\n    };\n};\nexport {\n    toUnfoldable,\n    fromFoldable,\n    singleton,\n    range,\n    some,\n    someRec,\n    many,\n    manyRec,\n    $$null as null,\n    length,\n    snoc,\n    insert,\n    insertBy,\n    head,\n    last,\n    tail,\n    init,\n    uncons,\n    unsnoc,\n    index,\n    elemIndex,\n    elemLastIndex,\n    findIndex,\n    findLastIndex,\n    insertAt,\n    deleteAt,\n    updateAt,\n    modifyAt,\n    alterAt,\n    reverse,\n    concat,\n    concatMap,\n    filter,\n    filterM,\n    mapMaybe,\n    catMaybes,\n    sort,\n    sortBy,\n    Pattern,\n    stripPrefix,\n    slice,\n    take,\n    takeEnd,\n    takeWhile,\n    drop,\n    dropEnd,\n    dropWhile,\n    span,\n    group,\n    groupAll,\n    groupBy,\n    groupAllBy,\n    partition,\n    nub,\n    nubBy,\n    nubEq,\n    nubByEq,\n    union,\n    unionBy,\n    $$delete as delete,\n    deleteBy,\n    difference,\n    intersect,\n    intersectBy,\n    zipWith,\n    zipWithA,\n    zip,\n    unzip,\n    transpose,\n    foldM,\n    eqPattern,\n    ordPattern,\n    newtypePattern,\n    showPattern\n};\nexport {\n    all,\n    any,\n    elem,\n    find,\n    findMap,\n    fold,\n    foldMap,\n    foldl,\n    foldr,\n    intercalate,\n    notElem\n} from \"../Data.Foldable/index.js\";\nexport {\n    Cons,\n    Nil\n} from \"../Data.List.Types/index.js\";\nexport {\n    scanl,\n    scanr\n} from \"../Data.Traversable/index.js\";\n", "// Generated by purs version 0.15.15\nimport * as Control_Bind from \"../Control.Bind/index.js\";\nimport * as Control_Category from \"../Control.Category/index.js\";\nimport * as Data_Boolean from \"../Data.Boolean/index.js\";\nimport * as Data_Eq from \"../Data.Eq/index.js\";\nimport * as Data_Foldable from \"../Data.Foldable/index.js\";\nimport * as Data_Function from \"../Data.Function/index.js\";\nimport * as Data_Functor from \"../Data.Functor/index.js\";\nimport * as Data_List from \"../Data.List/index.js\";\nimport * as Data_List_Types from \"../Data.List.Types/index.js\";\nimport * as Data_Maybe from \"../Data.Maybe/index.js\";\nimport * as Data_NonEmpty from \"../Data.NonEmpty/index.js\";\nimport * as Data_Ord from \"../Data.Ord/index.js\";\nimport * as Data_Semigroup from \"../Data.Semigroup/index.js\";\nimport * as Data_Semigroup_Foldable from \"../Data.Semigroup.Foldable/index.js\";\nimport * as Data_Semigroup_Traversable from \"../Data.Semigroup.Traversable/index.js\";\nimport * as Data_Traversable from \"../Data.Traversable/index.js\";\nimport * as Data_Tuple from \"../Data.Tuple/index.js\";\nimport * as Data_Unfoldable from \"../Data.Unfoldable/index.js\";\nimport * as Partial_Unsafe from \"../Partial.Unsafe/index.js\";\nvar sequence1 = /* #__PURE__ */ Data_Semigroup_Traversable.sequence1(Data_List_Types.traversable1NonEmptyList);\nvar map = /* #__PURE__ */ Data_Functor.map(Data_Maybe.functorMaybe);\nvar map1 = /* #__PURE__ */ Data_Functor.map(Data_List_Types.functorNonEmptyList);\nvar bind = /* #__PURE__ */ Control_Bind.bind(Data_List_Types.bindNonEmptyList);\nvar identity = /* #__PURE__ */ Control_Category.identity(Control_Category.categoryFn);\nvar append1 = /* #__PURE__ */ Data_Semigroup.append(Data_List_Types.semigroupList);\nvar zipWith = function (f) {\n    return function (v) {\n        return function (v1) {\n            return new Data_NonEmpty.NonEmpty(f(v.value0)(v1.value0), Data_List.zipWith(f)(v.value1)(v1.value1));\n        };\n    };\n};\nvar zipWithA = function (dictApplicative) {\n    var sequence11 = sequence1(dictApplicative.Apply0());\n    return function (f) {\n        return function (xs) {\n            return function (ys) {\n                return sequence11(zipWith(f)(xs)(ys));\n            };\n        };\n    };\n};\nvar zip = /* #__PURE__ */ (function () {\n    return zipWith(Data_Tuple.Tuple.create);\n})();\nvar wrappedOperation2 = function (name) {\n    return function (f) {\n        return function (v) {\n            return function (v1) {\n                var v2 = f(new Data_List_Types.Cons(v.value0, v.value1))(new Data_List_Types.Cons(v1.value0, v1.value1));\n                if (v2 instanceof Data_List_Types.Cons) {\n                    return new Data_NonEmpty.NonEmpty(v2.value0, v2.value1);\n                };\n                if (v2 instanceof Data_List_Types.Nil) {\n                    return Partial_Unsafe.unsafeCrashWith(\"Impossible: empty list in NonEmptyList \" + name);\n                };\n                throw new Error(\"Failed pattern match at Data.List.NonEmpty (line 105, column 3 - line 107, column 81): \" + [ v2.constructor.name ]);\n            };\n        };\n    };\n};\nvar wrappedOperation = function (name) {\n    return function (f) {\n        return function (v) {\n            var v1 = f(new Data_List_Types.Cons(v.value0, v.value1));\n            if (v1 instanceof Data_List_Types.Cons) {\n                return new Data_NonEmpty.NonEmpty(v1.value0, v1.value1);\n            };\n            if (v1 instanceof Data_List_Types.Nil) {\n                return Partial_Unsafe.unsafeCrashWith(\"Impossible: empty list in NonEmptyList \" + name);\n            };\n            throw new Error(\"Failed pattern match at Data.List.NonEmpty (line 92, column 3 - line 94, column 81): \" + [ v1.constructor.name ]);\n        };\n    };\n};\nvar updateAt = function (i) {\n    return function (a) {\n        return function (v) {\n            if (i === 0) {\n                return new Data_Maybe.Just(new Data_NonEmpty.NonEmpty(a, v.value1));\n            };\n            if (Data_Boolean.otherwise) {\n                return map(function ($193) {\n                    return Data_List_Types.NonEmptyList((function (v1) {\n                        return new Data_NonEmpty.NonEmpty(v.value0, v1);\n                    })($193));\n                })(Data_List.updateAt(i - 1 | 0)(a)(v.value1));\n            };\n            throw new Error(\"Failed pattern match at Data.List.NonEmpty (line 198, column 1 - line 198, column 75): \" + [ i.constructor.name, a.constructor.name, v.constructor.name ]);\n        };\n    };\n};\nvar unzip = function (ts) {\n    return new Data_Tuple.Tuple(map1(Data_Tuple.fst)(ts), map1(Data_Tuple.snd)(ts));\n};\nvar unsnoc = function (v) {\n    var v1 = Data_List.unsnoc(v.value1);\n    if (v1 instanceof Data_Maybe.Nothing) {\n        return {\n            init: Data_List_Types.Nil.value,\n            last: v.value0\n        };\n    };\n    if (v1 instanceof Data_Maybe.Just) {\n        return {\n            init: new Data_List_Types.Cons(v.value0, v1.value0.init),\n            last: v1.value0.last\n        };\n    };\n    throw new Error(\"Failed pattern match at Data.List.NonEmpty (line 160, column 35 - line 162, column 50): \" + [ v1.constructor.name ]);\n};\nvar unionBy = /* #__PURE__ */ (function () {\n    var $194 = wrappedOperation2(\"unionBy\");\n    return function ($195) {\n        return $194(Data_List.unionBy($195));\n    };\n})();\nvar union = function (dictEq) {\n    return wrappedOperation2(\"union\")(Data_List.union(dictEq));\n};\nvar uncons = function (v) {\n    return {\n        head: v.value0,\n        tail: v.value1\n    };\n};\nvar toList = function (v) {\n    return new Data_List_Types.Cons(v.value0, v.value1);\n};\nvar toUnfoldable = function (dictUnfoldable) {\n    var $196 = Data_Unfoldable.unfoldr(dictUnfoldable)(function (xs) {\n        return map(function (rec) {\n            return new Data_Tuple.Tuple(rec.head, rec.tail);\n        })(Data_List.uncons(xs));\n    });\n    return function ($197) {\n        return $196(toList($197));\n    };\n};\nvar tail = function (v) {\n    return v.value1;\n};\nvar sortBy = /* #__PURE__ */ (function () {\n    var $198 = wrappedOperation(\"sortBy\");\n    return function ($199) {\n        return $198(Data_List.sortBy($199));\n    };\n})();\nvar sort = function (dictOrd) {\n    var compare = Data_Ord.compare(dictOrd);\n    return function (xs) {\n        return sortBy(compare)(xs);\n    };\n};\nvar snoc = function (v) {\n    return function (y) {\n        return new Data_NonEmpty.NonEmpty(v.value0, Data_List.snoc(v.value1)(y));\n    };\n};\nvar singleton = /* #__PURE__ */ (function () {\n    var $200 = Data_NonEmpty.singleton(Data_List_Types.plusList);\n    return function ($201) {\n        return Data_List_Types.NonEmptyList($200($201));\n    };\n})();\nvar snoc$prime = function (v) {\n    return function (v1) {\n        if (v instanceof Data_List_Types.Cons) {\n            return new Data_NonEmpty.NonEmpty(v.value0, Data_List.snoc(v.value1)(v1));\n        };\n        if (v instanceof Data_List_Types.Nil) {\n            return singleton(v1);\n        };\n        throw new Error(\"Failed pattern match at Data.List.NonEmpty (line 140, column 1 - line 140, column 51): \" + [ v.constructor.name, v1.constructor.name ]);\n    };\n};\nvar reverse = /* #__PURE__ */ wrappedOperation(\"reverse\")(Data_List.reverse);\nvar nubEq = function (dictEq) {\n    return wrappedOperation(\"nubEq\")(Data_List.nubEq(dictEq));\n};\nvar nubByEq = /* #__PURE__ */ (function () {\n    var $202 = wrappedOperation(\"nubByEq\");\n    return function ($203) {\n        return $202(Data_List.nubByEq($203));\n    };\n})();\nvar nubBy = /* #__PURE__ */ (function () {\n    var $204 = wrappedOperation(\"nubBy\");\n    return function ($205) {\n        return $204(Data_List.nubBy($205));\n    };\n})();\nvar nub = function (dictOrd) {\n    return wrappedOperation(\"nub\")(Data_List.nub(dictOrd));\n};\nvar modifyAt = function (i) {\n    return function (f) {\n        return function (v) {\n            if (i === 0) {\n                return new Data_Maybe.Just(new Data_NonEmpty.NonEmpty(f(v.value0), v.value1));\n            };\n            if (Data_Boolean.otherwise) {\n                return map(function ($206) {\n                    return Data_List_Types.NonEmptyList((function (v1) {\n                        return new Data_NonEmpty.NonEmpty(v.value0, v1);\n                    })($206));\n                })(Data_List.modifyAt(i - 1 | 0)(f)(v.value1));\n            };\n            throw new Error(\"Failed pattern match at Data.List.NonEmpty (line 203, column 1 - line 203, column 82): \" + [ i.constructor.name, f.constructor.name, v.constructor.name ]);\n        };\n    };\n};\nvar lift = function (f) {\n    return function (v) {\n        return f(new Data_List_Types.Cons(v.value0, v.value1));\n    };\n};\nvar mapMaybe = function ($207) {\n    return lift(Data_List.mapMaybe($207));\n};\nvar partition = function ($208) {\n    return lift(Data_List.partition($208));\n};\nvar span = function ($209) {\n    return lift(Data_List.span($209));\n};\nvar take = function ($210) {\n    return lift(Data_List.take($210));\n};\nvar takeWhile = function ($211) {\n    return lift(Data_List.takeWhile($211));\n};\nvar length = function (v) {\n    return 1 + Data_List.length(v.value1) | 0;\n};\nvar last = function (v) {\n    return Data_Maybe.fromMaybe(v.value0)(Data_List.last(v.value1));\n};\nvar intersectBy = /* #__PURE__ */ (function () {\n    var $212 = wrappedOperation2(\"intersectBy\");\n    return function ($213) {\n        return $212(Data_List.intersectBy($213));\n    };\n})();\nvar intersect = function (dictEq) {\n    return wrappedOperation2(\"intersect\")(Data_List.intersect(dictEq));\n};\nvar insertAt = function (i) {\n    return function (a) {\n        return function (v) {\n            if (i === 0) {\n                return new Data_Maybe.Just(new Data_NonEmpty.NonEmpty(a, new Data_List_Types.Cons(v.value0, v.value1)));\n            };\n            if (Data_Boolean.otherwise) {\n                return map(function ($214) {\n                    return Data_List_Types.NonEmptyList((function (v1) {\n                        return new Data_NonEmpty.NonEmpty(v.value0, v1);\n                    })($214));\n                })(Data_List.insertAt(i - 1 | 0)(a)(v.value1));\n            };\n            throw new Error(\"Failed pattern match at Data.List.NonEmpty (line 193, column 1 - line 193, column 75): \" + [ i.constructor.name, a.constructor.name, v.constructor.name ]);\n        };\n    };\n};\nvar init = function (v) {\n    return Data_Maybe.maybe(Data_List_Types.Nil.value)(function (v1) {\n        return new Data_List_Types.Cons(v.value0, v1);\n    })(Data_List.init(v.value1));\n};\nvar index = function (v) {\n    return function (i) {\n        if (i === 0) {\n            return new Data_Maybe.Just(v.value0);\n        };\n        if (Data_Boolean.otherwise) {\n            return Data_List.index(v.value1)(i - 1 | 0);\n        };\n        throw new Error(\"Failed pattern match at Data.List.NonEmpty (line 167, column 1 - line 167, column 52): \" + [ v.constructor.name, i.constructor.name ]);\n    };\n};\nvar head = function (v) {\n    return v.value0;\n};\nvar groupBy = /* #__PURE__ */ (function () {\n    var $215 = wrappedOperation(\"groupBy\");\n    return function ($216) {\n        return $215(Data_List.groupBy($216));\n    };\n})();\nvar groupAllBy = /* #__PURE__ */ (function () {\n    var $217 = wrappedOperation(\"groupAllBy\");\n    return function ($218) {\n        return $217(Data_List.groupAllBy($218));\n    };\n})();\nvar groupAll = function (dictOrd) {\n    return wrappedOperation(\"groupAll\")(Data_List.groupAll(dictOrd));\n};\nvar group = function (dictEq) {\n    return wrappedOperation(\"group\")(Data_List.group(dictEq));\n};\nvar fromList = function (v) {\n    if (v instanceof Data_List_Types.Nil) {\n        return Data_Maybe.Nothing.value;\n    };\n    if (v instanceof Data_List_Types.Cons) {\n        return new Data_Maybe.Just(new Data_NonEmpty.NonEmpty(v.value0, v.value1));\n    };\n    throw new Error(\"Failed pattern match at Data.List.NonEmpty (line 121, column 1 - line 121, column 57): \" + [ v.constructor.name ]);\n};\nvar fromFoldable = function (dictFoldable) {\n    var $219 = Data_List.fromFoldable(dictFoldable);\n    return function ($220) {\n        return fromList($219($220));\n    };\n};\nvar foldM = function (dictMonad) {\n    var bind1 = Control_Bind.bind(dictMonad.Bind1());\n    var foldM1 = Data_List.foldM(dictMonad);\n    return function (f) {\n        return function (b) {\n            return function (v) {\n                return bind1(f(b)(v.value0))(function (b$prime) {\n                    return foldM1(f)(b$prime)(v.value1);\n                });\n            };\n        };\n    };\n};\nvar findLastIndex = function (f) {\n    return function (v) {\n        var v1 = Data_List.findLastIndex(f)(v.value1);\n        if (v1 instanceof Data_Maybe.Just) {\n            return new Data_Maybe.Just(v1.value0 + 1 | 0);\n        };\n        if (v1 instanceof Data_Maybe.Nothing) {\n            if (f(v.value0)) {\n                return new Data_Maybe.Just(0);\n            };\n            if (Data_Boolean.otherwise) {\n                return Data_Maybe.Nothing.value;\n            };\n        };\n        throw new Error(\"Failed pattern match at Data.List.NonEmpty (line 187, column 3 - line 191, column 29): \" + [ v1.constructor.name ]);\n    };\n};\nvar findIndex = function (f) {\n    return function (v) {\n        if (f(v.value0)) {\n            return new Data_Maybe.Just(0);\n        };\n        if (Data_Boolean.otherwise) {\n            return map(function (v1) {\n                return v1 + 1 | 0;\n            })(Data_List.findIndex(f)(v.value1));\n        };\n        throw new Error(\"Failed pattern match at Data.List.NonEmpty (line 180, column 1 - line 180, column 69): \" + [ f.constructor.name, v.constructor.name ]);\n    };\n};\nvar filterM = function (dictMonad) {\n    var $221 = Data_List.filterM(dictMonad);\n    return function ($222) {\n        return lift($221($222));\n    };\n};\nvar filter = function ($223) {\n    return lift(Data_List.filter($223));\n};\nvar elemLastIndex = function (dictEq) {\n    var eq1 = Data_Eq.eq(dictEq);\n    return function (x) {\n        return findLastIndex(function (v) {\n            return eq1(v)(x);\n        });\n    };\n};\nvar elemIndex = function (dictEq) {\n    var eq1 = Data_Eq.eq(dictEq);\n    return function (x) {\n        return findIndex(function (v) {\n            return eq1(v)(x);\n        });\n    };\n};\nvar dropWhile = function ($224) {\n    return lift(Data_List.dropWhile($224));\n};\nvar drop = function ($225) {\n    return lift(Data_List.drop($225));\n};\nvar cons$prime = function (x) {\n    return function (xs) {\n        return new Data_NonEmpty.NonEmpty(x, xs);\n    };\n};\nvar cons = function (y) {\n    return function (v) {\n        return new Data_NonEmpty.NonEmpty(y, new Data_List_Types.Cons(v.value0, v.value1));\n    };\n};\nvar concatMap = /* #__PURE__ */ Data_Function.flip(bind);\nvar concat = function (v) {\n    return bind(v)(identity);\n};\nvar catMaybes = /* #__PURE__ */ lift(Data_List.catMaybes);\nvar appendFoldable = function (dictFoldable) {\n    var fromFoldable1 = Data_List.fromFoldable(dictFoldable);\n    return function (v) {\n        return function (ys) {\n            return new Data_NonEmpty.NonEmpty(v.value0, append1(v.value1)(fromFoldable1(ys)));\n        };\n    };\n};\nexport {\n    toUnfoldable,\n    fromFoldable,\n    fromList,\n    toList,\n    singleton,\n    length,\n    cons,\n    cons$prime,\n    snoc,\n    snoc$prime,\n    head,\n    last,\n    tail,\n    init,\n    uncons,\n    unsnoc,\n    index,\n    elemIndex,\n    elemLastIndex,\n    findIndex,\n    findLastIndex,\n    insertAt,\n    updateAt,\n    modifyAt,\n    reverse,\n    concat,\n    concatMap,\n    filter,\n    filterM,\n    mapMaybe,\n    catMaybes,\n    appendFoldable,\n    sort,\n    sortBy,\n    take,\n    takeWhile,\n    drop,\n    dropWhile,\n    span,\n    group,\n    groupAll,\n    groupBy,\n    groupAllBy,\n    partition,\n    nub,\n    nubBy,\n    nubEq,\n    nubByEq,\n    union,\n    unionBy,\n    intersect,\n    intersectBy,\n    zipWith,\n    zipWithA,\n    zip,\n    unzip,\n    foldM\n};\nexport {\n    all,\n    any,\n    elem,\n    find,\n    findMap,\n    fold,\n    foldMap,\n    foldl,\n    foldr,\n    intercalate,\n    notElem\n} from \"../Data.Foldable/index.js\";\nexport {\n    NonEmptyList\n} from \"../Data.List.Types/index.js\";\nexport {\n    fold1,\n    foldMap1,\n    for1_,\n    sequence1_,\n    traverse1_\n} from \"../Data.Semigroup.Foldable/index.js\";\nexport {\n    sequence1,\n    traverse1,\n    traverse1Default\n} from \"../Data.Semigroup.Traversable/index.js\";\nexport {\n    scanl,\n    scanr\n} from \"../Data.Traversable/index.js\";\n", "export const fromCharArray = function (a) {\n  return a.join(\"\");\n};\n\nexport const toCharArray = function (s) {\n  return s.split(\"\");\n};\n\nexport const singleton = function (c) {\n  return c;\n};\n\nexport const _charAt = function (just) {\n  return function (nothing) {\n    return function (i) {\n      return function (s) {\n        return i >= 0 && i < s.length ? just(s.charAt(i)) : nothing;\n      };\n    };\n  };\n};\n\nexport const _toChar = function (just) {\n  return function (nothing) {\n    return function (s) {\n      return s.length === 1 ? just(s) : nothing;\n    };\n  };\n};\n\nexport const length = function (s) {\n  return s.length;\n};\n\nexport const countPrefix = function (p) {\n  return function (s) {\n    var i = 0;\n    while (i < s.length && p(s.charAt(i))) i++;\n    return i;\n  };\n};\n\nexport const _indexOf = function (just) {\n  return function (nothing) {\n    return function (x) {\n      return function (s) {\n        var i = s.indexOf(x);\n        return i === -1 ? nothing : just(i);\n      };\n    };\n  };\n};\n\nexport const _indexOfStartingAt = function (just) {\n  return function (nothing) {\n    return function (x) {\n      return function (startAt) {\n        return function (s) {\n          if (startAt < 0 || startAt > s.length) return nothing;\n          var i = s.indexOf(x, startAt);\n          return i === -1 ? nothing : just(i);\n        };\n      };\n    };\n  };\n};\n\nexport const _lastIndexOf = function (just) {\n  return function (nothing) {\n    return function (x) {\n      return function (s) {\n        var i = s.lastIndexOf(x);\n        return i === -1 ? nothing : just(i);\n      };\n    };\n  };\n};\n\nexport const _lastIndexOfStartingAt = function (just) {\n  return function (nothing) {\n    return function (x) {\n      return function (startAt) {\n        return function (s) {\n          var i = s.lastIndexOf(x, startAt);\n          return i === -1 ? nothing : just(i);\n        };\n      };\n    };\n  };\n};\n\nexport const take = function (n) {\n  return function (s) {\n    return s.substr(0, n);\n  };\n};\n\nexport const drop = function (n) {\n  return function (s) {\n    return s.substring(n);\n  };\n};\n\nexport const slice = function (b) {\n  return function (e) {\n    return function (s) {\n      return s.slice(b,e);\n    };\n  };\n};\n\nexport const splitAt = function (i) {\n  return function (s) {\n    return { before: s.substring(0, i), after: s.substring(i) };\n  };\n};\n", "export function _copyST(m) {\n  return function () {\n    var r = {};\n    for (var k in m) {\n      if (hasOwnProperty.call(m, k)) {\n        r[k] = m[k];\n      }\n    }\n    return r;\n  };\n}\n\nexport const empty = {};\n\nexport function runST(f) {\n  return f();\n}\n\nexport function _fmapObject(m0, f) {\n  var m = {};\n  for (var k in m0) {\n    if (hasOwnProperty.call(m0, k)) {\n      m[k] = f(m0[k]);\n    }\n  }\n  return m;\n}\n\nexport function _mapWithKey(m0, f) {\n  var m = {};\n  for (var k in m0) {\n    if (hasOwnProperty.call(m0, k)) {\n      m[k] = f(k)(m0[k]);\n    }\n  }\n  return m;\n}\n\nexport function _foldM(bind) {\n  return function (f) {\n    return function (mz) {\n      return function (m) {\n        var acc = mz;\n        function g(k) {\n          return function (z) {\n            return f(z)(k)(m[k]);\n          };\n        }\n        for (var k in m) {\n          if (hasOwnProperty.call(m, k)) {\n            acc = bind(acc)(g(k));\n          }\n        }\n        return acc;\n      };\n    };\n  };\n}\n\nexport function _foldSCObject(m, z, f, fromMaybe) {\n  var acc = z;\n  for (var k in m) {\n    if (hasOwnProperty.call(m, k)) {\n      var maybeR = f(acc)(k)(m[k]);\n      var r = fromMaybe(null)(maybeR);\n      if (r === null) return acc;\n      else acc = r;\n    }\n  }\n  return acc;\n}\n\nexport function all(f) {\n  return function (m) {\n    for (var k in m) {\n      if (hasOwnProperty.call(m, k) && !f(k)(m[k])) return false;\n    }\n    return true;\n  };\n}\n\nexport function size(m) {\n  var s = 0;\n  for (var k in m) {\n    if (hasOwnProperty.call(m, k)) {\n      ++s;\n    }\n  }\n  return s;\n}\n\nexport function _lookup(no, yes, k, m) {\n  return k in m ? yes(m[k]) : no;\n}\n\nexport function _lookupST(no, yes, k, m) {\n  return function () {\n    return k in m ? yes(m[k]) : no;\n  };\n}\n\nexport function toArrayWithKey(f) {\n  return function (m) {\n    var r = [];\n    for (var k in m) {\n      if (hasOwnProperty.call(m, k)) {\n        r.push(f(k)(m[k]));\n      }\n    }\n    return r;\n  };\n}\n\nexport const keys = Object.keys || toArrayWithKey(function (k) {\n  return function () { return k; };\n});\n", "// Generated by purs version 0.15.15\nimport * as $foreign from \"./foreign.js\";\nimport * as Control_Applicative from \"../Control.Applicative/index.js\";\nimport * as Control_Apply from \"../Control.Apply/index.js\";\nimport * as Control_Bind from \"../Control.Bind/index.js\";\nimport * as Control_Category from \"../Control.Category/index.js\";\nimport * as Control_Monad_ST_Internal from \"../Control.Monad.ST.Internal/index.js\";\nimport * as Data_Array from \"../Data.Array/index.js\";\nimport * as Data_Eq from \"../Data.Eq/index.js\";\nimport * as Data_Foldable from \"../Data.Foldable/index.js\";\nimport * as Data_FoldableWithIndex from \"../Data.FoldableWithIndex/index.js\";\nimport * as Data_Function from \"../Data.Function/index.js\";\nimport * as Data_Function_Uncurried from \"../Data.Function.Uncurried/index.js\";\nimport * as Data_Functor from \"../Data.Functor/index.js\";\nimport * as Data_Maybe from \"../Data.Maybe/index.js\";\nimport * as Data_Monoid from \"../Data.Monoid/index.js\";\nimport * as Data_Ord from \"../Data.Ord/index.js\";\nimport * as Data_Semigroup from \"../Data.Semigroup/index.js\";\nimport * as Data_Show from \"../Data.Show/index.js\";\nimport * as Data_Traversable from \"../Data.Traversable/index.js\";\nimport * as Data_TraversableWithIndex from \"../Data.TraversableWithIndex/index.js\";\nimport * as Data_Tuple from \"../Data.Tuple/index.js\";\nimport * as Data_Unfoldable from \"../Data.Unfoldable/index.js\";\nimport * as Foreign_Object_ST from \"../Foreign.Object.ST/index.js\";\nimport * as Unsafe_Coerce from \"../Unsafe.Coerce/index.js\";\nvar sortWith = /* #__PURE__ */ Data_Array.sortWith(Data_Ord.ordString);\nvar bindFlipped = /* #__PURE__ */ Control_Bind.bindFlipped(Control_Monad_ST_Internal.bindST);\nvar showTuple = /* #__PURE__ */ Data_Tuple.showTuple(Data_Show.showString);\nvar pure = /* #__PURE__ */ Control_Applicative.pure(Control_Monad_ST_Internal.applicativeST);\nvar forWithIndex_ = /* #__PURE__ */ Data_FoldableWithIndex.forWithIndex_(Control_Monad_ST_Internal.applicativeST);\nvar for_ = /* #__PURE__ */ Data_Foldable.for_(Control_Monad_ST_Internal.applicativeST);\nvar $$void = /* #__PURE__ */ Data_Functor[\"void\"](Control_Monad_ST_Internal.functorST);\nvar foldr = /* #__PURE__ */ Data_Foldable.foldr(Data_Foldable.foldableArray);\nvar identity = /* #__PURE__ */ Control_Category.identity(Control_Category.categoryFn);\nvar ordTuple = /* #__PURE__ */ Data_Tuple.ordTuple(Data_Ord.ordString);\nvar mapFlipped = /* #__PURE__ */ Data_Functor.mapFlipped(Data_Maybe.functorMaybe);\nvar values = /* #__PURE__ */ $foreign.toArrayWithKey(function (v) {\n    return function (v1) {\n        return v1;\n    };\n});\nvar toUnfoldable = function (dictUnfoldable) {\n    var $89 = Data_Array.toUnfoldable(dictUnfoldable);\n    var $90 = $foreign.toArrayWithKey(Data_Tuple.Tuple.create);\n    return function ($91) {\n        return $89($90($91));\n    };\n};\nvar toAscUnfoldable = function (dictUnfoldable) {\n    var $92 = Data_Array.toUnfoldable(dictUnfoldable);\n    var $93 = sortWith(Data_Tuple.fst);\n    var $94 = $foreign.toArrayWithKey(Data_Tuple.Tuple.create);\n    return function ($95) {\n        return $92($93($94($95)));\n    };\n};\nvar toAscArray = /* #__PURE__ */ toAscUnfoldable(Data_Unfoldable.unfoldableArray);\nvar toArray = /* #__PURE__ */ (function () {\n    return $foreign.toArrayWithKey(Data_Tuple.Tuple.create);\n})();\nvar thawST = $foreign[\"_copyST\"];\nvar singleton = function (k) {\n    return function (v) {\n        return $foreign.runST(bindFlipped(Foreign_Object_ST.poke(k)(v))(Foreign_Object_ST[\"new\"]));\n    };\n};\nvar showObject = function (dictShow) {\n    var show = Data_Show.show(Data_Show.showArray(showTuple(dictShow)));\n    return {\n        show: function (m) {\n            return \"(fromFoldable \" + (show(toArray(m)) + \")\");\n        }\n    };\n};\nvar mutate = function (f) {\n    return function (m) {\n        return $foreign.runST(function __do() {\n            var s = thawST(m)();\n            f(s)();\n            return s;\n        });\n    };\n};\nvar member = /* #__PURE__ */ Data_Function_Uncurried.runFn4($foreign[\"_lookup\"])(false)(/* #__PURE__ */ Data_Function[\"const\"](true));\nvar mapWithKey = function (f) {\n    return function (m) {\n        return $foreign[\"_mapWithKey\"](m, f);\n    };\n};\nvar lookup = /* #__PURE__ */ (function () {\n    return Data_Function_Uncurried.runFn4($foreign[\"_lookup\"])(Data_Maybe.Nothing.value)(Data_Maybe.Just.create);\n})();\nvar isSubmap = function (dictEq) {\n    var eq = Data_Eq.eq(dictEq);\n    return function (m1) {\n        return function (m2) {\n            var f = function (k) {\n                return function (v) {\n                    return $foreign[\"_lookup\"](false, eq(v), k, m2);\n                };\n            };\n            return $foreign.all(f)(m1);\n        };\n    };\n};\nvar isEmpty = /* #__PURE__ */ $foreign.all(function (v) {\n    return function (v1) {\n        return false;\n    };\n});\nvar insert = function (k) {\n    return function (v) {\n        return mutate(Foreign_Object_ST.poke(k)(v));\n    };\n};\nvar functorObject = {\n    map: function (f) {\n        return function (m) {\n            return $foreign[\"_fmapObject\"](m, f);\n        };\n    }\n};\nvar functorWithIndexObject = {\n    mapWithIndex: mapWithKey,\n    Functor0: function () {\n        return functorObject;\n    }\n};\nvar fromHomogeneous = function () {\n    return Unsafe_Coerce.unsafeCoerce;\n};\nvar fromFoldableWithIndex = function (dictFoldableWithIndex) {\n    var forWithIndex_1 = forWithIndex_(dictFoldableWithIndex);\n    return function (l) {\n        return $foreign.runST(function __do() {\n            var s = Foreign_Object_ST[\"new\"]();\n            forWithIndex_1(l)(function (k) {\n                return function (v) {\n                    return Foreign_Object_ST.poke(k)(v)(s);\n                };\n            })();\n            return s;\n        });\n    };\n};\nvar fromFoldableWith = function (dictFoldable) {\n    var for_1 = for_(dictFoldable);\n    return function (f) {\n        return function (l) {\n            return $foreign.runST(function __do() {\n                var s = Foreign_Object_ST[\"new\"]();\n                for_1(l)(function (v) {\n                    return function __do() {\n                        var v$prime = $foreign[\"_lookupST\"](v.value1, f(v.value1), v.value0, s)();\n                        return Foreign_Object_ST.poke(v.value0)(v$prime)(s)();\n                    };\n                })();\n                return s;\n            });\n        };\n    };\n};\nvar fromFoldable = function (dictFoldable) {\n    var fromFoldable1 = Data_Array.fromFoldable(dictFoldable);\n    return function (l) {\n        return $foreign.runST(function __do() {\n            var s = Foreign_Object_ST[\"new\"]();\n            Control_Monad_ST_Internal.foreach(fromFoldable1(l))(function (v) {\n                return $$void(Foreign_Object_ST.poke(v.value0)(v.value1)(s));\n            })();\n            return s;\n        });\n    };\n};\nvar freezeST = $foreign[\"_copyST\"];\nvar foldMaybe = function (f) {\n    return function (z) {\n        return function (m) {\n            return $foreign[\"_foldSCObject\"](m, z, f, Data_Maybe.fromMaybe);\n        };\n    };\n};\nvar foldM = function (dictMonad) {\n    var bind1 = Control_Bind.bind(dictMonad.Bind1());\n    var pure1 = Control_Applicative.pure(dictMonad.Applicative0());\n    return function (f) {\n        return function (z) {\n            return $foreign[\"_foldM\"](bind1)(f)(pure1(z));\n        };\n    };\n};\nvar foldM1 = /* #__PURE__ */ foldM(Control_Monad_ST_Internal.monadST);\nvar union = function (m) {\n    return mutate(function (s) {\n        return foldM1(function (s$prime) {\n            return function (k) {\n                return function (v) {\n                    return Foreign_Object_ST.poke(k)(v)(s$prime);\n                };\n            };\n        })(s)(m);\n    });\n};\nvar unions = function (dictFoldable) {\n    return Data_Foldable.foldl(dictFoldable)(union)($foreign.empty);\n};\nvar unionWith = function (f) {\n    return function (m1) {\n        return function (m2) {\n            return mutate(function (s1) {\n                return foldM1(function (s2) {\n                    return function (k) {\n                        return function (v1) {\n                            return Foreign_Object_ST.poke(k)($foreign[\"_lookup\"](v1, function (v2) {\n                                return f(v1)(v2);\n                            }, k, m2))(s2);\n                        };\n                    };\n                })(s1)(m1);\n            })(m2);\n        };\n    };\n};\nvar semigroupObject = function (dictSemigroup) {\n    return {\n        append: unionWith(Data_Semigroup.append(dictSemigroup))\n    };\n};\nvar monoidObject = function (dictSemigroup) {\n    var semigroupObject1 = semigroupObject(dictSemigroup);\n    return {\n        mempty: $foreign.empty,\n        Semigroup0: function () {\n            return semigroupObject1;\n        }\n    };\n};\nvar fold = /* #__PURE__ */ $foreign[\"_foldM\"](Data_Function.applyFlipped);\nvar foldMap = function (dictMonoid) {\n    var append1 = Data_Semigroup.append(dictMonoid.Semigroup0());\n    var mempty = Data_Monoid.mempty(dictMonoid);\n    return function (f) {\n        return fold(function (acc) {\n            return function (k) {\n                return function (v) {\n                    return append1(acc)(f(k)(v));\n                };\n            };\n        })(mempty);\n    };\n};\nvar foldableObject = {\n    foldl: function (f) {\n        return fold(function (z) {\n            return function (v) {\n                return f(z);\n            };\n        });\n    },\n    foldr: function (f) {\n        return function (z) {\n            return function (m) {\n                return foldr(f)(z)(values(m));\n            };\n        };\n    },\n    foldMap: function (dictMonoid) {\n        var foldMap1 = foldMap(dictMonoid);\n        return function (f) {\n            return foldMap1(Data_Function[\"const\"](f));\n        };\n    }\n};\nvar foldableWithIndexObject = {\n    foldlWithIndex: function (f) {\n        return fold(Data_Function.flip(f));\n    },\n    foldrWithIndex: function (f) {\n        return function (z) {\n            return function (m) {\n                return foldr(Data_Tuple.uncurry(f))(z)($foreign.toArrayWithKey(Data_Tuple.Tuple.create)(m));\n            };\n        };\n    },\n    foldMapWithIndex: function (dictMonoid) {\n        return foldMap(dictMonoid);\n    },\n    Foldable0: function () {\n        return foldableObject;\n    }\n};\nvar traversableWithIndexObject = {\n    traverseWithIndex: function (dictApplicative) {\n        var Apply0 = dictApplicative.Apply0();\n        var apply = Control_Apply.apply(Apply0);\n        var map = Data_Functor.map(Apply0.Functor0());\n        var pure1 = Control_Applicative.pure(dictApplicative);\n        return function (f) {\n            return function (ms) {\n                return fold(function (acc) {\n                    return function (k) {\n                        return function (v) {\n                            return apply(map(Data_Function.flip(insert(k)))(acc))(f(k)(v));\n                        };\n                    };\n                })(pure1($foreign.empty))(ms);\n            };\n        };\n    },\n    FunctorWithIndex0: function () {\n        return functorWithIndexObject;\n    },\n    FoldableWithIndex1: function () {\n        return foldableWithIndexObject;\n    },\n    Traversable2: function () {\n        return traversableObject;\n    }\n};\nvar traversableObject = {\n    traverse: function (dictApplicative) {\n        var $96 = Data_TraversableWithIndex.traverseWithIndex(traversableWithIndexObject)(dictApplicative);\n        return function ($97) {\n            return $96(Data_Function[\"const\"]($97));\n        };\n    },\n    sequence: function (dictApplicative) {\n        return Data_Traversable.traverse(traversableObject)(dictApplicative)(identity);\n    },\n    Functor0: function () {\n        return functorObject;\n    },\n    Foldable1: function () {\n        return foldableObject;\n    }\n};\nvar filterWithKey = function (predicate) {\n    return function (m) {\n        var go = (function () {\n            var step = function (acc) {\n                return function (k) {\n                    return function (v) {\n                        var $86 = predicate(k)(v);\n                        if ($86) {\n                            return Foreign_Object_ST.poke(k)(v)(acc);\n                        };\n                        return pure(acc);\n                    };\n                };\n            };\n            return function __do() {\n                var m$prime = Foreign_Object_ST[\"new\"]();\n                return foldM1(step)(m$prime)(m)();\n            };\n        })();\n        return $foreign.runST(go);\n    };\n};\nvar filterKeys = function (predicate) {\n    return filterWithKey(function ($98) {\n        return Data_Function[\"const\"](predicate($98));\n    });\n};\nvar filter = function (predicate) {\n    return filterWithKey(Data_Function[\"const\"](predicate));\n};\nvar eqObject = function (dictEq) {\n    var isSubmap1 = isSubmap(dictEq);\n    return {\n        eq: function (m1) {\n            return function (m2) {\n                return isSubmap1(m1)(m2) && isSubmap1(m2)(m1);\n            };\n        }\n    };\n};\nvar ordObject = function (dictOrd) {\n    var compare = Data_Ord.compare(Data_Ord.ordArray(ordTuple(dictOrd)));\n    var eqObject1 = eqObject(dictOrd.Eq0());\n    return {\n        compare: function (m1) {\n            return function (m2) {\n                return compare(toAscArray(m1))(toAscArray(m2));\n            };\n        },\n        Eq0: function () {\n            return eqObject1;\n        }\n    };\n};\nvar eq1Object = {\n    eq1: function (dictEq) {\n        return Data_Eq.eq(eqObject(dictEq));\n    }\n};\nvar $$delete = function (k) {\n    return mutate(Foreign_Object_ST[\"delete\"](k));\n};\nvar pop = function (k) {\n    return function (m) {\n        return mapFlipped(lookup(k)(m))(function (a) {\n            return new Data_Tuple.Tuple(a, $$delete(k)(m));\n        });\n    };\n};\nvar alter = function (f) {\n    return function (k) {\n        return function (m) {\n            var v = f(lookup(k)(m));\n            if (v instanceof Data_Maybe.Nothing) {\n                return $$delete(k)(m);\n            };\n            if (v instanceof Data_Maybe.Just) {\n                return insert(k)(v.value0)(m);\n            };\n            throw new Error(\"Failed pattern match at Foreign.Object (line 210, column 15 - line 212, column 25): \" + [ v.constructor.name ]);\n        };\n    };\n};\nvar update = function (f) {\n    return function (k) {\n        return function (m) {\n            return alter(Data_Maybe.maybe(Data_Maybe.Nothing.value)(f))(k)(m);\n        };\n    };\n};\nexport {\n    empty,\n    size,\n    keys,\n    all,\n    runST,\n    toArrayWithKey\n} from \"./foreign.js\";\nexport {\n    isEmpty,\n    singleton,\n    insert,\n    lookup,\n    toUnfoldable,\n    toAscUnfoldable,\n    fromFoldable,\n    fromFoldableWith,\n    fromFoldableWithIndex,\n    fromHomogeneous,\n    $$delete as delete,\n    pop,\n    member,\n    alter,\n    update,\n    mapWithKey,\n    filterWithKey,\n    filterKeys,\n    filter,\n    values,\n    union,\n    unionWith,\n    unions,\n    isSubmap,\n    fold,\n    foldMap,\n    foldM,\n    foldMaybe,\n    thawST,\n    freezeST,\n    functorObject,\n    functorWithIndexObject,\n    foldableObject,\n    foldableWithIndexObject,\n    traversableObject,\n    traversableWithIndexObject,\n    eqObject,\n    eq1Object,\n    ordObject,\n    showObject,\n    semigroupObject,\n    monoidObject\n};\n", "export function eventListener(fn) {\n  return function () {\n    return function (event) {\n      return fn(event)();\n    };\n  };\n}\n\nexport function addEventListenerWithOptions(type) {\n  return function (listener) {\n    return function (options) {\n      return function (target) {\n        return function () {\n          return target.addEventListener(type, listener, options);\n        };\n      };\n    };\n  };\n}\n\nexport function addEventListener(type) {\n  return function (listener) {\n    return function (useCapture) {\n      return function (target) {\n        return function () {\n          return target.addEventListener(type, listener, useCapture);\n        };\n      };\n    };\n  };\n}\n\nexport function removeEventListener(type) {\n  return function (listener) {\n    return function (useCapture) {\n      return function (target) {\n        return function () {\n          return target.removeEventListener(type, listener, useCapture);\n        };\n      };\n    };\n  };\n}\n\nexport function dispatchEvent(event) {\n  return function (target) {\n    return function () {\n      return target.dispatchEvent(event);\n    };\n  };\n}\n", "// Generated by purs version 0.15.15\nimport * as Data_Functor from \"../Data.Functor/index.js\";\nimport * as Data_Maybe from \"../Data.Maybe/index.js\";\nimport * as Data_Nullable from \"../Data.Nullable/index.js\";\nimport * as Data_Tuple from \"../Data.Tuple/index.js\";\nimport * as Data_Unit from \"../Data.Unit/index.js\";\nimport * as Effect_Ref from \"../Effect.Ref/index.js\";\nimport * as Foreign from \"../Foreign/index.js\";\nimport * as Foreign_Object from \"../Foreign.Object/index.js\";\nimport * as Halogen_VDom_Machine from \"../Halogen.VDom.Machine/index.js\";\nimport * as Halogen_VDom_Util from \"../Halogen.VDom.Util/index.js\";\nimport * as Unsafe_Coerce from \"../Unsafe.Coerce/index.js\";\nimport * as Web_Event_EventTarget from \"../Web.Event.EventTarget/index.js\";\nvar $runtime_lazy = function (name, moduleName, init) {\n    var state = 0;\n    var val;\n    return function (lineNumber) {\n        if (state === 2) return val;\n        if (state === 1) throw new ReferenceError(name + \" was needed before it finished initializing (module \" + moduleName + \", line \" + lineNumber + \")\", moduleName, lineNumber);\n        state = 1;\n        val = init();\n        state = 2;\n        return val;\n    };\n};\nvar map = /* #__PURE__ */ Data_Functor.map(Data_Functor.functorFn);\nvar map1 = /* #__PURE__ */ Data_Functor.map(Data_Maybe.functorMaybe);\nvar Created = /* #__PURE__ */ (function () {\n    function Created(value0) {\n        this.value0 = value0;\n    };\n    Created.create = function (value0) {\n        return new Created(value0);\n    };\n    return Created;\n})();\nvar Removed = /* #__PURE__ */ (function () {\n    function Removed(value0) {\n        this.value0 = value0;\n    };\n    Removed.create = function (value0) {\n        return new Removed(value0);\n    };\n    return Removed;\n})();\nvar Attribute = /* #__PURE__ */ (function () {\n    function Attribute(value0, value1, value2) {\n        this.value0 = value0;\n        this.value1 = value1;\n        this.value2 = value2;\n    };\n    Attribute.create = function (value0) {\n        return function (value1) {\n            return function (value2) {\n                return new Attribute(value0, value1, value2);\n            };\n        };\n    };\n    return Attribute;\n})();\nvar Property = /* #__PURE__ */ (function () {\n    function Property(value0, value1) {\n        this.value0 = value0;\n        this.value1 = value1;\n    };\n    Property.create = function (value0) {\n        return function (value1) {\n            return new Property(value0, value1);\n        };\n    };\n    return Property;\n})();\nvar Handler = /* #__PURE__ */ (function () {\n    function Handler(value0, value1) {\n        this.value0 = value0;\n        this.value1 = value1;\n    };\n    Handler.create = function (value0) {\n        return function (value1) {\n            return new Handler(value0, value1);\n        };\n    };\n    return Handler;\n})();\nvar Ref = /* #__PURE__ */ (function () {\n    function Ref(value0) {\n        this.value0 = value0;\n    };\n    Ref.create = function (value0) {\n        return new Ref(value0);\n    };\n    return Ref;\n})();\nvar unsafeGetProperty = Halogen_VDom_Util.unsafeGetAny;\nvar setProperty = Halogen_VDom_Util.unsafeSetAny;\nvar removeProperty = function (key, el) {\n    var v = Halogen_VDom_Util.hasAttribute(Data_Nullable[\"null\"], key, el);\n    if (v) {\n        return Halogen_VDom_Util.removeAttribute(Data_Nullable[\"null\"], key, el);\n    };\n    var v1 = Foreign.typeOf(Halogen_VDom_Util.unsafeGetAny(key, el));\n    if (v1 === \"string\") {\n        return Halogen_VDom_Util.unsafeSetAny(key, \"\", el);\n    };\n    if (key === \"rowSpan\") {\n        return Halogen_VDom_Util.unsafeSetAny(key, 1, el);\n    };\n    if (key === \"colSpan\") {\n        return Halogen_VDom_Util.unsafeSetAny(key, 1, el);\n    };\n    return Halogen_VDom_Util.unsafeSetAny(key, Halogen_VDom_Util.jsUndefined, el);\n};\nvar propToStrKey = function (v) {\n    if (v instanceof Attribute && v.value0 instanceof Data_Maybe.Just) {\n        return \"attr/\" + (v.value0.value0 + (\":\" + v.value1));\n    };\n    if (v instanceof Attribute) {\n        return \"attr/:\" + v.value1;\n    };\n    if (v instanceof Property) {\n        return \"prop/\" + v.value0;\n    };\n    if (v instanceof Handler) {\n        return \"handler/\" + v.value0;\n    };\n    if (v instanceof Ref) {\n        return \"ref\";\n    };\n    throw new Error(\"Failed pattern match at Halogen.VDom.DOM.Prop (line 182, column 16 - line 187, column 16): \" + [ v.constructor.name ]);\n};\nvar propFromString = Unsafe_Coerce.unsafeCoerce;\nvar propFromNumber = Unsafe_Coerce.unsafeCoerce;\nvar propFromInt = Unsafe_Coerce.unsafeCoerce;\nvar propFromBoolean = Unsafe_Coerce.unsafeCoerce;\nvar functorProp = {\n    map: function (v) {\n        return function (v1) {\n            if (v1 instanceof Handler) {\n                return new Handler(v1.value0, map(map1(v))(v1.value1));\n            };\n            if (v1 instanceof Ref) {\n                return new Ref(map(map1(v))(v1.value0));\n            };\n            return v1;\n        };\n    }\n};\nvar functorElemRef = {\n    map: function (v) {\n        return function (v1) {\n            if (v1 instanceof Created) {\n                return new Created(v(v1.value0));\n            };\n            if (v1 instanceof Removed) {\n                return new Removed(v(v1.value0));\n            };\n            throw new Error(\"Failed pattern match at Halogen.VDom.DOM.Prop (line 49, column 1 - line 51, column 36): \" + [ v.constructor.name, v1.constructor.name ]);\n        };\n    }\n};\nvar buildProp = function (emit) {\n    return function (el) {\n        var removeProp = function (prevEvents) {\n            return function (v, v1) {\n                if (v1 instanceof Attribute) {\n                    return Halogen_VDom_Util.removeAttribute(Data_Nullable.toNullable(v1.value0), v1.value1, el);\n                };\n                if (v1 instanceof Property) {\n                    return removeProperty(v1.value0, el);\n                };\n                if (v1 instanceof Handler) {\n                    var handler = Halogen_VDom_Util.unsafeLookup(v1.value0, prevEvents);\n                    return Halogen_VDom_Util.removeEventListener(v1.value0, Data_Tuple.fst(handler), el);\n                };\n                if (v1 instanceof Ref) {\n                    return Data_Unit.unit;\n                };\n                throw new Error(\"Failed pattern match at Halogen.VDom.DOM.Prop (line 169, column 5 - line 179, column 18): \" + [ v1.constructor.name ]);\n            };\n        };\n        var mbEmit = function (v) {\n            if (v instanceof Data_Maybe.Just) {\n                return emit(v.value0)();\n            };\n            return Data_Unit.unit;\n        };\n        var haltProp = function (state) {\n            var v = Foreign_Object.lookup(\"ref\")(state.props);\n            if (v instanceof Data_Maybe.Just && v.value0 instanceof Ref) {\n                return mbEmit(v.value0.value0(new Removed(el)));\n            };\n            return Data_Unit.unit;\n        };\n        var diffProp = function (prevEvents, events) {\n            return function (v, v1, v11, v2) {\n                if (v11 instanceof Attribute && v2 instanceof Attribute) {\n                    var $66 = v11.value2 === v2.value2;\n                    if ($66) {\n                        return v2;\n                    };\n                    Halogen_VDom_Util.setAttribute(Data_Nullable.toNullable(v2.value0), v2.value1, v2.value2, el);\n                    return v2;\n                };\n                if (v11 instanceof Property && v2 instanceof Property) {\n                    var v4 = Halogen_VDom_Util.refEq(v11.value1, v2.value1);\n                    if (v4) {\n                        return v2;\n                    };\n                    if (v2.value0 === \"value\") {\n                        var elVal = unsafeGetProperty(\"value\", el);\n                        var $75 = Halogen_VDom_Util.refEq(elVal, v2.value1);\n                        if ($75) {\n                            return v2;\n                        };\n                        setProperty(v2.value0, v2.value1, el);\n                        return v2;\n                    };\n                    setProperty(v2.value0, v2.value1, el);\n                    return v2;\n                };\n                if (v11 instanceof Handler && v2 instanceof Handler) {\n                    var handler = Halogen_VDom_Util.unsafeLookup(v2.value0, prevEvents);\n                    Effect_Ref.write(v2.value1)(Data_Tuple.snd(handler))();\n                    Halogen_VDom_Util.pokeMutMap(v2.value0, handler, events);\n                    return v2;\n                };\n                return v2;\n            };\n        };\n        var applyProp = function (events) {\n            return function (v, v1, v2) {\n                if (v2 instanceof Attribute) {\n                    Halogen_VDom_Util.setAttribute(Data_Nullable.toNullable(v2.value0), v2.value1, v2.value2, el);\n                    return v2;\n                };\n                if (v2 instanceof Property) {\n                    setProperty(v2.value0, v2.value1, el);\n                    return v2;\n                };\n                if (v2 instanceof Handler) {\n                    var v3 = Halogen_VDom_Util.unsafeGetAny(v2.value0, events);\n                    if (Halogen_VDom_Util.unsafeHasAny(v2.value0, events)) {\n                        Effect_Ref.write(v2.value1)(Data_Tuple.snd(v3))();\n                        return v2;\n                    };\n                    var ref = Effect_Ref[\"new\"](v2.value1)();\n                    var listener = Web_Event_EventTarget.eventListener(function (ev) {\n                        return function __do() {\n                            var f$prime = Effect_Ref.read(ref)();\n                            return mbEmit(f$prime(ev));\n                        };\n                    })();\n                    Halogen_VDom_Util.pokeMutMap(v2.value0, new Data_Tuple.Tuple(listener, ref), events);\n                    Halogen_VDom_Util.addEventListener(v2.value0, listener, el);\n                    return v2;\n                };\n                if (v2 instanceof Ref) {\n                    mbEmit(v2.value0(new Created(el)));\n                    return v2;\n                };\n                throw new Error(\"Failed pattern match at Halogen.VDom.DOM.Prop (line 113, column 5 - line 135, column 15): \" + [ v2.constructor.name ]);\n            };\n        };\n        var $lazy_patchProp = $runtime_lazy(\"patchProp\", \"Halogen.VDom.DOM.Prop\", function () {\n            return function (state, ps2) {\n                var events = Halogen_VDom_Util.newMutMap();\n                var onThis = removeProp(state.events);\n                var onThese = diffProp(state.events, events);\n                var onThat = applyProp(events);\n                var props = Halogen_VDom_Util.diffWithKeyAndIxE(state.props, ps2, propToStrKey, onThese, onThis, onThat);\n                var nextState = {\n                    events: Halogen_VDom_Util.unsafeFreeze(events),\n                    props: props\n                };\n                return Halogen_VDom_Machine.mkStep(new Halogen_VDom_Machine.Step(Data_Unit.unit, nextState, $lazy_patchProp(100), haltProp));\n            };\n        });\n        var patchProp = $lazy_patchProp(87);\n        var renderProp = function (ps1) {\n            var events = Halogen_VDom_Util.newMutMap();\n            var ps1$prime = Halogen_VDom_Util.strMapWithIxE(ps1, propToStrKey, applyProp(events));\n            var state = {\n                events: Halogen_VDom_Util.unsafeFreeze(events),\n                props: ps1$prime\n            };\n            return Halogen_VDom_Machine.mkStep(new Halogen_VDom_Machine.Step(Data_Unit.unit, state, patchProp, haltProp));\n        };\n        return renderProp;\n    };\n};\nexport {\n    Attribute,\n    Property,\n    Handler,\n    Ref,\n    Created,\n    Removed,\n    propFromString,\n    propFromBoolean,\n    propFromInt,\n    propFromNumber,\n    buildProp,\n    functorProp,\n    functorElemRef\n};\n", "// Generated by purs version 0.15.15\nimport * as DOM_HTML_Indexed_AutocompleteType from \"../DOM.HTML.Indexed.AutocompleteType/index.js\";\nimport * as DOM_HTML_Indexed_ButtonType from \"../DOM.HTML.Indexed.ButtonType/index.js\";\nimport * as DOM_HTML_Indexed_CrossOriginValue from \"../DOM.HTML.Indexed.CrossOriginValue/index.js\";\nimport * as DOM_HTML_Indexed_DirValue from \"../DOM.HTML.Indexed.DirValue/index.js\";\nimport * as DOM_HTML_Indexed_FormMethod from \"../DOM.HTML.Indexed.FormMethod/index.js\";\nimport * as DOM_HTML_Indexed_InputAcceptType from \"../DOM.HTML.Indexed.InputAcceptType/index.js\";\nimport * as DOM_HTML_Indexed_InputType from \"../DOM.HTML.Indexed.InputType/index.js\";\nimport * as DOM_HTML_Indexed_KindValue from \"../DOM.HTML.Indexed.KindValue/index.js\";\nimport * as DOM_HTML_Indexed_MenuType from \"../DOM.HTML.Indexed.MenuType/index.js\";\nimport * as DOM_HTML_Indexed_MenuitemType from \"../DOM.HTML.Indexed.MenuitemType/index.js\";\nimport * as DOM_HTML_Indexed_OrderedListType from \"../DOM.HTML.Indexed.OrderedListType/index.js\";\nimport * as DOM_HTML_Indexed_PreloadValue from \"../DOM.HTML.Indexed.PreloadValue/index.js\";\nimport * as DOM_HTML_Indexed_ScopeValue from \"../DOM.HTML.Indexed.ScopeValue/index.js\";\nimport * as DOM_HTML_Indexed_StepValue from \"../DOM.HTML.Indexed.StepValue/index.js\";\nimport * as DOM_HTML_Indexed_WrapValue from \"../DOM.HTML.Indexed.WrapValue/index.js\";\nimport * as Data_Bifunctor from \"../Data.Bifunctor/index.js\";\nimport * as Data_Functor from \"../Data.Functor/index.js\";\nimport * as Data_Maybe from \"../Data.Maybe/index.js\";\nimport * as Data_Newtype from \"../Data.Newtype/index.js\";\nimport * as Halogen_Query_Input from \"../Halogen.Query.Input/index.js\";\nimport * as Halogen_VDom from \"../Halogen.VDom/index.js\";\nimport * as Halogen_VDom_DOM_Prop from \"../Halogen.VDom.DOM.Prop/index.js\";\nimport * as Halogen_VDom_Types from \"../Halogen.VDom.Types/index.js\";\nimport * as Web_HTML_Common from \"../Web.HTML.Common/index.js\";\nvar map = /* #__PURE__ */ Data_Functor.map(Data_Functor.functorArray);\nvar map1 = /* #__PURE__ */ Data_Functor.map(Halogen_VDom_DOM_Prop.functorProp);\nvar map2 = /* #__PURE__ */ Data_Functor.map(Halogen_Query_Input.functorInput);\nvar un = /* #__PURE__ */ Data_Newtype.un();\nvar bimap = /* #__PURE__ */ Data_Bifunctor.bimap(Halogen_VDom_Types.bifunctorVDom);\nvar HTML = function (x) {\n    return x;\n};\nvar widget = function ($28) {\n    return HTML(Halogen_VDom_Types.Widget.create($28));\n};\nvar toPropValue = function (dict) {\n    return dict.toPropValue;\n};\nvar text = function ($29) {\n    return HTML(Halogen_VDom_Types.Text.create($29));\n};\nvar ref = function (f) {\n    return new Halogen_VDom_DOM_Prop.Ref(function ($30) {\n        return f((function (v) {\n            if (v instanceof Halogen_VDom_DOM_Prop.Created) {\n                return new Data_Maybe.Just(v.value0);\n            };\n            if (v instanceof Halogen_VDom_DOM_Prop.Removed) {\n                return Data_Maybe.Nothing.value;\n            };\n            throw new Error(\"Failed pattern match at Halogen.HTML.Core (line 109, column 21 - line 111, column 23): \" + [ v.constructor.name ]);\n        })($30));\n    });\n};\nvar prop = function (dictIsProp) {\n    var toPropValue1 = toPropValue(dictIsProp);\n    return function (v) {\n        var $31 = Halogen_VDom_DOM_Prop.Property.create(v);\n        return function ($32) {\n            return $31(toPropValue1($32));\n        };\n    };\n};\nvar newtypeHTML = {\n    Coercible0: function () {\n        return undefined;\n    }\n};\nvar renderWidget = function (f) {\n    return function (g) {\n        return function (v) {\n            return Halogen_VDom_Types.renderWidget(map(map1(map2(f))))((function () {\n                var $33 = un(HTML);\n                return function ($34) {\n                    return $33(g($34));\n                };\n            })())(v);\n        };\n    };\n};\nvar keyed = function (ns) {\n    return function (name) {\n        return function (props) {\n            return function (children) {\n                return new Halogen_VDom_Types.Keyed(ns, name, props, children);\n            };\n        };\n    };\n};\nvar isPropWrapValue = {\n    toPropValue: function ($35) {\n        return Halogen_VDom_DOM_Prop.propFromString(DOM_HTML_Indexed_WrapValue.renderWrapValue($35));\n    }\n};\nvar isPropString = {\n    toPropValue: Halogen_VDom_DOM_Prop.propFromString\n};\nvar isPropStepValue = {\n    toPropValue: function ($36) {\n        return Halogen_VDom_DOM_Prop.propFromString(DOM_HTML_Indexed_StepValue.renderStepValue($36));\n    }\n};\nvar isPropScopeValue = {\n    toPropValue: function ($37) {\n        return Halogen_VDom_DOM_Prop.propFromString(DOM_HTML_Indexed_ScopeValue.renderScopeValue($37));\n    }\n};\nvar isPropPreloadValue = {\n    toPropValue: function ($38) {\n        return Halogen_VDom_DOM_Prop.propFromString(DOM_HTML_Indexed_PreloadValue.renderPreloadValue($38));\n    }\n};\nvar isPropOrderedListType = {\n    toPropValue: function ($39) {\n        return Halogen_VDom_DOM_Prop.propFromString(DOM_HTML_Indexed_OrderedListType.renderOrderedListType($39));\n    }\n};\nvar isPropNumber = {\n    toPropValue: Halogen_VDom_DOM_Prop.propFromNumber\n};\nvar isPropMenuitemType = {\n    toPropValue: function ($40) {\n        return Halogen_VDom_DOM_Prop.propFromString(DOM_HTML_Indexed_MenuitemType.renderMenuitemType($40));\n    }\n};\nvar isPropMenuType = {\n    toPropValue: function ($41) {\n        return Halogen_VDom_DOM_Prop.propFromString(DOM_HTML_Indexed_MenuType.renderMenuType($41));\n    }\n};\nvar isPropMediaType = {\n    toPropValue: /* #__PURE__ */ (function () {\n        var $42 = Data_Newtype.unwrap();\n        return function ($43) {\n            return Halogen_VDom_DOM_Prop.propFromString($42($43));\n        };\n    })()\n};\nvar isPropKindValue = {\n    toPropValue: function ($44) {\n        return Halogen_VDom_DOM_Prop.propFromString(DOM_HTML_Indexed_KindValue.renderKindValue($44));\n    }\n};\nvar isPropInt = {\n    toPropValue: Halogen_VDom_DOM_Prop.propFromInt\n};\nvar isPropInputType = {\n    toPropValue: function ($45) {\n        return Halogen_VDom_DOM_Prop.propFromString(DOM_HTML_Indexed_InputType.renderInputType($45));\n    }\n};\nvar isPropInputAcceptType = {\n    toPropValue: function ($46) {\n        return Halogen_VDom_DOM_Prop.propFromString(DOM_HTML_Indexed_InputAcceptType.renderInputAcceptType($46));\n    }\n};\nvar isPropFormMethod = {\n    toPropValue: function ($47) {\n        return Halogen_VDom_DOM_Prop.propFromString(DOM_HTML_Indexed_FormMethod.renderFormMethod($47));\n    }\n};\nvar isPropDirValue = {\n    toPropValue: function ($48) {\n        return Halogen_VDom_DOM_Prop.propFromString(DOM_HTML_Indexed_DirValue.renderDirValue($48));\n    }\n};\nvar isPropCrossOriginValue = {\n    toPropValue: function ($49) {\n        return Halogen_VDom_DOM_Prop.propFromString(DOM_HTML_Indexed_CrossOriginValue.renderCrossOriginValue($49));\n    }\n};\nvar isPropButtonType = {\n    toPropValue: function ($50) {\n        return Halogen_VDom_DOM_Prop.propFromString(DOM_HTML_Indexed_ButtonType.renderButtonType($50));\n    }\n};\nvar isPropBoolean = {\n    toPropValue: Halogen_VDom_DOM_Prop.propFromBoolean\n};\nvar isPropAutocompleteType = {\n    toPropValue: function ($51) {\n        return Halogen_VDom_DOM_Prop.propFromString(DOM_HTML_Indexed_AutocompleteType.renderAutocompleteType($51));\n    }\n};\nvar handler = /* #__PURE__ */ (function () {\n    return Halogen_VDom_DOM_Prop.Handler.create;\n})();\nvar element = function (ns) {\n    return function (name) {\n        return function (props) {\n            return function (children) {\n                return new Halogen_VDom_Types.Elem(ns, name, props, children);\n            };\n        };\n    };\n};\nvar bifunctorHTML = {\n    bimap: function (f) {\n        return function (g) {\n            return function (v) {\n                return bimap(map(map1(map2(g))))(f)(v);\n            };\n        };\n    }\n};\nvar functorHTML = {\n    map: /* #__PURE__ */ Data_Bifunctor.rmap(bifunctorHTML)\n};\nvar attr = function (ns) {\n    return function (v) {\n        return Halogen_VDom_DOM_Prop.Attribute.create(ns)(v);\n    };\n};\nexport {\n    HTML,\n    renderWidget,\n    widget,\n    text,\n    element,\n    keyed,\n    prop,\n    attr,\n    handler,\n    ref,\n    toPropValue,\n    newtypeHTML,\n    bifunctorHTML,\n    functorHTML,\n    isPropString,\n    isPropInt,\n    isPropNumber,\n    isPropBoolean,\n    isPropMediaType,\n    isPropButtonType,\n    isPropCrossOriginValue,\n    isPropDirValue,\n    isPropFormMethod,\n    isPropInputType,\n    isPropKindValue,\n    isPropMenuitemType,\n    isPropMenuType,\n    isPropAutocompleteType,\n    isPropOrderedListType,\n    isPropPreloadValue,\n    isPropScopeValue,\n    isPropStepValue,\n    isPropWrapValue,\n    isPropInputAcceptType\n};\nexport {\n    ElemName,\n    Namespace\n} from \"../Halogen.VDom/index.js\";\nexport {\n    Attribute,\n    Handler,\n    Property,\n    Ref\n} from \"../Halogen.VDom.DOM.Prop/index.js\";\nexport {\n    AttrName,\n    ClassName,\n    PropName\n} from \"../Web.HTML.Common/index.js\";\n", "// Generated by purs version 0.15.15\nimport * as Control_Applicative from \"../Control.Applicative/index.js\";\nimport * as DOM_HTML_Indexed from \"../DOM.HTML.Indexed/index.js\";\nimport * as DOM_HTML_Indexed_AutocompleteType from \"../DOM.HTML.Indexed.AutocompleteType/index.js\";\nimport * as DOM_HTML_Indexed_ButtonType from \"../DOM.HTML.Indexed.ButtonType/index.js\";\nimport * as DOM_HTML_Indexed_FormMethod from \"../DOM.HTML.Indexed.FormMethod/index.js\";\nimport * as DOM_HTML_Indexed_InputAcceptType from \"../DOM.HTML.Indexed.InputAcceptType/index.js\";\nimport * as DOM_HTML_Indexed_InputType from \"../DOM.HTML.Indexed.InputType/index.js\";\nimport * as DOM_HTML_Indexed_MenuType from \"../DOM.HTML.Indexed.MenuType/index.js\";\nimport * as DOM_HTML_Indexed_MenuitemType from \"../DOM.HTML.Indexed.MenuitemType/index.js\";\nimport * as DOM_HTML_Indexed_OrderedListType from \"../DOM.HTML.Indexed.OrderedListType/index.js\";\nimport * as DOM_HTML_Indexed_PreloadValue from \"../DOM.HTML.Indexed.PreloadValue/index.js\";\nimport * as DOM_HTML_Indexed_ScopeValue from \"../DOM.HTML.Indexed.ScopeValue/index.js\";\nimport * as DOM_HTML_Indexed_StepValue from \"../DOM.HTML.Indexed.StepValue/index.js\";\nimport * as Data_Functor from \"../Data.Functor/index.js\";\nimport * as Data_HeytingAlgebra from \"../Data.HeytingAlgebra/index.js\";\nimport * as Data_Maybe from \"../Data.Maybe/index.js\";\nimport * as Data_Newtype from \"../Data.Newtype/index.js\";\nimport * as Data_String_Common from \"../Data.String.Common/index.js\";\nimport * as Halogen_HTML_Core from \"../Halogen.HTML.Core/index.js\";\nimport * as Halogen_Query_Input from \"../Halogen.Query.Input/index.js\";\nimport * as Halogen_VDom_DOM_Prop from \"../Halogen.VDom.DOM.Prop/index.js\";\nimport * as Unsafe_Coerce from \"../Unsafe.Coerce/index.js\";\nvar map = /* #__PURE__ */ Data_Functor.map(Halogen_VDom_DOM_Prop.functorProp);\nvar map1 = /* #__PURE__ */ Data_Functor.map(Halogen_Query_Input.functorInput);\nvar unwrap = /* #__PURE__ */ Data_Newtype.unwrap();\nvar IProp = function (x) {\n    return x;\n};\nvar ref = /* #__PURE__ */ (function () {\n    var go = function (p) {\n        return function (mel) {\n            return new Data_Maybe.Just(new Halogen_Query_Input.RefUpdate(p, mel));\n        };\n    };\n    return function ($29) {\n        return Halogen_HTML_Core.ref(go($29));\n    };\n})();\nvar prop = function (dictIsProp) {\n    return Halogen_HTML_Core.prop(dictIsProp);\n};\nvar prop1 = /* #__PURE__ */ prop(Halogen_HTML_Core.isPropBoolean);\nvar prop2 = /* #__PURE__ */ prop(Halogen_HTML_Core.isPropString);\nvar prop3 = /* #__PURE__ */ prop(Halogen_HTML_Core.isPropInt);\nvar prop4 = /* #__PURE__ */ prop(Halogen_HTML_Core.isPropNumber);\nvar readOnly = /* #__PURE__ */ prop1(\"readOnly\");\nvar rel = /* #__PURE__ */ prop2(\"rel\");\nvar required = /* #__PURE__ */ prop1(\"required\");\nvar rowSpan = /* #__PURE__ */ prop3(\"rowSpan\");\nvar rows = /* #__PURE__ */ prop3(\"rows\");\nvar scope = /* #__PURE__ */ prop(Halogen_HTML_Core.isPropScopeValue)(\"scope\");\nvar selected = /* #__PURE__ */ prop1(\"selected\");\nvar selectedIndex = /* #__PURE__ */ prop3(\"selectedIndex\");\nvar spellcheck = /* #__PURE__ */ prop1(\"spellcheck\");\nvar src = /* #__PURE__ */ prop2(\"src\");\nvar srcDoc = /* #__PURE__ */ prop2(\"srcdoc\");\nvar step = /* #__PURE__ */ prop(Halogen_HTML_Core.isPropStepValue)(\"step\");\nvar tabIndex = /* #__PURE__ */ prop3(\"tabIndex\");\nvar target = /* #__PURE__ */ prop2(\"target\");\nvar title = /* #__PURE__ */ prop2(\"title\");\nvar type_ = function (dictIsProp) {\n    return prop(dictIsProp)(\"type\");\n};\nvar value = function (dictIsProp) {\n    return prop(dictIsProp)(\"value\");\n};\nvar width = /* #__PURE__ */ prop3(\"width\");\nvar preload = /* #__PURE__ */ prop(Halogen_HTML_Core.isPropPreloadValue)(\"preload\");\nvar poster = /* #__PURE__ */ prop2(\"poster\");\nvar placeholder = /* #__PURE__ */ prop2(\"placeholder\");\nvar pattern = /* #__PURE__ */ prop2(\"pattern\");\nvar noValidate = /* #__PURE__ */ prop1(\"noValidate\");\nvar newtypeIProp = {\n    Coercible0: function () {\n        return undefined;\n    }\n};\nvar name = /* #__PURE__ */ prop2(\"name\");\nvar muted = /* #__PURE__ */ prop1(\"muted\");\nvar multiple = /* #__PURE__ */ prop1(\"multiple\");\nvar min = /* #__PURE__ */ prop4(\"min\");\nvar method = /* #__PURE__ */ prop(Halogen_HTML_Core.isPropFormMethod)(\"method\");\nvar max = /* #__PURE__ */ prop4(\"max\");\nvar loop = /* #__PURE__ */ prop1(\"loop\");\nvar id = /* #__PURE__ */ prop2(\"id\");\nvar href = /* #__PURE__ */ prop2(\"href\");\nvar height = /* #__PURE__ */ prop3(\"height\");\nvar functorIProp = {\n    map: function (f) {\n        return function (m) {\n            return map(map1(f))(m);\n        };\n    }\n};\nvar $$for = /* #__PURE__ */ prop2(\"htmlFor\");\nvar expand = function () {\n    return Unsafe_Coerce.unsafeCoerce;\n};\nvar enctype = /* #__PURE__ */ prop(Halogen_HTML_Core.isPropMediaType)(\"enctype\");\nvar draggable = /* #__PURE__ */ prop1(\"draggable\");\nvar download = /* #__PURE__ */ prop2(\"download\");\nvar disabled = /* #__PURE__ */ prop1(\"disabled\");\nvar enabled = /* #__PURE__ */ (function () {\n    var $30 = Data_HeytingAlgebra.not(Data_HeytingAlgebra.heytingAlgebraBoolean);\n    return function ($31) {\n        return disabled($30($31));\n    };\n})();\nvar controls = /* #__PURE__ */ prop1(\"controls\");\nvar cols = /* #__PURE__ */ prop3(\"cols\");\nvar colSpan = /* #__PURE__ */ prop3(\"colSpan\");\nvar classes = /* #__PURE__ */ (function () {\n    var $32 = prop2(\"className\");\n    var $33 = Data_String_Common.joinWith(\" \");\n    var $34 = Data_Functor.map(Data_Functor.functorArray)(unwrap);\n    return function ($35) {\n        return $32($33($34($35)));\n    };\n})();\nvar class_ = /* #__PURE__ */ (function () {\n    var $36 = prop2(\"className\");\n    return function ($37) {\n        return $36(unwrap($37));\n    };\n})();\nvar checked = /* #__PURE__ */ prop1(\"checked\");\nvar charset = /* #__PURE__ */ prop2(\"charset\");\nvar autoplay = /* #__PURE__ */ prop1(\"autoplay\");\nvar autofocus = /* #__PURE__ */ prop1(\"autofocus\");\nvar autocomplete = /* #__PURE__ */ prop(Halogen_HTML_Core.isPropAutocompleteType)(\"autocomplete\");\nvar attrNS = /* #__PURE__ */ (function () {\n    var $38 = Control_Applicative.pure(Data_Maybe.applicativeMaybe);\n    return function ($39) {\n        return Halogen_HTML_Core.attr($38($39));\n    };\n})();\nvar attr = /* #__PURE__ */ (function () {\n    return Halogen_HTML_Core.attr(Data_Maybe.Nothing.value);\n})();\nvar list = /* #__PURE__ */ attr(\"list\");\nvar style = /* #__PURE__ */ attr(\"style\");\nvar alt = /* #__PURE__ */ prop2(\"alt\");\nvar action = /* #__PURE__ */ prop2(\"action\");\nvar accept = /* #__PURE__ */ prop(Halogen_HTML_Core.isPropInputAcceptType)(\"accept\");\nexport {\n    IProp,\n    prop,\n    attr,\n    attrNS,\n    ref,\n    expand,\n    alt,\n    charset,\n    class_,\n    classes,\n    cols,\n    rows,\n    colSpan,\n    rowSpan,\n    $$for as for,\n    height,\n    width,\n    href,\n    id,\n    name,\n    rel,\n    src,\n    srcDoc,\n    style,\n    scope,\n    target,\n    title,\n    download,\n    method,\n    action,\n    enctype,\n    noValidate,\n    type_,\n    value,\n    min,\n    max,\n    step,\n    disabled,\n    enabled,\n    required,\n    readOnly,\n    spellcheck,\n    checked,\n    selected,\n    selectedIndex,\n    placeholder,\n    autocomplete,\n    list,\n    autofocus,\n    multiple,\n    pattern,\n    accept,\n    autoplay,\n    controls,\n    loop,\n    muted,\n    poster,\n    preload,\n    draggable,\n    tabIndex,\n    newtypeIProp,\n    functorIProp\n};\nexport {\n    AutocompleteAdditionalName,\n    AutocompleteAddressLevel1,\n    AutocompleteAddressLevel2,\n    AutocompleteAddressLevel3,\n    AutocompleteAddressLevel4,\n    AutocompleteAddressLine1,\n    AutocompleteAddressLine2,\n    AutocompleteAddressLine3,\n    AutocompleteBirthday,\n    AutocompleteBirthdayDay,\n    AutocompleteBirthdayMonth,\n    AutocompleteBirthdayYear,\n    AutocompleteCountry,\n    AutocompleteCountryName,\n    AutocompleteCreditCardAdditionalName,\n    AutocompleteCreditCardExpiration,\n    AutocompleteCreditCardExpirationMonth,\n    AutocompleteCreditCardExpirationYear,\n    AutocompleteCreditCardFamilyName,\n    AutocompleteCreditCardGivenName,\n    AutocompleteCreditCardName,\n    AutocompleteCreditCardNumber,\n    AutocompleteCreditCardSecurityCode,\n    AutocompleteCreditCardType,\n    AutocompleteCurrentPassword,\n    AutocompleteEmail,\n    AutocompleteFamilyName,\n    AutocompleteGivenName,\n    AutocompleteHonorificPrefix,\n    AutocompleteHonorificSuffix,\n    AutocompleteIMPP,\n    AutocompleteLanguage,\n    AutocompleteName,\n    AutocompleteNewPassword,\n    AutocompleteNickname,\n    AutocompleteOff,\n    AutocompleteOn,\n    AutocompleteOneTimeCode,\n    AutocompleteOrganization,\n    AutocompleteOrganizationTitle,\n    AutocompletePhoto,\n    AutocompletePostalCode,\n    AutocompleteSex,\n    AutocompleteStreetAddress,\n    AutocompleteTelephone,\n    AutocompleteTelephoneAreaCode,\n    AutocompleteTelephoneCountryCode,\n    AutocompleteTelephoneExtension,\n    AutocompleteTelephoneLocal,\n    AutocompleteTelephoneLocalPrefix,\n    AutocompleteTelephoneLocalSuffix,\n    AutocompleteTelephoneNational,\n    AutocompleteTransactionAmount,\n    AutocompleteTransactionCurrency,\n    AutocompleteURL,\n    AutocompleteUsername\n} from \"../DOM.HTML.Indexed.AutocompleteType/index.js\";\nexport {\n    ButtonButton,\n    ButtonReset,\n    ButtonSubmit\n} from \"../DOM.HTML.Indexed.ButtonType/index.js\";\nexport {\n    GET,\n    POST\n} from \"../DOM.HTML.Indexed.FormMethod/index.js\";\nexport {\n    InputAcceptType\n} from \"../DOM.HTML.Indexed.InputAcceptType/index.js\";\nexport {\n    InputButton,\n    InputCheckbox,\n    InputColor,\n    InputDate,\n    InputDatetimeLocal,\n    InputEmail,\n    InputFile,\n    InputHidden,\n    InputImage,\n    InputMonth,\n    InputNumber,\n    InputPassword,\n    InputRadio,\n    InputRange,\n    InputReset,\n    InputSearch,\n    InputSubmit,\n    InputTel,\n    InputText,\n    InputTime,\n    InputUrl,\n    InputWeek\n} from \"../DOM.HTML.Indexed.InputType/index.js\";\nexport {\n    MenuContext,\n    MenuList,\n    MenuToolbar\n} from \"../DOM.HTML.Indexed.MenuType/index.js\";\nexport {\n    MenuitemCheckbox,\n    MenuitemCommand,\n    MenuitemRadio\n} from \"../DOM.HTML.Indexed.MenuitemType/index.js\";\nexport {\n    OrderedListAlphabetic,\n    OrderedListNumeric\n} from \"../DOM.HTML.Indexed.OrderedListType/index.js\";\nexport {\n    PreloadAuto,\n    PreloadMetadata,\n    PreloadNone\n} from \"../DOM.HTML.Indexed.PreloadValue/index.js\";\nexport {\n    ScopeAuto,\n    ScopeCol,\n    ScopeColGroup,\n    ScopeRow,\n    ScopeRowGroup\n} from \"../DOM.HTML.Indexed.ScopeValue/index.js\";\nexport {\n    Any,\n    Step\n} from \"../DOM.HTML.Indexed.StepValue/index.js\";\n", "// Generated by purs version 0.15.15\nimport * as Data_Array from \"../Data.Array/index.js\";\nimport * as Data_Monoid from \"../Data.Monoid/index.js\";\nimport * as Data_Semigroup from \"../Data.Semigroup/index.js\";\nimport * as Halogen_HTML_Properties from \"../Halogen.HTML.Properties/index.js\";\nvar append1 = /* #__PURE__ */ Data_Semigroup.append(Data_Semigroup.semigroupArray);\nvar underline = [ \"text-decoration: underline\" ];\nvar style = /* #__PURE__ */ (function () {\n    var $5 = Data_Array.foldMap(Data_Monoid.monoidString)(function (v) {\n        return v + \"; \";\n    });\n    return function ($6) {\n        return Halogen_HTML_Properties.style($5($6));\n    };\n})();\nvar shadowed = [ \"box-shadow: 0 0 0.2em 0.1em black\" ];\nvar rounded = [ \"border-radius: 0.5em\" ];\nvar padding_vertical_small = [ \"padding: 0.5em 0\" ];\nvar padding_vertical_big = [ \"padding: 1.0em 0\" ];\nvar padding_small = [ \"padding: 0.5em\" ];\nvar padding_horizontal_small = [ \"padding: 0 1.0em\" ];\nvar padding_horizontal_big = [ \"padding: 0 1.0em\" ];\nvar padding_big = [ \"padding: 1em\" ];\nvar margin_small = [ \"margin: 0.5em\" ];\nvar italic = [ \"font-style: italic\" ];\nvar horizontal_bar = [ \"width: 100%\", \"height: 2px\", \"background-color: black\", \"border-radius: 50px\" ];\nvar hidden = [ \"display: none\", \"visibility: hidden\" ];\nvar font_size_small = [ \"font-size: 0.8em\" ];\nvar font_prose = [ \"font-family: serif\" ];\nvar font_fancy = [ \"font-family: cursive\" ];\nvar font_code = [ \"font-family: monospace\" ];\nvar flex_row = [ \"display: flex\", \"flex-direction: row\", \"gap: 0.5em\" ];\nvar flex_column = [ \"display: flex\", \"flex-direction: column\", \"gap: 0.5em\" ];\nvar color_error = [ \"color: red\" ];\nvar button_secondary = /* #__PURE__ */ append1(rounded)([ \"border: none\", \"background-color: gray\", \"color: white\", \"padding: 0.2em 0.8em\", \"user-select: none\" ]);\nvar button = /* #__PURE__ */ append1(rounded)([ \"border: none\", \"background-color: black\", \"color: white\", \"padding: 0.2em 0.8em\", \"user-select: none\" ]);\nvar boundaries = /* #__PURE__ */ append1(rounded)([ \"box-shadow: 0.1em 0 0 0 rgba(0, 0, 0, 0.5) inset\" ]);\nvar bold = [ \"font-weight: bold\" ];\nexport {\n    style,\n    flex_row,\n    flex_column,\n    rounded,\n    padding_big,\n    padding_vertical_small,\n    padding_vertical_big,\n    padding_horizontal_small,\n    padding_horizontal_big,\n    padding_small,\n    margin_small,\n    shadowed,\n    font_code,\n    font_prose,\n    font_fancy,\n    bold,\n    italic,\n    underline,\n    font_size_small,\n    boundaries,\n    button,\n    button_secondary,\n    color_error,\n    hidden,\n    horizontal_bar\n};\n", "// Generated by purs version 0.15.15\nimport * as Unsafe_Coerce from \"../Unsafe.Coerce/index.js\";\nvar runExists = Unsafe_Coerce.unsafeCoerce;\nvar mkExists = Unsafe_Coerce.unsafeCoerce;\nexport {\n    mkExists,\n    runExists\n};\n", "// Generated by purs version 0.15.15\nimport * as Control_Alt from \"../Control.Alt/index.js\";\nimport * as Control_Applicative from \"../Control.Applicative/index.js\";\nimport * as Control_Apply from \"../Control.Apply/index.js\";\nimport * as Control_Bind from \"../Control.Bind/index.js\";\nimport * as Control_Category from \"../Control.Category/index.js\";\nimport * as Control_Comonad from \"../Control.Comonad/index.js\";\nimport * as Control_Extend from \"../Control.Extend/index.js\";\nimport * as Control_Plus from \"../Control.Plus/index.js\";\nimport * as Data_Distributive from \"../Data.Distributive/index.js\";\nimport * as Data_Eq from \"../Data.Eq/index.js\";\nimport * as Data_Exists from \"../Data.Exists/index.js\";\nimport * as Data_Foldable from \"../Data.Foldable/index.js\";\nimport * as Data_Functor from \"../Data.Functor/index.js\";\nimport * as Data_Functor_Invariant from \"../Data.Functor.Invariant/index.js\";\nimport * as Data_Ord from \"../Data.Ord/index.js\";\nimport * as Data_Semigroup_Foldable from \"../Data.Semigroup.Foldable/index.js\";\nimport * as Data_Semigroup_Traversable from \"../Data.Semigroup.Traversable/index.js\";\nimport * as Data_Traversable from \"../Data.Traversable/index.js\";\nvar CoyonedaF = /* #__PURE__ */ (function () {\n    function CoyonedaF(value0, value1) {\n        this.value0 = value0;\n        this.value1 = value1;\n    };\n    CoyonedaF.create = function (value0) {\n        return function (value1) {\n            return new CoyonedaF(value0, value1);\n        };\n    };\n    return CoyonedaF;\n})();\nvar Coyoneda = function (x) {\n    return x;\n};\nvar unCoyoneda = function (f) {\n    return function (v) {\n        return Data_Exists.runExists(function (v1) {\n            return f(v1.value0)(v1.value1);\n        })(v);\n    };\n};\nvar lowerCoyoneda = function (dictFunctor) {\n    return unCoyoneda(Data_Functor.map(dictFunctor));\n};\nvar foldableCoyoneda = function (dictFoldable) {\n    var foldr = Data_Foldable.foldr(dictFoldable);\n    var foldl = Data_Foldable.foldl(dictFoldable);\n    var foldMap = Data_Foldable.foldMap(dictFoldable);\n    return {\n        foldr: function (f) {\n            return function (z) {\n                return unCoyoneda(function (k) {\n                    return foldr(function ($175) {\n                        return f(k($175));\n                    })(z);\n                });\n            };\n        },\n        foldl: function (f) {\n            return function (z) {\n                return unCoyoneda(function (k) {\n                    return foldl(function (x) {\n                        var $176 = f(x);\n                        return function ($177) {\n                            return $176(k($177));\n                        };\n                    })(z);\n                });\n            };\n        },\n        foldMap: function (dictMonoid) {\n            var foldMap1 = foldMap(dictMonoid);\n            return function (f) {\n                return unCoyoneda(function (k) {\n                    return foldMap1(function ($178) {\n                        return f(k($178));\n                    });\n                });\n            };\n        }\n    };\n};\nvar foldable1Coyoneda = function (dictFoldable1) {\n    var foldMap1 = Data_Semigroup_Foldable.foldMap1(dictFoldable1);\n    var foldableCoyoneda1 = foldableCoyoneda(dictFoldable1.Foldable0());\n    return {\n        foldMap1: function (dictSemigroup) {\n            var foldMap11 = foldMap1(dictSemigroup);\n            return function (f) {\n                return unCoyoneda(function (k) {\n                    return foldMap11(function ($179) {\n                        return f(k($179));\n                    });\n                });\n            };\n        },\n        foldr1: Data_Semigroup_Foldable.foldr1Default(foldable1Coyoneda(dictFoldable1)),\n        foldl1: Data_Semigroup_Foldable.foldl1Default(foldable1Coyoneda(dictFoldable1)),\n        Foldable0: function () {\n            return foldableCoyoneda1;\n        }\n    };\n};\nvar eqCoyoneda = function (dictFunctor) {\n    var lowerCoyoneda1 = lowerCoyoneda(dictFunctor);\n    return function (dictEq1) {\n        var eq1 = Data_Eq.eq1(dictEq1);\n        return function (dictEq) {\n            var eq11 = eq1(dictEq);\n            return {\n                eq: function (x) {\n                    return function (y) {\n                        return eq11(lowerCoyoneda1(x))(lowerCoyoneda1(y));\n                    };\n                }\n            };\n        };\n    };\n};\nvar ordCoyoneda = function (dictFunctor) {\n    var lowerCoyoneda1 = lowerCoyoneda(dictFunctor);\n    var eqCoyoneda1 = eqCoyoneda(dictFunctor);\n    return function (dictOrd1) {\n        var compare1 = Data_Ord.compare1(dictOrd1);\n        var eqCoyoneda2 = eqCoyoneda1(dictOrd1.Eq10());\n        return function (dictOrd) {\n            var compare11 = compare1(dictOrd);\n            var eqCoyoneda3 = eqCoyoneda2(dictOrd.Eq0());\n            return {\n                compare: function (x) {\n                    return function (y) {\n                        return compare11(lowerCoyoneda1(x))(lowerCoyoneda1(y));\n                    };\n                },\n                Eq0: function () {\n                    return eqCoyoneda3;\n                }\n            };\n        };\n    };\n};\nvar eq1Coyoneda = function (dictFunctor) {\n    var eqCoyoneda1 = eqCoyoneda(dictFunctor);\n    return function (dictEq1) {\n        var eqCoyoneda2 = eqCoyoneda1(dictEq1);\n        return {\n            eq1: function (dictEq) {\n                return Data_Eq.eq(eqCoyoneda2(dictEq));\n            }\n        };\n    };\n};\nvar ord1Coyoneda = function (dictFunctor) {\n    var ordCoyoneda1 = ordCoyoneda(dictFunctor);\n    var eq1Coyoneda1 = eq1Coyoneda(dictFunctor);\n    return function (dictOrd1) {\n        var ordCoyoneda2 = ordCoyoneda1(dictOrd1);\n        var eq1Coyoneda2 = eq1Coyoneda1(dictOrd1.Eq10());\n        return {\n            compare1: function (dictOrd) {\n                return Data_Ord.compare(ordCoyoneda2(dictOrd));\n            },\n            Eq10: function () {\n                return eq1Coyoneda2;\n            }\n        };\n    };\n};\nvar coyoneda = function (k) {\n    return function (fi) {\n        return Data_Exists.mkExists(new CoyonedaF(k, fi));\n    };\n};\nvar functorCoyoneda = {\n    map: function (f) {\n        return function (v) {\n            return Data_Exists.runExists(function (v1) {\n                return coyoneda(function ($180) {\n                    return f(v1.value0($180));\n                })(v1.value1);\n            })(v);\n        };\n    }\n};\nvar invatiantCoyoneda = {\n    imap: /* #__PURE__ */ Data_Functor_Invariant.imapF(functorCoyoneda)\n};\nvar hoistCoyoneda = function (nat) {\n    return function (v) {\n        return Data_Exists.runExists(function (v1) {\n            return coyoneda(v1.value0)(nat(v1.value1));\n        })(v);\n    };\n};\nvar liftCoyoneda = /* #__PURE__ */ coyoneda(/* #__PURE__ */ Control_Category.identity(Control_Category.categoryFn));\nvar distributiveCoyoneda = function (dictDistributive) {\n    var collect = Data_Distributive.collect(dictDistributive);\n    var lowerCoyoneda1 = lowerCoyoneda(dictDistributive.Functor0());\n    return {\n        collect: function (dictFunctor) {\n            var collect1 = collect(dictFunctor);\n            return function (f) {\n                var $181 = collect1(function ($183) {\n                    return lowerCoyoneda1(f($183));\n                });\n                return function ($182) {\n                    return liftCoyoneda($181($182));\n                };\n            };\n        },\n        distribute: function (dictFunctor) {\n            var $184 = collect(dictFunctor)(lowerCoyoneda1);\n            return function ($185) {\n                return liftCoyoneda($184($185));\n            };\n        },\n        Functor0: function () {\n            return functorCoyoneda;\n        }\n    };\n};\nvar extendCoyoneda = function (dictExtend) {\n    var extend = Control_Extend.extend(dictExtend);\n    return {\n        extend: function (f) {\n            return function (v) {\n                return Data_Exists.runExists(function (v1) {\n                    return liftCoyoneda(extend((function () {\n                        var $186 = coyoneda(v1.value0);\n                        return function ($187) {\n                            return f($186($187));\n                        };\n                    })())(v1.value1));\n                })(v);\n            };\n        },\n        Functor0: function () {\n            return functorCoyoneda;\n        }\n    };\n};\nvar monadTransCoyoneda = {\n    lift: function (dictMonad) {\n        return liftCoyoneda;\n    }\n};\nvar traversableCoyoneda = function (dictTraversable) {\n    var traverse = Data_Traversable.traverse(dictTraversable);\n    var foldableCoyoneda1 = foldableCoyoneda(dictTraversable.Foldable1());\n    return {\n        traverse: function (dictApplicative) {\n            var map = Data_Functor.map((dictApplicative.Apply0()).Functor0());\n            var traverse1 = traverse(dictApplicative);\n            return function (f) {\n                return unCoyoneda(function (k) {\n                    var $188 = map(liftCoyoneda);\n                    var $189 = traverse1(function ($191) {\n                        return f(k($191));\n                    });\n                    return function ($190) {\n                        return $188($189($190));\n                    };\n                });\n            };\n        },\n        sequence: function (dictApplicative) {\n            var map = Data_Functor.map((dictApplicative.Apply0()).Functor0());\n            var traverse1 = traverse(dictApplicative);\n            return unCoyoneda(function (k) {\n                var $192 = map(liftCoyoneda);\n                var $193 = traverse1(k);\n                return function ($194) {\n                    return $192($193($194));\n                };\n            });\n        },\n        Functor0: function () {\n            return functorCoyoneda;\n        },\n        Foldable1: function () {\n            return foldableCoyoneda1;\n        }\n    };\n};\nvar traversable1Coyoneda = function (dictTraversable1) {\n    var traverse1 = Data_Semigroup_Traversable.traverse1(dictTraversable1);\n    var sequence1 = Data_Semigroup_Traversable.sequence1(dictTraversable1);\n    var Traversable1 = dictTraversable1.Traversable1();\n    var map = Data_Functor.map(Traversable1.Functor0());\n    var foldable1Coyoneda1 = foldable1Coyoneda(dictTraversable1.Foldable10());\n    var traversableCoyoneda1 = traversableCoyoneda(Traversable1);\n    return {\n        traverse1: function (dictApply) {\n            var map1 = Data_Functor.map(dictApply.Functor0());\n            var traverse11 = traverse1(dictApply);\n            return function (f) {\n                return unCoyoneda(function (k) {\n                    var $195 = map1(liftCoyoneda);\n                    var $196 = traverse11(function ($198) {\n                        return f(k($198));\n                    });\n                    return function ($197) {\n                        return $195($196($197));\n                    };\n                });\n            };\n        },\n        sequence1: function (dictApply) {\n            var map1 = Data_Functor.map(dictApply.Functor0());\n            var sequence11 = sequence1(dictApply);\n            return unCoyoneda(function (k) {\n                var $199 = map1(liftCoyoneda);\n                var $200 = map(k);\n                return function ($201) {\n                    return $199(sequence11($200($201)));\n                };\n            });\n        },\n        Foldable10: function () {\n            return foldable1Coyoneda1;\n        },\n        Traversable1: function () {\n            return traversableCoyoneda1;\n        }\n    };\n};\nvar comonadCoyoneda = function (dictComonad) {\n    var extract = Control_Comonad.extract(dictComonad);\n    var extendCoyoneda1 = extendCoyoneda(dictComonad.Extend0());\n    return {\n        extract: function (v) {\n            return Data_Exists.runExists(function (v1) {\n                return v1.value0(extract(v1.value1));\n            })(v);\n        },\n        Extend0: function () {\n            return extendCoyoneda1;\n        }\n    };\n};\nvar applyCoyoneda = function (dictApply) {\n    var apply = Control_Apply.apply(dictApply);\n    var lowerCoyoneda1 = lowerCoyoneda(dictApply.Functor0());\n    return {\n        apply: function (f) {\n            return function (g) {\n                return liftCoyoneda(apply(lowerCoyoneda1(f))(lowerCoyoneda1(g)));\n            };\n        },\n        Functor0: function () {\n            return functorCoyoneda;\n        }\n    };\n};\nvar bindCoyoneda = function (dictBind) {\n    var bindFlipped = Control_Bind.bindFlipped(dictBind);\n    var Apply0 = dictBind.Apply0();\n    var lowerCoyoneda1 = lowerCoyoneda(Apply0.Functor0());\n    var applyCoyoneda1 = applyCoyoneda(Apply0);\n    return {\n        bind: function (v) {\n            return function (f) {\n                return liftCoyoneda(Data_Exists.runExists(function (v1) {\n                    return bindFlipped(function ($202) {\n                        return lowerCoyoneda1(f(v1.value0($202)));\n                    })(v1.value1);\n                })(v));\n            };\n        },\n        Apply0: function () {\n            return applyCoyoneda1;\n        }\n    };\n};\nvar applicativeCoyoneda = function (dictApplicative) {\n    var applyCoyoneda1 = applyCoyoneda(dictApplicative.Apply0());\n    return {\n        pure: (function () {\n            var $203 = Control_Applicative.pure(dictApplicative);\n            return function ($204) {\n                return liftCoyoneda($203($204));\n            };\n        })(),\n        Apply0: function () {\n            return applyCoyoneda1;\n        }\n    };\n};\nvar monadCoyoneda = function (dictMonad) {\n    var applicativeCoyoneda1 = applicativeCoyoneda(dictMonad.Applicative0());\n    var bindCoyoneda1 = bindCoyoneda(dictMonad.Bind1());\n    return {\n        Applicative0: function () {\n            return applicativeCoyoneda1;\n        },\n        Bind1: function () {\n            return bindCoyoneda1;\n        }\n    };\n};\nvar altCoyoneda = function (dictAlt) {\n    var alt = Control_Alt.alt(dictAlt);\n    var lowerCoyoneda1 = lowerCoyoneda(dictAlt.Functor0());\n    return {\n        alt: function (x) {\n            return function (y) {\n                return liftCoyoneda(alt(lowerCoyoneda1(x))(lowerCoyoneda1(y)));\n            };\n        },\n        Functor0: function () {\n            return functorCoyoneda;\n        }\n    };\n};\nvar plusCoyoneda = function (dictPlus) {\n    var altCoyoneda1 = altCoyoneda(dictPlus.Alt0());\n    return {\n        empty: liftCoyoneda(Control_Plus.empty(dictPlus)),\n        Alt0: function () {\n            return altCoyoneda1;\n        }\n    };\n};\nvar alternativeCoyoneda = function (dictAlternative) {\n    var applicativeCoyoneda1 = applicativeCoyoneda(dictAlternative.Applicative0());\n    var plusCoyoneda1 = plusCoyoneda(dictAlternative.Plus1());\n    return {\n        Applicative0: function () {\n            return applicativeCoyoneda1;\n        },\n        Plus1: function () {\n            return plusCoyoneda1;\n        }\n    };\n};\nvar monadPlusCoyoneda = function (dictMonadPlus) {\n    var monadCoyoneda1 = monadCoyoneda(dictMonadPlus.Monad0());\n    var alternativeCoyoneda1 = alternativeCoyoneda(dictMonadPlus.Alternative1());\n    return {\n        Monad0: function () {\n            return monadCoyoneda1;\n        },\n        Alternative1: function () {\n            return alternativeCoyoneda1;\n        }\n    };\n};\nexport {\n    Coyoneda,\n    coyoneda,\n    unCoyoneda,\n    liftCoyoneda,\n    lowerCoyoneda,\n    hoistCoyoneda,\n    eqCoyoneda,\n    eq1Coyoneda,\n    ordCoyoneda,\n    ord1Coyoneda,\n    functorCoyoneda,\n    invatiantCoyoneda,\n    applyCoyoneda,\n    applicativeCoyoneda,\n    altCoyoneda,\n    plusCoyoneda,\n    alternativeCoyoneda,\n    bindCoyoneda,\n    monadCoyoneda,\n    monadTransCoyoneda,\n    monadPlusCoyoneda,\n    extendCoyoneda,\n    comonadCoyoneda,\n    foldableCoyoneda,\n    traversableCoyoneda,\n    foldable1Coyoneda,\n    traversable1Coyoneda,\n    distributiveCoyoneda\n};\n", "// Generated by purs version 0.15.15\nimport * as Control_Applicative from \"../Control.Applicative/index.js\";\nimport * as Control_Apply from \"../Control.Apply/index.js\";\nimport * as Control_Category from \"../Control.Category/index.js\";\nimport * as Data_Boolean from \"../Data.Boolean/index.js\";\nimport * as Data_Eq from \"../Data.Eq/index.js\";\nimport * as Data_Foldable from \"../Data.Foldable/index.js\";\nimport * as Data_FoldableWithIndex from \"../Data.FoldableWithIndex/index.js\";\nimport * as Data_Function from \"../Data.Function/index.js\";\nimport * as Data_Functor from \"../Data.Functor/index.js\";\nimport * as Data_List_Types from \"../Data.List.Types/index.js\";\nimport * as Data_Maybe from \"../Data.Maybe/index.js\";\nimport * as Data_Monoid from \"../Data.Monoid/index.js\";\nimport * as Data_Ord from \"../Data.Ord/index.js\";\nimport * as Data_Ordering from \"../Data.Ordering/index.js\";\nimport * as Data_Ring from \"../Data.Ring/index.js\";\nimport * as Data_Semigroup from \"../Data.Semigroup/index.js\";\nimport * as Data_Show from \"../Data.Show/index.js\";\nimport * as Data_Traversable from \"../Data.Traversable/index.js\";\nimport * as Data_Tuple from \"../Data.Tuple/index.js\";\nimport * as Data_Unfoldable from \"../Data.Unfoldable/index.js\";\nimport * as Data_Unit from \"../Data.Unit/index.js\";\nvar $runtime_lazy = function (name, moduleName, init) {\n    var state = 0;\n    var val;\n    return function (lineNumber) {\n        if (state === 2) return val;\n        if (state === 1) throw new ReferenceError(name + \" was needed before it finished initializing (module \" + moduleName + \", line \" + lineNumber + \")\", moduleName, lineNumber);\n        state = 1;\n        val = init();\n        state = 2;\n        return val;\n    };\n};\nvar show = /* #__PURE__ */ Data_Show.show(Data_Show.showInt);\nvar map = /* #__PURE__ */ Data_Functor.map(Data_Maybe.functorMaybe);\nvar identity = /* #__PURE__ */ Control_Category.identity(Control_Category.categoryFn);\nvar abs = /* #__PURE__ */ Data_Ord.abs(Data_Ord.ordInt)(Data_Ring.ringInt);\nvar Leaf = /* #__PURE__ */ (function () {\n    function Leaf() {\n\n    };\n    Leaf.value = new Leaf();\n    return Leaf;\n})();\nvar Node = /* #__PURE__ */ (function () {\n    function Node(value0, value1, value2, value3, value4, value5) {\n        this.value0 = value0;\n        this.value1 = value1;\n        this.value2 = value2;\n        this.value3 = value3;\n        this.value4 = value4;\n        this.value5 = value5;\n    };\n    Node.create = function (value0) {\n        return function (value1) {\n            return function (value2) {\n                return function (value3) {\n                    return function (value4) {\n                        return function (value5) {\n                            return new Node(value0, value1, value2, value3, value4, value5);\n                        };\n                    };\n                };\n            };\n        };\n    };\n    return Node;\n})();\nvar IterLeaf = /* #__PURE__ */ (function () {\n    function IterLeaf() {\n\n    };\n    IterLeaf.value = new IterLeaf();\n    return IterLeaf;\n})();\nvar IterEmit = /* #__PURE__ */ (function () {\n    function IterEmit(value0, value1, value2) {\n        this.value0 = value0;\n        this.value1 = value1;\n        this.value2 = value2;\n    };\n    IterEmit.create = function (value0) {\n        return function (value1) {\n            return function (value2) {\n                return new IterEmit(value0, value1, value2);\n            };\n        };\n    };\n    return IterEmit;\n})();\nvar IterNode = /* #__PURE__ */ (function () {\n    function IterNode(value0, value1) {\n        this.value0 = value0;\n        this.value1 = value1;\n    };\n    IterNode.create = function (value0) {\n        return function (value1) {\n            return new IterNode(value0, value1);\n        };\n    };\n    return IterNode;\n})();\nvar IterDone = /* #__PURE__ */ (function () {\n    function IterDone() {\n\n    };\n    IterDone.value = new IterDone();\n    return IterDone;\n})();\nvar IterNext = /* #__PURE__ */ (function () {\n    function IterNext(value0, value1, value2) {\n        this.value0 = value0;\n        this.value1 = value1;\n        this.value2 = value2;\n    };\n    IterNext.create = function (value0) {\n        return function (value1) {\n            return function (value2) {\n                return new IterNext(value0, value1, value2);\n            };\n        };\n    };\n    return IterNext;\n})();\nvar Split = /* #__PURE__ */ (function () {\n    function Split(value0, value1, value2) {\n        this.value0 = value0;\n        this.value1 = value1;\n        this.value2 = value2;\n    };\n    Split.create = function (value0) {\n        return function (value1) {\n            return function (value2) {\n                return new Split(value0, value1, value2);\n            };\n        };\n    };\n    return Split;\n})();\nvar SplitLast = /* #__PURE__ */ (function () {\n    function SplitLast(value0, value1, value2) {\n        this.value0 = value0;\n        this.value1 = value1;\n        this.value2 = value2;\n    };\n    SplitLast.create = function (value0) {\n        return function (value1) {\n            return function (value2) {\n                return new SplitLast(value0, value1, value2);\n            };\n        };\n    };\n    return SplitLast;\n})();\nvar unsafeNode = function (k, v, l, r) {\n    if (l instanceof Leaf) {\n        if (r instanceof Leaf) {\n            return new Node(1, 1, k, v, l, r);\n        };\n        if (r instanceof Node) {\n            return new Node(1 + r.value0 | 0, 1 + r.value1 | 0, k, v, l, r);\n        };\n        throw new Error(\"Failed pattern match at Data.Map.Internal (line 702, column 5 - line 706, column 39): \" + [ r.constructor.name ]);\n    };\n    if (l instanceof Node) {\n        if (r instanceof Leaf) {\n            return new Node(1 + l.value0 | 0, 1 + l.value1 | 0, k, v, l, r);\n        };\n        if (r instanceof Node) {\n            return new Node(1 + (function () {\n                var $280 = l.value0 > r.value0;\n                if ($280) {\n                    return l.value0;\n                };\n                return r.value0;\n            })() | 0, (1 + l.value1 | 0) + r.value1 | 0, k, v, l, r);\n        };\n        throw new Error(\"Failed pattern match at Data.Map.Internal (line 708, column 5 - line 712, column 68): \" + [ r.constructor.name ]);\n    };\n    throw new Error(\"Failed pattern match at Data.Map.Internal (line 700, column 32 - line 712, column 68): \" + [ l.constructor.name ]);\n};\nvar toMapIter = /* #__PURE__ */ (function () {\n    return Data_Function.flip(IterNode.create)(IterLeaf.value);\n})();\nvar stepWith = function (f) {\n    return function (next) {\n        return function (done) {\n            var go = function ($copy_v) {\n                var $tco_done = false;\n                var $tco_result;\n                function $tco_loop(v) {\n                    if (v instanceof IterLeaf) {\n                        $tco_done = true;\n                        return done(Data_Unit.unit);\n                    };\n                    if (v instanceof IterEmit) {\n                        $tco_done = true;\n                        return next(v.value0, v.value1, v.value2);\n                    };\n                    if (v instanceof IterNode) {\n                        $copy_v = f(v.value1)(v.value0);\n                        return;\n                    };\n                    throw new Error(\"Failed pattern match at Data.Map.Internal (line 940, column 8 - line 946, column 20): \" + [ v.constructor.name ]);\n                };\n                while (!$tco_done) {\n                    $tco_result = $tco_loop($copy_v);\n                };\n                return $tco_result;\n            };\n            return go;\n        };\n    };\n};\nvar size = function (v) {\n    if (v instanceof Leaf) {\n        return 0;\n    };\n    if (v instanceof Node) {\n        return v.value1;\n    };\n    throw new Error(\"Failed pattern match at Data.Map.Internal (line 618, column 8 - line 620, column 24): \" + [ v.constructor.name ]);\n};\nvar singleton = function (k) {\n    return function (v) {\n        return new Node(1, 1, k, v, Leaf.value, Leaf.value);\n    };\n};\nvar unsafeBalancedNode = /* #__PURE__ */ (function () {\n    var height = function (v) {\n        if (v instanceof Leaf) {\n            return 0;\n        };\n        if (v instanceof Node) {\n            return v.value0;\n        };\n        throw new Error(\"Failed pattern match at Data.Map.Internal (line 757, column 12 - line 759, column 26): \" + [ v.constructor.name ]);\n    };\n    var rotateLeft = function (k, v, l, rk, rv, rl, rr) {\n        if (rl instanceof Node && rl.value0 > height(rr)) {\n            return unsafeNode(rl.value2, rl.value3, unsafeNode(k, v, l, rl.value4), unsafeNode(rk, rv, rl.value5, rr));\n        };\n        return unsafeNode(rk, rv, unsafeNode(k, v, l, rl), rr);\n    };\n    var rotateRight = function (k, v, lk, lv, ll, lr, r) {\n        if (lr instanceof Node && height(ll) <= lr.value0) {\n            return unsafeNode(lr.value2, lr.value3, unsafeNode(lk, lv, ll, lr.value4), unsafeNode(k, v, lr.value5, r));\n        };\n        return unsafeNode(lk, lv, ll, unsafeNode(k, v, lr, r));\n    };\n    return function (k, v, l, r) {\n        if (l instanceof Leaf) {\n            if (r instanceof Leaf) {\n                return singleton(k)(v);\n            };\n            if (r instanceof Node && r.value0 > 1) {\n                return rotateLeft(k, v, l, r.value2, r.value3, r.value4, r.value5);\n            };\n            return unsafeNode(k, v, l, r);\n        };\n        if (l instanceof Node) {\n            if (r instanceof Node) {\n                if (r.value0 > (l.value0 + 1 | 0)) {\n                    return rotateLeft(k, v, l, r.value2, r.value3, r.value4, r.value5);\n                };\n                if (l.value0 > (r.value0 + 1 | 0)) {\n                    return rotateRight(k, v, l.value2, l.value3, l.value4, l.value5, r);\n                };\n            };\n            if (r instanceof Leaf && l.value0 > 1) {\n                return rotateRight(k, v, l.value2, l.value3, l.value4, l.value5, r);\n            };\n            return unsafeNode(k, v, l, r);\n        };\n        throw new Error(\"Failed pattern match at Data.Map.Internal (line 717, column 40 - line 738, column 34): \" + [ l.constructor.name ]);\n    };\n})();\nvar $lazy_unsafeSplit = /* #__PURE__ */ $runtime_lazy(\"unsafeSplit\", \"Data.Map.Internal\", function () {\n    return function (comp, k, m) {\n        if (m instanceof Leaf) {\n            return new Split(Data_Maybe.Nothing.value, Leaf.value, Leaf.value);\n        };\n        if (m instanceof Node) {\n            var v = comp(k)(m.value2);\n            if (v instanceof Data_Ordering.LT) {\n                var v1 = $lazy_unsafeSplit(793)(comp, k, m.value4);\n                return new Split(v1.value0, v1.value1, unsafeBalancedNode(m.value2, m.value3, v1.value2, m.value5));\n            };\n            if (v instanceof Data_Ordering.GT) {\n                var v1 = $lazy_unsafeSplit(796)(comp, k, m.value5);\n                return new Split(v1.value0, unsafeBalancedNode(m.value2, m.value3, m.value4, v1.value1), v1.value2);\n            };\n            if (v instanceof Data_Ordering.EQ) {\n                return new Split(new Data_Maybe.Just(m.value3), m.value4, m.value5);\n            };\n            throw new Error(\"Failed pattern match at Data.Map.Internal (line 791, column 5 - line 799, column 30): \" + [ v.constructor.name ]);\n        };\n        throw new Error(\"Failed pattern match at Data.Map.Internal (line 787, column 34 - line 799, column 30): \" + [ m.constructor.name ]);\n    };\n});\nvar unsafeSplit = /* #__PURE__ */ $lazy_unsafeSplit(786);\nvar $lazy_unsafeSplitLast = /* #__PURE__ */ $runtime_lazy(\"unsafeSplitLast\", \"Data.Map.Internal\", function () {\n    return function (k, v, l, r) {\n        if (r instanceof Leaf) {\n            return new SplitLast(k, v, l);\n        };\n        if (r instanceof Node) {\n            var v1 = $lazy_unsafeSplitLast(779)(r.value2, r.value3, r.value4, r.value5);\n            return new SplitLast(v1.value0, v1.value1, unsafeBalancedNode(k, v, l, v1.value2));\n        };\n        throw new Error(\"Failed pattern match at Data.Map.Internal (line 776, column 37 - line 780, column 57): \" + [ r.constructor.name ]);\n    };\n});\nvar unsafeSplitLast = /* #__PURE__ */ $lazy_unsafeSplitLast(775);\nvar unsafeJoinNodes = function (v, v1) {\n    if (v instanceof Leaf) {\n        return v1;\n    };\n    if (v instanceof Node) {\n        var v2 = unsafeSplitLast(v.value2, v.value3, v.value4, v.value5);\n        return unsafeBalancedNode(v2.value0, v2.value1, v2.value2, v1);\n    };\n    throw new Error(\"Failed pattern match at Data.Map.Internal (line 764, column 25 - line 768, column 38): \" + [ v.constructor.name, v1.constructor.name ]);\n};\nvar $lazy_unsafeDifference = /* #__PURE__ */ $runtime_lazy(\"unsafeDifference\", \"Data.Map.Internal\", function () {\n    return function (comp, l, r) {\n        if (l instanceof Leaf) {\n            return Leaf.value;\n        };\n        if (r instanceof Leaf) {\n            return l;\n        };\n        if (r instanceof Node) {\n            var v = unsafeSplit(comp, r.value2, l);\n            var l$prime = $lazy_unsafeDifference(841)(comp, v.value1, r.value4);\n            var r$prime = $lazy_unsafeDifference(842)(comp, v.value2, r.value5);\n            return unsafeJoinNodes(l$prime, r$prime);\n        };\n        throw new Error(\"Failed pattern match at Data.Map.Internal (line 836, column 39 - line 843, column 33): \" + [ l.constructor.name, r.constructor.name ]);\n    };\n});\nvar unsafeDifference = /* #__PURE__ */ $lazy_unsafeDifference(835);\nvar $lazy_unsafeIntersectionWith = /* #__PURE__ */ $runtime_lazy(\"unsafeIntersectionWith\", \"Data.Map.Internal\", function () {\n    return function (comp, app, l, r) {\n        if (l instanceof Leaf) {\n            return Leaf.value;\n        };\n        if (r instanceof Leaf) {\n            return Leaf.value;\n        };\n        if (r instanceof Node) {\n            var v = unsafeSplit(comp, r.value2, l);\n            var l$prime = $lazy_unsafeIntersectionWith(825)(comp, app, v.value1, r.value4);\n            var r$prime = $lazy_unsafeIntersectionWith(826)(comp, app, v.value2, r.value5);\n            if (v.value0 instanceof Data_Maybe.Just) {\n                return unsafeBalancedNode(r.value2, app(v.value0.value0)(r.value3), l$prime, r$prime);\n            };\n            if (v.value0 instanceof Data_Maybe.Nothing) {\n                return unsafeJoinNodes(l$prime, r$prime);\n            };\n            throw new Error(\"Failed pattern match at Data.Map.Internal (line 827, column 5 - line 831, column 37): \" + [ v.value0.constructor.name ]);\n        };\n        throw new Error(\"Failed pattern match at Data.Map.Internal (line 820, column 49 - line 831, column 37): \" + [ l.constructor.name, r.constructor.name ]);\n    };\n});\nvar unsafeIntersectionWith = /* #__PURE__ */ $lazy_unsafeIntersectionWith(819);\nvar $lazy_unsafeUnionWith = /* #__PURE__ */ $runtime_lazy(\"unsafeUnionWith\", \"Data.Map.Internal\", function () {\n    return function (comp, app, l, r) {\n        if (l instanceof Leaf) {\n            return r;\n        };\n        if (r instanceof Leaf) {\n            return l;\n        };\n        if (r instanceof Node) {\n            var v = unsafeSplit(comp, r.value2, l);\n            var l$prime = $lazy_unsafeUnionWith(809)(comp, app, v.value1, r.value4);\n            var r$prime = $lazy_unsafeUnionWith(810)(comp, app, v.value2, r.value5);\n            if (v.value0 instanceof Data_Maybe.Just) {\n                return unsafeBalancedNode(r.value2, app(v.value0.value0)(r.value3), l$prime, r$prime);\n            };\n            if (v.value0 instanceof Data_Maybe.Nothing) {\n                return unsafeBalancedNode(r.value2, r.value3, l$prime, r$prime);\n            };\n            throw new Error(\"Failed pattern match at Data.Map.Internal (line 811, column 5 - line 815, column 46): \" + [ v.value0.constructor.name ]);\n        };\n        throw new Error(\"Failed pattern match at Data.Map.Internal (line 804, column 42 - line 815, column 46): \" + [ l.constructor.name, r.constructor.name ]);\n    };\n});\nvar unsafeUnionWith = /* #__PURE__ */ $lazy_unsafeUnionWith(803);\nvar unionWith = function (dictOrd) {\n    var compare = Data_Ord.compare(dictOrd);\n    return function (app) {\n        return function (m1) {\n            return function (m2) {\n                return unsafeUnionWith(compare, app, m1, m2);\n            };\n        };\n    };\n};\nvar union = function (dictOrd) {\n    return unionWith(dictOrd)(Data_Function[\"const\"]);\n};\nvar update = function (dictOrd) {\n    var compare = Data_Ord.compare(dictOrd);\n    return function (f) {\n        return function (k) {\n            var go = function (v) {\n                if (v instanceof Leaf) {\n                    return Leaf.value;\n                };\n                if (v instanceof Node) {\n                    var v1 = compare(k)(v.value2);\n                    if (v1 instanceof Data_Ordering.LT) {\n                        return unsafeBalancedNode(v.value2, v.value3, go(v.value4), v.value5);\n                    };\n                    if (v1 instanceof Data_Ordering.GT) {\n                        return unsafeBalancedNode(v.value2, v.value3, v.value4, go(v.value5));\n                    };\n                    if (v1 instanceof Data_Ordering.EQ) {\n                        var v2 = f(v.value3);\n                        if (v2 instanceof Data_Maybe.Nothing) {\n                            return unsafeJoinNodes(v.value4, v.value5);\n                        };\n                        if (v2 instanceof Data_Maybe.Just) {\n                            return new Node(v.value0, v.value1, v.value2, v2.value0, v.value4, v.value5);\n                        };\n                        throw new Error(\"Failed pattern match at Data.Map.Internal (line 531, column 11 - line 535, column 38): \" + [ v2.constructor.name ]);\n                    };\n                    throw new Error(\"Failed pattern match at Data.Map.Internal (line 527, column 7 - line 535, column 38): \" + [ v1.constructor.name ]);\n                };\n                throw new Error(\"Failed pattern match at Data.Map.Internal (line 524, column 8 - line 535, column 38): \" + [ v.constructor.name ]);\n            };\n            return go;\n        };\n    };\n};\nvar showTree = function (dictShow) {\n    var show1 = Data_Show.show(dictShow);\n    return function (dictShow1) {\n        var show2 = Data_Show.show(dictShow1);\n        var go = function (ind) {\n            return function (v) {\n                if (v instanceof Leaf) {\n                    return ind + \"Leaf\";\n                };\n                if (v instanceof Node) {\n                    return ind + (\"[\" + (show(v.value0) + (\"] \" + (show1(v.value2) + (\" => \" + (show2(v.value3) + \"\\x0a\")))))) + (go(ind + \"    \")(v.value4) + \"\\x0a\" + go(ind + \"    \")(v.value5));\n                };\n                throw new Error(\"Failed pattern match at Data.Map.Internal (line 233, column 12 - line 238, column 34): \" + [ v.constructor.name ]);\n            };\n        };\n        return go(\"\");\n    };\n};\nvar semigroupMap = function () {\n    return function (dictOrd) {\n        var unionWith1 = unionWith(dictOrd);\n        return function (dictSemigroup) {\n            return {\n                append: unionWith1(Data_Semigroup.append(dictSemigroup))\n            };\n        };\n    };\n};\nvar semigroupMap1 = /* #__PURE__ */ semigroupMap();\nvar pop = function (dictOrd) {\n    var compare = Data_Ord.compare(dictOrd);\n    return function (k) {\n        return function (m) {\n            var v = unsafeSplit(compare, k, m);\n            return map(function (a) {\n                return new Data_Tuple.Tuple(a, unsafeJoinNodes(v.value1, v.value2));\n            })(v.value0);\n        };\n    };\n};\nvar member = function (dictOrd) {\n    var compare = Data_Ord.compare(dictOrd);\n    return function (k) {\n        var go = function ($copy_v) {\n            var $tco_done = false;\n            var $tco_result;\n            function $tco_loop(v) {\n                if (v instanceof Leaf) {\n                    $tco_done = true;\n                    return false;\n                };\n                if (v instanceof Node) {\n                    var v1 = compare(k)(v.value2);\n                    if (v1 instanceof Data_Ordering.LT) {\n                        $copy_v = v.value4;\n                        return;\n                    };\n                    if (v1 instanceof Data_Ordering.GT) {\n                        $copy_v = v.value5;\n                        return;\n                    };\n                    if (v1 instanceof Data_Ordering.EQ) {\n                        $tco_done = true;\n                        return true;\n                    };\n                    throw new Error(\"Failed pattern match at Data.Map.Internal (line 459, column 7 - line 462, column 19): \" + [ v1.constructor.name ]);\n                };\n                throw new Error(\"Failed pattern match at Data.Map.Internal (line 456, column 8 - line 462, column 19): \" + [ v.constructor.name ]);\n            };\n            while (!$tco_done) {\n                $tco_result = $tco_loop($copy_v);\n            };\n            return $tco_result;\n        };\n        return go;\n    };\n};\nvar mapMaybeWithKey = function (dictOrd) {\n    return function (f) {\n        var go = function (v) {\n            if (v instanceof Leaf) {\n                return Leaf.value;\n            };\n            if (v instanceof Node) {\n                var v2 = f(v.value2)(v.value3);\n                if (v2 instanceof Data_Maybe.Just) {\n                    return unsafeBalancedNode(v.value2, v2.value0, go(v.value4), go(v.value5));\n                };\n                if (v2 instanceof Data_Maybe.Nothing) {\n                    return unsafeJoinNodes(go(v.value4), go(v.value5));\n                };\n                throw new Error(\"Failed pattern match at Data.Map.Internal (line 661, column 7 - line 665, column 47): \" + [ v2.constructor.name ]);\n            };\n            throw new Error(\"Failed pattern match at Data.Map.Internal (line 658, column 8 - line 665, column 47): \" + [ v.constructor.name ]);\n        };\n        return go;\n    };\n};\nvar mapMaybe = function (dictOrd) {\n    var $780 = mapMaybeWithKey(dictOrd);\n    return function ($781) {\n        return $780(Data_Function[\"const\"]($781));\n    };\n};\nvar lookupLE = function (dictOrd) {\n    var compare = Data_Ord.compare(dictOrd);\n    return function (k) {\n        var go = function (v) {\n            if (v instanceof Leaf) {\n                return Data_Maybe.Nothing.value;\n            };\n            if (v instanceof Node) {\n                var v1 = compare(k)(v.value2);\n                if (v1 instanceof Data_Ordering.LT) {\n                    return go(v.value4);\n                };\n                if (v1 instanceof Data_Ordering.GT) {\n                    var v2 = go(v.value5);\n                    if (v2 instanceof Data_Maybe.Nothing) {\n                        return new Data_Maybe.Just({\n                            key: v.value2,\n                            value: v.value3\n                        });\n                    };\n                    return v2;\n                };\n                if (v1 instanceof Data_Ordering.EQ) {\n                    return new Data_Maybe.Just({\n                        key: v.value2,\n                        value: v.value3\n                    });\n                };\n                throw new Error(\"Failed pattern match at Data.Map.Internal (line 295, column 7 - line 302, column 38): \" + [ v1.constructor.name ]);\n            };\n            throw new Error(\"Failed pattern match at Data.Map.Internal (line 292, column 8 - line 302, column 38): \" + [ v.constructor.name ]);\n        };\n        return go;\n    };\n};\nvar lookupGE = function (dictOrd) {\n    var compare = Data_Ord.compare(dictOrd);\n    return function (k) {\n        var go = function (v) {\n            if (v instanceof Leaf) {\n                return Data_Maybe.Nothing.value;\n            };\n            if (v instanceof Node) {\n                var v1 = compare(k)(v.value2);\n                if (v1 instanceof Data_Ordering.LT) {\n                    var v2 = go(v.value4);\n                    if (v2 instanceof Data_Maybe.Nothing) {\n                        return new Data_Maybe.Just({\n                            key: v.value2,\n                            value: v.value3\n                        });\n                    };\n                    return v2;\n                };\n                if (v1 instanceof Data_Ordering.GT) {\n                    return go(v.value5);\n                };\n                if (v1 instanceof Data_Ordering.EQ) {\n                    return new Data_Maybe.Just({\n                        key: v.value2,\n                        value: v.value3\n                    });\n                };\n                throw new Error(\"Failed pattern match at Data.Map.Internal (line 327, column 7 - line 333, column 42): \" + [ v1.constructor.name ]);\n            };\n            throw new Error(\"Failed pattern match at Data.Map.Internal (line 324, column 8 - line 333, column 42): \" + [ v.constructor.name ]);\n        };\n        return go;\n    };\n};\nvar lookup = function (dictOrd) {\n    var compare = Data_Ord.compare(dictOrd);\n    return function (k) {\n        var go = function ($copy_v) {\n            var $tco_done = false;\n            var $tco_result;\n            function $tco_loop(v) {\n                if (v instanceof Leaf) {\n                    $tco_done = true;\n                    return Data_Maybe.Nothing.value;\n                };\n                if (v instanceof Node) {\n                    var v1 = compare(k)(v.value2);\n                    if (v1 instanceof Data_Ordering.LT) {\n                        $copy_v = v.value4;\n                        return;\n                    };\n                    if (v1 instanceof Data_Ordering.GT) {\n                        $copy_v = v.value5;\n                        return;\n                    };\n                    if (v1 instanceof Data_Ordering.EQ) {\n                        $tco_done = true;\n                        return new Data_Maybe.Just(v.value3);\n                    };\n                    throw new Error(\"Failed pattern match at Data.Map.Internal (line 283, column 7 - line 286, column 22): \" + [ v1.constructor.name ]);\n                };\n                throw new Error(\"Failed pattern match at Data.Map.Internal (line 280, column 8 - line 286, column 22): \" + [ v.constructor.name ]);\n            };\n            while (!$tco_done) {\n                $tco_result = $tco_loop($copy_v);\n            };\n            return $tco_result;\n        };\n        return go;\n    };\n};\nvar iterMapU = function (iter) {\n    return function (v) {\n        if (v instanceof Leaf) {\n            return iter;\n        };\n        if (v instanceof Node) {\n            if (v.value4 instanceof Leaf) {\n                if (v.value5 instanceof Leaf) {\n                    return new IterEmit(v.value2, v.value3, iter);\n                };\n                return new IterEmit(v.value2, v.value3, new IterNode(v.value5, iter));\n            };\n            if (v.value5 instanceof Leaf) {\n                return new IterEmit(v.value2, v.value3, new IterNode(v.value4, iter));\n            };\n            return new IterEmit(v.value2, v.value3, new IterNode(v.value4, new IterNode(v.value5, iter)));\n        };\n        throw new Error(\"Failed pattern match at Data.Map.Internal (line 973, column 17 - line 988, column 56): \" + [ v.constructor.name ]);\n    };\n};\nvar stepUnorderedCps = /* #__PURE__ */ stepWith(iterMapU);\nvar stepUnfoldrUnordered = /* #__PURE__ */ (function () {\n    var step = function (k, v, next) {\n        return new Data_Maybe.Just(new Data_Tuple.Tuple(new Data_Tuple.Tuple(k, v), next));\n    };\n    return stepUnorderedCps(step)(function (v) {\n        return Data_Maybe.Nothing.value;\n    });\n})();\nvar toUnfoldableUnordered = function (dictUnfoldable) {\n    var $782 = Data_Unfoldable.unfoldr(dictUnfoldable)(stepUnfoldrUnordered);\n    return function ($783) {\n        return $782(toMapIter($783));\n    };\n};\nvar stepUnordered = /* #__PURE__ */ (function () {\n    return stepUnorderedCps(function (k, v, next) {\n        return new IterNext(k, v, next);\n    })(Data_Function[\"const\"](IterDone.value));\n})();\nvar iterMapR = /* #__PURE__ */ (function () {\n    var go = function ($copy_iter) {\n        return function ($copy_v) {\n            var $tco_var_iter = $copy_iter;\n            var $tco_done = false;\n            var $tco_result;\n            function $tco_loop(iter, v) {\n                if (v instanceof Leaf) {\n                    $tco_done = true;\n                    return iter;\n                };\n                if (v instanceof Node) {\n                    if (v.value5 instanceof Leaf) {\n                        $tco_var_iter = new IterEmit(v.value2, v.value3, iter);\n                        $copy_v = v.value4;\n                        return;\n                    };\n                    $tco_var_iter = new IterEmit(v.value2, v.value3, new IterNode(v.value4, iter));\n                    $copy_v = v.value5;\n                    return;\n                };\n                throw new Error(\"Failed pattern match at Data.Map.Internal (line 963, column 13 - line 970, column 48): \" + [ v.constructor.name ]);\n            };\n            while (!$tco_done) {\n                $tco_result = $tco_loop($tco_var_iter, $copy_v);\n            };\n            return $tco_result;\n        };\n    };\n    return go;\n})();\nvar stepDescCps = /* #__PURE__ */ stepWith(iterMapR);\nvar stepDesc = /* #__PURE__ */ (function () {\n    return stepDescCps(function (k, v, next) {\n        return new IterNext(k, v, next);\n    })(Data_Function[\"const\"](IterDone.value));\n})();\nvar iterMapL = /* #__PURE__ */ (function () {\n    var go = function ($copy_iter) {\n        return function ($copy_v) {\n            var $tco_var_iter = $copy_iter;\n            var $tco_done = false;\n            var $tco_result;\n            function $tco_loop(iter, v) {\n                if (v instanceof Leaf) {\n                    $tco_done = true;\n                    return iter;\n                };\n                if (v instanceof Node) {\n                    if (v.value5 instanceof Leaf) {\n                        $tco_var_iter = new IterEmit(v.value2, v.value3, iter);\n                        $copy_v = v.value4;\n                        return;\n                    };\n                    $tco_var_iter = new IterEmit(v.value2, v.value3, new IterNode(v.value5, iter));\n                    $copy_v = v.value4;\n                    return;\n                };\n                throw new Error(\"Failed pattern match at Data.Map.Internal (line 951, column 13 - line 958, column 48): \" + [ v.constructor.name ]);\n            };\n            while (!$tco_done) {\n                $tco_result = $tco_loop($tco_var_iter, $copy_v);\n            };\n            return $tco_result;\n        };\n    };\n    return go;\n})();\nvar stepAscCps = /* #__PURE__ */ stepWith(iterMapL);\nvar stepAsc = /* #__PURE__ */ (function () {\n    return stepAscCps(function (k, v, next) {\n        return new IterNext(k, v, next);\n    })(Data_Function[\"const\"](IterDone.value));\n})();\nvar eqMapIter = function (dictEq) {\n    var eq1 = Data_Eq.eq(dictEq);\n    return function (dictEq1) {\n        var eq2 = Data_Eq.eq(dictEq1);\n        return {\n            eq: (function () {\n                var go = function ($copy_a) {\n                    return function ($copy_b) {\n                        var $tco_var_a = $copy_a;\n                        var $tco_done = false;\n                        var $tco_result;\n                        function $tco_loop(a, b) {\n                            var v = stepAsc(a);\n                            if (v instanceof IterNext) {\n                                var v2 = stepAsc(b);\n                                if (v2 instanceof IterNext && (eq1(v.value0)(v2.value0) && eq2(v.value1)(v2.value1))) {\n                                    $tco_var_a = v.value2;\n                                    $copy_b = v2.value2;\n                                    return;\n                                };\n                                $tco_done = true;\n                                return false;\n                            };\n                            if (v instanceof IterDone) {\n                                $tco_done = true;\n                                return true;\n                            };\n                            throw new Error(\"Failed pattern match at Data.Map.Internal (line 859, column 14 - line 868, column 13): \" + [ v.constructor.name ]);\n                        };\n                        while (!$tco_done) {\n                            $tco_result = $tco_loop($tco_var_a, $copy_b);\n                        };\n                        return $tco_result;\n                    };\n                };\n                return go;\n            })()\n        };\n    };\n};\nvar ordMapIter = function (dictOrd) {\n    var compare = Data_Ord.compare(dictOrd);\n    var eqMapIter1 = eqMapIter(dictOrd.Eq0());\n    return function (dictOrd1) {\n        var compare1 = Data_Ord.compare(dictOrd1);\n        var eqMapIter2 = eqMapIter1(dictOrd1.Eq0());\n        return {\n            compare: (function () {\n                var go = function ($copy_a) {\n                    return function ($copy_b) {\n                        var $tco_var_a = $copy_a;\n                        var $tco_done = false;\n                        var $tco_result;\n                        function $tco_loop(a, b) {\n                            var v = stepAsc(b);\n                            var v1 = stepAsc(a);\n                            if (v1 instanceof IterNext && v instanceof IterNext) {\n                                var v3 = compare(v1.value0)(v.value0);\n                                if (v3 instanceof Data_Ordering.EQ) {\n                                    var v4 = compare1(v1.value1)(v.value1);\n                                    if (v4 instanceof Data_Ordering.EQ) {\n                                        $tco_var_a = v1.value2;\n                                        $copy_b = v.value2;\n                                        return;\n                                    };\n                                    $tco_done = true;\n                                    return v4;\n                                };\n                                $tco_done = true;\n                                return v3;\n                            };\n                            if (v1 instanceof IterDone) {\n                                if (v instanceof IterDone) {\n                                    $tco_done = true;\n                                    return Data_Ordering.EQ.value;\n                                };\n                                $tco_done = true;\n                                return Data_Ordering.LT.value;\n                            };\n                            if (v instanceof IterDone) {\n                                $tco_done = true;\n                                return Data_Ordering.GT.value;\n                            };\n                            throw new Error(\"Failed pattern match at Data.Map.Internal (line 873, column 14 - line 891, column 11): \" + [ v1.constructor.name, v.constructor.name ]);\n                        };\n                        while (!$tco_done) {\n                            $tco_result = $tco_loop($tco_var_a, $copy_b);\n                        };\n                        return $tco_result;\n                    };\n                };\n                return go;\n            })(),\n            Eq0: function () {\n                return eqMapIter2;\n            }\n        };\n    };\n};\nvar stepUnfoldr = /* #__PURE__ */ (function () {\n    var step = function (k, v, next) {\n        return new Data_Maybe.Just(new Data_Tuple.Tuple(new Data_Tuple.Tuple(k, v), next));\n    };\n    return stepAscCps(step)(function (v) {\n        return Data_Maybe.Nothing.value;\n    });\n})();\nvar toUnfoldable = function (dictUnfoldable) {\n    var $784 = Data_Unfoldable.unfoldr(dictUnfoldable)(stepUnfoldr);\n    return function ($785) {\n        return $784(toMapIter($785));\n    };\n};\nvar toUnfoldable1 = /* #__PURE__ */ toUnfoldable(Data_Unfoldable.unfoldableArray);\nvar showMap = function (dictShow) {\n    var showTuple = Data_Tuple.showTuple(dictShow);\n    return function (dictShow1) {\n        var show1 = Data_Show.show(Data_Show.showArray(showTuple(dictShow1)));\n        return {\n            show: function (as) {\n                return \"(fromFoldable \" + (show1(toUnfoldable1(as)) + \")\");\n            }\n        };\n    };\n};\nvar isSubmap = function (dictOrd) {\n    var lookup1 = lookup(dictOrd);\n    return function (dictEq) {\n        var eq1 = Data_Eq.eq(dictEq);\n        var go = function (m1) {\n            return function (m2) {\n                if (m1 instanceof Leaf) {\n                    return true;\n                };\n                if (m1 instanceof Node) {\n                    var v1 = lookup1(m1.value2)(m2);\n                    if (v1 instanceof Data_Maybe.Nothing) {\n                        return false;\n                    };\n                    if (v1 instanceof Data_Maybe.Just) {\n                        return eq1(m1.value3)(v1.value0) && (go(m1.value4)(m2) && go(m1.value5)(m2));\n                    };\n                    throw new Error(\"Failed pattern match at Data.Map.Internal (line 611, column 7 - line 614, column 40): \" + [ v1.constructor.name ]);\n                };\n                throw new Error(\"Failed pattern match at Data.Map.Internal (line 608, column 14 - line 614, column 40): \" + [ m1.constructor.name ]);\n            };\n        };\n        return go;\n    };\n};\nvar isEmpty = function (v) {\n    if (v instanceof Leaf) {\n        return true;\n    };\n    return false;\n};\nvar intersectionWith = function (dictOrd) {\n    var compare = Data_Ord.compare(dictOrd);\n    return function (app) {\n        return function (m1) {\n            return function (m2) {\n                return unsafeIntersectionWith(compare, app, m1, m2);\n            };\n        };\n    };\n};\nvar intersection = function (dictOrd) {\n    return intersectionWith(dictOrd)(Data_Function[\"const\"]);\n};\nvar insertWith = function (dictOrd) {\n    var compare = Data_Ord.compare(dictOrd);\n    return function (app) {\n        return function (k) {\n            return function (v) {\n                var go = function (v1) {\n                    if (v1 instanceof Leaf) {\n                        return singleton(k)(v);\n                    };\n                    if (v1 instanceof Node) {\n                        var v2 = compare(k)(v1.value2);\n                        if (v2 instanceof Data_Ordering.LT) {\n                            return unsafeBalancedNode(v1.value2, v1.value3, go(v1.value4), v1.value5);\n                        };\n                        if (v2 instanceof Data_Ordering.GT) {\n                            return unsafeBalancedNode(v1.value2, v1.value3, v1.value4, go(v1.value5));\n                        };\n                        if (v2 instanceof Data_Ordering.EQ) {\n                            return new Node(v1.value0, v1.value1, k, app(v1.value3)(v), v1.value4, v1.value5);\n                        };\n                        throw new Error(\"Failed pattern match at Data.Map.Internal (line 486, column 7 - line 489, column 44): \" + [ v2.constructor.name ]);\n                    };\n                    throw new Error(\"Failed pattern match at Data.Map.Internal (line 483, column 8 - line 489, column 44): \" + [ v1.constructor.name ]);\n                };\n                return go;\n            };\n        };\n    };\n};\nvar insert = function (dictOrd) {\n    var compare = Data_Ord.compare(dictOrd);\n    return function (k) {\n        return function (v) {\n            var go = function (v1) {\n                if (v1 instanceof Leaf) {\n                    return singleton(k)(v);\n                };\n                if (v1 instanceof Node) {\n                    var v2 = compare(k)(v1.value2);\n                    if (v2 instanceof Data_Ordering.LT) {\n                        return unsafeBalancedNode(v1.value2, v1.value3, go(v1.value4), v1.value5);\n                    };\n                    if (v2 instanceof Data_Ordering.GT) {\n                        return unsafeBalancedNode(v1.value2, v1.value3, v1.value4, go(v1.value5));\n                    };\n                    if (v2 instanceof Data_Ordering.EQ) {\n                        return new Node(v1.value0, v1.value1, k, v, v1.value4, v1.value5);\n                    };\n                    throw new Error(\"Failed pattern match at Data.Map.Internal (line 471, column 7 - line 474, column 35): \" + [ v2.constructor.name ]);\n                };\n                throw new Error(\"Failed pattern match at Data.Map.Internal (line 468, column 8 - line 474, column 35): \" + [ v1.constructor.name ]);\n            };\n            return go;\n        };\n    };\n};\nvar functorMap = {\n    map: function (f) {\n        var go = function (v) {\n            if (v instanceof Leaf) {\n                return Leaf.value;\n            };\n            if (v instanceof Node) {\n                return new Node(v.value0, v.value1, v.value2, f(v.value3), go(v.value4), go(v.value5));\n            };\n            throw new Error(\"Failed pattern match at Data.Map.Internal (line 147, column 10 - line 150, column 39): \" + [ v.constructor.name ]);\n        };\n        return go;\n    }\n};\nvar functorWithIndexMap = {\n    mapWithIndex: function (f) {\n        var go = function (v) {\n            if (v instanceof Leaf) {\n                return Leaf.value;\n            };\n            if (v instanceof Node) {\n                return new Node(v.value0, v.value1, v.value2, f(v.value2)(v.value3), go(v.value4), go(v.value5));\n            };\n            throw new Error(\"Failed pattern match at Data.Map.Internal (line 155, column 10 - line 158, column 41): \" + [ v.constructor.name ]);\n        };\n        return go;\n    },\n    Functor0: function () {\n        return functorMap;\n    }\n};\nvar foldableMap = {\n    foldr: function (f) {\n        return function (z) {\n            var $lazy_go = $runtime_lazy(\"go\", \"Data.Map.Internal\", function () {\n                return function (m$prime, z$prime) {\n                    if (m$prime instanceof Leaf) {\n                        return z$prime;\n                    };\n                    if (m$prime instanceof Node) {\n                        return $lazy_go(172)(m$prime.value4, f(m$prime.value3)($lazy_go(172)(m$prime.value5, z$prime)));\n                    };\n                    throw new Error(\"Failed pattern match at Data.Map.Internal (line 169, column 26 - line 172, column 43): \" + [ m$prime.constructor.name ]);\n                };\n            });\n            var go = $lazy_go(169);\n            return function (m) {\n                return go(m, z);\n            };\n        };\n    },\n    foldl: function (f) {\n        return function (z) {\n            var $lazy_go = $runtime_lazy(\"go\", \"Data.Map.Internal\", function () {\n                return function (z$prime, m$prime) {\n                    if (m$prime instanceof Leaf) {\n                        return z$prime;\n                    };\n                    if (m$prime instanceof Node) {\n                        return $lazy_go(178)(f($lazy_go(178)(z$prime, m$prime.value4))(m$prime.value3), m$prime.value5);\n                    };\n                    throw new Error(\"Failed pattern match at Data.Map.Internal (line 175, column 26 - line 178, column 43): \" + [ m$prime.constructor.name ]);\n                };\n            });\n            var go = $lazy_go(175);\n            return function (m) {\n                return go(z, m);\n            };\n        };\n    },\n    foldMap: function (dictMonoid) {\n        var mempty = Data_Monoid.mempty(dictMonoid);\n        var append1 = Data_Semigroup.append(dictMonoid.Semigroup0());\n        return function (f) {\n            var go = function (v) {\n                if (v instanceof Leaf) {\n                    return mempty;\n                };\n                if (v instanceof Node) {\n                    return append1(go(v.value4))(append1(f(v.value3))(go(v.value5)));\n                };\n                throw new Error(\"Failed pattern match at Data.Map.Internal (line 181, column 10 - line 184, column 28): \" + [ v.constructor.name ]);\n            };\n            return go;\n        };\n    }\n};\nvar foldableWithIndexMap = {\n    foldrWithIndex: function (f) {\n        return function (z) {\n            var $lazy_go = $runtime_lazy(\"go\", \"Data.Map.Internal\", function () {\n                return function (m$prime, z$prime) {\n                    if (m$prime instanceof Leaf) {\n                        return z$prime;\n                    };\n                    if (m$prime instanceof Node) {\n                        return $lazy_go(192)(m$prime.value4, f(m$prime.value2)(m$prime.value3)($lazy_go(192)(m$prime.value5, z$prime)));\n                    };\n                    throw new Error(\"Failed pattern match at Data.Map.Internal (line 189, column 26 - line 192, column 45): \" + [ m$prime.constructor.name ]);\n                };\n            });\n            var go = $lazy_go(189);\n            return function (m) {\n                return go(m, z);\n            };\n        };\n    },\n    foldlWithIndex: function (f) {\n        return function (z) {\n            var $lazy_go = $runtime_lazy(\"go\", \"Data.Map.Internal\", function () {\n                return function (z$prime, m$prime) {\n                    if (m$prime instanceof Leaf) {\n                        return z$prime;\n                    };\n                    if (m$prime instanceof Node) {\n                        return $lazy_go(198)(f(m$prime.value2)($lazy_go(198)(z$prime, m$prime.value4))(m$prime.value3), m$prime.value5);\n                    };\n                    throw new Error(\"Failed pattern match at Data.Map.Internal (line 195, column 26 - line 198, column 45): \" + [ m$prime.constructor.name ]);\n                };\n            });\n            var go = $lazy_go(195);\n            return function (m) {\n                return go(z, m);\n            };\n        };\n    },\n    foldMapWithIndex: function (dictMonoid) {\n        var mempty = Data_Monoid.mempty(dictMonoid);\n        var append1 = Data_Semigroup.append(dictMonoid.Semigroup0());\n        return function (f) {\n            var go = function (v) {\n                if (v instanceof Leaf) {\n                    return mempty;\n                };\n                if (v instanceof Node) {\n                    return append1(go(v.value4))(append1(f(v.value2)(v.value3))(go(v.value5)));\n                };\n                throw new Error(\"Failed pattern match at Data.Map.Internal (line 201, column 10 - line 204, column 30): \" + [ v.constructor.name ]);\n            };\n            return go;\n        };\n    },\n    Foldable0: function () {\n        return foldableMap;\n    }\n};\nvar keys = /* #__PURE__ */ (function () {\n    return Data_FoldableWithIndex.foldrWithIndex(foldableWithIndexMap)(function (k) {\n        return function (v) {\n            return function (acc) {\n                return new Data_List_Types.Cons(k, acc);\n            };\n        };\n    })(Data_List_Types.Nil.value);\n})();\nvar traversableMap = {\n    traverse: function (dictApplicative) {\n        var pure = Control_Applicative.pure(dictApplicative);\n        var Apply0 = dictApplicative.Apply0();\n        var apply = Control_Apply.apply(Apply0);\n        var map1 = Data_Functor.map(Apply0.Functor0());\n        return function (f) {\n            var go = function (v) {\n                if (v instanceof Leaf) {\n                    return pure(Leaf.value);\n                };\n                if (v instanceof Node) {\n                    return apply(apply(map1(function (l$prime) {\n                        return function (v$prime) {\n                            return function (r$prime) {\n                                return new Node(v.value0, v.value1, v.value2, v$prime, l$prime, r$prime);\n                            };\n                        };\n                    })(go(v.value4)))(f(v.value3)))(go(v.value5));\n                };\n                throw new Error(\"Failed pattern match at Data.Map.Internal (line 209, column 10 - line 215, column 19): \" + [ v.constructor.name ]);\n            };\n            return go;\n        };\n    },\n    sequence: function (dictApplicative) {\n        return Data_Traversable.traverse(traversableMap)(dictApplicative)(identity);\n    },\n    Functor0: function () {\n        return functorMap;\n    },\n    Foldable1: function () {\n        return foldableMap;\n    }\n};\nvar traversableWithIndexMap = {\n    traverseWithIndex: function (dictApplicative) {\n        var pure = Control_Applicative.pure(dictApplicative);\n        var Apply0 = dictApplicative.Apply0();\n        var apply = Control_Apply.apply(Apply0);\n        var map1 = Data_Functor.map(Apply0.Functor0());\n        return function (f) {\n            var go = function (v) {\n                if (v instanceof Leaf) {\n                    return pure(Leaf.value);\n                };\n                if (v instanceof Node) {\n                    return apply(apply(map1(function (l$prime) {\n                        return function (v$prime) {\n                            return function (r$prime) {\n                                return new Node(v.value0, v.value1, v.value2, v$prime, l$prime, r$prime);\n                            };\n                        };\n                    })(go(v.value4)))(f(v.value2)(v.value3)))(go(v.value5));\n                };\n                throw new Error(\"Failed pattern match at Data.Map.Internal (line 221, column 10 - line 227, column 19): \" + [ v.constructor.name ]);\n            };\n            return go;\n        };\n    },\n    FunctorWithIndex0: function () {\n        return functorWithIndexMap;\n    },\n    FoldableWithIndex1: function () {\n        return foldableWithIndexMap;\n    },\n    Traversable2: function () {\n        return traversableMap;\n    }\n};\nvar values = /* #__PURE__ */ (function () {\n    return Data_Foldable.foldr(foldableMap)(Data_List_Types.Cons.create)(Data_List_Types.Nil.value);\n})();\nvar foldSubmapBy = function (dictOrd) {\n    var lessThan1 = Data_Ord.lessThan(dictOrd);\n    var greaterThan1 = Data_Ord.greaterThan(dictOrd);\n    var lessThanOrEq1 = Data_Ord.lessThanOrEq(dictOrd);\n    return function (appendFn) {\n        return function (memptyValue) {\n            return function (kmin) {\n                return function (kmax) {\n                    return function (f) {\n                        var tooSmall = (function () {\n                            if (kmin instanceof Data_Maybe.Just) {\n                                return function (k) {\n                                    return lessThan1(k)(kmin.value0);\n                                };\n                            };\n                            if (kmin instanceof Data_Maybe.Nothing) {\n                                return Data_Function[\"const\"](false);\n                            };\n                            throw new Error(\"Failed pattern match at Data.Map.Internal (line 389, column 7 - line 393, column 22): \" + [ kmin.constructor.name ]);\n                        })();\n                        var tooLarge = (function () {\n                            if (kmax instanceof Data_Maybe.Just) {\n                                return function (k) {\n                                    return greaterThan1(k)(kmax.value0);\n                                };\n                            };\n                            if (kmax instanceof Data_Maybe.Nothing) {\n                                return Data_Function[\"const\"](false);\n                            };\n                            throw new Error(\"Failed pattern match at Data.Map.Internal (line 396, column 7 - line 400, column 22): \" + [ kmax.constructor.name ]);\n                        })();\n                        var inBounds = (function () {\n                            if (kmin instanceof Data_Maybe.Just && kmax instanceof Data_Maybe.Just) {\n                                return function (k) {\n                                    return lessThanOrEq1(kmin.value0)(k) && lessThanOrEq1(k)(kmax.value0);\n                                };\n                            };\n                            if (kmin instanceof Data_Maybe.Just && kmax instanceof Data_Maybe.Nothing) {\n                                return function (k) {\n                                    return lessThanOrEq1(kmin.value0)(k);\n                                };\n                            };\n                            if (kmin instanceof Data_Maybe.Nothing && kmax instanceof Data_Maybe.Just) {\n                                return function (k) {\n                                    return lessThanOrEq1(k)(kmax.value0);\n                                };\n                            };\n                            if (kmin instanceof Data_Maybe.Nothing && kmax instanceof Data_Maybe.Nothing) {\n                                return Data_Function[\"const\"](true);\n                            };\n                            throw new Error(\"Failed pattern match at Data.Map.Internal (line 403, column 7 - line 411, column 21): \" + [ kmin.constructor.name, kmax.constructor.name ]);\n                        })();\n                        var go = function (v) {\n                            if (v instanceof Leaf) {\n                                return memptyValue;\n                            };\n                            if (v instanceof Node) {\n                                return appendFn(appendFn((function () {\n                                    var $643 = tooSmall(v.value2);\n                                    if ($643) {\n                                        return memptyValue;\n                                    };\n                                    return go(v.value4);\n                                })())((function () {\n                                    var $644 = inBounds(v.value2);\n                                    if ($644) {\n                                        return f(v.value2)(v.value3);\n                                    };\n                                    return memptyValue;\n                                })()))((function () {\n                                    var $645 = tooLarge(v.value2);\n                                    if ($645) {\n                                        return memptyValue;\n                                    };\n                                    return go(v.value5);\n                                })());\n                            };\n                            throw new Error(\"Failed pattern match at Data.Map.Internal (line 413, column 10 - line 419, column 66): \" + [ v.constructor.name ]);\n                        };\n                        return go;\n                    };\n                };\n            };\n        };\n    };\n};\nvar foldSubmap = function (dictOrd) {\n    var foldSubmapBy1 = foldSubmapBy(dictOrd);\n    return function (dictMonoid) {\n        return foldSubmapBy1(Data_Semigroup.append(dictMonoid.Semigroup0()))(Data_Monoid.mempty(dictMonoid));\n    };\n};\nvar findMin = function ($copy_v) {\n    var $tco_done = false;\n    var $tco_result;\n    function $tco_loop(v) {\n        if (v instanceof Leaf) {\n            $tco_done = true;\n            return Data_Maybe.Nothing.value;\n        };\n        if (v instanceof Node) {\n            if (v.value4 instanceof Leaf) {\n                $tco_done = true;\n                return new Data_Maybe.Just({\n                    key: v.value2,\n                    value: v.value3\n                });\n            };\n            $copy_v = v.value4;\n            return;\n        };\n        throw new Error(\"Failed pattern match at Data.Map.Internal (line 361, column 11 - line 366, column 21): \" + [ v.constructor.name ]);\n    };\n    while (!$tco_done) {\n        $tco_result = $tco_loop($copy_v);\n    };\n    return $tco_result;\n};\nvar lookupGT = function (dictOrd) {\n    var compare = Data_Ord.compare(dictOrd);\n    return function (k) {\n        var go = function (v) {\n            if (v instanceof Leaf) {\n                return Data_Maybe.Nothing.value;\n            };\n            if (v instanceof Node) {\n                var v1 = compare(k)(v.value2);\n                if (v1 instanceof Data_Ordering.LT) {\n                    var v2 = go(v.value4);\n                    if (v2 instanceof Data_Maybe.Nothing) {\n                        return new Data_Maybe.Just({\n                            key: v.value2,\n                            value: v.value3\n                        });\n                    };\n                    return v2;\n                };\n                if (v1 instanceof Data_Ordering.GT) {\n                    return go(v.value5);\n                };\n                if (v1 instanceof Data_Ordering.EQ) {\n                    return findMin(v.value5);\n                };\n                throw new Error(\"Failed pattern match at Data.Map.Internal (line 342, column 7 - line 348, column 25): \" + [ v1.constructor.name ]);\n            };\n            throw new Error(\"Failed pattern match at Data.Map.Internal (line 339, column 8 - line 348, column 25): \" + [ v.constructor.name ]);\n        };\n        return go;\n    };\n};\nvar findMax = function ($copy_v) {\n    var $tco_done = false;\n    var $tco_result;\n    function $tco_loop(v) {\n        if (v instanceof Leaf) {\n            $tco_done = true;\n            return Data_Maybe.Nothing.value;\n        };\n        if (v instanceof Node) {\n            if (v.value5 instanceof Leaf) {\n                $tco_done = true;\n                return new Data_Maybe.Just({\n                    key: v.value2,\n                    value: v.value3\n                });\n            };\n            $copy_v = v.value5;\n            return;\n        };\n        throw new Error(\"Failed pattern match at Data.Map.Internal (line 352, column 11 - line 357, column 21): \" + [ v.constructor.name ]);\n    };\n    while (!$tco_done) {\n        $tco_result = $tco_loop($copy_v);\n    };\n    return $tco_result;\n};\nvar lookupLT = function (dictOrd) {\n    var compare = Data_Ord.compare(dictOrd);\n    return function (k) {\n        var go = function (v) {\n            if (v instanceof Leaf) {\n                return Data_Maybe.Nothing.value;\n            };\n            if (v instanceof Node) {\n                var v1 = compare(k)(v.value2);\n                if (v1 instanceof Data_Ordering.LT) {\n                    return go(v.value4);\n                };\n                if (v1 instanceof Data_Ordering.GT) {\n                    var v2 = go(v.value5);\n                    if (v2 instanceof Data_Maybe.Nothing) {\n                        return new Data_Maybe.Just({\n                            key: v.value2,\n                            value: v.value3\n                        });\n                    };\n                    return v2;\n                };\n                if (v1 instanceof Data_Ordering.EQ) {\n                    return findMax(v.value4);\n                };\n                throw new Error(\"Failed pattern match at Data.Map.Internal (line 311, column 7 - line 318, column 21): \" + [ v1.constructor.name ]);\n            };\n            throw new Error(\"Failed pattern match at Data.Map.Internal (line 308, column 8 - line 318, column 21): \" + [ v.constructor.name ]);\n        };\n        return go;\n    };\n};\nvar filterWithKey = function (dictOrd) {\n    return function (f) {\n        var go = function (v) {\n            if (v instanceof Leaf) {\n                return Leaf.value;\n            };\n            if (v instanceof Node) {\n                if (f(v.value2)(v.value3)) {\n                    return unsafeBalancedNode(v.value2, v.value3, go(v.value4), go(v.value5));\n                };\n                if (Data_Boolean.otherwise) {\n                    return unsafeJoinNodes(go(v.value4), go(v.value5));\n                };\n            };\n            throw new Error(\"Failed pattern match at Data.Map.Internal (line 627, column 8 - line 633, column 47): \" + [ v.constructor.name ]);\n        };\n        return go;\n    };\n};\nvar filterKeys = function (dictOrd) {\n    return function (f) {\n        var go = function (v) {\n            if (v instanceof Leaf) {\n                return Leaf.value;\n            };\n            if (v instanceof Node) {\n                if (f(v.value2)) {\n                    return unsafeBalancedNode(v.value2, v.value3, go(v.value4), go(v.value5));\n                };\n                if (Data_Boolean.otherwise) {\n                    return unsafeJoinNodes(go(v.value4), go(v.value5));\n                };\n            };\n            throw new Error(\"Failed pattern match at Data.Map.Internal (line 640, column 8 - line 646, column 47): \" + [ v.constructor.name ]);\n        };\n        return go;\n    };\n};\nvar filter = function (dictOrd) {\n    var $786 = filterWithKey(dictOrd);\n    return function ($787) {\n        return $786(Data_Function[\"const\"]($787));\n    };\n};\nvar eqMap = function (dictEq) {\n    var eqMapIter1 = eqMapIter(dictEq);\n    return function (dictEq1) {\n        var eq1 = Data_Eq.eq(eqMapIter1(dictEq1));\n        return {\n            eq: function (xs) {\n                return function (ys) {\n                    if (xs instanceof Leaf) {\n                        if (ys instanceof Leaf) {\n                            return true;\n                        };\n                        return false;\n                    };\n                    if (xs instanceof Node) {\n                        if (ys instanceof Node && xs.value1 === ys.value1) {\n                            return eq1(toMapIter(xs))(toMapIter(ys));\n                        };\n                        return false;\n                    };\n                    throw new Error(\"Failed pattern match at Data.Map.Internal (line 94, column 14 - line 105, column 16): \" + [ xs.constructor.name ]);\n                };\n            }\n        };\n    };\n};\nvar ordMap = function (dictOrd) {\n    var ordMapIter1 = ordMapIter(dictOrd);\n    var eqMap1 = eqMap(dictOrd.Eq0());\n    return function (dictOrd1) {\n        var compare = Data_Ord.compare(ordMapIter1(dictOrd1));\n        var eqMap2 = eqMap1(dictOrd1.Eq0());\n        return {\n            compare: function (xs) {\n                return function (ys) {\n                    if (xs instanceof Leaf) {\n                        if (ys instanceof Leaf) {\n                            return Data_Ordering.EQ.value;\n                        };\n                        return Data_Ordering.LT.value;\n                    };\n                    if (ys instanceof Leaf) {\n                        return Data_Ordering.GT.value;\n                    };\n                    return compare(toMapIter(xs))(toMapIter(ys));\n                };\n            },\n            Eq0: function () {\n                return eqMap2;\n            }\n        };\n    };\n};\nvar eq1Map = function (dictEq) {\n    var eqMap1 = eqMap(dictEq);\n    return {\n        eq1: function (dictEq1) {\n            return Data_Eq.eq(eqMap1(dictEq1));\n        }\n    };\n};\nvar ord1Map = function (dictOrd) {\n    var ordMap1 = ordMap(dictOrd);\n    var eq1Map1 = eq1Map(dictOrd.Eq0());\n    return {\n        compare1: function (dictOrd1) {\n            return Data_Ord.compare(ordMap1(dictOrd1));\n        },\n        Eq10: function () {\n            return eq1Map1;\n        }\n    };\n};\nvar empty = /* #__PURE__ */ (function () {\n    return Leaf.value;\n})();\nvar fromFoldable = function (dictOrd) {\n    var insert1 = insert(dictOrd);\n    return function (dictFoldable) {\n        return Data_Foldable.foldl(dictFoldable)(function (m) {\n            return function (v) {\n                return insert1(v.value0)(v.value1)(m);\n            };\n        })(empty);\n    };\n};\nvar fromFoldableWith = function (dictOrd) {\n    var insertWith1 = insertWith(dictOrd);\n    return function (dictFoldable) {\n        var foldl = Data_Foldable.foldl(dictFoldable);\n        return function (f) {\n            var f$prime = insertWith1(Data_Function.flip(f));\n            return foldl(function (m) {\n                return function (v) {\n                    return f$prime(v.value0)(v.value1)(m);\n                };\n            })(empty);\n        };\n    };\n};\nvar fromFoldableWithIndex = function (dictOrd) {\n    var insert1 = insert(dictOrd);\n    return function (dictFoldableWithIndex) {\n        return Data_FoldableWithIndex.foldlWithIndex(dictFoldableWithIndex)(function (k) {\n            return function (m) {\n                return function (v) {\n                    return insert1(k)(v)(m);\n                };\n            };\n        })(empty);\n    };\n};\nvar monoidSemigroupMap = function () {\n    return function (dictOrd) {\n        var semigroupMap2 = semigroupMap1(dictOrd);\n        return function (dictSemigroup) {\n            var semigroupMap3 = semigroupMap2(dictSemigroup);\n            return {\n                mempty: empty,\n                Semigroup0: function () {\n                    return semigroupMap3;\n                }\n            };\n        };\n    };\n};\nvar submap = function (dictOrd) {\n    var foldSubmapBy1 = foldSubmapBy(dictOrd);\n    var union1 = union(dictOrd);\n    return function (kmin) {\n        return function (kmax) {\n            return foldSubmapBy1(union1)(empty)(kmin)(kmax)(singleton);\n        };\n    };\n};\nvar unions = function (dictOrd) {\n    var union1 = union(dictOrd);\n    return function (dictFoldable) {\n        return Data_Foldable.foldl(dictFoldable)(union1)(empty);\n    };\n};\nvar difference = function (dictOrd) {\n    var compare = Data_Ord.compare(dictOrd);\n    return function (m1) {\n        return function (m2) {\n            return unsafeDifference(compare, m1, m2);\n        };\n    };\n};\nvar $$delete = function (dictOrd) {\n    var compare = Data_Ord.compare(dictOrd);\n    return function (k) {\n        var go = function (v) {\n            if (v instanceof Leaf) {\n                return Leaf.value;\n            };\n            if (v instanceof Node) {\n                var v1 = compare(k)(v.value2);\n                if (v1 instanceof Data_Ordering.LT) {\n                    return unsafeBalancedNode(v.value2, v.value3, go(v.value4), v.value5);\n                };\n                if (v1 instanceof Data_Ordering.GT) {\n                    return unsafeBalancedNode(v.value2, v.value3, v.value4, go(v.value5));\n                };\n                if (v1 instanceof Data_Ordering.EQ) {\n                    return unsafeJoinNodes(v.value4, v.value5);\n                };\n                throw new Error(\"Failed pattern match at Data.Map.Internal (line 498, column 7 - line 501, column 43): \" + [ v1.constructor.name ]);\n            };\n            throw new Error(\"Failed pattern match at Data.Map.Internal (line 495, column 8 - line 501, column 43): \" + [ v.constructor.name ]);\n        };\n        return go;\n    };\n};\nvar checkValid = function (dictOrd) {\n    var greaterThan1 = Data_Ord.greaterThan(dictOrd);\n    var lessThan1 = Data_Ord.lessThan(dictOrd);\n    var go = function (v) {\n        if (v instanceof Leaf) {\n            return true;\n        };\n        if (v instanceof Node) {\n            if (v.value4 instanceof Leaf) {\n                if (v.value5 instanceof Leaf) {\n                    return true;\n                };\n                if (v.value5 instanceof Node) {\n                    return v.value0 === 2 && (v.value5.value0 === 1 && (v.value1 > v.value5.value1 && (greaterThan1(v.value5.value2)(v.value2) && go(v.value5))));\n                };\n                throw new Error(\"Failed pattern match at Data.Map.Internal (line 264, column 11 - line 268, column 60): \" + [ v.value5.constructor.name ]);\n            };\n            if (v.value4 instanceof Node) {\n                if (v.value5 instanceof Leaf) {\n                    return v.value0 === 2 && (v.value4.value0 === 1 && (v.value1 > v.value4.value1 && (lessThan1(v.value4.value2)(v.value2) && go(v.value4))));\n                };\n                if (v.value5 instanceof Node) {\n                    return v.value0 > v.value5.value0 && (greaterThan1(v.value5.value2)(v.value2) && (v.value0 > v.value4.value0 && (lessThan1(v.value4.value2)(v.value2) && (abs(v.value5.value0 - v.value4.value0 | 0) < 2 && (((v.value5.value1 + v.value4.value1 | 0) + 1 | 0) === v.value1 && (go(v.value4) && go(v.value5)))))));\n                };\n                throw new Error(\"Failed pattern match at Data.Map.Internal (line 270, column 11 - line 274, column 108): \" + [ v.value5.constructor.name ]);\n            };\n            throw new Error(\"Failed pattern match at Data.Map.Internal (line 262, column 7 - line 274, column 108): \" + [ v.value4.constructor.name ]);\n        };\n        throw new Error(\"Failed pattern match at Data.Map.Internal (line 259, column 8 - line 274, column 108): \" + [ v.constructor.name ]);\n    };\n    return go;\n};\nvar catMaybes = function (dictOrd) {\n    return mapMaybe(dictOrd)(identity);\n};\nvar applyMap = function (dictOrd) {\n    return {\n        apply: intersectionWith(dictOrd)(identity),\n        Functor0: function () {\n            return functorMap;\n        }\n    };\n};\nvar bindMap = function (dictOrd) {\n    var mapMaybeWithKey1 = mapMaybeWithKey(dictOrd);\n    var lookup1 = lookup(dictOrd);\n    var applyMap1 = applyMap(dictOrd);\n    return {\n        bind: function (m) {\n            return function (f) {\n                return mapMaybeWithKey1(function (k) {\n                    var $788 = lookup1(k);\n                    return function ($789) {\n                        return $788(f($789));\n                    };\n                })(m);\n            };\n        },\n        Apply0: function () {\n            return applyMap1;\n        }\n    };\n};\nvar anyWithKey = function (predicate) {\n    var go = function (v) {\n        if (v instanceof Leaf) {\n            return false;\n        };\n        if (v instanceof Node) {\n            return predicate(v.value2)(v.value3) || (go(v.value4) || go(v.value5));\n        };\n        throw new Error(\"Failed pattern match at Data.Map.Internal (line 693, column 8 - line 695, column 62): \" + [ v.constructor.name ]);\n    };\n    return go;\n};\nvar any = function (predicate) {\n    var go = function (v) {\n        if (v instanceof Leaf) {\n            return false;\n        };\n        if (v instanceof Node) {\n            return predicate(v.value3) || (go(v.value4) || go(v.value5));\n        };\n        throw new Error(\"Failed pattern match at Data.Map.Internal (line 683, column 8 - line 685, column 58): \" + [ v.constructor.name ]);\n    };\n    return go;\n};\nvar alter = function (dictOrd) {\n    var compare = Data_Ord.compare(dictOrd);\n    return function (f) {\n        return function (k) {\n            return function (m) {\n                var v = unsafeSplit(compare, k, m);\n                var v2 = f(v.value0);\n                if (v2 instanceof Data_Maybe.Nothing) {\n                    return unsafeJoinNodes(v.value1, v.value2);\n                };\n                if (v2 instanceof Data_Maybe.Just) {\n                    return unsafeBalancedNode(k, v2.value0, v.value1, v.value2);\n                };\n                throw new Error(\"Failed pattern match at Data.Map.Internal (line 514, column 3 - line 518, column 41): \" + [ v2.constructor.name ]);\n            };\n        };\n    };\n};\nvar altMap = function (dictOrd) {\n    return {\n        alt: union(dictOrd),\n        Functor0: function () {\n            return functorMap;\n        }\n    };\n};\nvar plusMap = function (dictOrd) {\n    var altMap1 = altMap(dictOrd);\n    return {\n        empty: empty,\n        Alt0: function () {\n            return altMap1;\n        }\n    };\n};\nexport {\n    Leaf,\n    Node,\n    showTree,\n    empty,\n    isEmpty,\n    singleton,\n    checkValid,\n    insert,\n    insertWith,\n    lookup,\n    lookupLE,\n    lookupLT,\n    lookupGE,\n    lookupGT,\n    findMin,\n    findMax,\n    foldSubmap,\n    submap,\n    fromFoldable,\n    fromFoldableWith,\n    fromFoldableWithIndex,\n    toUnfoldable,\n    toUnfoldableUnordered,\n    $$delete as delete,\n    pop,\n    member,\n    alter,\n    update,\n    keys,\n    values,\n    union,\n    unionWith,\n    unions,\n    intersection,\n    intersectionWith,\n    difference,\n    isSubmap,\n    size,\n    filterWithKey,\n    filterKeys,\n    filter,\n    mapMaybeWithKey,\n    mapMaybe,\n    catMaybes,\n    any,\n    anyWithKey,\n    IterDone,\n    IterNext,\n    toMapIter,\n    stepAsc,\n    stepAscCps,\n    stepDesc,\n    stepDescCps,\n    stepUnordered,\n    stepUnorderedCps,\n    unsafeNode,\n    unsafeBalancedNode,\n    unsafeJoinNodes,\n    unsafeSplit,\n    Split,\n    eq1Map,\n    eqMap,\n    ord1Map,\n    ordMap,\n    showMap,\n    semigroupMap,\n    monoidSemigroupMap,\n    altMap,\n    plusMap,\n    functorMap,\n    functorWithIndexMap,\n    applyMap,\n    bindMap,\n    foldableMap,\n    foldableWithIndexMap,\n    traversableMap,\n    traversableWithIndexMap,\n    eqMapIter,\n    ordMapIter\n};\n", "// Generated by purs version 0.15.15\nimport * as Data_Eq from \"../Data.Eq/index.js\";\nimport * as Data_Ord from \"../Data.Ord/index.js\";\nvar OrdBox = /* #__PURE__ */ (function () {\n    function OrdBox(value0, value1, value2) {\n        this.value0 = value0;\n        this.value1 = value1;\n        this.value2 = value2;\n    };\n    OrdBox.create = function (value0) {\n        return function (value1) {\n            return function (value2) {\n                return new OrdBox(value0, value1, value2);\n            };\n        };\n    };\n    return OrdBox;\n})();\nvar unOrdBox = function (v) {\n    return v.value2;\n};\nvar mkOrdBox = function (dictOrd) {\n    return OrdBox.create(Data_Eq.eq(dictOrd.Eq0()))(Data_Ord.compare(dictOrd));\n};\nvar eqOrdBox = {\n    eq: function (v) {\n        return function (v1) {\n            return v.value0(v.value2)(v1.value2);\n        };\n    }\n};\nvar ordOrdBox = {\n    compare: function (v) {\n        return function (v1) {\n            return v.value1(v.value2)(v1.value2);\n        };\n    },\n    Eq0: function () {\n        return eqOrdBox;\n    }\n};\nexport {\n    mkOrdBox,\n    unOrdBox,\n    eqOrdBox,\n    ordOrdBox\n};\n", "// Generated by purs version 0.15.15\nimport * as Data_Boolean from \"../Data.Boolean/index.js\";\nimport * as Data_Foldable from \"../Data.Foldable/index.js\";\nimport * as Data_Map_Internal from \"../Data.Map.Internal/index.js\";\nimport * as Data_Maybe from \"../Data.Maybe/index.js\";\nimport * as Data_Monoid_Alternate from \"../Data.Monoid.Alternate/index.js\";\nimport * as Data_Newtype from \"../Data.Newtype/index.js\";\nimport * as Data_Ord from \"../Data.Ord/index.js\";\nimport * as Data_Symbol from \"../Data.Symbol/index.js\";\nimport * as Data_Tuple from \"../Data.Tuple/index.js\";\nimport * as Halogen_Data_OrdBox from \"../Halogen.Data.OrdBox/index.js\";\nvar un = /* #__PURE__ */ Data_Newtype.un();\nvar ordTuple = /* #__PURE__ */ Data_Tuple.ordTuple(Data_Ord.ordString)(Halogen_Data_OrdBox.ordOrdBox);\nvar foldSubmap = /* #__PURE__ */ Data_Map_Internal.foldSubmap(ordTuple);\nvar pop1 = /* #__PURE__ */ Data_Map_Internal.pop(ordTuple);\nvar lookup1 = /* #__PURE__ */ Data_Map_Internal.lookup(ordTuple);\nvar insert1 = /* #__PURE__ */ Data_Map_Internal.insert(ordTuple);\nvar SlotStorage = function (x) {\n    return x;\n};\nvar slots = function () {\n    return function (dictIsSymbol) {\n        var reflectSymbol = Data_Symbol.reflectSymbol(dictIsSymbol);\n        return function (dictOrd) {\n            var foldSubmap1 = foldSubmap(Data_Monoid_Alternate.monoidAlternate(Data_Map_Internal.plusMap(dictOrd)));\n            return function (sym) {\n                return function (v) {\n                    var key = reflectSymbol(sym);\n                    var go = function (v1) {\n                        return function (val) {\n                            if (key === v1.value0) {\n                                return Data_Map_Internal.singleton(Halogen_Data_OrdBox.unOrdBox(v1.value1))(val);\n                            };\n                            if (Data_Boolean.otherwise) {\n                                return Data_Map_Internal.empty;\n                            };\n                            throw new Error(\"Failed pattern match at Halogen.Data.Slot (line 121, column 3 - line 123, column 38): \" + [ v1.constructor.name, val.constructor.name ]);\n                        };\n                    };\n                    return un(Data_Monoid_Alternate.Alternate)(foldSubmap1(Data_Maybe.Nothing.value)(Data_Maybe.Nothing.value)(go)(v));\n                };\n            };\n        };\n    };\n};\nvar pop = function () {\n    return function (dictIsSymbol) {\n        var reflectSymbol = Data_Symbol.reflectSymbol(dictIsSymbol);\n        return function (dictOrd) {\n            var mkOrdBox = Halogen_Data_OrdBox.mkOrdBox(dictOrd);\n            return function (sym) {\n                return function (key) {\n                    return function (v) {\n                        return pop1(new Data_Tuple.Tuple(reflectSymbol(sym), mkOrdBox(key)))(v);\n                    };\n                };\n            };\n        };\n    };\n};\nvar lookup = function () {\n    return function (dictIsSymbol) {\n        var reflectSymbol = Data_Symbol.reflectSymbol(dictIsSymbol);\n        return function (dictOrd) {\n            var mkOrdBox = Halogen_Data_OrdBox.mkOrdBox(dictOrd);\n            return function (sym) {\n                return function (key) {\n                    return function (v) {\n                        return lookup1(new Data_Tuple.Tuple(reflectSymbol(sym), mkOrdBox(key)))(v);\n                    };\n                };\n            };\n        };\n    };\n};\nvar insert = function () {\n    return function (dictIsSymbol) {\n        var reflectSymbol = Data_Symbol.reflectSymbol(dictIsSymbol);\n        return function (dictOrd) {\n            var mkOrdBox = Halogen_Data_OrdBox.mkOrdBox(dictOrd);\n            return function (sym) {\n                return function (key) {\n                    return function (val) {\n                        return function (v) {\n                            return insert1(new Data_Tuple.Tuple(reflectSymbol(sym), mkOrdBox(key)))(val)(v);\n                        };\n                    };\n                };\n            };\n        };\n    };\n};\nvar foreachSlot = function (dictApplicative) {\n    var traverse_ = Data_Foldable.traverse_(dictApplicative)(Data_Map_Internal.foldableMap);\n    return function (v) {\n        return function (k) {\n            return traverse_(function ($54) {\n                return k($54);\n            })(v);\n        };\n    };\n};\nvar empty = Data_Map_Internal.empty;\nexport {\n    empty,\n    lookup,\n    insert,\n    pop,\n    slots,\n    foreachSlot\n};\n", "// Generated by purs version 0.15.15\nimport * as Control_Applicative from \"../Control.Applicative/index.js\";\nimport * as Control_Apply from \"../Control.Apply/index.js\";\nimport * as Control_Category from \"../Control.Category/index.js\";\nimport * as Data_Const from \"../Data.Const/index.js\";\nimport * as Data_Either from \"../Data.Either/index.js\";\nimport * as Data_List_NonEmpty from \"../Data.List.NonEmpty/index.js\";\nimport * as Data_List_Types from \"../Data.List.Types/index.js\";\nimport * as Data_Newtype from \"../Data.Newtype/index.js\";\nimport * as Data_NonEmpty from \"../Data.NonEmpty/index.js\";\nimport * as Data_Tuple from \"../Data.Tuple/index.js\";\nvar identity = /* #__PURE__ */ Control_Category.identity(Control_Category.categoryFn);\nvar unwrap = /* #__PURE__ */ Data_Newtype.unwrap();\nvar Pure = /* #__PURE__ */ (function () {\n    function Pure(value0) {\n        this.value0 = value0;\n    };\n    Pure.create = function (value0) {\n        return new Pure(value0);\n    };\n    return Pure;\n})();\nvar Lift = /* #__PURE__ */ (function () {\n    function Lift(value0) {\n        this.value0 = value0;\n    };\n    Lift.create = function (value0) {\n        return new Lift(value0);\n    };\n    return Lift;\n})();\nvar Ap = /* #__PURE__ */ (function () {\n    function Ap(value0, value1) {\n        this.value0 = value0;\n        this.value1 = value1;\n    };\n    Ap.create = function (value0) {\n        return function (value1) {\n            return new Ap(value0, value1);\n        };\n    };\n    return Ap;\n})();\nvar mkAp = function (fba) {\n    return function (fb) {\n        return new Ap(fba, fb);\n    };\n};\nvar liftFreeAp = /* #__PURE__ */ (function () {\n    return Lift.create;\n})();\nvar goLeft = function (dictApplicative) {\n    var pure = Control_Applicative.pure(dictApplicative);\n    return function (fStack) {\n        return function (valStack) {\n            return function (nat) {\n                return function (func) {\n                    return function (count) {\n                        if (func instanceof Pure) {\n                            return new Data_Tuple.Tuple(new Data_List_Types.Cons({\n                                func: pure(func.value0),\n                                count: count\n                            }, fStack), valStack);\n                        };\n                        if (func instanceof Lift) {\n                            return new Data_Tuple.Tuple(new Data_List_Types.Cons({\n                                func: nat(func.value0),\n                                count: count\n                            }, fStack), valStack);\n                        };\n                        if (func instanceof Ap) {\n                            return goLeft(dictApplicative)(fStack)(Data_List_NonEmpty.cons(func.value1)(valStack))(nat)(func.value0)(count + 1 | 0);\n                        };\n                        throw new Error(\"Failed pattern match at Control.Applicative.Free (line 102, column 41 - line 105, column 81): \" + [ func.constructor.name ]);\n                    };\n                };\n            };\n        };\n    };\n};\nvar goApply = function (dictApplicative) {\n    var apply = Control_Apply.apply(dictApplicative.Apply0());\n    return function (fStack) {\n        return function (vals) {\n            return function (gVal) {\n                if (fStack instanceof Data_List_Types.Nil) {\n                    return new Data_Either.Left(gVal);\n                };\n                if (fStack instanceof Data_List_Types.Cons) {\n                    var gRes = apply(fStack.value0.func)(gVal);\n                    var $31 = fStack.value0.count === 1;\n                    if ($31) {\n                        if (fStack.value1 instanceof Data_List_Types.Nil) {\n                            return new Data_Either.Left(gRes);\n                        };\n                        return goApply(dictApplicative)(fStack.value1)(vals)(gRes);\n                    };\n                    if (vals instanceof Data_List_Types.Nil) {\n                        return new Data_Either.Left(gRes);\n                    };\n                    if (vals instanceof Data_List_Types.Cons) {\n                        return new Data_Either.Right(new Data_Tuple.Tuple(new Data_List_Types.Cons({\n                            func: gRes,\n                            count: fStack.value0.count - 1 | 0\n                        }, fStack.value1), new Data_NonEmpty.NonEmpty(vals.value0, vals.value1)));\n                    };\n                    throw new Error(\"Failed pattern match at Control.Applicative.Free (line 83, column 11 - line 88, column 50): \" + [ vals.constructor.name ]);\n                };\n                throw new Error(\"Failed pattern match at Control.Applicative.Free (line 72, column 3 - line 88, column 50): \" + [ fStack.constructor.name ]);\n            };\n        };\n    };\n};\nvar functorFreeAp = {\n    map: function (f) {\n        return function (x) {\n            return mkAp(new Pure(f))(x);\n        };\n    }\n};\nvar foldFreeAp = function (dictApplicative) {\n    var goApply1 = goApply(dictApplicative);\n    var pure = Control_Applicative.pure(dictApplicative);\n    var goLeft1 = goLeft(dictApplicative);\n    return function (nat) {\n        return function (z) {\n            var go = function ($copy_v) {\n                var $tco_done = false;\n                var $tco_result;\n                function $tco_loop(v) {\n                    if (v.value1.value0 instanceof Pure) {\n                        var v1 = goApply1(v.value0)(v.value1.value1)(pure(v.value1.value0.value0));\n                        if (v1 instanceof Data_Either.Left) {\n                            $tco_done = true;\n                            return v1.value0;\n                        };\n                        if (v1 instanceof Data_Either.Right) {\n                            $copy_v = v1.value0;\n                            return;\n                        };\n                        throw new Error(\"Failed pattern match at Control.Applicative.Free (line 54, column 17 - line 56, column 24): \" + [ v1.constructor.name ]);\n                    };\n                    if (v.value1.value0 instanceof Lift) {\n                        var v1 = goApply1(v.value0)(v.value1.value1)(nat(v.value1.value0.value0));\n                        if (v1 instanceof Data_Either.Left) {\n                            $tco_done = true;\n                            return v1.value0;\n                        };\n                        if (v1 instanceof Data_Either.Right) {\n                            $copy_v = v1.value0;\n                            return;\n                        };\n                        throw new Error(\"Failed pattern match at Control.Applicative.Free (line 57, column 17 - line 59, column 24): \" + [ v1.constructor.name ]);\n                    };\n                    if (v.value1.value0 instanceof Ap) {\n                        var nextVals = new Data_NonEmpty.NonEmpty(v.value1.value0.value1, v.value1.value1);\n                        $copy_v = goLeft1(v.value0)(nextVals)(nat)(v.value1.value0.value0)(1);\n                        return;\n                    };\n                    throw new Error(\"Failed pattern match at Control.Applicative.Free (line 53, column 5 - line 62, column 47): \" + [ v.value1.value0.constructor.name ]);\n                };\n                while (!$tco_done) {\n                    $tco_result = $tco_loop($copy_v);\n                };\n                return $tco_result;\n            };\n            return go(new Data_Tuple.Tuple(Data_List_Types.Nil.value, Data_List_NonEmpty.singleton(z)));\n        };\n    };\n};\nvar retractFreeAp = function (dictApplicative) {\n    return foldFreeAp(dictApplicative)(identity);\n};\nvar applyFreeAp = {\n    apply: function (fba) {\n        return function (fb) {\n            return mkAp(fba)(fb);\n        };\n    },\n    Functor0: function () {\n        return functorFreeAp;\n    }\n};\nvar applicativeFreeAp = /* #__PURE__ */ (function () {\n    return {\n        pure: Pure.create,\n        Apply0: function () {\n            return applyFreeAp;\n        }\n    };\n})();\nvar foldFreeAp1 = /* #__PURE__ */ foldFreeAp(applicativeFreeAp);\nvar hoistFreeAp = function (f) {\n    return foldFreeAp1(function ($54) {\n        return liftFreeAp(f($54));\n    });\n};\nvar analyzeFreeAp = function (dictMonoid) {\n    var foldFreeAp2 = foldFreeAp(Data_Const.applicativeConst(dictMonoid));\n    return function (k) {\n        var $55 = foldFreeAp2(function ($57) {\n            return Data_Const.Const(k($57));\n        });\n        return function ($56) {\n            return unwrap($55($56));\n        };\n    };\n};\nexport {\n    liftFreeAp,\n    retractFreeAp,\n    foldFreeAp,\n    hoistFreeAp,\n    analyzeFreeAp,\n    functorFreeAp,\n    applyFreeAp,\n    applicativeFreeAp\n};\n", "// Generated by purs version 0.15.15\nimport * as Control_Applicative from \"../Control.Applicative/index.js\";\nimport * as Control_Apply from \"../Control.Apply/index.js\";\nimport * as Control_Monad from \"../Control.Monad/index.js\";\nimport * as Data_Eq from \"../Data.Eq/index.js\";\nimport * as Data_Foldable from \"../Data.Foldable/index.js\";\nimport * as Data_Function from \"../Data.Function/index.js\";\nimport * as Data_Functor from \"../Data.Functor/index.js\";\nimport * as Data_List from \"../Data.List/index.js\";\nimport * as Data_List_Types from \"../Data.List.Types/index.js\";\nimport * as Data_Maybe from \"../Data.Maybe/index.js\";\nimport * as Data_Ord from \"../Data.Ord/index.js\";\nimport * as Data_Ordering from \"../Data.Ordering/index.js\";\nimport * as Data_Semigroup from \"../Data.Semigroup/index.js\";\nimport * as Data_Show from \"../Data.Show/index.js\";\nimport * as Data_Traversable from \"../Data.Traversable/index.js\";\nimport * as Data_Tuple from \"../Data.Tuple/index.js\";\nvar $runtime_lazy = function (name, moduleName, init) {\n    var state = 0;\n    var val;\n    return function (lineNumber) {\n        if (state === 2) return val;\n        if (state === 1) throw new ReferenceError(name + \" was needed before it finished initializing (module \" + moduleName + \", line \" + lineNumber + \")\", moduleName, lineNumber);\n        state = 1;\n        val = init();\n        state = 2;\n        return val;\n    };\n};\nvar map = /* #__PURE__ */ Data_Functor.map(Data_List_Types.functorList);\nvar CatQueue = /* #__PURE__ */ (function () {\n    function CatQueue(value0, value1) {\n        this.value0 = value0;\n        this.value1 = value1;\n    };\n    CatQueue.create = function (value0) {\n        return function (value1) {\n            return new CatQueue(value0, value1);\n        };\n    };\n    return CatQueue;\n})();\nvar unsnoc = function ($copy_v) {\n    var $tco_done = false;\n    var $tco_result;\n    function $tco_loop(v) {\n        if (v.value1 instanceof Data_List_Types.Cons) {\n            $tco_done = true;\n            return new Data_Maybe.Just(new Data_Tuple.Tuple(v.value1.value0, new CatQueue(v.value0, v.value1.value1)));\n        };\n        if (v.value0 instanceof Data_List_Types.Nil && v.value1 instanceof Data_List_Types.Nil) {\n            $tco_done = true;\n            return Data_Maybe.Nothing.value;\n        };\n        if (v.value1 instanceof Data_List_Types.Nil) {\n            $copy_v = new CatQueue(Data_List_Types.Nil.value, Data_List.reverse(v.value0));\n            return;\n        };\n        throw new Error(\"Failed pattern match at Data.CatQueue (line 92, column 1 - line 92, column 63): \" + [ v.constructor.name ]);\n    };\n    while (!$tco_done) {\n        $tco_result = $tco_loop($copy_v);\n    };\n    return $tco_result;\n};\nvar uncons = function ($copy_v) {\n    var $tco_done = false;\n    var $tco_result;\n    function $tco_loop(v) {\n        if (v.value0 instanceof Data_List_Types.Nil && v.value1 instanceof Data_List_Types.Nil) {\n            $tco_done = true;\n            return Data_Maybe.Nothing.value;\n        };\n        if (v.value0 instanceof Data_List_Types.Nil) {\n            $copy_v = new CatQueue(Data_List.reverse(v.value1), Data_List_Types.Nil.value);\n            return;\n        };\n        if (v.value0 instanceof Data_List_Types.Cons) {\n            $tco_done = true;\n            return new Data_Maybe.Just(new Data_Tuple.Tuple(v.value0.value0, new CatQueue(v.value0.value1, v.value1)));\n        };\n        throw new Error(\"Failed pattern match at Data.CatQueue (line 82, column 1 - line 82, column 63): \" + [ v.constructor.name ]);\n    };\n    while (!$tco_done) {\n        $tco_result = $tco_loop($copy_v);\n    };\n    return $tco_result;\n};\nvar snoc = function (v) {\n    return function (a) {\n        return new CatQueue(v.value0, new Data_List_Types.Cons(a, v.value1));\n    };\n};\nvar showCatQueue = function (dictShow) {\n    var show = Data_Show.show(Data_List_Types.showList(dictShow));\n    return {\n        show: function (v) {\n            return \"(CatQueue \" + (show(v.value0) + (\" \" + (show(v.value1) + \")\")));\n        }\n    };\n};\nvar $$null = function (v) {\n    if (v.value0 instanceof Data_List_Types.Nil && v.value1 instanceof Data_List_Types.Nil) {\n        return true;\n    };\n    return false;\n};\nvar length = function (v) {\n    return Data_List.length(v.value0) + Data_List.length(v.value1) | 0;\n};\nvar functorCatQueue = {\n    map: function (f) {\n        return function (v) {\n            return new CatQueue(map(f)(v.value0), map(f)(v.value1));\n        };\n    }\n};\nvar foldableCatQueue = {\n    foldMap: function (dictMonoid) {\n        return Data_Foldable.foldMapDefaultL(foldableCatQueue)(dictMonoid);\n    },\n    foldr: function (f) {\n        return Data_Foldable.foldrDefault(foldableCatQueue)(f);\n    },\n    foldl: function (f) {\n        var go = function ($copy_acc) {\n            return function ($copy_q) {\n                var $tco_var_acc = $copy_acc;\n                var $tco_done = false;\n                var $tco_result;\n                function $tco_loop(acc, q) {\n                    var v = uncons(q);\n                    if (v instanceof Data_Maybe.Just) {\n                        $tco_var_acc = f(acc)(v.value0.value0);\n                        $copy_q = v.value0.value1;\n                        return;\n                    };\n                    if (v instanceof Data_Maybe.Nothing) {\n                        $tco_done = true;\n                        return acc;\n                    };\n                    throw new Error(\"Failed pattern match at Data.CatQueue (line 147, column 16 - line 149, column 22): \" + [ v.constructor.name ]);\n                };\n                while (!$tco_done) {\n                    $tco_result = $tco_loop($tco_var_acc, $copy_q);\n                };\n                return $tco_result;\n            };\n        };\n        return go;\n    }\n};\nvar foldl = /* #__PURE__ */ Data_Foldable.foldl(foldableCatQueue);\nvar semigroupCatQueue = {\n    append: /* #__PURE__ */ foldl(snoc)\n};\nvar empty = /* #__PURE__ */ (function () {\n    return new CatQueue(Data_List_Types.Nil.value, Data_List_Types.Nil.value);\n})();\nvar monoidCatQueue = {\n    mempty: empty,\n    Semigroup0: function () {\n        return semigroupCatQueue;\n    }\n};\nvar singleton = /* #__PURE__ */ snoc(empty);\nvar fromFoldable = function (dictFoldable) {\n    var foldMap = Data_Foldable.foldMap(dictFoldable)(monoidCatQueue);\n    return function (f) {\n        return foldMap(singleton)(f);\n    };\n};\nvar traversableCatQueue = {\n    traverse: function (dictApplicative) {\n        var Apply0 = dictApplicative.Apply0();\n        var map1 = Data_Functor.map(Apply0.Functor0());\n        var lift2 = Control_Apply.lift2(Apply0);\n        var pure = Control_Applicative.pure(dictApplicative);\n        return function (f) {\n            var $123 = map1(foldl(snoc)(empty));\n            var $124 = foldl(function (acc) {\n                var $126 = lift2(snoc)(acc);\n                return function ($127) {\n                    return $126(f($127));\n                };\n            })(pure(empty));\n            return function ($125) {\n                return $123($124($125));\n            };\n        };\n    },\n    sequence: function (dictApplicative) {\n        return Data_Traversable.sequenceDefault(traversableCatQueue)(dictApplicative);\n    },\n    Functor0: function () {\n        return functorCatQueue;\n    },\n    Foldable1: function () {\n        return foldableCatQueue;\n    }\n};\nvar unfoldable1CatQueue = {\n    unfoldr1: function (f) {\n        return function (b) {\n            var go = function ($copy_source) {\n                return function ($copy_memo) {\n                    var $tco_var_source = $copy_source;\n                    var $tco_done = false;\n                    var $tco_result;\n                    function $tco_loop(source, memo) {\n                        var v = f(source);\n                        if (v.value1 instanceof Data_Maybe.Nothing) {\n                            $tco_done = true;\n                            return snoc(memo)(v.value0);\n                        };\n                        if (v.value1 instanceof Data_Maybe.Just) {\n                            $tco_var_source = v.value1.value0;\n                            $copy_memo = snoc(memo)(v.value0);\n                            return;\n                        };\n                        throw new Error(\"Failed pattern match at Data.CatQueue (line 154, column 24 - line 156, column 57): \" + [ v.constructor.name ]);\n                    };\n                    while (!$tco_done) {\n                        $tco_result = $tco_loop($tco_var_source, $copy_memo);\n                    };\n                    return $tco_result;\n                };\n            };\n            return go(b)(empty);\n        };\n    }\n};\nvar unfoldableCatQueue = {\n    unfoldr: function (f) {\n        return function (b) {\n            var go = function ($copy_source) {\n                return function ($copy_memo) {\n                    var $tco_var_source = $copy_source;\n                    var $tco_done = false;\n                    var $tco_result;\n                    function $tco_loop(source, memo) {\n                        var v = f(source);\n                        if (v instanceof Data_Maybe.Nothing) {\n                            $tco_done = true;\n                            return memo;\n                        };\n                        if (v instanceof Data_Maybe.Just) {\n                            $tco_var_source = v.value0.value1;\n                            $copy_memo = snoc(memo)(v.value0.value0);\n                            return;\n                        };\n                        throw new Error(\"Failed pattern match at Data.CatQueue (line 161, column 24 - line 163, column 57): \" + [ v.constructor.name ]);\n                    };\n                    while (!$tco_done) {\n                        $tco_result = $tco_loop($tco_var_source, $copy_memo);\n                    };\n                    return $tco_result;\n                };\n            };\n            return go(b)(empty);\n        };\n    },\n    Unfoldable10: function () {\n        return unfoldable1CatQueue;\n    }\n};\nvar cqEq = function (dictEq) {\n    var elemEq = Data_Eq.eq(dictEq);\n    var go = function ($copy_xs) {\n        return function ($copy_ys) {\n            var $tco_var_xs = $copy_xs;\n            var $tco_done = false;\n            var $tco_result;\n            function $tco_loop(xs, ys) {\n                var v = uncons(ys);\n                var v1 = uncons(xs);\n                if (v1 instanceof Data_Maybe.Just && (v instanceof Data_Maybe.Just && elemEq(v1.value0.value0)(v.value0.value0))) {\n                    $tco_var_xs = v1.value0.value1;\n                    $copy_ys = v.value0.value1;\n                    return;\n                };\n                if (v1 instanceof Data_Maybe.Nothing && v instanceof Data_Maybe.Nothing) {\n                    $tco_done = true;\n                    return true;\n                };\n                $tco_done = true;\n                return false;\n            };\n            while (!$tco_done) {\n                $tco_result = $tco_loop($tco_var_xs, $copy_ys);\n            };\n            return $tco_result;\n        };\n    };\n    return go;\n};\nvar eqCatQueue = function (dictEq) {\n    return {\n        eq: cqEq(dictEq)\n    };\n};\nvar cqCompare = function (dictOrd) {\n    var elemCompare = Data_Ord.compare(dictOrd);\n    var go = function ($copy_xs) {\n        return function ($copy_ys) {\n            var $tco_var_xs = $copy_xs;\n            var $tco_done = false;\n            var $tco_result;\n            function $tco_loop(xs, ys) {\n                var v = uncons(ys);\n                var v1 = uncons(xs);\n                if (v1 instanceof Data_Maybe.Just && v instanceof Data_Maybe.Just) {\n                    var v2 = elemCompare(v1.value0.value0)(v.value0.value0);\n                    if (v2 instanceof Data_Ordering.EQ) {\n                        $tco_var_xs = v1.value0.value1;\n                        $copy_ys = v.value0.value1;\n                        return;\n                    };\n                    $tco_done = true;\n                    return v2;\n                };\n                if (v1 instanceof Data_Maybe.Just && v instanceof Data_Maybe.Nothing) {\n                    $tco_done = true;\n                    return Data_Ordering.GT.value;\n                };\n                if (v1 instanceof Data_Maybe.Nothing && v instanceof Data_Maybe.Just) {\n                    $tco_done = true;\n                    return Data_Ordering.LT.value;\n                };\n                if (v1 instanceof Data_Maybe.Nothing && v instanceof Data_Maybe.Nothing) {\n                    $tco_done = true;\n                    return Data_Ordering.EQ.value;\n                };\n                throw new Error(\"Failed pattern match at Data.CatQueue (line 117, column 16 - line 124, column 30): \" + [ v1.constructor.name, v.constructor.name ]);\n            };\n            while (!$tco_done) {\n                $tco_result = $tco_loop($tco_var_xs, $copy_ys);\n            };\n            return $tco_result;\n        };\n    };\n    return go;\n};\nvar ordCatQueue = function (dictOrd) {\n    var eqCatQueue1 = eqCatQueue(dictOrd.Eq0());\n    return {\n        compare: cqCompare(dictOrd),\n        Eq0: function () {\n            return eqCatQueue1;\n        }\n    };\n};\nvar cons = function (a) {\n    return function (v) {\n        return new CatQueue(new Data_List_Types.Cons(a, v.value0), v.value1);\n    };\n};\nvar monadCatQueue = {\n    Applicative0: function () {\n        return applicativeCatQueue;\n    },\n    Bind1: function () {\n        return bindCatQueue;\n    }\n};\nvar bindCatQueue = {\n    bind: /* #__PURE__ */ Data_Function.flip(/* #__PURE__ */ Data_Foldable.foldMap(foldableCatQueue)(monoidCatQueue)),\n    Apply0: function () {\n        return $lazy_applyCatQueue(0);\n    }\n};\nvar applicativeCatQueue = {\n    pure: singleton,\n    Apply0: function () {\n        return $lazy_applyCatQueue(0);\n    }\n};\nvar $lazy_applyCatQueue = /* #__PURE__ */ $runtime_lazy(\"applyCatQueue\", \"Data.CatQueue\", function () {\n    return {\n        apply: Control_Monad.ap(monadCatQueue),\n        Functor0: function () {\n            return functorCatQueue;\n        }\n    };\n});\nvar applyCatQueue = /* #__PURE__ */ $lazy_applyCatQueue(174);\nvar altCatQueue = {\n    alt: /* #__PURE__ */ Data_Semigroup.append(semigroupCatQueue),\n    Functor0: function () {\n        return functorCatQueue;\n    }\n};\nvar plusCatQueue = {\n    empty: empty,\n    Alt0: function () {\n        return altCatQueue;\n    }\n};\nvar alternativeCatQueue = {\n    Applicative0: function () {\n        return applicativeCatQueue;\n    },\n    Plus1: function () {\n        return plusCatQueue;\n    }\n};\nvar monadPlusCatQueue = {\n    Monad0: function () {\n        return monadCatQueue;\n    },\n    Alternative1: function () {\n        return alternativeCatQueue;\n    }\n};\nexport {\n    CatQueue,\n    empty,\n    $$null as null,\n    singleton,\n    length,\n    cons,\n    snoc,\n    uncons,\n    unsnoc,\n    fromFoldable,\n    eqCatQueue,\n    ordCatQueue,\n    semigroupCatQueue,\n    monoidCatQueue,\n    showCatQueue,\n    foldableCatQueue,\n    unfoldable1CatQueue,\n    unfoldableCatQueue,\n    traversableCatQueue,\n    functorCatQueue,\n    applyCatQueue,\n    applicativeCatQueue,\n    bindCatQueue,\n    monadCatQueue,\n    altCatQueue,\n    plusCatQueue,\n    alternativeCatQueue,\n    monadPlusCatQueue\n};\n", "// Generated by purs version 0.15.15\nimport * as Control_Applicative from \"../Control.Applicative/index.js\";\nimport * as Control_Apply from \"../Control.Apply/index.js\";\nimport * as Control_Monad from \"../Control.Monad/index.js\";\nimport * as Data_CatQueue from \"../Data.CatQueue/index.js\";\nimport * as Data_Foldable from \"../Data.Foldable/index.js\";\nimport * as Data_Function from \"../Data.Function/index.js\";\nimport * as Data_Functor from \"../Data.Functor/index.js\";\nimport * as Data_List_Types from \"../Data.List.Types/index.js\";\nimport * as Data_Maybe from \"../Data.Maybe/index.js\";\nimport * as Data_Monoid from \"../Data.Monoid/index.js\";\nimport * as Data_Semigroup from \"../Data.Semigroup/index.js\";\nimport * as Data_Semiring from \"../Data.Semiring/index.js\";\nimport * as Data_Show from \"../Data.Show/index.js\";\nimport * as Data_Traversable from \"../Data.Traversable/index.js\";\nimport * as Data_Tuple from \"../Data.Tuple/index.js\";\nvar $runtime_lazy = function (name, moduleName, init) {\n    var state = 0;\n    var val;\n    return function (lineNumber) {\n        if (state === 2) return val;\n        if (state === 1) throw new ReferenceError(name + \" was needed before it finished initializing (module \" + moduleName + \", line \" + lineNumber + \")\", moduleName, lineNumber);\n        state = 1;\n        val = init();\n        state = 2;\n        return val;\n    };\n};\nvar CatNil = /* #__PURE__ */ (function () {\n    function CatNil() {\n\n    };\n    CatNil.value = new CatNil();\n    return CatNil;\n})();\nvar CatCons = /* #__PURE__ */ (function () {\n    function CatCons(value0, value1) {\n        this.value0 = value0;\n        this.value1 = value1;\n    };\n    CatCons.create = function (value0) {\n        return function (value1) {\n            return new CatCons(value0, value1);\n        };\n    };\n    return CatCons;\n})();\nvar showCatList = function (dictShow) {\n    var show = Data_Show.show(dictShow);\n    return {\n        show: function (v) {\n            if (v instanceof CatNil) {\n                return \"CatNil\";\n            };\n            if (v instanceof CatCons) {\n                return \"(CatList \" + (show(v.value0) + (\" \" + (Data_Show.show(Data_CatQueue.showCatQueue(showCatList(dictShow)))(v.value1) + \")\")));\n            };\n            throw new Error(\"Failed pattern match at Data.CatList (line 147, column 1 - line 149, column 71): \" + [ v.constructor.name ]);\n        }\n    };\n};\nvar $$null = function (v) {\n    if (v instanceof CatNil) {\n        return true;\n    };\n    return false;\n};\nvar link = function (v) {\n    return function (v1) {\n        if (v instanceof CatNil) {\n            return v1;\n        };\n        if (v1 instanceof CatNil) {\n            return v;\n        };\n        if (v instanceof CatCons) {\n            return new CatCons(v.value0, Data_CatQueue.snoc(v.value1)(v1));\n        };\n        throw new Error(\"Failed pattern match at Data.CatList (line 108, column 1 - line 108, column 54): \" + [ v.constructor.name, v1.constructor.name ]);\n    };\n};\nvar foldr = function (k) {\n    return function (b) {\n        return function (q) {\n            var foldl = function ($copy_v) {\n                return function ($copy_v1) {\n                    return function ($copy_v2) {\n                        var $tco_var_v = $copy_v;\n                        var $tco_var_v1 = $copy_v1;\n                        var $tco_done = false;\n                        var $tco_result;\n                        function $tco_loop(v, v1, v2) {\n                            if (v2 instanceof Data_List_Types.Nil) {\n                                $tco_done = true;\n                                return v1;\n                            };\n                            if (v2 instanceof Data_List_Types.Cons) {\n                                $tco_var_v = v;\n                                $tco_var_v1 = v(v1)(v2.value0);\n                                $copy_v2 = v2.value1;\n                                return;\n                            };\n                            throw new Error(\"Failed pattern match at Data.CatList (line 124, column 3 - line 124, column 59): \" + [ v.constructor.name, v1.constructor.name, v2.constructor.name ]);\n                        };\n                        while (!$tco_done) {\n                            $tco_result = $tco_loop($tco_var_v, $tco_var_v1, $copy_v2);\n                        };\n                        return $tco_result;\n                    };\n                };\n            };\n            var go = function ($copy_xs) {\n                return function ($copy_ys) {\n                    var $tco_var_xs = $copy_xs;\n                    var $tco_done1 = false;\n                    var $tco_result;\n                    function $tco_loop(xs, ys) {\n                        var v = Data_CatQueue.uncons(xs);\n                        if (v instanceof Data_Maybe.Nothing) {\n                            $tco_done1 = true;\n                            return foldl(function (x) {\n                                return function (i) {\n                                    return i(x);\n                                };\n                            })(b)(ys);\n                        };\n                        if (v instanceof Data_Maybe.Just) {\n                            $tco_var_xs = v.value0.value1;\n                            $copy_ys = new Data_List_Types.Cons(k(v.value0.value0), ys);\n                            return;\n                        };\n                        throw new Error(\"Failed pattern match at Data.CatList (line 120, column 14 - line 122, column 67): \" + [ v.constructor.name ]);\n                    };\n                    while (!$tco_done1) {\n                        $tco_result = $tco_loop($tco_var_xs, $copy_ys);\n                    };\n                    return $tco_result;\n                };\n            };\n            return go(q)(Data_List_Types.Nil.value);\n        };\n    };\n};\nvar uncons = function (v) {\n    if (v instanceof CatNil) {\n        return Data_Maybe.Nothing.value;\n    };\n    if (v instanceof CatCons) {\n        return new Data_Maybe.Just(new Data_Tuple.Tuple(v.value0, (function () {\n            var $66 = Data_CatQueue[\"null\"](v.value1);\n            if ($66) {\n                return CatNil.value;\n            };\n            return foldr(link)(CatNil.value)(v.value1);\n        })()));\n    };\n    throw new Error(\"Failed pattern match at Data.CatList (line 99, column 1 - line 99, column 61): \" + [ v.constructor.name ]);\n};\nvar foldableCatList = {\n    foldMap: function (dictMonoid) {\n        return Data_Foldable.foldMapDefaultL(foldableCatList)(dictMonoid);\n    },\n    foldr: function (f) {\n        return function (s) {\n            return function (l) {\n                return Data_Foldable.foldrDefault(foldableCatList)(f)(s)(l);\n            };\n        };\n    },\n    foldl: function (f) {\n        var go = function ($copy_acc) {\n            return function ($copy_q) {\n                var $tco_var_acc = $copy_acc;\n                var $tco_done = false;\n                var $tco_result;\n                function $tco_loop(acc, q) {\n                    var v = uncons(q);\n                    if (v instanceof Data_Maybe.Just) {\n                        $tco_var_acc = f(acc)(v.value0.value0);\n                        $copy_q = v.value0.value1;\n                        return;\n                    };\n                    if (v instanceof Data_Maybe.Nothing) {\n                        $tco_done = true;\n                        return acc;\n                    };\n                    throw new Error(\"Failed pattern match at Data.CatList (line 156, column 16 - line 158, column 22): \" + [ v.constructor.name ]);\n                };\n                while (!$tco_done) {\n                    $tco_result = $tco_loop($tco_var_acc, $copy_q);\n                };\n                return $tco_result;\n            };\n        };\n        return go;\n    }\n};\nvar length = /* #__PURE__ */ Data_Foldable.length(foldableCatList)(Data_Semiring.semiringInt);\nvar foldMap = function (dictMonoid) {\n    var mempty = Data_Monoid.mempty(dictMonoid);\n    var append2 = Data_Semigroup.append(dictMonoid.Semigroup0());\n    return function (v) {\n        return function (v1) {\n            if (v1 instanceof CatNil) {\n                return mempty;\n            };\n            if (v1 instanceof CatCons) {\n                var d = (function () {\n                    var $75 = Data_CatQueue[\"null\"](v1.value1);\n                    if ($75) {\n                        return CatNil.value;\n                    };\n                    return foldr(link)(CatNil.value)(v1.value1);\n                })();\n                return append2(v(v1.value0))(foldMap(dictMonoid)(v)(d));\n            };\n            throw new Error(\"Failed pattern match at Data.CatList (line 134, column 1 - line 134, column 62): \" + [ v.constructor.name, v1.constructor.name ]);\n        };\n    };\n};\nvar empty = /* #__PURE__ */ (function () {\n    return CatNil.value;\n})();\nvar append = link;\nvar cons = function (a) {\n    return function (cat) {\n        return append(new CatCons(a, Data_CatQueue.empty))(cat);\n    };\n};\nvar functorCatList = {\n    map: function (v) {\n        return function (v1) {\n            if (v1 instanceof CatNil) {\n                return CatNil.value;\n            };\n            if (v1 instanceof CatCons) {\n                var d = (function () {\n                    var $80 = Data_CatQueue[\"null\"](v1.value1);\n                    if ($80) {\n                        return CatNil.value;\n                    };\n                    return foldr(link)(CatNil.value)(v1.value1);\n                })();\n                return cons(v(v1.value0))(Data_Functor.map(functorCatList)(v)(d));\n            };\n            throw new Error(\"Failed pattern match at Data.CatList (line 184, column 1 - line 188, column 26): \" + [ v.constructor.name, v1.constructor.name ]);\n        };\n    }\n};\nvar singleton = function (a) {\n    return cons(a)(CatNil.value);\n};\nvar traversableCatList = {\n    traverse: function (dictApplicative) {\n        var pure = Control_Applicative.pure(dictApplicative);\n        var Apply0 = dictApplicative.Apply0();\n        var apply = Control_Apply.apply(Apply0);\n        var map = Data_Functor.map(Apply0.Functor0());\n        return function (v) {\n            return function (v1) {\n                if (v1 instanceof CatNil) {\n                    return pure(CatNil.value);\n                };\n                if (v1 instanceof CatCons) {\n                    var d = (function () {\n                        var $85 = Data_CatQueue[\"null\"](v1.value1);\n                        if ($85) {\n                            return CatNil.value;\n                        };\n                        return foldr(link)(CatNil.value)(v1.value1);\n                    })();\n                    return apply(map(cons)(v(v1.value0)))(Data_Traversable.traverse(traversableCatList)(dictApplicative)(v)(d));\n                };\n                throw new Error(\"Failed pattern match at Data.CatList (line 174, column 1 - line 182, column 33): \" + [ v.constructor.name, v1.constructor.name ]);\n            };\n        };\n    },\n    sequence: function (dictApplicative) {\n        var pure = Control_Applicative.pure(dictApplicative);\n        var Apply0 = dictApplicative.Apply0();\n        var apply = Control_Apply.apply(Apply0);\n        var map = Data_Functor.map(Apply0.Functor0());\n        return function (v) {\n            if (v instanceof CatNil) {\n                return pure(CatNil.value);\n            };\n            if (v instanceof CatCons) {\n                var d = (function () {\n                    var $89 = Data_CatQueue[\"null\"](v.value1);\n                    if ($89) {\n                        return CatNil.value;\n                    };\n                    return foldr(link)(CatNil.value)(v.value1);\n                })();\n                return apply(map(cons)(v.value0))(Data_Traversable.sequence(traversableCatList)(dictApplicative)(d));\n            };\n            throw new Error(\"Failed pattern match at Data.CatList (line 174, column 1 - line 182, column 33): \" + [ v.constructor.name ]);\n        };\n    },\n    Functor0: function () {\n        return functorCatList;\n    },\n    Foldable1: function () {\n        return foldableCatList;\n    }\n};\nvar semigroupCatList = {\n    append: append\n};\nvar monoidCatList = /* #__PURE__ */ (function () {\n    return {\n        mempty: CatNil.value,\n        Semigroup0: function () {\n            return semigroupCatList;\n        }\n    };\n})();\nvar monadCatList = {\n    Applicative0: function () {\n        return applicativeCatList;\n    },\n    Bind1: function () {\n        return bindCatList;\n    }\n};\nvar bindCatList = {\n    bind: /* #__PURE__ */ Data_Function.flip(/* #__PURE__ */ foldMap(monoidCatList)),\n    Apply0: function () {\n        return $lazy_applyCatList(0);\n    }\n};\nvar applicativeCatList = {\n    pure: singleton,\n    Apply0: function () {\n        return $lazy_applyCatList(0);\n    }\n};\nvar $lazy_applyCatList = /* #__PURE__ */ $runtime_lazy(\"applyCatList\", \"Data.CatList\", function () {\n    return {\n        apply: Control_Monad.ap(monadCatList),\n        Functor0: function () {\n            return functorCatList;\n        }\n    };\n});\nvar applyCatList = /* #__PURE__ */ $lazy_applyCatList(190);\nvar fromFoldable = function (dictFoldable) {\n    var foldMap1 = Data_Foldable.foldMap(dictFoldable)(monoidCatList);\n    return function (f) {\n        return foldMap1(singleton)(f);\n    };\n};\nvar snoc = function (cat) {\n    return function (a) {\n        return append(cat)(new CatCons(a, Data_CatQueue.empty));\n    };\n};\nvar unfoldable1CatList = {\n    unfoldr1: function (f) {\n        return function (b) {\n            var go = function ($copy_source) {\n                return function ($copy_memo) {\n                    var $tco_var_source = $copy_source;\n                    var $tco_done = false;\n                    var $tco_result;\n                    function $tco_loop(source, memo) {\n                        var v = f(source);\n                        if (v.value1 instanceof Data_Maybe.Nothing) {\n                            $tco_done = true;\n                            return snoc(memo)(v.value0);\n                        };\n                        if (v.value1 instanceof Data_Maybe.Just) {\n                            $tco_var_source = v.value1.value0;\n                            $copy_memo = snoc(memo)(v.value0);\n                            return;\n                        };\n                        throw new Error(\"Failed pattern match at Data.CatList (line 170, column 24 - line 172, column 57): \" + [ v.constructor.name ]);\n                    };\n                    while (!$tco_done) {\n                        $tco_result = $tco_loop($tco_var_source, $copy_memo);\n                    };\n                    return $tco_result;\n                };\n            };\n            return go(b)(CatNil.value);\n        };\n    }\n};\nvar unfoldableCatList = {\n    unfoldr: function (f) {\n        return function (b) {\n            var go = function ($copy_source) {\n                return function ($copy_memo) {\n                    var $tco_var_source = $copy_source;\n                    var $tco_done = false;\n                    var $tco_result;\n                    function $tco_loop(source, memo) {\n                        var v = f(source);\n                        if (v instanceof Data_Maybe.Nothing) {\n                            $tco_done = true;\n                            return memo;\n                        };\n                        if (v instanceof Data_Maybe.Just) {\n                            $tco_var_source = v.value0.value1;\n                            $copy_memo = snoc(memo)(v.value0.value0);\n                            return;\n                        };\n                        throw new Error(\"Failed pattern match at Data.CatList (line 163, column 24 - line 165, column 57): \" + [ v.constructor.name ]);\n                    };\n                    while (!$tco_done) {\n                        $tco_result = $tco_loop($tco_var_source, $copy_memo);\n                    };\n                    return $tco_result;\n                };\n            };\n            return go(b)(CatNil.value);\n        };\n    },\n    Unfoldable10: function () {\n        return unfoldable1CatList;\n    }\n};\nvar altCatList = {\n    alt: append,\n    Functor0: function () {\n        return functorCatList;\n    }\n};\nvar plusCatList = {\n    empty: empty,\n    Alt0: function () {\n        return altCatList;\n    }\n};\nvar alternativeCatList = {\n    Applicative0: function () {\n        return applicativeCatList;\n    },\n    Plus1: function () {\n        return plusCatList;\n    }\n};\nvar monadPlusCatList = {\n    Monad0: function () {\n        return monadCatList;\n    },\n    Alternative1: function () {\n        return alternativeCatList;\n    }\n};\nexport {\n    CatNil,\n    CatCons,\n    empty,\n    $$null as null,\n    singleton,\n    length,\n    append,\n    cons,\n    snoc,\n    uncons,\n    fromFoldable,\n    semigroupCatList,\n    monoidCatList,\n    showCatList,\n    foldableCatList,\n    unfoldableCatList,\n    unfoldable1CatList,\n    traversableCatList,\n    functorCatList,\n    applyCatList,\n    applicativeCatList,\n    bindCatList,\n    monadCatList,\n    altCatList,\n    plusCatList,\n    alternativeCatList,\n    monadPlusCatList\n};\n", "// Generated by purs version 0.15.15\nimport * as Control_Applicative from \"../Control.Applicative/index.js\";\nimport * as Control_Apply from \"../Control.Apply/index.js\";\nimport * as Control_Bind from \"../Control.Bind/index.js\";\nimport * as Control_Category from \"../Control.Category/index.js\";\nimport * as Control_Monad from \"../Control.Monad/index.js\";\nimport * as Control_Monad_Rec_Class from \"../Control.Monad.Rec.Class/index.js\";\nimport * as Data_CatList from \"../Data.CatList/index.js\";\nimport * as Data_Either from \"../Data.Either/index.js\";\nimport * as Data_Eq from \"../Data.Eq/index.js\";\nimport * as Data_Foldable from \"../Data.Foldable/index.js\";\nimport * as Data_Function from \"../Data.Function/index.js\";\nimport * as Data_Functor from \"../Data.Functor/index.js\";\nimport * as Data_Maybe from \"../Data.Maybe/index.js\";\nimport * as Data_Monoid from \"../Data.Monoid/index.js\";\nimport * as Data_Ord from \"../Data.Ord/index.js\";\nimport * as Data_Ordering from \"../Data.Ordering/index.js\";\nimport * as Data_Semigroup from \"../Data.Semigroup/index.js\";\nimport * as Data_Traversable from \"../Data.Traversable/index.js\";\nimport * as Unsafe_Coerce from \"../Unsafe.Coerce/index.js\";\nvar $runtime_lazy = function (name, moduleName, init) {\n    var state = 0;\n    var val;\n    return function (lineNumber) {\n        if (state === 2) return val;\n        if (state === 1) throw new ReferenceError(name + \" was needed before it finished initializing (module \" + moduleName + \", line \" + lineNumber + \")\", moduleName, lineNumber);\n        state = 1;\n        val = init();\n        state = 2;\n        return val;\n    };\n};\nvar append = /* #__PURE__ */ Data_Semigroup.append(Data_CatList.semigroupCatList);\nvar map = /* #__PURE__ */ Data_Functor.map(Data_Functor.functorFn);\nvar identity = /* #__PURE__ */ Control_Category.identity(Control_Category.categoryFn);\nvar ExpF = function (x) {\n    return x;\n};\nvar Free = /* #__PURE__ */ (function () {\n    function Free(value0, value1) {\n        this.value0 = value0;\n        this.value1 = value1;\n    };\n    Free.create = function (value0) {\n        return function (value1) {\n            return new Free(value0, value1);\n        };\n    };\n    return Free;\n})();\nvar Return = /* #__PURE__ */ (function () {\n    function Return(value0) {\n        this.value0 = value0;\n    };\n    Return.create = function (value0) {\n        return new Return(value0);\n    };\n    return Return;\n})();\nvar Bind = /* #__PURE__ */ (function () {\n    function Bind(value0, value1) {\n        this.value0 = value0;\n        this.value1 = value1;\n    };\n    Bind.create = function (value0) {\n        return function (value1) {\n            return new Bind(value0, value1);\n        };\n    };\n    return Bind;\n})();\nvar toView = function ($copy_v) {\n    var $tco_done = false;\n    var $tco_result;\n    function $tco_loop(v) {\n        var runExpF = function (v2) {\n            return v2;\n        };\n        var concatF = function (v2) {\n            return function (r) {\n                return new Free(v2.value0, append(v2.value1)(r));\n            };\n        };\n        if (v.value0 instanceof Return) {\n            var v2 = Data_CatList.uncons(v.value1);\n            if (v2 instanceof Data_Maybe.Nothing) {\n                $tco_done = true;\n                return new Return(v.value0.value0);\n            };\n            if (v2 instanceof Data_Maybe.Just) {\n                $copy_v = concatF(runExpF(v2.value0.value0)(v.value0.value0))(v2.value0.value1);\n                return;\n            };\n            throw new Error(\"Failed pattern match at Control.Monad.Free (line 227, column 7 - line 231, column 64): \" + [ v2.constructor.name ]);\n        };\n        if (v.value0 instanceof Bind) {\n            $tco_done = true;\n            return new Bind(v.value0.value0, function (a) {\n                return concatF(v.value0.value1(a))(v.value1);\n            });\n        };\n        throw new Error(\"Failed pattern match at Control.Monad.Free (line 225, column 3 - line 233, column 56): \" + [ v.value0.constructor.name ]);\n    };\n    while (!$tco_done) {\n        $tco_result = $tco_loop($copy_v);\n    };\n    return $tco_result;\n};\nvar runFreeM = function (dictFunctor) {\n    var map1 = Data_Functor.map(dictFunctor);\n    return function (dictMonadRec) {\n        var Monad0 = dictMonadRec.Monad0();\n        var map2 = Data_Functor.map(((Monad0.Bind1()).Apply0()).Functor0());\n        var pure1 = Control_Applicative.pure(Monad0.Applicative0());\n        var tailRecM = Control_Monad_Rec_Class.tailRecM(dictMonadRec);\n        return function (k) {\n            var go = function (f) {\n                var v = toView(f);\n                if (v instanceof Return) {\n                    return map2(Control_Monad_Rec_Class.Done.create)(pure1(v.value0));\n                };\n                if (v instanceof Bind) {\n                    return map2(Control_Monad_Rec_Class.Loop.create)(k(map1(v.value1)(v.value0)));\n                };\n                throw new Error(\"Failed pattern match at Control.Monad.Free (line 194, column 10 - line 196, column 37): \" + [ v.constructor.name ]);\n            };\n            return tailRecM(go);\n        };\n    };\n};\nvar runFree = function (dictFunctor) {\n    var map1 = Data_Functor.map(dictFunctor);\n    return function (k) {\n        var go = function ($copy_f) {\n            var $tco_done = false;\n            var $tco_result;\n            function $tco_loop(f) {\n                var v = toView(f);\n                if (v instanceof Return) {\n                    $tco_done = true;\n                    return v.value0;\n                };\n                if (v instanceof Bind) {\n                    $copy_f = k(map1(v.value1)(v.value0));\n                    return;\n                };\n                throw new Error(\"Failed pattern match at Control.Monad.Free (line 178, column 10 - line 180, column 33): \" + [ v.constructor.name ]);\n            };\n            while (!$tco_done) {\n                $tco_result = $tco_loop($copy_f);\n            };\n            return $tco_result;\n        };\n        return go;\n    };\n};\nvar resume$prime = function (k) {\n    return function (j) {\n        return function (f) {\n            var v = toView(f);\n            if (v instanceof Return) {\n                return j(v.value0);\n            };\n            if (v instanceof Bind) {\n                return k(v.value0)(v.value1);\n            };\n            throw new Error(\"Failed pattern match at Control.Monad.Free (line 213, column 17 - line 215, column 20): \" + [ v.constructor.name ]);\n        };\n    };\n};\nvar resume = function (dictFunctor) {\n    var map1 = Data_Functor.map(dictFunctor);\n    return resume$prime(function (g) {\n        return function (i) {\n            return new Data_Either.Left(map1(i)(g));\n        };\n    })(Data_Either.Right.create);\n};\nvar fromView = function (f) {\n    return new Free(f, Data_CatList.empty);\n};\nvar wrap = function (f) {\n    return fromView(new Bind(f, Unsafe_Coerce.unsafeCoerce));\n};\nvar suspendF = function (dictApplicative) {\n    var pure1 = Control_Applicative.pure(dictApplicative);\n    return function (f) {\n        return wrap(pure1(f));\n    };\n};\nvar freeMonad = {\n    Applicative0: function () {\n        return freeApplicative;\n    },\n    Bind1: function () {\n        return freeBind;\n    }\n};\nvar freeFunctor = {\n    map: function (k) {\n        return function (f) {\n            return Control_Bind.bindFlipped(freeBind)((function () {\n                var $189 = Control_Applicative.pure(freeApplicative);\n                return function ($190) {\n                    return $189(k($190));\n                };\n            })())(f);\n        };\n    }\n};\nvar freeBind = {\n    bind: function (v) {\n        return function (k) {\n            return new Free(v.value0, Data_CatList.snoc(v.value1)(k));\n        };\n    },\n    Apply0: function () {\n        return $lazy_freeApply(0);\n    }\n};\nvar freeApplicative = {\n    pure: function ($191) {\n        return fromView(Return.create($191));\n    },\n    Apply0: function () {\n        return $lazy_freeApply(0);\n    }\n};\nvar $lazy_freeApply = /* #__PURE__ */ $runtime_lazy(\"freeApply\", \"Control.Monad.Free\", function () {\n    return {\n        apply: Control_Monad.ap(freeMonad),\n        Functor0: function () {\n            return freeFunctor;\n        }\n    };\n});\nvar freeApply = /* #__PURE__ */ $lazy_freeApply(77);\nvar lift2 = /* #__PURE__ */ Control_Apply.lift2(freeApply);\nvar bind = /* #__PURE__ */ Control_Bind.bind(freeBind);\nvar pure = /* #__PURE__ */ Control_Applicative.pure(freeApplicative);\nvar join = /* #__PURE__ */ Control_Bind.join(freeBind);\nvar semigroupFree = function (dictSemigroup) {\n    return {\n        append: lift2(Data_Semigroup.append(dictSemigroup))\n    };\n};\nvar freeMonadRec = {\n    tailRecM: function (k) {\n        return function (a) {\n            return bind(k(a))(function (v) {\n                if (v instanceof Control_Monad_Rec_Class.Loop) {\n                    return Control_Monad_Rec_Class.tailRecM(freeMonadRec)(k)(v.value0);\n                };\n                if (v instanceof Control_Monad_Rec_Class.Done) {\n                    return pure(v.value0);\n                };\n                throw new Error(\"Failed pattern match at Control.Monad.Free (line 86, column 26 - line 88, column 21): \" + [ v.constructor.name ]);\n            });\n        };\n    },\n    Monad0: function () {\n        return freeMonad;\n    }\n};\nvar liftF = function (f) {\n    return fromView(new Bind(f, function ($192) {\n        return pure($192);\n    }));\n};\nvar freeMonadTrans = {\n    lift: function (dictMonad) {\n        return liftF;\n    }\n};\nvar monoidFree = function (dictMonoid) {\n    var semigroupFree1 = semigroupFree(dictMonoid.Semigroup0());\n    return {\n        mempty: pure(Data_Monoid.mempty(dictMonoid)),\n        Semigroup0: function () {\n            return semigroupFree1;\n        }\n    };\n};\nvar substFree = function (k) {\n    var go = function (f) {\n        var v = toView(f);\n        if (v instanceof Return) {\n            return pure(v.value0);\n        };\n        if (v instanceof Bind) {\n            return bind(k(v.value0))(map(go)(v.value1));\n        };\n        throw new Error(\"Failed pattern match at Control.Monad.Free (line 168, column 10 - line 170, column 33): \" + [ v.constructor.name ]);\n    };\n    return go;\n};\nvar hoistFree = function (k) {\n    return substFree(function ($193) {\n        return liftF(k($193));\n    });\n};\nvar foldableFree = function (dictFunctor) {\n    var resume1 = resume(dictFunctor);\n    return function (dictFoldable) {\n        var foldMap = Data_Foldable.foldMap(dictFoldable);\n        var foldl = Data_Foldable.foldl(dictFoldable);\n        var foldr = Data_Foldable.foldr(dictFoldable);\n        return {\n            foldMap: function (dictMonoid) {\n                var foldMap1 = foldMap(dictMonoid);\n                return function (f) {\n                    var $lazy_go = $runtime_lazy(\"go\", \"Control.Monad.Free\", function () {\n                        return function ($194) {\n                            return (function (v) {\n                                if (v instanceof Data_Either.Left) {\n                                    return foldMap1($lazy_go(94))(v.value0);\n                                };\n                                if (v instanceof Data_Either.Right) {\n                                    return f(v.value0);\n                                };\n                                throw new Error(\"Failed pattern match at Control.Monad.Free (line 93, column 21 - line 95, column 21): \" + [ v.constructor.name ]);\n                            })(resume1($194));\n                        };\n                    });\n                    var go = $lazy_go(93);\n                    return go;\n                };\n            },\n            foldl: function (f) {\n                var go = function (r) {\n                    return function ($195) {\n                        return (function (v) {\n                            if (v instanceof Data_Either.Left) {\n                                return foldl(go)(r)(v.value0);\n                            };\n                            if (v instanceof Data_Either.Right) {\n                                return f(r)(v.value0);\n                            };\n                            throw new Error(\"Failed pattern match at Control.Monad.Free (line 98, column 23 - line 100, column 23): \" + [ v.constructor.name ]);\n                        })(resume1($195));\n                    };\n                };\n                return go;\n            },\n            foldr: function (f) {\n                var go = function (r) {\n                    return function ($196) {\n                        return (function (v) {\n                            if (v instanceof Data_Either.Left) {\n                                return foldr(Data_Function.flip(go))(r)(v.value0);\n                            };\n                            if (v instanceof Data_Either.Right) {\n                                return f(v.value0)(r);\n                            };\n                            throw new Error(\"Failed pattern match at Control.Monad.Free (line 103, column 23 - line 105, column 23): \" + [ v.constructor.name ]);\n                        })(resume1($196));\n                    };\n                };\n                return go;\n            }\n        };\n    };\n};\nvar traversableFree = function (dictTraversable) {\n    var Functor0 = dictTraversable.Functor0();\n    var resume1 = resume(Functor0);\n    var traverse = Data_Traversable.traverse(dictTraversable);\n    var foldableFree1 = foldableFree(Functor0)(dictTraversable.Foldable1());\n    return {\n        traverse: function (dictApplicative) {\n            var map1 = Data_Functor.map((dictApplicative.Apply0()).Functor0());\n            var traverse1 = traverse(dictApplicative);\n            return function (f) {\n                var $lazy_go = $runtime_lazy(\"go\", \"Control.Monad.Free\", function () {\n                    return function ($197) {\n                        return (function (v) {\n                            if (v instanceof Data_Either.Left) {\n                                return map1(function ($198) {\n                                    return join(liftF($198));\n                                })(traverse1($lazy_go(111))(v.value0));\n                            };\n                            if (v instanceof Data_Either.Right) {\n                                return map1(pure)(f(v.value0));\n                            };\n                            throw new Error(\"Failed pattern match at Control.Monad.Free (line 110, column 21 - line 112, column 30): \" + [ v.constructor.name ]);\n                        })(resume1($197));\n                    };\n                });\n                var go = $lazy_go(110);\n                return go;\n            };\n        },\n        sequence: function (dictApplicative) {\n            return function (tma) {\n                return Data_Traversable.traverse(traversableFree(dictTraversable))(dictApplicative)(identity)(tma);\n            };\n        },\n        Functor0: function () {\n            return freeFunctor;\n        },\n        Foldable1: function () {\n            return foldableFree1;\n        }\n    };\n};\nvar foldFree = function (dictMonadRec) {\n    var Monad0 = dictMonadRec.Monad0();\n    var map1 = Data_Functor.map(((Monad0.Bind1()).Apply0()).Functor0());\n    var pure1 = Control_Applicative.pure(Monad0.Applicative0());\n    var tailRecM = Control_Monad_Rec_Class.tailRecM(dictMonadRec);\n    return function (k) {\n        var go = function (f) {\n            var v = toView(f);\n            if (v instanceof Return) {\n                return map1(Control_Monad_Rec_Class.Done.create)(pure1(v.value0));\n            };\n            if (v instanceof Bind) {\n                return map1(function ($199) {\n                    return Control_Monad_Rec_Class.Loop.create(v.value1($199));\n                })(k(v.value0));\n            };\n            throw new Error(\"Failed pattern match at Control.Monad.Free (line 158, column 10 - line 160, column 37): \" + [ v.constructor.name ]);\n        };\n        return tailRecM(go);\n    };\n};\nvar eqFree = function (dictFunctor) {\n    var resume1 = resume(dictFunctor);\n    return function (dictEq1) {\n        var eq1 = Data_Eq.eq1(dictEq1);\n        return function (dictEq) {\n            var eq = Data_Eq.eq(dictEq);\n            return {\n                eq: function (x) {\n                    return function (y) {\n                        var v = resume1(y);\n                        var v1 = resume1(x);\n                        if (v1 instanceof Data_Either.Left && v instanceof Data_Either.Left) {\n                            return eq1(eqFree(dictFunctor)(dictEq1)(dictEq))(v1.value0)(v.value0);\n                        };\n                        if (v1 instanceof Data_Either.Right && v instanceof Data_Either.Right) {\n                            return eq(v1.value0)(v.value0);\n                        };\n                        return false;\n                    };\n                }\n            };\n        };\n    };\n};\nvar ordFree = function (dictFunctor) {\n    var resume1 = resume(dictFunctor);\n    var eqFree1 = eqFree(dictFunctor);\n    return function (dictOrd1) {\n        var compare1 = Data_Ord.compare1(dictOrd1);\n        var eqFree2 = eqFree1(dictOrd1.Eq10());\n        return function (dictOrd) {\n            var compare = Data_Ord.compare(dictOrd);\n            var eqFree3 = eqFree2(dictOrd.Eq0());\n            return {\n                compare: function (x) {\n                    return function (y) {\n                        var v = resume1(y);\n                        var v1 = resume1(x);\n                        if (v1 instanceof Data_Either.Left && v instanceof Data_Either.Left) {\n                            return compare1(ordFree(dictFunctor)(dictOrd1)(dictOrd))(v1.value0)(v.value0);\n                        };\n                        if (v1 instanceof Data_Either.Left) {\n                            return Data_Ordering.LT.value;\n                        };\n                        if (v instanceof Data_Either.Left) {\n                            return Data_Ordering.GT.value;\n                        };\n                        if (v1 instanceof Data_Either.Right && v instanceof Data_Either.Right) {\n                            return compare(v1.value0)(v.value0);\n                        };\n                        throw new Error(\"Failed pattern match at Control.Monad.Free (line 56, column 17 - line 60, column 36): \" + [ v1.constructor.name, v.constructor.name ]);\n                    };\n                },\n                Eq0: function () {\n                    return eqFree3;\n                }\n            };\n        };\n    };\n};\nvar eq1Free = function (dictFunctor) {\n    var eqFree1 = eqFree(dictFunctor);\n    return function (dictEq1) {\n        var eqFree2 = eqFree1(dictEq1);\n        return {\n            eq1: function (dictEq) {\n                return Data_Eq.eq(eqFree2(dictEq));\n            }\n        };\n    };\n};\nvar ord1Free = function (dictFunctor) {\n    var ordFree1 = ordFree(dictFunctor);\n    var eq1Free1 = eq1Free(dictFunctor);\n    return function (dictOrd1) {\n        var ordFree2 = ordFree1(dictOrd1);\n        var eq1Free2 = eq1Free1(dictOrd1.Eq10());\n        return {\n            compare1: function (dictOrd) {\n                return Data_Ord.compare(ordFree2(dictOrd));\n            },\n            Eq10: function () {\n                return eq1Free2;\n            }\n        };\n    };\n};\nexport {\n    suspendF,\n    wrap,\n    liftF,\n    hoistFree,\n    foldFree,\n    substFree,\n    runFree,\n    runFreeM,\n    resume,\n    resume$prime,\n    eqFree,\n    eq1Free,\n    ordFree,\n    ord1Free,\n    freeFunctor,\n    freeBind,\n    freeApplicative,\n    freeApply,\n    freeMonad,\n    freeMonadTrans,\n    freeMonadRec,\n    foldableFree,\n    traversableFree,\n    semigroupFree,\n    monoidFree\n};\n", "// Generated by purs version 0.15.15\nimport * as Control_Alt from \"../Control.Alt/index.js\";\nimport * as Control_Applicative from \"../Control.Applicative/index.js\";\nimport * as Control_Apply from \"../Control.Apply/index.js\";\nimport * as Control_Bind from \"../Control.Bind/index.js\";\nimport * as Control_Monad from \"../Control.Monad/index.js\";\nimport * as Control_Monad_Cont_Class from \"../Control.Monad.Cont.Class/index.js\";\nimport * as Control_Monad_Error_Class from \"../Control.Monad.Error.Class/index.js\";\nimport * as Control_Monad_Reader_Class from \"../Control.Monad.Reader.Class/index.js\";\nimport * as Control_Monad_Rec_Class from \"../Control.Monad.Rec.Class/index.js\";\nimport * as Control_Monad_State_Class from \"../Control.Monad.State.Class/index.js\";\nimport * as Control_Monad_Trans_Class from \"../Control.Monad.Trans.Class/index.js\";\nimport * as Control_Monad_Writer_Class from \"../Control.Monad.Writer.Class/index.js\";\nimport * as Control_Plus from \"../Control.Plus/index.js\";\nimport * as Data_Functor from \"../Data.Functor/index.js\";\nimport * as Data_Monoid from \"../Data.Monoid/index.js\";\nimport * as Data_Semigroup from \"../Data.Semigroup/index.js\";\nimport * as Data_Tuple from \"../Data.Tuple/index.js\";\nimport * as Data_Unit from \"../Data.Unit/index.js\";\nimport * as Effect_Class from \"../Effect.Class/index.js\";\nvar StateT = function (x) {\n    return x;\n};\nvar withStateT = function (f) {\n    return function (v) {\n        return function ($193) {\n            return v(f($193));\n        };\n    };\n};\nvar runStateT = function (v) {\n    return v;\n};\nvar newtypeStateT = {\n    Coercible0: function () {\n        return undefined;\n    }\n};\nvar monadTransStateT = {\n    lift: function (dictMonad) {\n        var bind = Control_Bind.bind(dictMonad.Bind1());\n        var pure = Control_Applicative.pure(dictMonad.Applicative0());\n        return function (m) {\n            return function (s) {\n                return bind(m)(function (x) {\n                    return pure(new Data_Tuple.Tuple(x, s));\n                });\n            };\n        };\n    }\n};\nvar lift = /* #__PURE__ */ Control_Monad_Trans_Class.lift(monadTransStateT);\nvar mapStateT = function (f) {\n    return function (v) {\n        return function ($194) {\n            return f(v($194));\n        };\n    };\n};\nvar lazyStateT = {\n    defer: function (f) {\n        return function (s) {\n            var v = f(Data_Unit.unit);\n            return v(s);\n        };\n    }\n};\nvar functorStateT = function (dictFunctor) {\n    var map = Data_Functor.map(dictFunctor);\n    return {\n        map: function (f) {\n            return function (v) {\n                return function (s) {\n                    return map(function (v1) {\n                        return new Data_Tuple.Tuple(f(v1.value0), v1.value1);\n                    })(v(s));\n                };\n            };\n        }\n    };\n};\nvar execStateT = function (dictFunctor) {\n    var map = Data_Functor.map(dictFunctor);\n    return function (v) {\n        return function (s) {\n            return map(Data_Tuple.snd)(v(s));\n        };\n    };\n};\nvar evalStateT = function (dictFunctor) {\n    var map = Data_Functor.map(dictFunctor);\n    return function (v) {\n        return function (s) {\n            return map(Data_Tuple.fst)(v(s));\n        };\n    };\n};\nvar monadStateT = function (dictMonad) {\n    return {\n        Applicative0: function () {\n            return applicativeStateT(dictMonad);\n        },\n        Bind1: function () {\n            return bindStateT(dictMonad);\n        }\n    };\n};\nvar bindStateT = function (dictMonad) {\n    var bind = Control_Bind.bind(dictMonad.Bind1());\n    return {\n        bind: function (v) {\n            return function (f) {\n                return function (s) {\n                    return bind(v(s))(function (v1) {\n                        var v3 = f(v1.value0);\n                        return v3(v1.value1);\n                    });\n                };\n            };\n        },\n        Apply0: function () {\n            return applyStateT(dictMonad);\n        }\n    };\n};\nvar applyStateT = function (dictMonad) {\n    var functorStateT1 = functorStateT(((dictMonad.Bind1()).Apply0()).Functor0());\n    return {\n        apply: Control_Monad.ap(monadStateT(dictMonad)),\n        Functor0: function () {\n            return functorStateT1;\n        }\n    };\n};\nvar applicativeStateT = function (dictMonad) {\n    var pure = Control_Applicative.pure(dictMonad.Applicative0());\n    return {\n        pure: function (a) {\n            return function (s) {\n                return pure(new Data_Tuple.Tuple(a, s));\n            };\n        },\n        Apply0: function () {\n            return applyStateT(dictMonad);\n        }\n    };\n};\nvar semigroupStateT = function (dictMonad) {\n    var lift2 = Control_Apply.lift2(applyStateT(dictMonad));\n    return function (dictSemigroup) {\n        return {\n            append: lift2(Data_Semigroup.append(dictSemigroup))\n        };\n    };\n};\nvar monadAskStateT = function (dictMonadAsk) {\n    var Monad0 = dictMonadAsk.Monad0();\n    var monadStateT1 = monadStateT(Monad0);\n    return {\n        ask: lift(Monad0)(Control_Monad_Reader_Class.ask(dictMonadAsk)),\n        Monad0: function () {\n            return monadStateT1;\n        }\n    };\n};\nvar monadReaderStateT = function (dictMonadReader) {\n    var monadAskStateT1 = monadAskStateT(dictMonadReader.MonadAsk0());\n    return {\n        local: (function () {\n            var $195 = Control_Monad_Reader_Class.local(dictMonadReader);\n            return function ($196) {\n                return mapStateT($195($196));\n            };\n        })(),\n        MonadAsk0: function () {\n            return monadAskStateT1;\n        }\n    };\n};\nvar monadContStateT = function (dictMonadCont) {\n    var callCC = Control_Monad_Cont_Class.callCC(dictMonadCont);\n    var monadStateT1 = monadStateT(dictMonadCont.Monad0());\n    return {\n        callCC: function (f) {\n            return function (s) {\n                return callCC(function (c) {\n                    var v = f(function (a) {\n                        return function (s$prime) {\n                            return c(new Data_Tuple.Tuple(a, s$prime));\n                        };\n                    });\n                    return v(s);\n                });\n            };\n        },\n        Monad0: function () {\n            return monadStateT1;\n        }\n    };\n};\nvar monadEffectState = function (dictMonadEffect) {\n    var Monad0 = dictMonadEffect.Monad0();\n    var monadStateT1 = monadStateT(Monad0);\n    return {\n        liftEffect: (function () {\n            var $197 = lift(Monad0);\n            var $198 = Effect_Class.liftEffect(dictMonadEffect);\n            return function ($199) {\n                return $197($198($199));\n            };\n        })(),\n        Monad0: function () {\n            return monadStateT1;\n        }\n    };\n};\nvar monadRecStateT = function (dictMonadRec) {\n    var Monad0 = dictMonadRec.Monad0();\n    var bind = Control_Bind.bind(Monad0.Bind1());\n    var pure = Control_Applicative.pure(Monad0.Applicative0());\n    var tailRecM = Control_Monad_Rec_Class.tailRecM(dictMonadRec);\n    var monadStateT1 = monadStateT(Monad0);\n    return {\n        tailRecM: function (f) {\n            return function (a) {\n                var f$prime = function (v) {\n                    var v1 = f(v.value0);\n                    return bind(v1(v.value1))(function (v2) {\n                        return pure((function () {\n                            if (v2.value0 instanceof Control_Monad_Rec_Class.Loop) {\n                                return new Control_Monad_Rec_Class.Loop(new Data_Tuple.Tuple(v2.value0.value0, v2.value1));\n                            };\n                            if (v2.value0 instanceof Control_Monad_Rec_Class.Done) {\n                                return new Control_Monad_Rec_Class.Done(new Data_Tuple.Tuple(v2.value0.value0, v2.value1));\n                            };\n                            throw new Error(\"Failed pattern match at Control.Monad.State.Trans (line 87, column 16 - line 89, column 40): \" + [ v2.value0.constructor.name ]);\n                        })());\n                    });\n                };\n                return function (s) {\n                    return tailRecM(f$prime)(new Data_Tuple.Tuple(a, s));\n                };\n            };\n        },\n        Monad0: function () {\n            return monadStateT1;\n        }\n    };\n};\nvar monadStateStateT = function (dictMonad) {\n    var pure = Control_Applicative.pure(dictMonad.Applicative0());\n    var monadStateT1 = monadStateT(dictMonad);\n    return {\n        state: function (f) {\n            return function ($200) {\n                return pure(f($200));\n            };\n        },\n        Monad0: function () {\n            return monadStateT1;\n        }\n    };\n};\nvar monadTellStateT = function (dictMonadTell) {\n    var Monad1 = dictMonadTell.Monad1();\n    var Semigroup0 = dictMonadTell.Semigroup0();\n    var monadStateT1 = monadStateT(Monad1);\n    return {\n        tell: (function () {\n            var $201 = lift(Monad1);\n            var $202 = Control_Monad_Writer_Class.tell(dictMonadTell);\n            return function ($203) {\n                return $201($202($203));\n            };\n        })(),\n        Semigroup0: function () {\n            return Semigroup0;\n        },\n        Monad1: function () {\n            return monadStateT1;\n        }\n    };\n};\nvar monadWriterStateT = function (dictMonadWriter) {\n    var MonadTell1 = dictMonadWriter.MonadTell1();\n    var Monad1 = MonadTell1.Monad1();\n    var bind = Control_Bind.bind(Monad1.Bind1());\n    var listen = Control_Monad_Writer_Class.listen(dictMonadWriter);\n    var pure = Control_Applicative.pure(Monad1.Applicative0());\n    var pass = Control_Monad_Writer_Class.pass(dictMonadWriter);\n    var Monoid0 = dictMonadWriter.Monoid0();\n    var monadTellStateT1 = monadTellStateT(MonadTell1);\n    return {\n        listen: function (m) {\n            return function (s) {\n                return bind(listen(m(s)))(function (v) {\n                    return pure(new Data_Tuple.Tuple(new Data_Tuple.Tuple(v.value0.value0, v.value1), v.value0.value1));\n                });\n            };\n        },\n        pass: function (m) {\n            return function (s) {\n                return pass(bind(m(s))(function (v) {\n                    return pure(new Data_Tuple.Tuple(new Data_Tuple.Tuple(v.value0.value0, v.value1), v.value0.value1));\n                }));\n            };\n        },\n        Monoid0: function () {\n            return Monoid0;\n        },\n        MonadTell1: function () {\n            return monadTellStateT1;\n        }\n    };\n};\nvar monadThrowStateT = function (dictMonadThrow) {\n    var Monad0 = dictMonadThrow.Monad0();\n    var lift1 = lift(Monad0);\n    var throwError = Control_Monad_Error_Class.throwError(dictMonadThrow);\n    var monadStateT1 = monadStateT(Monad0);\n    return {\n        throwError: function (e) {\n            return lift1(throwError(e));\n        },\n        Monad0: function () {\n            return monadStateT1;\n        }\n    };\n};\nvar monadErrorStateT = function (dictMonadError) {\n    var catchError = Control_Monad_Error_Class.catchError(dictMonadError);\n    var monadThrowStateT1 = monadThrowStateT(dictMonadError.MonadThrow0());\n    return {\n        catchError: function (v) {\n            return function (h) {\n                return function (s) {\n                    return catchError(v(s))(function (e) {\n                        var v1 = h(e);\n                        return v1(s);\n                    });\n                };\n            };\n        },\n        MonadThrow0: function () {\n            return monadThrowStateT1;\n        }\n    };\n};\nvar monoidStateT = function (dictMonad) {\n    var pure = Control_Applicative.pure(applicativeStateT(dictMonad));\n    var semigroupStateT1 = semigroupStateT(dictMonad);\n    return function (dictMonoid) {\n        var semigroupStateT2 = semigroupStateT1(dictMonoid.Semigroup0());\n        return {\n            mempty: pure(Data_Monoid.mempty(dictMonoid)),\n            Semigroup0: function () {\n                return semigroupStateT2;\n            }\n        };\n    };\n};\nvar altStateT = function (dictMonad) {\n    return function (dictAlt) {\n        var alt = Control_Alt.alt(dictAlt);\n        var functorStateT1 = functorStateT(dictAlt.Functor0());\n        return {\n            alt: function (v) {\n                return function (v1) {\n                    return function (s) {\n                        return alt(v(s))(v1(s));\n                    };\n                };\n            },\n            Functor0: function () {\n                return functorStateT1;\n            }\n        };\n    };\n};\nvar plusStateT = function (dictMonad) {\n    var altStateT1 = altStateT(dictMonad);\n    return function (dictPlus) {\n        var empty = Control_Plus.empty(dictPlus);\n        var altStateT2 = altStateT1(dictPlus.Alt0());\n        return {\n            empty: function (v) {\n                return empty;\n            },\n            Alt0: function () {\n                return altStateT2;\n            }\n        };\n    };\n};\nvar alternativeStateT = function (dictMonad) {\n    var applicativeStateT1 = applicativeStateT(dictMonad);\n    var plusStateT1 = plusStateT(dictMonad);\n    return function (dictAlternative) {\n        var plusStateT2 = plusStateT1(dictAlternative.Plus1());\n        return {\n            Applicative0: function () {\n                return applicativeStateT1;\n            },\n            Plus1: function () {\n                return plusStateT2;\n            }\n        };\n    };\n};\nvar monadPlusStateT = function (dictMonadPlus) {\n    var Monad0 = dictMonadPlus.Monad0();\n    var monadStateT1 = monadStateT(Monad0);\n    var alternativeStateT1 = alternativeStateT(Monad0)(dictMonadPlus.Alternative1());\n    return {\n        Monad0: function () {\n            return monadStateT1;\n        },\n        Alternative1: function () {\n            return alternativeStateT1;\n        }\n    };\n};\nexport {\n    StateT,\n    runStateT,\n    evalStateT,\n    execStateT,\n    mapStateT,\n    withStateT,\n    newtypeStateT,\n    functorStateT,\n    applyStateT,\n    applicativeStateT,\n    altStateT,\n    plusStateT,\n    alternativeStateT,\n    bindStateT,\n    monadStateT,\n    monadRecStateT,\n    monadPlusStateT,\n    monadTransStateT,\n    lazyStateT,\n    monadEffectState,\n    monadContStateT,\n    monadThrowStateT,\n    monadErrorStateT,\n    monadAskStateT,\n    monadReaderStateT,\n    monadStateStateT,\n    monadTellStateT,\n    monadWriterStateT,\n    semigroupStateT,\n    monoidStateT\n};\nexport {\n    get,\n    gets,\n    modify,\n    modify_,\n    put,\n    state\n} from \"../Control.Monad.State.Class/index.js\";\nexport {\n    lift\n} from \"../Control.Monad.Trans.Class/index.js\";\n", "// Generated by purs version 0.15.15\nimport * as Unsafe_Coerce from \"../Unsafe.Coerce/index.js\";\nvar ChildQuery = /* #__PURE__ */ (function () {\n    function ChildQuery(value0, value1, value2) {\n        this.value0 = value0;\n        this.value1 = value1;\n        this.value2 = value2;\n    };\n    ChildQuery.create = function (value0) {\n        return function (value1) {\n            return function (value2) {\n                return new ChildQuery(value0, value1, value2);\n            };\n        };\n    };\n    return ChildQuery;\n})();\nvar unChildQueryBox = Unsafe_Coerce.unsafeCoerce;\nvar mkChildQueryBox = Unsafe_Coerce.unsafeCoerce;\nvar functorChildQuery = {\n    map: function (f) {\n        return unChildQueryBox(function (v) {\n            return mkChildQueryBox(new ChildQuery(function (dictApplicative) {\n                return v.value0(dictApplicative);\n            }, v.value1, function ($8) {\n                return f(v.value2($8));\n            }));\n        });\n    }\n};\nexport {\n    ChildQuery,\n    mkChildQueryBox,\n    unChildQueryBox,\n    functorChildQuery\n};\n", "export function reallyUnsafeRefEq(a) {\n  return function (b) {\n    return a === b;\n  };\n}\n", "// Generated by purs version 0.15.15\nimport * as $foreign from \"./foreign.js\";\nimport * as Data_Eq from \"../Data.Eq/index.js\";\nvar UnsafeRefEqFallback = function (x) {\n    return x;\n};\nvar UnsafeRefEq = function (x) {\n    return x;\n};\nvar unsafeRefEq = $foreign.reallyUnsafeRefEq;\nvar eqUnsafeRefEqFallback = function (dictEq) {\n    var eq = Data_Eq.eq(dictEq);\n    return {\n        eq: function (v) {\n            return function (v1) {\n                return unsafeRefEq(v)(v1) || eq(v)(v1);\n            };\n        }\n    };\n};\nvar eqUnsafeRefEq = {\n    eq: function (v) {\n        return function (v1) {\n            return unsafeRefEq(v)(v1);\n        };\n    }\n};\nexport {\n    reallyUnsafeRefEq\n} from \"./foreign.js\";\nexport {\n    unsafeRefEq,\n    UnsafeRefEq,\n    UnsafeRefEqFallback,\n    eqUnsafeRefEq,\n    eqUnsafeRefEqFallback\n};\n", "// Generated by purs version 0.15.15\nimport * as Control_Applicative from \"../Control.Applicative/index.js\";\nimport * as Control_Apply from \"../Control.Apply/index.js\";\nimport * as Control_Bind from \"../Control.Bind/index.js\";\nimport * as Data_Array from \"../Data.Array/index.js\";\nimport * as Data_Foldable from \"../Data.Foldable/index.js\";\nimport * as Data_Functor from \"../Data.Functor/index.js\";\nimport * as Data_Maybe from \"../Data.Maybe/index.js\";\nimport * as Data_Monoid from \"../Data.Monoid/index.js\";\nimport * as Data_Semigroup from \"../Data.Semigroup/index.js\";\nimport * as Data_Unit from \"../Data.Unit/index.js\";\nimport * as Effect from \"../Effect/index.js\";\nimport * as Effect_Ref from \"../Effect.Ref/index.js\";\nimport * as Effect_Unsafe from \"../Effect.Unsafe/index.js\";\nimport * as Safe_Coerce from \"../Safe.Coerce/index.js\";\nimport * as Unsafe_Reference from \"../Unsafe.Reference/index.js\";\nvar $$void = /* #__PURE__ */ Data_Functor[\"void\"](Effect.functorEffect);\nvar coerce = /* #__PURE__ */ Safe_Coerce.coerce();\nvar bind = /* #__PURE__ */ Control_Bind.bind(Effect.bindEffect);\nvar pure = /* #__PURE__ */ Control_Applicative.pure(Effect.applicativeEffect);\nvar append = /* #__PURE__ */ Data_Semigroup.append(Data_Semigroup.semigroupArray);\nvar traverse_ = /* #__PURE__ */ Data_Foldable.traverse_(Effect.applicativeEffect);\nvar traverse_1 = /* #__PURE__ */ traverse_(Data_Foldable.foldableArray);\nvar applySecond = /* #__PURE__ */ Control_Apply.applySecond(Effect.applyEffect);\nvar traverse_2 = /* #__PURE__ */ traverse_(Data_Foldable.foldableMaybe);\nvar Subscription = function (x) {\n    return x;\n};\nvar Listener = function (x) {\n    return x;\n};\nvar Emitter = function (x) {\n    return x;\n};\nvar unsubscribe = function (v) {\n    return v;\n};\nvar subscribe = function (v) {\n    return function (k) {\n        return v(function ($76) {\n            return $$void(k($76));\n        });\n    };\n};\nvar semigroupSubscription = /* #__PURE__ */ Effect.semigroupEffect(Data_Semigroup.semigroupUnit);\nvar notify = function (v) {\n    return function (a) {\n        return v(a);\n    };\n};\nvar monoidSubscription = /* #__PURE__ */ Effect.monoidEffect(Data_Monoid.monoidUnit);\nvar mempty = /* #__PURE__ */ Data_Monoid.mempty(/* #__PURE__ */ Data_Monoid.monoidFn(/* #__PURE__ */ Effect.monoidEffect(monoidSubscription)));\nvar makeEmitter = coerce;\nvar functorEmitter = {\n    map: function (f) {\n        return function (v) {\n            return function (k) {\n                return v(function ($77) {\n                    return k(f($77));\n                });\n            };\n        };\n    }\n};\nvar fold = function (f) {\n    return function (v) {\n        return function (b) {\n            return function (k) {\n                return function __do() {\n                    var result = Effect_Ref[\"new\"](b)();\n                    return v(function (a) {\n                        return bind(Effect_Ref.modify(f(a))(result))(k);\n                    })();\n                };\n            };\n        };\n    };\n};\nvar filter = function (p) {\n    return function (v) {\n        return function (k) {\n            return v(function (a) {\n                var $57 = p(a);\n                if ($57) {\n                    return k(a);\n                };\n                return pure(Data_Unit.unit);\n            });\n        };\n    };\n};\nvar create = function __do() {\n    var subscribers = Effect_Ref[\"new\"]([  ])();\n    return {\n        emitter: function (k) {\n            return function __do() {\n                Effect_Ref.modify_(function (v) {\n                    return append(v)([ k ]);\n                })(subscribers)();\n                return Effect_Ref.modify_(Data_Array.deleteBy(Unsafe_Reference.unsafeRefEq)(k))(subscribers);\n            };\n        },\n        listener: function (a) {\n            return bind(Effect_Ref.read(subscribers))(traverse_1(function (k) {\n                return k(a);\n            }));\n        }\n    };\n};\nvar fix = function (f) {\n    var v = Effect_Unsafe.unsafePerformEffect(create);\n    var v1 = f(v.emitter);\n    return function (k) {\n        return function __do() {\n            var v2 = subscribe(v1.input)(notify(v.listener))();\n            var v3 = subscribe(v1.output)(k)();\n            return applySecond(v2)(v3);\n        };\n    };\n};\nvar contravariantListener = {\n    cmap: function (f) {\n        return function (v) {\n            return coerce(function ($78) {\n                return v(f($78));\n            });\n        };\n    }\n};\nvar applyEmitter = {\n    apply: function (v) {\n        return function (v1) {\n            return function (k) {\n                return function __do() {\n                    var latestA = Effect_Ref[\"new\"](Data_Maybe.Nothing.value)();\n                    var latestB = Effect_Ref[\"new\"](Data_Maybe.Nothing.value)();\n                    var v2 = v(function (a) {\n                        return function __do() {\n                            Effect_Ref.write(new Data_Maybe.Just(a))(latestA)();\n                            return bind(Effect_Ref.read(latestB))(traverse_2(function ($79) {\n                                return k(a($79));\n                            }))();\n                        };\n                    })();\n                    var v3 = v1(function (b) {\n                        return function __do() {\n                            Effect_Ref.write(new Data_Maybe.Just(b))(latestB)();\n                            return bind(Effect_Ref.read(latestA))(traverse_2(function ($80) {\n                                return k((function (v3) {\n                                    return v3(b);\n                                })($80));\n                            }))();\n                        };\n                    })();\n                    return applySecond(v2)(v3);\n                };\n            };\n        };\n    },\n    Functor0: function () {\n        return functorEmitter;\n    }\n};\nvar lift2 = /* #__PURE__ */ Control_Apply.lift2(applyEmitter);\nvar semigroupEmitter = function (dictSemigroup) {\n    return {\n        append: lift2(Data_Semigroup.append(dictSemigroup))\n    };\n};\nvar monoidEmitter = function (dictMonoid) {\n    var semigroupEmitter1 = semigroupEmitter(dictMonoid.Semigroup0());\n    return {\n        mempty: mempty,\n        Semigroup0: function () {\n            return semigroupEmitter1;\n        }\n    };\n};\nvar applicativeEmitter = {\n    pure: function (a) {\n        return function (k) {\n            return function __do() {\n                k(a)();\n                return pure(Data_Unit.unit);\n            };\n        };\n    },\n    Apply0: function () {\n        return applyEmitter;\n    }\n};\nvar altEmitter = {\n    alt: function (v) {\n        return function (v1) {\n            return function (k) {\n                return function __do() {\n                    var v2 = v(k)();\n                    var v3 = v1(k)();\n                    return applySecond(v2)(v3);\n                };\n            };\n        };\n    },\n    Functor0: function () {\n        return functorEmitter;\n    }\n};\nvar plusEmitter = {\n    empty: function (v) {\n        return pure(pure(Data_Unit.unit));\n    },\n    Alt0: function () {\n        return altEmitter;\n    }\n};\nvar alternativeEmitter = {\n    Applicative0: function () {\n        return applicativeEmitter;\n    },\n    Plus1: function () {\n        return plusEmitter;\n    }\n};\nexport {\n    create,\n    notify,\n    makeEmitter,\n    subscribe,\n    unsubscribe,\n    fold,\n    filter,\n    fix,\n    functorEmitter,\n    applyEmitter,\n    applicativeEmitter,\n    altEmitter,\n    plusEmitter,\n    alternativeEmitter,\n    semigroupEmitter,\n    monoidEmitter,\n    contravariantListener,\n    semigroupSubscription,\n    monoidSubscription\n};\n", "// Generated by purs version 0.15.15\nimport * as Control_Applicative from \"../Control.Applicative/index.js\";\nimport * as Control_Applicative_Free from \"../Control.Applicative.Free/index.js\";\nimport * as Control_Bind from \"../Control.Bind/index.js\";\nimport * as Control_Category from \"../Control.Category/index.js\";\nimport * as Control_Monad_Error_Class from \"../Control.Monad.Error.Class/index.js\";\nimport * as Control_Monad_Free from \"../Control.Monad.Free/index.js\";\nimport * as Control_Monad_Reader_Class from \"../Control.Monad.Reader.Class/index.js\";\nimport * as Control_Monad_Rec_Class from \"../Control.Monad.Rec.Class/index.js\";\nimport * as Control_Monad_Writer_Class from \"../Control.Monad.Writer.Class/index.js\";\nimport * as Data_Bifunctor from \"../Data.Bifunctor/index.js\";\nimport * as Data_Eq from \"../Data.Eq/index.js\";\nimport * as Data_FoldableWithIndex from \"../Data.FoldableWithIndex/index.js\";\nimport * as Data_Function from \"../Data.Function/index.js\";\nimport * as Data_Functor from \"../Data.Functor/index.js\";\nimport * as Data_Map_Internal from \"../Data.Map.Internal/index.js\";\nimport * as Data_Maybe from \"../Data.Maybe/index.js\";\nimport * as Data_Newtype from \"../Data.Newtype/index.js\";\nimport * as Data_Ord from \"../Data.Ord/index.js\";\nimport * as Data_Traversable from \"../Data.Traversable/index.js\";\nimport * as Data_Tuple from \"../Data.Tuple/index.js\";\nimport * as Data_Unit from \"../Data.Unit/index.js\";\nimport * as Effect_Aff_Class from \"../Effect.Aff.Class/index.js\";\nimport * as Effect_Class from \"../Effect.Class/index.js\";\nimport * as Halogen_Data_Slot from \"../Halogen.Data.Slot/index.js\";\nimport * as Halogen_Query_ChildQuery from \"../Halogen.Query.ChildQuery/index.js\";\nimport * as Halogen_Subscription from \"../Halogen.Subscription/index.js\";\nvar identity = /* #__PURE__ */ Control_Category.identity(Control_Category.categoryFn);\nvar foldrWithIndex = /* #__PURE__ */ Data_FoldableWithIndex.foldrWithIndex(Data_Map_Internal.foldableWithIndexMap);\nvar traverse = /* #__PURE__ */ Data_Traversable.traverse(Data_Map_Internal.traversableMap);\nvar slots = /* #__PURE__ */ Halogen_Data_Slot.slots();\nvar lookup = /* #__PURE__ */ Halogen_Data_Slot.lookup();\nvar over = /* #__PURE__ */ Data_Newtype.over()();\nvar map = /* #__PURE__ */ Data_Functor.map(Halogen_Subscription.functorEmitter);\nvar map1 = /* #__PURE__ */ Data_Functor.map(Data_Tuple.functorTuple);\nvar lmap = /* #__PURE__ */ Data_Bifunctor.lmap(Data_Bifunctor.bifunctorTuple);\nvar map2 = /* #__PURE__ */ Data_Functor.map(Halogen_Query_ChildQuery.functorChildQuery);\nvar SubscriptionId = function (x) {\n    return x;\n};\nvar ForkId = function (x) {\n    return x;\n};\nvar State = /* #__PURE__ */ (function () {\n    function State(value0) {\n        this.value0 = value0;\n    };\n    State.create = function (value0) {\n        return new State(value0);\n    };\n    return State;\n})();\nvar Subscribe = /* #__PURE__ */ (function () {\n    function Subscribe(value0, value1) {\n        this.value0 = value0;\n        this.value1 = value1;\n    };\n    Subscribe.create = function (value0) {\n        return function (value1) {\n            return new Subscribe(value0, value1);\n        };\n    };\n    return Subscribe;\n})();\nvar Unsubscribe = /* #__PURE__ */ (function () {\n    function Unsubscribe(value0, value1) {\n        this.value0 = value0;\n        this.value1 = value1;\n    };\n    Unsubscribe.create = function (value0) {\n        return function (value1) {\n            return new Unsubscribe(value0, value1);\n        };\n    };\n    return Unsubscribe;\n})();\nvar Lift = /* #__PURE__ */ (function () {\n    function Lift(value0) {\n        this.value0 = value0;\n    };\n    Lift.create = function (value0) {\n        return new Lift(value0);\n    };\n    return Lift;\n})();\nvar ChildQuery = /* #__PURE__ */ (function () {\n    function ChildQuery(value0) {\n        this.value0 = value0;\n    };\n    ChildQuery.create = function (value0) {\n        return new ChildQuery(value0);\n    };\n    return ChildQuery;\n})();\nvar Raise = /* #__PURE__ */ (function () {\n    function Raise(value0, value1) {\n        this.value0 = value0;\n        this.value1 = value1;\n    };\n    Raise.create = function (value0) {\n        return function (value1) {\n            return new Raise(value0, value1);\n        };\n    };\n    return Raise;\n})();\nvar Par = /* #__PURE__ */ (function () {\n    function Par(value0) {\n        this.value0 = value0;\n    };\n    Par.create = function (value0) {\n        return new Par(value0);\n    };\n    return Par;\n})();\nvar Fork = /* #__PURE__ */ (function () {\n    function Fork(value0, value1) {\n        this.value0 = value0;\n        this.value1 = value1;\n    };\n    Fork.create = function (value0) {\n        return function (value1) {\n            return new Fork(value0, value1);\n        };\n    };\n    return Fork;\n})();\nvar Join = /* #__PURE__ */ (function () {\n    function Join(value0, value1) {\n        this.value0 = value0;\n        this.value1 = value1;\n    };\n    Join.create = function (value0) {\n        return function (value1) {\n            return new Join(value0, value1);\n        };\n    };\n    return Join;\n})();\nvar Kill = /* #__PURE__ */ (function () {\n    function Kill(value0, value1) {\n        this.value0 = value0;\n        this.value1 = value1;\n    };\n    Kill.create = function (value0) {\n        return function (value1) {\n            return new Kill(value0, value1);\n        };\n    };\n    return Kill;\n})();\nvar GetRef = /* #__PURE__ */ (function () {\n    function GetRef(value0, value1) {\n        this.value0 = value0;\n        this.value1 = value1;\n    };\n    GetRef.create = function (value0) {\n        return function (value1) {\n            return new GetRef(value0, value1);\n        };\n    };\n    return GetRef;\n})();\nvar HalogenAp = function (x) {\n    return x;\n};\nvar HalogenM = function (x) {\n    return x;\n};\nvar unsubscribe = function (sid) {\n    return Control_Monad_Free.liftF(new Unsubscribe(sid, Data_Unit.unit));\n};\nvar subscribe$prime = function (esc) {\n    return Control_Monad_Free.liftF(new Subscribe(esc, Data_Function[\"const\"](Data_Unit.unit)));\n};\nvar subscribe = function (es) {\n    return Control_Monad_Free.liftF(new Subscribe(function (v) {\n        return es;\n    }, identity));\n};\nvar semigroupHalogenM = function (dictSemigroup) {\n    return Control_Monad_Free.semigroupFree(dictSemigroup);\n};\nvar raise = function (o) {\n    return Control_Monad_Free.liftF(new Raise(o, Data_Unit.unit));\n};\nvar queryAll = function () {\n    return function (dictIsSymbol) {\n        var slots1 = slots(dictIsSymbol);\n        return function (dictOrd) {\n            var slots2 = slots1(dictOrd);\n            return function (label) {\n                return function (q) {\n                    var catMapMaybes = function (dictOrd1) {\n                        var insert = Data_Map_Internal.insert(dictOrd1);\n                        return foldrWithIndex(function (k) {\n                            return function (v) {\n                                return function (acc) {\n                                    return Data_Maybe.maybe(acc)(Data_Function.flip(insert(k))(acc))(v);\n                                };\n                            };\n                        })(Data_Map_Internal.empty);\n                    };\n                    var catMapMaybes1 = catMapMaybes(dictOrd);\n                    return Control_Monad_Free.liftF(new ChildQuery(Halogen_Query_ChildQuery.mkChildQueryBox(new Halogen_Query_ChildQuery.ChildQuery(function (dictApplicative) {\n                        var map4 = Data_Functor.map((dictApplicative.Apply0()).Functor0());\n                        var traverse1 = traverse(dictApplicative);\n                        return function (k) {\n                            var $173 = map4(catMapMaybes1);\n                            var $174 = traverse1(k);\n                            var $175 = slots2(label);\n                            return function ($176) {\n                                return $173($174($175($176)));\n                            };\n                        };\n                    }, q, identity))));\n                };\n            };\n        };\n    };\n};\nvar query = function () {\n    return function (dictIsSymbol) {\n        var lookup1 = lookup(dictIsSymbol);\n        return function (dictOrd) {\n            var lookup2 = lookup1(dictOrd);\n            return function (label) {\n                return function (p) {\n                    return function (q) {\n                        return Control_Monad_Free.liftF(new ChildQuery(Halogen_Query_ChildQuery.mkChildQueryBox(new Halogen_Query_ChildQuery.ChildQuery(function (dictApplicative) {\n                            var pure1 = Control_Applicative.pure(dictApplicative);\n                            return function (k) {\n                                var $177 = Data_Maybe.maybe(pure1(Data_Maybe.Nothing.value))(k);\n                                var $178 = lookup2(label)(p);\n                                return function ($179) {\n                                    return $177($178($179));\n                                };\n                            };\n                        }, q, identity))));\n                    };\n                };\n            };\n        };\n    };\n};\nvar ordSubscriptionId = Data_Ord.ordInt;\nvar ordForkId = Data_Ord.ordInt;\nvar newtypeHalogenAp = {\n    Coercible0: function () {\n        return undefined;\n    }\n};\nvar monoidHalogenM = function (dictMonoid) {\n    return Control_Monad_Free.monoidFree(dictMonoid);\n};\nvar monadTransHalogenM = {\n    lift: function (dictMonad) {\n        return function ($180) {\n            return HalogenM(Control_Monad_Free.liftF(Lift.create($180)));\n        };\n    }\n};\nvar monadHalogenM = Control_Monad_Free.freeMonad;\nvar monadStateHalogenM = {\n    state: function ($181) {\n        return HalogenM(Control_Monad_Free.liftF(State.create($181)));\n    },\n    Monad0: function () {\n        return monadHalogenM;\n    }\n};\nvar monadTellHalogenM = function (dictMonadTell) {\n    var Semigroup0 = dictMonadTell.Semigroup0();\n    return {\n        tell: (function () {\n            var $182 = Control_Monad_Writer_Class.tell(dictMonadTell);\n            return function ($183) {\n                return HalogenM(Control_Monad_Free.liftF(Lift.create($182($183))));\n            };\n        })(),\n        Semigroup0: function () {\n            return Semigroup0;\n        },\n        Monad1: function () {\n            return monadHalogenM;\n        }\n    };\n};\nvar monadThrowHalogenM = function (dictMonadThrow) {\n    return {\n        throwError: (function () {\n            var $184 = Control_Monad_Error_Class.throwError(dictMonadThrow);\n            return function ($185) {\n                return HalogenM(Control_Monad_Free.liftF(Lift.create($184($185))));\n            };\n        })(),\n        Monad0: function () {\n            return monadHalogenM;\n        }\n    };\n};\nvar monadEffectHalogenM = function (dictMonadEffect) {\n    return {\n        liftEffect: (function () {\n            var $186 = Effect_Class.liftEffect(dictMonadEffect);\n            return function ($187) {\n                return HalogenM(Control_Monad_Free.liftF(Lift.create($186($187))));\n            };\n        })(),\n        Monad0: function () {\n            return monadHalogenM;\n        }\n    };\n};\nvar monadAskHalogenM = function (dictMonadAsk) {\n    return {\n        ask: Control_Monad_Free.liftF(new Lift(Control_Monad_Reader_Class.ask(dictMonadAsk))),\n        Monad0: function () {\n            return monadHalogenM;\n        }\n    };\n};\nvar monadAffHalogenM = function (dictMonadAff) {\n    var monadEffectHalogenM1 = monadEffectHalogenM(dictMonadAff.MonadEffect0());\n    return {\n        liftAff: (function () {\n            var $188 = Effect_Aff_Class.liftAff(dictMonadAff);\n            return function ($189) {\n                return HalogenM(Control_Monad_Free.liftF(Lift.create($188($189))));\n            };\n        })(),\n        MonadEffect0: function () {\n            return monadEffectHalogenM1;\n        }\n    };\n};\nvar mapOutput = function (f) {\n    return function (v) {\n        var go = function (v1) {\n            if (v1 instanceof State) {\n                return new State(v1.value0);\n            };\n            if (v1 instanceof Subscribe) {\n                return new Subscribe(v1.value0, v1.value1);\n            };\n            if (v1 instanceof Unsubscribe) {\n                return new Unsubscribe(v1.value0, v1.value1);\n            };\n            if (v1 instanceof Lift) {\n                return new Lift(v1.value0);\n            };\n            if (v1 instanceof ChildQuery) {\n                return new ChildQuery(v1.value0);\n            };\n            if (v1 instanceof Raise) {\n                return new Raise(f(v1.value0), v1.value1);\n            };\n            if (v1 instanceof Par) {\n                return new Par(over(HalogenAp)(Control_Applicative_Free.hoistFreeAp(mapOutput(f)))(v1.value0));\n            };\n            if (v1 instanceof Fork) {\n                return new Fork(mapOutput(f)(v1.value0), v1.value1);\n            };\n            if (v1 instanceof Join) {\n                return new Join(v1.value0, v1.value1);\n            };\n            if (v1 instanceof Kill) {\n                return new Kill(v1.value0, v1.value1);\n            };\n            if (v1 instanceof GetRef) {\n                return new GetRef(v1.value0, v1.value1);\n            };\n            throw new Error(\"Failed pattern match at Halogen.Query.HalogenM (line 290, column 8 - line 301, column 29): \" + [ v1.constructor.name ]);\n        };\n        return Control_Monad_Free.hoistFree(go)(v);\n    };\n};\nvar mapAction = function (dictFunctor) {\n    return function (f) {\n        return function (v) {\n            var go = function (v1) {\n                if (v1 instanceof State) {\n                    return new State(v1.value0);\n                };\n                if (v1 instanceof Subscribe) {\n                    return new Subscribe((function () {\n                        var $190 = map(f);\n                        return function ($191) {\n                            return $190(v1.value0($191));\n                        };\n                    })(), v1.value1);\n                };\n                if (v1 instanceof Unsubscribe) {\n                    return new Unsubscribe(v1.value0, v1.value1);\n                };\n                if (v1 instanceof Lift) {\n                    return new Lift(v1.value0);\n                };\n                if (v1 instanceof ChildQuery) {\n                    return new ChildQuery(v1.value0);\n                };\n                if (v1 instanceof Raise) {\n                    return new Raise(v1.value0, v1.value1);\n                };\n                if (v1 instanceof Par) {\n                    return new Par(over(HalogenAp)(Control_Applicative_Free.hoistFreeAp(mapAction(dictFunctor)(f)))(v1.value0));\n                };\n                if (v1 instanceof Fork) {\n                    return new Fork(mapAction(dictFunctor)(f)(v1.value0), v1.value1);\n                };\n                if (v1 instanceof Join) {\n                    return new Join(v1.value0, v1.value1);\n                };\n                if (v1 instanceof Kill) {\n                    return new Kill(v1.value0, v1.value1);\n                };\n                if (v1 instanceof GetRef) {\n                    return new GetRef(v1.value0, v1.value1);\n                };\n                throw new Error(\"Failed pattern match at Halogen.Query.HalogenM (line 269, column 8 - line 280, column 29): \" + [ v1.constructor.name ]);\n            };\n            return Control_Monad_Free.hoistFree(go)(v);\n        };\n    };\n};\nvar kill = function (fid) {\n    return Control_Monad_Free.liftF(new Kill(fid, Data_Unit.unit));\n};\nvar join = function (fid) {\n    return Control_Monad_Free.liftF(new Join(fid, Data_Unit.unit));\n};\nvar imapState = function (f) {\n    return function (f$prime) {\n        return function (v) {\n            var go = function (v1) {\n                if (v1 instanceof State) {\n                    return new State((function () {\n                        var $192 = map1(f);\n                        return function ($193) {\n                            return $192(v1.value0(f$prime($193)));\n                        };\n                    })());\n                };\n                if (v1 instanceof Subscribe) {\n                    return new Subscribe(v1.value0, v1.value1);\n                };\n                if (v1 instanceof Unsubscribe) {\n                    return new Unsubscribe(v1.value0, v1.value1);\n                };\n                if (v1 instanceof Lift) {\n                    return new Lift(v1.value0);\n                };\n                if (v1 instanceof ChildQuery) {\n                    return new ChildQuery(v1.value0);\n                };\n                if (v1 instanceof Raise) {\n                    return new Raise(v1.value0, v1.value1);\n                };\n                if (v1 instanceof Par) {\n                    return new Par(over(HalogenAp)(Control_Applicative_Free.hoistFreeAp(imapState(f)(f$prime)))(v1.value0));\n                };\n                if (v1 instanceof Fork) {\n                    return new Fork(imapState(f)(f$prime)(v1.value0), v1.value1);\n                };\n                if (v1 instanceof Join) {\n                    return new Join(v1.value0, v1.value1);\n                };\n                if (v1 instanceof Kill) {\n                    return new Kill(v1.value0, v1.value1);\n                };\n                if (v1 instanceof GetRef) {\n                    return new GetRef(v1.value0, v1.value1);\n                };\n                throw new Error(\"Failed pattern match at Halogen.Query.HalogenM (line 247, column 8 - line 258, column 29): \" + [ v1.constructor.name ]);\n            };\n            return Control_Monad_Free.hoistFree(go)(v);\n        };\n    };\n};\nvar hoist = function (dictFunctor) {\n    return function (nat) {\n        return function (v) {\n            var go = function (v1) {\n                if (v1 instanceof State) {\n                    return new State(v1.value0);\n                };\n                if (v1 instanceof Subscribe) {\n                    return new Subscribe(v1.value0, v1.value1);\n                };\n                if (v1 instanceof Unsubscribe) {\n                    return new Unsubscribe(v1.value0, v1.value1);\n                };\n                if (v1 instanceof Lift) {\n                    return new Lift(nat(v1.value0));\n                };\n                if (v1 instanceof ChildQuery) {\n                    return new ChildQuery(v1.value0);\n                };\n                if (v1 instanceof Raise) {\n                    return new Raise(v1.value0, v1.value1);\n                };\n                if (v1 instanceof Par) {\n                    return new Par(over(HalogenAp)(Control_Applicative_Free.hoistFreeAp(hoist(dictFunctor)(nat)))(v1.value0));\n                };\n                if (v1 instanceof Fork) {\n                    return new Fork(hoist(dictFunctor)(nat)(v1.value0), v1.value1);\n                };\n                if (v1 instanceof Join) {\n                    return new Join(v1.value0, v1.value1);\n                };\n                if (v1 instanceof Kill) {\n                    return new Kill(v1.value0, v1.value1);\n                };\n                if (v1 instanceof GetRef) {\n                    return new GetRef(v1.value0, v1.value1);\n                };\n                throw new Error(\"Failed pattern match at Halogen.Query.HalogenM (line 312, column 8 - line 323, column 29): \" + [ v1.constructor.name ]);\n            };\n            return Control_Monad_Free.hoistFree(go)(v);\n        };\n    };\n};\nvar getRef = function (p) {\n    return Control_Monad_Free.liftF(new GetRef(p, identity));\n};\nvar functorHalogenM = Control_Monad_Free.freeFunctor;\nvar functorHalogenAp = Control_Applicative_Free.functorFreeAp;\nvar map3 = /* #__PURE__ */ Data_Functor.map(functorHalogenAp);\nvar functorHalogenF = function (dictFunctor) {\n    var map4 = Data_Functor.map(dictFunctor);\n    return {\n        map: function (f) {\n            return function (v) {\n                if (v instanceof State) {\n                    return new State((function () {\n                        var $194 = lmap(f);\n                        return function ($195) {\n                            return $194(v.value0($195));\n                        };\n                    })());\n                };\n                if (v instanceof Subscribe) {\n                    return new Subscribe(v.value0, function ($196) {\n                        return f(v.value1($196));\n                    });\n                };\n                if (v instanceof Unsubscribe) {\n                    return new Unsubscribe(v.value0, f(v.value1));\n                };\n                if (v instanceof Lift) {\n                    return new Lift(map4(f)(v.value0));\n                };\n                if (v instanceof ChildQuery) {\n                    return new ChildQuery(map2(f)(v.value0));\n                };\n                if (v instanceof Raise) {\n                    return new Raise(v.value0, f(v.value1));\n                };\n                if (v instanceof Par) {\n                    return new Par(map3(f)(v.value0));\n                };\n                if (v instanceof Fork) {\n                    return new Fork(v.value0, function ($197) {\n                        return f(v.value1($197));\n                    });\n                };\n                if (v instanceof Join) {\n                    return new Join(v.value0, f(v.value1));\n                };\n                if (v instanceof Kill) {\n                    return new Kill(v.value0, f(v.value1));\n                };\n                if (v instanceof GetRef) {\n                    return new GetRef(v.value0, function ($198) {\n                        return f(v.value1($198));\n                    });\n                };\n                throw new Error(\"Failed pattern match at Halogen.Query.HalogenM (line 57, column 11 - line 68, column 37): \" + [ v.constructor.name ]);\n            };\n        }\n    };\n};\nvar fork = function (hmu) {\n    return Control_Monad_Free.liftF(new Fork(hmu, identity));\n};\nvar eqSubscriptionId = Data_Eq.eqInt;\nvar eqForkId = Data_Eq.eqInt;\nvar bindHalogenM = Control_Monad_Free.freeBind;\nvar bind = /* #__PURE__ */ Control_Bind.bind(bindHalogenM);\nvar applyHalogenM = Control_Monad_Free.freeApply;\nvar applyHalogenAp = Control_Applicative_Free.applyFreeAp;\nvar parallelHalogenM = {\n    parallel: function ($199) {\n        return HalogenAp(Control_Applicative_Free.liftFreeAp($199));\n    },\n    sequential: function ($200) {\n        return HalogenM(Control_Monad_Free.liftF(Par.create($200)));\n    },\n    Apply0: function () {\n        return applyHalogenM;\n    },\n    Apply1: function () {\n        return applyHalogenAp;\n    }\n};\nvar applicativeHalogenM = Control_Monad_Free.freeApplicative;\nvar pure = /* #__PURE__ */ Control_Applicative.pure(applicativeHalogenM);\nvar monadRecHalogenM = {\n    tailRecM: function (k) {\n        return function (a) {\n            return bind(k(a))(function (v) {\n                if (v instanceof Control_Monad_Rec_Class.Loop) {\n                    return Control_Monad_Rec_Class.tailRecM(monadRecHalogenM)(k)(v.value0);\n                };\n                if (v instanceof Control_Monad_Rec_Class.Done) {\n                    return pure(v.value0);\n                };\n                throw new Error(\"Failed pattern match at Halogen.Query.HalogenM (line 105, column 26 - line 107, column 21): \" + [ v.constructor.name ]);\n            });\n        };\n    },\n    Monad0: function () {\n        return monadHalogenM;\n    }\n};\nvar applicativeHalogenAp = Control_Applicative_Free.applicativeFreeAp;\nexport {\n    State,\n    Subscribe,\n    Unsubscribe,\n    Lift,\n    ChildQuery,\n    Raise,\n    Par,\n    Fork,\n    Join,\n    Kill,\n    GetRef,\n    HalogenM,\n    HalogenAp,\n    raise,\n    query,\n    queryAll,\n    SubscriptionId,\n    subscribe,\n    subscribe$prime,\n    unsubscribe,\n    ForkId,\n    fork,\n    join,\n    kill,\n    getRef,\n    imapState,\n    mapAction,\n    mapOutput,\n    hoist,\n    functorHalogenF,\n    functorHalogenM,\n    applyHalogenM,\n    applicativeHalogenM,\n    bindHalogenM,\n    monadHalogenM,\n    semigroupHalogenM,\n    monoidHalogenM,\n    monadEffectHalogenM,\n    monadAffHalogenM,\n    parallelHalogenM,\n    monadTransHalogenM,\n    monadRecHalogenM,\n    monadStateHalogenM,\n    monadAskHalogenM,\n    monadTellHalogenM,\n    monadThrowHalogenM,\n    newtypeHalogenAp,\n    functorHalogenAp,\n    applyHalogenAp,\n    applicativeHalogenAp,\n    eqSubscriptionId,\n    ordSubscriptionId,\n    eqForkId,\n    ordForkId\n};\n", "// Generated by purs version 0.15.15\nimport * as Data_Coyoneda from \"../Data.Coyoneda/index.js\";\nimport * as Data_Functor from \"../Data.Functor/index.js\";\nvar map = /* #__PURE__ */ Data_Functor.map(Data_Coyoneda.functorCoyoneda);\nvar map1 = /* #__PURE__ */ Data_Functor.map(Data_Functor.functorFn);\nvar Initialize = /* #__PURE__ */ (function () {\n    function Initialize(value0) {\n        this.value0 = value0;\n    };\n    Initialize.create = function (value0) {\n        return new Initialize(value0);\n    };\n    return Initialize;\n})();\nvar Finalize = /* #__PURE__ */ (function () {\n    function Finalize(value0) {\n        this.value0 = value0;\n    };\n    Finalize.create = function (value0) {\n        return new Finalize(value0);\n    };\n    return Finalize;\n})();\nvar Receive = /* #__PURE__ */ (function () {\n    function Receive(value0, value1) {\n        this.value0 = value0;\n        this.value1 = value1;\n    };\n    Receive.create = function (value0) {\n        return function (value1) {\n            return new Receive(value0, value1);\n        };\n    };\n    return Receive;\n})();\nvar Action = /* #__PURE__ */ (function () {\n    function Action(value0, value1) {\n        this.value0 = value0;\n        this.value1 = value1;\n    };\n    Action.create = function (value0) {\n        return function (value1) {\n            return new Action(value0, value1);\n        };\n    };\n    return Action;\n})();\nvar Query = /* #__PURE__ */ (function () {\n    function Query(value0, value1) {\n        this.value0 = value0;\n        this.value1 = value1;\n    };\n    Query.create = function (value0) {\n        return function (value1) {\n            return new Query(value0, value1);\n        };\n    };\n    return Query;\n})();\nvar functorHalogenQ = {\n    map: function (f) {\n        return function (m) {\n            if (m instanceof Initialize) {\n                return new Initialize(f(m.value0));\n            };\n            if (m instanceof Finalize) {\n                return new Finalize(f(m.value0));\n            };\n            if (m instanceof Receive) {\n                return new Receive(m.value0, f(m.value1));\n            };\n            if (m instanceof Action) {\n                return new Action(m.value0, f(m.value1));\n            };\n            if (m instanceof Query) {\n                return new Query(map(f)(m.value0), map1(f)(m.value1));\n            };\n            throw new Error(\"Failed pattern match at Halogen.Query.HalogenQ (line 0, column 0 - line 0, column 0): \" + [ m.constructor.name ]);\n        };\n    }\n};\nvar bifunctorHalogenQ = {\n    bimap: function (f) {\n        return function (g) {\n            return function (v) {\n                if (v instanceof Initialize) {\n                    return new Initialize(g(v.value0));\n                };\n                if (v instanceof Finalize) {\n                    return new Finalize(g(v.value0));\n                };\n                if (v instanceof Receive) {\n                    return new Receive(f(v.value0), g(v.value1));\n                };\n                if (v instanceof Action) {\n                    return new Action(v.value0, g(v.value1));\n                };\n                if (v instanceof Query) {\n                    return new Query(map(g)(v.value0), map1(g)(v.value1));\n                };\n                throw new Error(\"Failed pattern match at Halogen.Query.HalogenQ (line 16, column 15 - line 21, column 45): \" + [ v.constructor.name ]);\n            };\n        };\n    }\n};\nexport {\n    Initialize,\n    Finalize,\n    Receive,\n    Action,\n    Query,\n    bifunctorHalogenQ,\n    functorHalogenQ\n};\n", "// Generated by purs version 0.15.15\nimport * as Data_Function_Uncurried from \"../Data.Function.Uncurried/index.js\";\nimport * as Data_Functor from \"../Data.Functor/index.js\";\nimport * as Halogen_VDom_DOM from \"../Halogen.VDom.DOM/index.js\";\nimport * as Halogen_VDom_Machine from \"../Halogen.VDom.Machine/index.js\";\nimport * as Halogen_VDom_Util from \"../Halogen.VDom.Util/index.js\";\nimport * as Unsafe_Coerce from \"../Unsafe.Coerce/index.js\";\nvar $runtime_lazy = function (name, moduleName, init) {\n    var state = 0;\n    var val;\n    return function (lineNumber) {\n        if (state === 2) return val;\n        if (state === 1) throw new ReferenceError(name + \" was needed before it finished initializing (module \" + moduleName + \", line \" + lineNumber + \")\", moduleName, lineNumber);\n        state = 1;\n        val = init();\n        state = 2;\n        return val;\n    };\n};\nvar Thunk = /* #__PURE__ */ (function () {\n    function Thunk(value0, value1, value2, value3) {\n        this.value0 = value0;\n        this.value1 = value1;\n        this.value2 = value2;\n        this.value3 = value3;\n    };\n    Thunk.create = function (value0) {\n        return function (value1) {\n            return function (value2) {\n                return function (value3) {\n                    return new Thunk(value0, value1, value2, value3);\n                };\n            };\n        };\n    };\n    return Thunk;\n})();\nvar unsafeThunkId = Unsafe_Coerce.unsafeCoerce;\nvar unsafeEqThunk = function (v, v1) {\n    return Halogen_VDom_Util.refEq(v.value0, v1.value0) && (Halogen_VDom_Util.refEq(v.value1, v1.value1) && v.value1(v.value3, v1.value3));\n};\nvar thunk = function (tid, eqFn, f, a) {\n    return new Thunk(tid, eqFn, f, a);\n};\nvar thunk1 = function (f, a) {\n    return thunk(unsafeThunkId(f), Halogen_VDom_Util.refEq, f, a);\n};\nvar thunk2 = /* #__PURE__ */ (function () {\n    var eqFn = function (a, b) {\n        return Halogen_VDom_Util.refEq(a[\"_1\"], b[\"_1\"]) && Halogen_VDom_Util.refEq(a[\"_2\"], b[\"_2\"]);\n    };\n    return function (f, a, b) {\n        return thunk(unsafeThunkId(f), eqFn, function (v) {\n            return f(v[\"_1\"])(v[\"_2\"]);\n        }, {\n            \"_1\": a,\n            \"_2\": b\n        });\n    };\n})();\nvar thunk3 = /* #__PURE__ */ (function () {\n    var eqFn = function (a, b) {\n        return Halogen_VDom_Util.refEq(a[\"_1\"], b[\"_1\"]) && (Halogen_VDom_Util.refEq(a[\"_2\"], b[\"_2\"]) && Halogen_VDom_Util.refEq(a[\"_3\"], b[\"_3\"]));\n    };\n    return function (f, a, b, c) {\n        return thunk(unsafeThunkId(f), eqFn, function (v) {\n            return f(v[\"_1\"])(v[\"_2\"])(v[\"_3\"]);\n        }, {\n            \"_1\": a,\n            \"_2\": b,\n            \"_3\": c\n        });\n    };\n})();\nvar thunked = function (eqFn) {\n    return function (f) {\n        var tid = unsafeThunkId({\n            f: f\n        });\n        var eqFn$prime = Data_Function_Uncurried.mkFn2(eqFn);\n        return function (a) {\n            return thunk(tid, eqFn$prime, f, a);\n        };\n    };\n};\nvar runThunk = function (v) {\n    return v.value2(v.value3);\n};\nvar mapThunk = function (k) {\n    return function (v) {\n        return new Thunk(v.value0, v.value1, function ($51) {\n            return k(v.value2($51));\n        }, v.value3);\n    };\n};\nvar hoist = mapThunk;\nvar functorThunk = function (dictFunctor) {\n    var map = Data_Functor.map(dictFunctor);\n    return {\n        map: function (f) {\n            return function (v) {\n                return new Thunk(v.value0, v.value1, (function () {\n                    var $52 = map(f);\n                    return function ($53) {\n                        return $52(v.value2($53));\n                    };\n                })(), v.value3);\n            };\n        }\n    };\n};\nvar buildThunk = function (toVDom) {\n    var haltThunk = function (state) {\n        return Halogen_VDom_Machine.halt(state.vdom);\n    };\n    var $lazy_patchThunk = $runtime_lazy(\"patchThunk\", \"Halogen.VDom.Thunk\", function () {\n        return function (state, t2) {\n            var $48 = unsafeEqThunk(state.thunk, t2);\n            if ($48) {\n                return Halogen_VDom_Machine.mkStep(new Halogen_VDom_Machine.Step(Halogen_VDom_Machine.extract(state.vdom), state, $lazy_patchThunk(112), haltThunk));\n            };\n            var vdom = Halogen_VDom_Machine.step(state.vdom, toVDom(runThunk(t2)));\n            return Halogen_VDom_Machine.mkStep(new Halogen_VDom_Machine.Step(Halogen_VDom_Machine.extract(vdom), {\n                vdom: vdom,\n                thunk: t2\n            }, $lazy_patchThunk(115), haltThunk));\n        };\n    });\n    var patchThunk = $lazy_patchThunk(108);\n    var renderThunk = function (spec) {\n        return function (t) {\n            var vdom = Halogen_VDom_DOM.buildVDom(spec)(toVDom(runThunk(t)));\n            return Halogen_VDom_Machine.mkStep(new Halogen_VDom_Machine.Step(Halogen_VDom_Machine.extract(vdom), {\n                thunk: t,\n                vdom: vdom\n            }, patchThunk, haltThunk));\n        };\n    };\n    return renderThunk;\n};\nexport {\n    buildThunk,\n    runThunk,\n    hoist,\n    mapThunk,\n    thunked,\n    thunk1,\n    thunk2,\n    thunk3,\n    functorThunk\n};\n", "// Generated by purs version 0.15.15\nimport * as Control_Applicative from \"../Control.Applicative/index.js\";\nimport * as Data_Bifunctor from \"../Data.Bifunctor/index.js\";\nimport * as Data_Coyoneda from \"../Data.Coyoneda/index.js\";\nimport * as Data_Foldable from \"../Data.Foldable/index.js\";\nimport * as Data_Function from \"../Data.Function/index.js\";\nimport * as Data_Functor from \"../Data.Functor/index.js\";\nimport * as Data_Maybe from \"../Data.Maybe/index.js\";\nimport * as Data_Unit from \"../Data.Unit/index.js\";\nimport * as Halogen_Data_Slot from \"../Halogen.Data.Slot/index.js\";\nimport * as Halogen_HTML_Core from \"../Halogen.HTML.Core/index.js\";\nimport * as Halogen_Query_HalogenM from \"../Halogen.Query.HalogenM/index.js\";\nimport * as Halogen_Query_HalogenQ from \"../Halogen.Query.HalogenQ/index.js\";\nimport * as Halogen_VDom_Thunk from \"../Halogen.VDom.Thunk/index.js\";\nimport * as Unsafe_Coerce from \"../Unsafe.Coerce/index.js\";\nvar voidLeft = /* #__PURE__ */ Data_Functor.voidLeft(Halogen_Query_HalogenM.functorHalogenM);\nvar traverse_ = /* #__PURE__ */ Data_Foldable.traverse_(Halogen_Query_HalogenM.applicativeHalogenM)(Data_Foldable.foldableMaybe);\nvar map = /* #__PURE__ */ Data_Functor.map(Halogen_Query_HalogenM.functorHalogenM);\nvar lmap = /* #__PURE__ */ Data_Bifunctor.lmap(Halogen_HTML_Core.bifunctorHTML);\nvar map1 = /* #__PURE__ */ Data_Functor.map(Data_Functor.functorFn);\nvar map2 = /* #__PURE__ */ Data_Functor.map(Data_Maybe.functorMaybe);\nvar bimap = /* #__PURE__ */ Data_Bifunctor.bimap(Halogen_HTML_Core.bifunctorHTML);\nvar pure = /* #__PURE__ */ Control_Applicative.pure(Halogen_Query_HalogenM.applicativeHalogenM);\nvar lookup = /* #__PURE__ */ Halogen_Data_Slot.lookup();\nvar pop = /* #__PURE__ */ Halogen_Data_Slot.pop();\nvar insert = /* #__PURE__ */ Halogen_Data_Slot.insert();\nvar ComponentSlot = /* #__PURE__ */ (function () {\n    function ComponentSlot(value0) {\n        this.value0 = value0;\n    };\n    ComponentSlot.create = function (value0) {\n        return new ComponentSlot(value0);\n    };\n    return ComponentSlot;\n})();\nvar ThunkSlot = /* #__PURE__ */ (function () {\n    function ThunkSlot(value0) {\n        this.value0 = value0;\n    };\n    ThunkSlot.create = function (value0) {\n        return new ThunkSlot(value0);\n    };\n    return ThunkSlot;\n})();\nvar unComponentSlot = Unsafe_Coerce.unsafeCoerce;\nvar unComponent = Unsafe_Coerce.unsafeCoerce;\nvar mkEval = function (args) {\n    return function (v) {\n        if (v instanceof Halogen_Query_HalogenQ.Initialize) {\n            return voidLeft(traverse_(args.handleAction)(args.initialize))(v.value0);\n        };\n        if (v instanceof Halogen_Query_HalogenQ.Finalize) {\n            return voidLeft(traverse_(args.handleAction)(args.finalize))(v.value0);\n        };\n        if (v instanceof Halogen_Query_HalogenQ.Receive) {\n            return voidLeft(traverse_(args.handleAction)(args.receive(v.value0)))(v.value1);\n        };\n        if (v instanceof Halogen_Query_HalogenQ.Action) {\n            return voidLeft(args.handleAction(v.value0))(v.value1);\n        };\n        if (v instanceof Halogen_Query_HalogenQ.Query) {\n            return Data_Coyoneda.unCoyoneda(function (g) {\n                var $45 = map(Data_Maybe.maybe(v.value1(Data_Unit.unit))(g));\n                return function ($46) {\n                    return $45(args.handleQuery($46));\n                };\n            })(v.value0);\n        };\n        throw new Error(\"Failed pattern match at Halogen.Component (line 182, column 15 - line 192, column 71): \" + [ v.constructor.name ]);\n    };\n};\nvar mkComponentSlot = Unsafe_Coerce.unsafeCoerce;\nvar mkComponent = Unsafe_Coerce.unsafeCoerce;\nvar hoistSlot = function (dictFunctor) {\n    return function (nat) {\n        return function (v) {\n            if (v instanceof ComponentSlot) {\n                return unComponentSlot(function (slot) {\n                    return new ComponentSlot(mkComponentSlot({\n                        get: slot.get,\n                        pop: slot.pop,\n                        set: slot.set,\n                        input: slot.input,\n                        output: slot.output,\n                        component: hoist(dictFunctor)(nat)(slot.component)\n                    }));\n                })(v.value0);\n            };\n            if (v instanceof ThunkSlot) {\n                return new ThunkSlot(Halogen_VDom_Thunk.hoist(lmap(hoistSlot(dictFunctor)(nat)))(v.value0));\n            };\n            throw new Error(\"Failed pattern match at Halogen.Component (line 279, column 17 - line 284, column 53): \" + [ v.constructor.name ]);\n        };\n    };\n};\nvar hoist = function (dictFunctor) {\n    var hoist1 = Halogen_Query_HalogenM.hoist(dictFunctor);\n    return function (nat) {\n        return unComponent(function (c) {\n            return mkComponent({\n                initialState: c.initialState,\n                render: (function () {\n                    var $47 = lmap(hoistSlot(dictFunctor)(nat));\n                    return function ($48) {\n                        return $47(c.render($48));\n                    };\n                })(),\n                \"eval\": (function () {\n                    var $49 = hoist1(nat);\n                    return function ($50) {\n                        return $49(c[\"eval\"]($50));\n                    };\n                })()\n            });\n        });\n    };\n};\nvar functorComponentSlotBox = {\n    map: function (f) {\n        return unComponentSlot(function (slot) {\n            return mkComponentSlot({\n                get: slot.get,\n                pop: slot.pop,\n                set: slot.set,\n                component: slot.component,\n                input: slot.input,\n                output: map1(map2(f))(slot.output)\n            });\n        });\n    }\n};\nvar map3 = /* #__PURE__ */ Data_Functor.map(functorComponentSlotBox);\nvar functorComponentSlot = {\n    map: function (f) {\n        return function (v) {\n            if (v instanceof ComponentSlot) {\n                return new ComponentSlot(map3(f)(v.value0));\n            };\n            if (v instanceof ThunkSlot) {\n                return new ThunkSlot(Halogen_VDom_Thunk.mapThunk(bimap(Data_Functor.map(functorComponentSlot)(f))(f))(v.value0));\n            };\n            throw new Error(\"Failed pattern match at Halogen.Component (line 209, column 11 - line 211, column 74): \" + [ v.constructor.name ]);\n        };\n    }\n};\nvar defaultEval = /* #__PURE__ */ (function () {\n    return {\n        handleAction: Data_Function[\"const\"](pure(Data_Unit.unit)),\n        handleQuery: Data_Function[\"const\"](pure(Data_Maybe.Nothing.value)),\n        receive: Data_Function[\"const\"](Data_Maybe.Nothing.value),\n        initialize: Data_Maybe.Nothing.value,\n        finalize: Data_Maybe.Nothing.value\n    };\n})();\nvar componentSlot = function () {\n    return function (dictIsSymbol) {\n        var lookup1 = lookup(dictIsSymbol);\n        var pop1 = pop(dictIsSymbol);\n        var insert1 = insert(dictIsSymbol);\n        return function (dictOrd) {\n            var lookup2 = lookup1(dictOrd);\n            var pop2 = pop1(dictOrd);\n            var insert2 = insert1(dictOrd);\n            return function (label) {\n                return function (p) {\n                    return function (comp) {\n                        return function (input) {\n                            return function (output) {\n                                return mkComponentSlot({\n                                    get: lookup2(label)(p),\n                                    pop: pop2(label)(p),\n                                    set: insert2(label)(p),\n                                    component: comp,\n                                    input: input,\n                                    output: output\n                                });\n                            };\n                        };\n                    };\n                };\n            };\n        };\n    };\n};\nexport {\n    mkComponent,\n    unComponent,\n    hoist,\n    mkEval,\n    defaultEval,\n    ComponentSlot,\n    ThunkSlot,\n    componentSlot,\n    mkComponentSlot,\n    unComponentSlot,\n    hoistSlot,\n    functorComponentSlotBox,\n    functorComponentSlot\n};\n", "// Generated by purs version 0.15.15\nimport * as Control_Applicative from \"../Control.Applicative/index.js\";\nimport * as Data_Maybe from \"../Data.Maybe/index.js\";\nimport * as Halogen_HTML_Core from \"../Halogen.HTML.Core/index.js\";\nimport * as Halogen_VDom_Types from \"../Halogen.VDom.Types/index.js\";\nvar pure = /* #__PURE__ */ Control_Applicative.pure(Data_Maybe.applicativeMaybe);\nvar withKeys_ = function (ctor) {\n    return function (children) {\n        var v = ctor([  ]);\n        if (v instanceof Halogen_VDom_Types.Elem) {\n            return new Halogen_VDom_Types.Keyed(v.value0, v.value1, v.value2, children);\n        };\n        return v;\n    };\n};\nvar withKeys = function (ctor) {\n    return function (props) {\n        return function (children) {\n            var v = ctor(props)([  ]);\n            if (v instanceof Halogen_VDom_Types.Elem) {\n                return new Halogen_VDom_Types.Keyed(v.value0, v.value1, v.value2, children);\n            };\n            return v;\n        };\n    };\n};\nvar keyedNS = function ($14) {\n    return Halogen_HTML_Core.keyed(pure($14));\n};\nvar keyed = /* #__PURE__ */ (function () {\n    return Halogen_HTML_Core.keyed(Data_Maybe.Nothing.value);\n})();\nvar elementNS = function ($15) {\n    return Halogen_HTML_Core.element(pure($15));\n};\nvar element = /* #__PURE__ */ (function () {\n    return Halogen_HTML_Core.element(Data_Maybe.Nothing.value);\n})();\nvar em = /* #__PURE__ */ element(\"em\");\nvar em_ = /* #__PURE__ */ em([  ]);\nvar embed = /* #__PURE__ */ element(\"embed\");\nvar embed_ = /* #__PURE__ */ embed([  ]);\nvar fieldset = /* #__PURE__ */ element(\"fieldset\");\nvar fieldset_ = /* #__PURE__ */ fieldset([  ]);\nvar figcaption = /* #__PURE__ */ element(\"figcaption\");\nvar figcaption_ = /* #__PURE__ */ figcaption([  ]);\nvar figure = /* #__PURE__ */ element(\"figure\");\nvar figure_ = /* #__PURE__ */ figure([  ]);\nvar footer = /* #__PURE__ */ element(\"footer\");\nvar footer_ = /* #__PURE__ */ footer([  ]);\nvar form = /* #__PURE__ */ element(\"form\");\nvar form_ = /* #__PURE__ */ form([  ]);\nvar h1 = /* #__PURE__ */ element(\"h1\");\nvar h1_ = /* #__PURE__ */ h1([  ]);\nvar h2 = /* #__PURE__ */ element(\"h2\");\nvar h2_ = /* #__PURE__ */ h2([  ]);\nvar h3 = /* #__PURE__ */ element(\"h3\");\nvar h3_ = /* #__PURE__ */ h3([  ]);\nvar h4 = /* #__PURE__ */ element(\"h4\");\nvar h4_ = /* #__PURE__ */ h4([  ]);\nvar h5 = /* #__PURE__ */ element(\"h5\");\nvar h5_ = /* #__PURE__ */ h5([  ]);\nvar h6 = /* #__PURE__ */ element(\"h6\");\nvar h6_ = /* #__PURE__ */ h6([  ]);\nvar head = /* #__PURE__ */ element(\"head\");\nvar head_ = /* #__PURE__ */ head([  ]);\nvar header = /* #__PURE__ */ element(\"header\");\nvar header_ = /* #__PURE__ */ header([  ]);\nvar hr = function (props) {\n    return element(\"hr\")(props)([  ]);\n};\nvar hr_ = /* #__PURE__ */ hr([  ]);\nvar html = /* #__PURE__ */ element(\"html\");\nvar html_ = /* #__PURE__ */ html([  ]);\nvar i = /* #__PURE__ */ element(\"i\");\nvar i_ = /* #__PURE__ */ i([  ]);\nvar iframe = function (props) {\n    return element(\"iframe\")(props)([  ]);\n};\nvar img = function (props) {\n    return element(\"img\")(props)([  ]);\n};\nvar input = function (props) {\n    return element(\"input\")(props)([  ]);\n};\nvar ins = /* #__PURE__ */ element(\"ins\");\nvar ins_ = /* #__PURE__ */ ins([  ]);\nvar kbd = /* #__PURE__ */ element(\"kbd\");\nvar kbd_ = /* #__PURE__ */ kbd([  ]);\nvar label = /* #__PURE__ */ element(\"label\");\nvar label_ = /* #__PURE__ */ label([  ]);\nvar legend = /* #__PURE__ */ element(\"legend\");\nvar legend_ = /* #__PURE__ */ legend([  ]);\nvar li = /* #__PURE__ */ element(\"li\");\nvar li_ = /* #__PURE__ */ li([  ]);\nvar link = function (props) {\n    return element(\"link\")(props)([  ]);\n};\nvar main = /* #__PURE__ */ element(\"main\");\nvar main_ = /* #__PURE__ */ main([  ]);\nvar map = /* #__PURE__ */ element(\"map\");\nvar map_ = /* #__PURE__ */ map([  ]);\nvar mark = /* #__PURE__ */ element(\"mark\");\nvar mark_ = /* #__PURE__ */ mark([  ]);\nvar menu = /* #__PURE__ */ element(\"menu\");\nvar menu_ = /* #__PURE__ */ menu([  ]);\nvar menuitem = /* #__PURE__ */ element(\"menuitem\");\nvar menuitem_ = /* #__PURE__ */ menuitem([  ]);\nvar meta = function (props) {\n    return element(\"meta\")(props)([  ]);\n};\nvar meter = /* #__PURE__ */ element(\"meter\");\nvar meter_ = /* #__PURE__ */ meter([  ]);\nvar nav = /* #__PURE__ */ element(\"nav\");\nvar nav_ = /* #__PURE__ */ nav([  ]);\nvar noscript = /* #__PURE__ */ element(\"noscript\");\nvar noscript_ = /* #__PURE__ */ noscript([  ]);\nvar object = /* #__PURE__ */ element(\"object\");\nvar object_ = /* #__PURE__ */ object([  ]);\nvar ol = /* #__PURE__ */ element(\"ol\");\nvar ol_ = /* #__PURE__ */ ol([  ]);\nvar optgroup = /* #__PURE__ */ element(\"optgroup\");\nvar optgroup_ = /* #__PURE__ */ optgroup([  ]);\nvar option = /* #__PURE__ */ element(\"option\");\nvar option_ = /* #__PURE__ */ option([  ]);\nvar output = /* #__PURE__ */ element(\"output\");\nvar output_ = /* #__PURE__ */ output([  ]);\nvar p = /* #__PURE__ */ element(\"p\");\nvar p_ = /* #__PURE__ */ p([  ]);\nvar param = function (props) {\n    return element(\"param\")(props)([  ]);\n};\nvar pre = /* #__PURE__ */ element(\"pre\");\nvar pre_ = /* #__PURE__ */ pre([  ]);\nvar progress = /* #__PURE__ */ element(\"progress\");\nvar progress_ = /* #__PURE__ */ progress([  ]);\nvar q = /* #__PURE__ */ element(\"q\");\nvar q_ = /* #__PURE__ */ q([  ]);\nvar rp = /* #__PURE__ */ element(\"rp\");\nvar rp_ = /* #__PURE__ */ rp([  ]);\nvar rt = /* #__PURE__ */ element(\"rt\");\nvar rt_ = /* #__PURE__ */ rt([  ]);\nvar ruby = /* #__PURE__ */ element(\"ruby\");\nvar ruby_ = /* #__PURE__ */ ruby([  ]);\nvar samp = /* #__PURE__ */ element(\"samp\");\nvar samp_ = /* #__PURE__ */ samp([  ]);\nvar script = /* #__PURE__ */ element(\"script\");\nvar script_ = /* #__PURE__ */ script([  ]);\nvar section = /* #__PURE__ */ element(\"section\");\nvar section_ = /* #__PURE__ */ section([  ]);\nvar select = /* #__PURE__ */ element(\"select\");\nvar select_ = /* #__PURE__ */ select([  ]);\nvar small = /* #__PURE__ */ element(\"small\");\nvar small_ = /* #__PURE__ */ small([  ]);\nvar source = function (props) {\n    return element(\"source\")(props)([  ]);\n};\nvar span = /* #__PURE__ */ element(\"span\");\nvar span_ = /* #__PURE__ */ span([  ]);\nvar strong = /* #__PURE__ */ element(\"strong\");\nvar strong_ = /* #__PURE__ */ strong([  ]);\nvar style = /* #__PURE__ */ element(\"style\");\nvar style_ = /* #__PURE__ */ style([  ]);\nvar sub = /* #__PURE__ */ element(\"sub\");\nvar sub_ = /* #__PURE__ */ sub([  ]);\nvar summary = /* #__PURE__ */ element(\"summary\");\nvar summary_ = /* #__PURE__ */ summary([  ]);\nvar sup = /* #__PURE__ */ element(\"sup\");\nvar sup_ = /* #__PURE__ */ sup([  ]);\nvar table = /* #__PURE__ */ element(\"table\");\nvar table_ = /* #__PURE__ */ table([  ]);\nvar tbody = /* #__PURE__ */ element(\"tbody\");\nvar tbody_ = /* #__PURE__ */ tbody([  ]);\nvar td = /* #__PURE__ */ element(\"td\");\nvar td_ = /* #__PURE__ */ td([  ]);\nvar textarea = function (es) {\n    return element(\"textarea\")(es)([  ]);\n};\nvar tfoot = /* #__PURE__ */ element(\"tfoot\");\nvar tfoot_ = /* #__PURE__ */ tfoot([  ]);\nvar th = /* #__PURE__ */ element(\"th\");\nvar th_ = /* #__PURE__ */ th([  ]);\nvar thead = /* #__PURE__ */ element(\"thead\");\nvar thead_ = /* #__PURE__ */ thead([  ]);\nvar time = /* #__PURE__ */ element(\"time\");\nvar time_ = /* #__PURE__ */ time([  ]);\nvar title = /* #__PURE__ */ element(\"title\");\nvar title_ = /* #__PURE__ */ title([  ]);\nvar tr = /* #__PURE__ */ element(\"tr\");\nvar tr_ = /* #__PURE__ */ tr([  ]);\nvar track = function (props) {\n    return element(\"track\")(props)([  ]);\n};\nvar u = /* #__PURE__ */ element(\"u\");\nvar u_ = /* #__PURE__ */ u([  ]);\nvar ul = /* #__PURE__ */ element(\"ul\");\nvar ul_ = /* #__PURE__ */ ul([  ]);\nvar $$var = /* #__PURE__ */ element(\"var\");\nvar var_ = /* #__PURE__ */ $$var([  ]);\nvar video = /* #__PURE__ */ element(\"video\");\nvar video_ = /* #__PURE__ */ video([  ]);\nvar wbr = function (props) {\n    return element(\"wbr\")(props)([  ]);\n};\nvar dt = /* #__PURE__ */ element(\"dt\");\nvar dt_ = /* #__PURE__ */ dt([  ]);\nvar dl = /* #__PURE__ */ element(\"dl\");\nvar dl_ = /* #__PURE__ */ dl([  ]);\nvar div = /* #__PURE__ */ element(\"div\");\nvar div_ = /* #__PURE__ */ div([  ]);\nvar dialog = /* #__PURE__ */ element(\"dialog\");\nvar dialog_ = /* #__PURE__ */ dialog([  ]);\nvar dfn = /* #__PURE__ */ element(\"dfn\");\nvar dfn_ = /* #__PURE__ */ dfn([  ]);\nvar details = /* #__PURE__ */ element(\"details\");\nvar details_ = /* #__PURE__ */ details([  ]);\nvar del = /* #__PURE__ */ element(\"del\");\nvar del_ = /* #__PURE__ */ del([  ]);\nvar dd = /* #__PURE__ */ element(\"dd\");\nvar dd_ = /* #__PURE__ */ dd([  ]);\nvar datalist = /* #__PURE__ */ element(\"datalist\");\nvar datalist_ = /* #__PURE__ */ datalist([  ]);\nvar command = function (props) {\n    return element(\"command\")(props)([  ]);\n};\nvar colgroup = /* #__PURE__ */ element(\"colgroup\");\nvar colgroup_ = /* #__PURE__ */ colgroup([  ]);\nvar col = function (props) {\n    return element(\"col\")(props)([  ]);\n};\nvar code = /* #__PURE__ */ element(\"code\");\nvar code_ = /* #__PURE__ */ code([  ]);\nvar cite = /* #__PURE__ */ element(\"cite\");\nvar cite_ = /* #__PURE__ */ cite([  ]);\nvar caption = /* #__PURE__ */ element(\"caption\");\nvar caption_ = /* #__PURE__ */ caption([  ]);\nvar canvas = function (props) {\n    return element(\"canvas\")(props)([  ]);\n};\nvar button = /* #__PURE__ */ element(\"button\");\nvar button_ = /* #__PURE__ */ button([  ]);\nvar br = function (props) {\n    return element(\"br\")(props)([  ]);\n};\nvar br_ = /* #__PURE__ */ br([  ]);\nvar body = /* #__PURE__ */ element(\"body\");\nvar body_ = /* #__PURE__ */ body([  ]);\nvar blockquote = /* #__PURE__ */ element(\"blockquote\");\nvar blockquote_ = /* #__PURE__ */ blockquote([  ]);\nvar bdo = /* #__PURE__ */ element(\"bdo\");\nvar bdo_ = /* #__PURE__ */ bdo([  ]);\nvar bdi = /* #__PURE__ */ element(\"bdi\");\nvar bdi_ = /* #__PURE__ */ bdi([  ]);\nvar base = function (props) {\n    return element(\"base\")(props)([  ]);\n};\nvar b = /* #__PURE__ */ element(\"b\");\nvar b_ = /* #__PURE__ */ b([  ]);\nvar audio = /* #__PURE__ */ element(\"audio\");\nvar audio_ = /* #__PURE__ */ audio([  ]);\nvar aside = /* #__PURE__ */ element(\"aside\");\nvar aside_ = /* #__PURE__ */ aside([  ]);\nvar article = /* #__PURE__ */ element(\"article\");\nvar article_ = /* #__PURE__ */ article([  ]);\nvar area = function (props) {\n    return element(\"area\")(props)([  ]);\n};\nvar address = /* #__PURE__ */ element(\"address\");\nvar address_ = /* #__PURE__ */ address([  ]);\nvar abbr = /* #__PURE__ */ element(\"abbr\");\nvar abbr_ = /* #__PURE__ */ abbr([  ]);\nvar a = /* #__PURE__ */ element(\"a\");\nvar a_ = /* #__PURE__ */ a([  ]);\nexport {\n    element,\n    elementNS,\n    keyed,\n    keyedNS,\n    withKeys,\n    withKeys_,\n    a,\n    a_,\n    abbr,\n    abbr_,\n    address,\n    address_,\n    area,\n    article,\n    article_,\n    aside,\n    aside_,\n    audio,\n    audio_,\n    b,\n    b_,\n    base,\n    bdi,\n    bdi_,\n    bdo,\n    bdo_,\n    blockquote,\n    blockquote_,\n    body,\n    body_,\n    br,\n    br_,\n    button,\n    button_,\n    canvas,\n    caption,\n    caption_,\n    cite,\n    cite_,\n    code,\n    code_,\n    col,\n    colgroup,\n    colgroup_,\n    command,\n    datalist,\n    datalist_,\n    dd,\n    dd_,\n    del,\n    del_,\n    details,\n    details_,\n    dfn,\n    dfn_,\n    dialog,\n    dialog_,\n    div,\n    div_,\n    dl,\n    dl_,\n    dt,\n    dt_,\n    em,\n    em_,\n    embed,\n    embed_,\n    fieldset,\n    fieldset_,\n    figcaption,\n    figcaption_,\n    figure,\n    figure_,\n    footer,\n    footer_,\n    form,\n    form_,\n    h1,\n    h1_,\n    h2,\n    h2_,\n    h3,\n    h3_,\n    h4,\n    h4_,\n    h5,\n    h5_,\n    h6,\n    h6_,\n    head,\n    head_,\n    header,\n    header_,\n    hr,\n    hr_,\n    html,\n    html_,\n    i,\n    i_,\n    iframe,\n    img,\n    input,\n    ins,\n    ins_,\n    kbd,\n    kbd_,\n    label,\n    label_,\n    legend,\n    legend_,\n    li,\n    li_,\n    link,\n    main,\n    main_,\n    map,\n    map_,\n    mark,\n    mark_,\n    menu,\n    menu_,\n    menuitem,\n    menuitem_,\n    meta,\n    meter,\n    meter_,\n    nav,\n    nav_,\n    noscript,\n    noscript_,\n    object,\n    object_,\n    ol,\n    ol_,\n    optgroup,\n    optgroup_,\n    option,\n    option_,\n    output,\n    output_,\n    p,\n    p_,\n    param,\n    pre,\n    pre_,\n    progress,\n    progress_,\n    q,\n    q_,\n    rp,\n    rp_,\n    rt,\n    rt_,\n    ruby,\n    ruby_,\n    samp,\n    samp_,\n    script,\n    script_,\n    section,\n    section_,\n    select,\n    select_,\n    small,\n    small_,\n    source,\n    span,\n    span_,\n    strong,\n    strong_,\n    style,\n    style_,\n    sub,\n    sub_,\n    summary,\n    summary_,\n    sup,\n    sup_,\n    table,\n    table_,\n    tbody,\n    tbody_,\n    td,\n    td_,\n    textarea,\n    tfoot,\n    tfoot_,\n    th,\n    th_,\n    thead,\n    thead_,\n    time,\n    time_,\n    title,\n    title_,\n    tr,\n    tr_,\n    track,\n    u,\n    u_,\n    ul,\n    ul_,\n    $$var as var,\n    var_,\n    video,\n    video_,\n    wbr\n};\n", "// Generated by purs version 0.15.15\nimport * as Data_Function from \"../Data.Function/index.js\";\nimport * as Data_Functor from \"../Data.Functor/index.js\";\nimport * as Data_Maybe from \"../Data.Maybe/index.js\";\nimport * as Halogen_Component from \"../Halogen.Component/index.js\";\nimport * as Halogen_HTML_Core from \"../Halogen.HTML.Core/index.js\";\nimport * as Halogen_HTML_Elements from \"../Halogen.HTML.Elements/index.js\";\nimport * as Halogen_HTML_Properties from \"../Halogen.HTML.Properties/index.js\";\nimport * as Halogen_VDom_Thunk from \"../Halogen.VDom.Thunk/index.js\";\nimport * as Unsafe_Coerce from \"../Unsafe.Coerce/index.js\";\nvar componentSlot = /* #__PURE__ */ Halogen_Component.componentSlot();\nvar map = /* #__PURE__ */ Data_Functor.map(Data_Functor.functorFn);\nvar slot_ = function () {\n    return function (dictIsSymbol) {\n        var componentSlot1 = componentSlot(dictIsSymbol);\n        return function (dictOrd) {\n            var componentSlot2 = componentSlot1(dictOrd);\n            return function (label) {\n                return function (p) {\n                    return function (component) {\n                        return function (input) {\n                            return Halogen_HTML_Core.widget(new Halogen_Component.ComponentSlot(componentSlot2(label)(p)(component)(input)(Data_Function[\"const\"](Data_Maybe.Nothing.value))));\n                        };\n                    };\n                };\n            };\n        };\n    };\n};\nvar slot = function () {\n    return function (dictIsSymbol) {\n        var componentSlot1 = componentSlot(dictIsSymbol);\n        return function (dictOrd) {\n            var componentSlot2 = componentSlot1(dictOrd);\n            return function (label) {\n                return function (p) {\n                    return function (component) {\n                        return function (input) {\n                            return function (outputQuery) {\n                                return Halogen_HTML_Core.widget(new Halogen_Component.ComponentSlot(componentSlot2(label)(p)(component)(input)(function ($11) {\n                                    return Data_Maybe.Just.create(outputQuery($11));\n                                })));\n                            };\n                        };\n                    };\n                };\n            };\n        };\n    };\n};\nvar memoized = function (eqFn) {\n    return function (f) {\n        return map(function ($12) {\n            return Halogen_HTML_Core.widget(Halogen_Component.ThunkSlot.create($12));\n        })(Halogen_VDom_Thunk.thunked(eqFn)(f));\n    };\n};\nvar lazy3 = function (f) {\n    return function (a) {\n        return function (b) {\n            return function (c) {\n                return Halogen_HTML_Core.widget(new Halogen_Component.ThunkSlot(Halogen_VDom_Thunk.thunk3(f, a, b, c)));\n            };\n        };\n    };\n};\nvar lazy2 = function (f) {\n    return function (a) {\n        return function (b) {\n            return Halogen_HTML_Core.widget(new Halogen_Component.ThunkSlot(Halogen_VDom_Thunk.thunk2(f, a, b)));\n        };\n    };\n};\nvar lazy = function (f) {\n    return function (a) {\n        return Halogen_HTML_Core.widget(new Halogen_Component.ThunkSlot(Halogen_VDom_Thunk.thunk1(f, a)));\n    };\n};\nvar fromPlainHTML = Unsafe_Coerce.unsafeCoerce;\nexport {\n    fromPlainHTML,\n    slot,\n    slot_,\n    memoized,\n    lazy,\n    lazy2,\n    lazy3\n};\nexport {\n    AttrName,\n    ClassName,\n    ElemName,\n    HTML,\n    Namespace,\n    PropName,\n    handler,\n    text\n} from \"../Halogen.HTML.Core/index.js\";\nexport {\n    a,\n    a_,\n    abbr,\n    abbr_,\n    address,\n    address_,\n    area,\n    article,\n    article_,\n    aside,\n    aside_,\n    audio,\n    audio_,\n    b,\n    b_,\n    base,\n    bdi,\n    bdi_,\n    bdo,\n    bdo_,\n    blockquote,\n    blockquote_,\n    body,\n    body_,\n    br,\n    br_,\n    button,\n    button_,\n    canvas,\n    caption,\n    caption_,\n    cite,\n    cite_,\n    code,\n    code_,\n    col,\n    colgroup,\n    colgroup_,\n    command,\n    datalist,\n    datalist_,\n    dd,\n    dd_,\n    del,\n    del_,\n    details,\n    details_,\n    dfn,\n    dfn_,\n    dialog,\n    dialog_,\n    div,\n    div_,\n    dl,\n    dl_,\n    dt,\n    dt_,\n    element,\n    elementNS,\n    em,\n    em_,\n    embed,\n    embed_,\n    fieldset,\n    fieldset_,\n    figcaption,\n    figcaption_,\n    figure,\n    figure_,\n    footer,\n    footer_,\n    form,\n    form_,\n    h1,\n    h1_,\n    h2,\n    h2_,\n    h3,\n    h3_,\n    h4,\n    h4_,\n    h5,\n    h5_,\n    h6,\n    h6_,\n    head,\n    head_,\n    header,\n    header_,\n    hr,\n    hr_,\n    html,\n    html_,\n    i,\n    i_,\n    iframe,\n    img,\n    input,\n    ins,\n    ins_,\n    kbd,\n    kbd_,\n    keyed,\n    keyedNS,\n    label,\n    label_,\n    legend,\n    legend_,\n    li,\n    li_,\n    link,\n    main,\n    main_,\n    map,\n    map_,\n    mark,\n    mark_,\n    menu,\n    menu_,\n    menuitem,\n    menuitem_,\n    meta,\n    meter,\n    meter_,\n    nav,\n    nav_,\n    noscript,\n    noscript_,\n    object,\n    object_,\n    ol,\n    ol_,\n    optgroup,\n    optgroup_,\n    option,\n    option_,\n    output,\n    output_,\n    p,\n    p_,\n    param,\n    pre,\n    pre_,\n    progress,\n    progress_,\n    q,\n    q_,\n    rp,\n    rp_,\n    rt,\n    rt_,\n    ruby,\n    ruby_,\n    samp,\n    samp_,\n    script,\n    script_,\n    section,\n    section_,\n    select,\n    select_,\n    small,\n    small_,\n    source,\n    span,\n    span_,\n    strong,\n    strong_,\n    style,\n    style_,\n    sub,\n    sub_,\n    summary,\n    summary_,\n    sup,\n    sup_,\n    table,\n    table_,\n    tbody,\n    tbody_,\n    td,\n    td_,\n    textarea,\n    tfoot,\n    tfoot_,\n    th,\n    th_,\n    thead,\n    thead_,\n    time,\n    time_,\n    title,\n    title_,\n    tr,\n    tr_,\n    track,\n    u,\n    u_,\n    ul,\n    ul_,\n    var,\n    var_,\n    video,\n    video_,\n    wbr,\n    withKeys,\n    withKeys_\n} from \"../Halogen.HTML.Elements/index.js\";\nexport {\n    attr,\n    attrNS,\n    prop\n} from \"../Halogen.HTML.Properties/index.js\";\n", "// Generated by purs version 0.15.15\nimport * as Control_Monad_Error_Class from \"../Control.Monad.Error.Class/index.js\";\nimport * as Control_Monad_Except_Trans from \"../Control.Monad.Except.Trans/index.js\";\nimport * as Data_Identity from \"../Data.Identity/index.js\";\nimport * as Data_Newtype from \"../Data.Newtype/index.js\";\nvar unwrap = /* #__PURE__ */ Data_Newtype.unwrap();\nvar withExcept = /* #__PURE__ */ Control_Monad_Except_Trans.withExceptT(Data_Identity.functorIdentity);\nvar runExcept = function ($3) {\n    return unwrap(Control_Monad_Except_Trans.runExceptT($3));\n};\nvar mapExcept = function (f) {\n    return Control_Monad_Except_Trans.mapExceptT(function ($4) {\n        return Data_Identity.Identity(f(unwrap($4)));\n    });\n};\nexport {\n    runExcept,\n    mapExcept,\n    withExcept\n};\nexport {\n    catchError,\n    catchJust,\n    throwError\n} from \"../Control.Monad.Error.Class/index.js\";\nexport {\n    ExceptT,\n    except,\n    lift,\n    mapExceptT,\n    runExceptT,\n    withExceptT\n} from \"../Control.Monad.Except.Trans/index.js\";\n", "export function bubbles(e) {\n  return e.bubbles;\n}\n\nexport function cancelable(e) {\n  return e.cancelable;\n}\n\nexport function _currentTarget(e) {\n  return e.currentTarget;\n}\n\nexport function defaultPrevented(e) {\n  return function() {\n    return e.defaultPrevented;\n  };\n}\n\nexport function eventPhaseIndex(e) {\n  return e.eventPhase;\n}\n\nexport function _target(e) {\n  return e.target;\n}\n\nexport function timeStamp(e) {\n  return e.timeStamp;\n}\n\nexport function type_(e) {\n  return e.type;\n}\n\nexport function preventDefault(e) {\n  return function () {\n    return e.preventDefault();\n  };\n}\n\nexport function stopImmediatePropagation(e) {\n  return function () {\n    return e.stopImmediatePropagation();\n  };\n}\n\nexport function stopPropagation(e) {\n  return function () {\n    return e.stopPropagation();\n  };\n}\n", "// Generated by purs version 0.15.15\nvar unload = \"unload\";\nvar toggle = \"toggle\";\nvar submit = \"submit\";\nvar storage = \"storage\";\nvar select = \"select\";\nvar reset = \"reset\";\nvar readystatechange = \"readystatechange\";\nvar progress = \"progress\";\nvar paste = \"paste\";\nvar online = \"online\";\nvar offline = \"offline\";\nvar message = \"message\";\nvar loadstart = \"loadstart\";\nvar loadend = \"loadend\";\nvar load = \"load\";\nvar languagechange = \"languagechange\";\nvar invalid = \"invalid\";\nvar input = \"input\";\nvar focus = \"focus\";\nvar error = \"error\";\nvar domcontentloaded = \"DOMContentLoaded\";\nvar cut = \"cut\";\nvar copy = \"copy\";\nvar close = \"close\";\nvar click = \"click\";\nvar change = \"change\";\nvar cancel = \"cancel\";\nvar blur = \"blur\";\nvar beforescriptexecute = \"beforescriptexecute\";\nvar beforeprint = \"beforeprint\";\nvar afterscriptexecute = \"afterscriptexecute\";\nvar afterprint = \"afterprint\";\nvar abort = \"abort\";\nexport {\n    abort,\n    afterprint,\n    afterscriptexecute,\n    beforeprint,\n    beforescriptexecute,\n    blur,\n    cancel,\n    change,\n    click,\n    close,\n    copy,\n    cut,\n    domcontentloaded,\n    error,\n    focus,\n    input,\n    invalid,\n    languagechange,\n    load,\n    loadend,\n    loadstart,\n    message,\n    offline,\n    online,\n    paste,\n    progress,\n    readystatechange,\n    reset,\n    select,\n    storage,\n    submit,\n    toggle,\n    unload\n};\n", "// Generated by purs version 0.15.15\nvar mouseup = \"mouseup\";\nvar mouseover = \"mouseover\";\nvar mouseout = \"mouseout\";\nvar mousemove = \"mousemove\";\nvar mouseleave = \"mouseleave\";\nvar mouseenter = \"mouseenter\";\nvar mousedown = \"mousedown\";\nvar dblclick = \"dblclick\";\nvar click = \"click\";\nvar auxclick = \"auxclick\";\nexport {\n    auxclick,\n    click,\n    dblclick,\n    mousedown,\n    mouseenter,\n    mouseleave,\n    mousemove,\n    mouseout,\n    mouseover,\n    mouseup\n};\n", "// Generated by purs version 0.15.15\nimport * as Control_Bind from \"../Control.Bind/index.js\";\nimport * as Control_Monad_Except from \"../Control.Monad.Except/index.js\";\nimport * as Control_Monad_Except_Trans from \"../Control.Monad.Except.Trans/index.js\";\nimport * as Data_Either from \"../Data.Either/index.js\";\nimport * as Data_Function from \"../Data.Function/index.js\";\nimport * as Data_Functor from \"../Data.Functor/index.js\";\nimport * as Data_Identity from \"../Data.Identity/index.js\";\nimport * as Data_Maybe from \"../Data.Maybe/index.js\";\nimport * as Data_Unfoldable from \"../Data.Unfoldable/index.js\";\nimport * as Effect_Unsafe from \"../Effect.Unsafe/index.js\";\nimport * as Foreign from \"../Foreign/index.js\";\nimport * as Foreign_Index from \"../Foreign.Index/index.js\";\nimport * as Halogen_HTML_Core from \"../Halogen.HTML.Core/index.js\";\nimport * as Halogen_Query_Input from \"../Halogen.Query.Input/index.js\";\nimport * as Unsafe_Coerce from \"../Unsafe.Coerce/index.js\";\nimport * as Web_Clipboard_ClipboardEvent_EventTypes from \"../Web.Clipboard.ClipboardEvent.EventTypes/index.js\";\nimport * as Web_Event_Event from \"../Web.Event.Event/index.js\";\nimport * as Web_File_FileList from \"../Web.File.FileList/index.js\";\nimport * as Web_HTML_Event_DragEvent_EventTypes from \"../Web.HTML.Event.DragEvent.EventTypes/index.js\";\nimport * as Web_HTML_Event_EventTypes from \"../Web.HTML.Event.EventTypes/index.js\";\nimport * as Web_HTML_HTMLInputElement from \"../Web.HTML.HTMLInputElement/index.js\";\nimport * as Web_UIEvent_FocusEvent_EventTypes from \"../Web.UIEvent.FocusEvent.EventTypes/index.js\";\nimport * as Web_UIEvent_KeyboardEvent_EventTypes from \"../Web.UIEvent.KeyboardEvent.EventTypes/index.js\";\nimport * as Web_UIEvent_MouseEvent_EventTypes from \"../Web.UIEvent.MouseEvent.EventTypes/index.js\";\nimport * as Web_UIEvent_WheelEvent_EventTypes from \"../Web.UIEvent.WheelEvent.EventTypes/index.js\";\nvar map = /* #__PURE__ */ Data_Functor.map(Data_Maybe.functorMaybe);\nvar composeKleisli = /* #__PURE__ */ Control_Bind.composeKleisli(Data_Maybe.bindMaybe);\nvar composeKleisliFlipped = /* #__PURE__ */ Control_Bind.composeKleisliFlipped(/* #__PURE__ */ Control_Monad_Except_Trans.bindExceptT(Data_Identity.monadIdentity));\nvar readProp = /* #__PURE__ */ Foreign_Index.readProp(Data_Identity.monadIdentity);\nvar readString = /* #__PURE__ */ Foreign.readString(Data_Identity.monadIdentity);\nvar wheelHandler = Unsafe_Coerce.unsafeCoerce;\nvar touchHandler = Unsafe_Coerce.unsafeCoerce;\nvar mouseHandler = Unsafe_Coerce.unsafeCoerce;\nvar keyHandler = Unsafe_Coerce.unsafeCoerce;\nvar handler$prime = function (et) {\n    return function (f) {\n        return Halogen_HTML_Core.handler(et)(function (ev) {\n            return map(Halogen_Query_Input.Action.create)(f(ev));\n        });\n    };\n};\nvar handler = function (et) {\n    return function (f) {\n        return Halogen_HTML_Core.handler(et)(function (ev) {\n            return new Data_Maybe.Just(new Halogen_Query_Input.Action(f(ev)));\n        });\n    };\n};\nvar onAbort = /* #__PURE__ */ handler(\"abort\");\nvar onAuxClick = /* #__PURE__ */ (function () {\n    var $13 = handler(Web_UIEvent_MouseEvent_EventTypes.auxclick);\n    return function ($14) {\n        return $13(mouseHandler($14));\n    };\n})();\nvar onChange = /* #__PURE__ */ handler(Web_HTML_Event_EventTypes.change);\nvar onClick = /* #__PURE__ */ (function () {\n    var $15 = handler(Web_UIEvent_MouseEvent_EventTypes.click);\n    return function ($16) {\n        return $15(mouseHandler($16));\n    };\n})();\nvar onDoubleClick = /* #__PURE__ */ (function () {\n    var $17 = handler(Web_UIEvent_MouseEvent_EventTypes.dblclick);\n    return function ($18) {\n        return $17(mouseHandler($18));\n    };\n})();\nvar onError = /* #__PURE__ */ handler(Web_HTML_Event_EventTypes.error);\nvar onFileUpload = function (dictUnfoldable) {\n    var none = Data_Unfoldable.none(dictUnfoldable);\n    var items = Web_File_FileList.items(dictUnfoldable);\n    return function (f) {\n        return handler(Web_HTML_Event_EventTypes.change)((function () {\n            var $19 = Data_Maybe.maybe(none)(items);\n            var $20 = composeKleisli(Web_Event_Event.target)(composeKleisli(Web_HTML_HTMLInputElement.fromEventTarget)(function ($22) {\n                return Effect_Unsafe.unsafePerformEffect(Web_HTML_HTMLInputElement.files($22));\n            }));\n            return function ($21) {\n                return f($19($20($21)));\n            };\n        })());\n    };\n};\nvar onInput = /* #__PURE__ */ handler(Web_HTML_Event_EventTypes.input);\nvar onInvalid = /* #__PURE__ */ handler(Web_HTML_Event_EventTypes.invalid);\nvar onKeyDown = /* #__PURE__ */ (function () {\n    var $23 = handler(Web_UIEvent_KeyboardEvent_EventTypes.keydown);\n    return function ($24) {\n        return $23(keyHandler($24));\n    };\n})();\nvar onKeyUp = /* #__PURE__ */ (function () {\n    var $25 = handler(Web_UIEvent_KeyboardEvent_EventTypes.keyup);\n    return function ($26) {\n        return $25(keyHandler($26));\n    };\n})();\nvar onLoad = /* #__PURE__ */ handler(Web_HTML_Event_EventTypes.load);\nvar onMouseDown = /* #__PURE__ */ (function () {\n    var $27 = handler(Web_UIEvent_MouseEvent_EventTypes.mousedown);\n    return function ($28) {\n        return $27(mouseHandler($28));\n    };\n})();\nvar onMouseEnter = /* #__PURE__ */ (function () {\n    var $29 = handler(Web_UIEvent_MouseEvent_EventTypes.mouseenter);\n    return function ($30) {\n        return $29(mouseHandler($30));\n    };\n})();\nvar onMouseLeave = /* #__PURE__ */ (function () {\n    var $31 = handler(Web_UIEvent_MouseEvent_EventTypes.mouseleave);\n    return function ($32) {\n        return $31(mouseHandler($32));\n    };\n})();\nvar onMouseMove = /* #__PURE__ */ (function () {\n    var $33 = handler(Web_UIEvent_MouseEvent_EventTypes.mousemove);\n    return function ($34) {\n        return $33(mouseHandler($34));\n    };\n})();\nvar onMouseOut = /* #__PURE__ */ (function () {\n    var $35 = handler(Web_UIEvent_MouseEvent_EventTypes.mouseout);\n    return function ($36) {\n        return $35(mouseHandler($36));\n    };\n})();\nvar onMouseOver = /* #__PURE__ */ (function () {\n    var $37 = handler(Web_UIEvent_MouseEvent_EventTypes.mouseover);\n    return function ($38) {\n        return $37(mouseHandler($38));\n    };\n})();\nvar onMouseUp = /* #__PURE__ */ (function () {\n    var $39 = handler(Web_UIEvent_MouseEvent_EventTypes.mouseup);\n    return function ($40) {\n        return $39(mouseHandler($40));\n    };\n})();\nvar onReset = /* #__PURE__ */ handler(\"reset\");\nvar onResize = /* #__PURE__ */ handler(\"resize\");\nvar onScroll = /* #__PURE__ */ handler(\"scroll\");\nvar onSelect = /* #__PURE__ */ handler(Web_HTML_Event_EventTypes.select);\nvar onSubmit = /* #__PURE__ */ handler(\"submit\");\nvar onTouchCancel = /* #__PURE__ */ (function () {\n    var $41 = handler(\"touchcancel\");\n    return function ($42) {\n        return $41(touchHandler($42));\n    };\n})();\nvar onTouchEnd = /* #__PURE__ */ (function () {\n    var $43 = handler(\"touchend\");\n    return function ($44) {\n        return $43(touchHandler($44));\n    };\n})();\nvar onTouchEnter = /* #__PURE__ */ (function () {\n    var $45 = handler(\"touchenter\");\n    return function ($46) {\n        return $45(touchHandler($46));\n    };\n})();\nvar onTouchLeave = /* #__PURE__ */ (function () {\n    var $47 = handler(\"touchleave\");\n    return function ($48) {\n        return $47(touchHandler($48));\n    };\n})();\nvar onTouchMove = /* #__PURE__ */ (function () {\n    var $49 = handler(\"touchmove\");\n    return function ($50) {\n        return $49(touchHandler($50));\n    };\n})();\nvar onTouchStart = /* #__PURE__ */ (function () {\n    var $51 = handler(\"touchstart\");\n    return function ($52) {\n        return $51(touchHandler($52));\n    };\n})();\nvar onTransitionEnd = /* #__PURE__ */ handler(\"transitionend\");\nvar onWheel = /* #__PURE__ */ (function () {\n    var $53 = handler(Web_UIEvent_WheelEvent_EventTypes.wheel);\n    return function ($54) {\n        return $53(wheelHandler($54));\n    };\n})();\nvar focusHandler = Unsafe_Coerce.unsafeCoerce;\nvar onBlur = /* #__PURE__ */ (function () {\n    var $55 = handler(Web_HTML_Event_EventTypes.blur);\n    return function ($56) {\n        return $55(focusHandler($56));\n    };\n})();\nvar onFocus = /* #__PURE__ */ (function () {\n    var $57 = handler(Web_UIEvent_FocusEvent_EventTypes.focus);\n    return function ($58) {\n        return $57(focusHandler($58));\n    };\n})();\nvar onFocusIn = /* #__PURE__ */ (function () {\n    var $59 = handler(Web_UIEvent_FocusEvent_EventTypes.focusin);\n    return function ($60) {\n        return $59(focusHandler($60));\n    };\n})();\nvar onFocusOut = /* #__PURE__ */ (function () {\n    var $61 = handler(Web_UIEvent_FocusEvent_EventTypes.focusout);\n    return function ($62) {\n        return $61(focusHandler($62));\n    };\n})();\nvar dragHandler = Unsafe_Coerce.unsafeCoerce;\nvar onDrag = /* #__PURE__ */ (function () {\n    var $63 = handler(Web_HTML_Event_DragEvent_EventTypes.drag);\n    return function ($64) {\n        return $63(dragHandler($64));\n    };\n})();\nvar onDragEnd = /* #__PURE__ */ (function () {\n    var $65 = handler(Web_HTML_Event_DragEvent_EventTypes.dragend);\n    return function ($66) {\n        return $65(dragHandler($66));\n    };\n})();\nvar onDragEnter = /* #__PURE__ */ (function () {\n    var $67 = handler(Web_HTML_Event_DragEvent_EventTypes.dragenter);\n    return function ($68) {\n        return $67(dragHandler($68));\n    };\n})();\nvar onDragExit = /* #__PURE__ */ (function () {\n    var $69 = handler(Web_HTML_Event_DragEvent_EventTypes.dragexit);\n    return function ($70) {\n        return $69(dragHandler($70));\n    };\n})();\nvar onDragLeave = /* #__PURE__ */ (function () {\n    var $71 = handler(Web_HTML_Event_DragEvent_EventTypes.dragleave);\n    return function ($72) {\n        return $71(dragHandler($72));\n    };\n})();\nvar onDragOver = /* #__PURE__ */ (function () {\n    var $73 = handler(Web_HTML_Event_DragEvent_EventTypes.dragover);\n    return function ($74) {\n        return $73(dragHandler($74));\n    };\n})();\nvar onDragStart = /* #__PURE__ */ (function () {\n    var $75 = handler(Web_HTML_Event_DragEvent_EventTypes.dragstart);\n    return function ($76) {\n        return $75(dragHandler($76));\n    };\n})();\nvar onDrop = /* #__PURE__ */ (function () {\n    var $77 = handler(Web_HTML_Event_DragEvent_EventTypes.drop);\n    return function ($78) {\n        return $77(dragHandler($78));\n    };\n})();\nvar clipboardHandler = Unsafe_Coerce.unsafeCoerce;\nvar onCopy = /* #__PURE__ */ (function () {\n    var $79 = handler(Web_Clipboard_ClipboardEvent_EventTypes.copy);\n    return function ($80) {\n        return $79(clipboardHandler($80));\n    };\n})();\nvar onCut = /* #__PURE__ */ (function () {\n    var $81 = handler(Web_Clipboard_ClipboardEvent_EventTypes.cut);\n    return function ($82) {\n        return $81(clipboardHandler($82));\n    };\n})();\nvar onPaste = /* #__PURE__ */ (function () {\n    var $83 = handler(Web_Clipboard_ClipboardEvent_EventTypes.paste);\n    return function ($84) {\n        return $83(clipboardHandler($84));\n    };\n})();\nvar addForeignPropHandler = function (key) {\n    return function (prop) {\n        return function (reader) {\n            return function (f) {\n                var go = function (a) {\n                    return composeKleisliFlipped(reader)(readProp(prop))(Foreign.unsafeToForeign(a));\n                };\n                return handler$prime(key)(composeKleisli(Web_Event_Event.currentTarget)(function (e) {\n                    return Data_Either.either(Data_Function[\"const\"](Data_Maybe.Nothing.value))(function ($85) {\n                        return Data_Maybe.Just.create(f($85));\n                    })(Control_Monad_Except.runExcept(go(e)));\n                }));\n            };\n        };\n    };\n};\nvar onChecked = /* #__PURE__ */ addForeignPropHandler(Web_HTML_Event_EventTypes.change)(\"checked\")(/* #__PURE__ */ Foreign.readBoolean(Data_Identity.monadIdentity));\nvar onSelectedIndexChange = /* #__PURE__ */ addForeignPropHandler(Web_HTML_Event_EventTypes.change)(\"selectedIndex\")(/* #__PURE__ */ Foreign.readInt(Data_Identity.monadIdentity));\nvar onValueChange = /* #__PURE__ */ addForeignPropHandler(Web_HTML_Event_EventTypes.change)(\"value\")(readString);\nvar onValueInput = /* #__PURE__ */ addForeignPropHandler(Web_HTML_Event_EventTypes.input)(\"value\")(readString);\nexport {\n    handler,\n    handler$prime,\n    onAbort,\n    onError,\n    onLoad,\n    onScroll,\n    onChange,\n    onFileUpload,\n    onInput,\n    onInvalid,\n    onReset,\n    onSelect,\n    onSubmit,\n    onTransitionEnd,\n    onCopy,\n    onPaste,\n    onCut,\n    onAuxClick,\n    onClick,\n    onDoubleClick,\n    onMouseDown,\n    onMouseEnter,\n    onMouseLeave,\n    onMouseMove,\n    onMouseOver,\n    onMouseOut,\n    onMouseUp,\n    onWheel,\n    onKeyDown,\n    onKeyUp,\n    onBlur,\n    onFocus,\n    onFocusIn,\n    onFocusOut,\n    onDrag,\n    onDragEnd,\n    onDragExit,\n    onDragEnter,\n    onDragLeave,\n    onDragOver,\n    onDragStart,\n    onDrop,\n    onTouchCancel,\n    onTouchEnd,\n    onTouchEnter,\n    onTouchLeave,\n    onTouchMove,\n    onTouchStart,\n    onResize,\n    onValueChange,\n    onValueInput,\n    onSelectedIndexChange,\n    onChecked\n};\n", "// Generated by purs version 0.15.15\nimport * as Control_Applicative from \"../Control.Applicative/index.js\";\nimport * as Control_Bind from \"../Control.Bind/index.js\";\nimport * as Control_Monad_State_Class from \"../Control.Monad.State.Class/index.js\";\nimport * as Data_Array from \"../Data.Array/index.js\";\nimport * as Data_Functor from \"../Data.Functor/index.js\";\nimport * as Data_Maybe from \"../Data.Maybe/index.js\";\nimport * as Data_Semigroup from \"../Data.Semigroup/index.js\";\nimport * as Data_Unit from \"../Data.Unit/index.js\";\nimport * as Foliage_App_Style from \"../Foliage.App.Style/index.js\";\nimport * as Halogen_Component from \"../Halogen.Component/index.js\";\nimport * as Halogen_HTML from \"../Halogen.HTML/index.js\";\nimport * as Halogen_HTML_Core from \"../Halogen.HTML.Core/index.js\";\nimport * as Halogen_HTML_Elements from \"../Halogen.HTML.Elements/index.js\";\nimport * as Halogen_HTML_Events from \"../Halogen.HTML.Events/index.js\";\nimport * as Halogen_Query_HalogenM from \"../Halogen.Query.HalogenM/index.js\";\nvar append = /* #__PURE__ */ Data_Semigroup.append(Data_Semigroup.semigroupArray);\nvar map = /* #__PURE__ */ Data_Functor.map(Data_Functor.functorArray);\nvar pure = /* #__PURE__ */ Control_Applicative.pure(Control_Applicative.applicativeArray);\nvar mapFlipped = /* #__PURE__ */ Data_Functor.mapFlipped(Data_Functor.functorArray);\nvar discard = /* #__PURE__ */ Control_Bind.discard(Control_Bind.discardUnit)(Halogen_Query_HalogenM.bindHalogenM);\nvar modify_ = /* #__PURE__ */ Control_Monad_State_Class.modify_(Halogen_Query_HalogenM.monadStateHalogenM);\nvar pure1 = /* #__PURE__ */ Control_Applicative.pure(Halogen_Query_HalogenM.applicativeHalogenM);\nvar AddLog = /* #__PURE__ */ (function () {\n    function AddLog(value0, value1) {\n        this.value0 = value0;\n        this.value1 = value1;\n    };\n    AddLog.create = function (value0) {\n        return function (value1) {\n            return new AddLog(value0, value1);\n        };\n    };\n    return AddLog;\n})();\nvar SetLogs = /* #__PURE__ */ (function () {\n    function SetLogs(value0, value1) {\n        this.value0 = value0;\n        this.value1 = value1;\n    };\n    SetLogs.create = function (value0) {\n        return function (value1) {\n            return new SetLogs(value0, value1);\n        };\n    };\n    return SetLogs;\n})();\nvar ShowIntermediateEnv = /* #__PURE__ */ (function () {\n    function ShowIntermediateEnv(value0) {\n        this.value0 = value0;\n    };\n    ShowIntermediateEnv.create = function (value0) {\n        return new ShowIntermediateEnv(value0);\n    };\n    return ShowIntermediateEnv;\n})();\nvar HideIntermediateEnv = /* #__PURE__ */ (function () {\n    function HideIntermediateEnv() {\n\n    };\n    HideIntermediateEnv.value = new HideIntermediateEnv();\n    return HideIntermediateEnv;\n})();\nvar MouseEnterLogHeader = /* #__PURE__ */ (function () {\n    function MouseEnterLogHeader(value0, value1) {\n        this.value0 = value0;\n        this.value1 = value1;\n    };\n    MouseEnterLogHeader.create = function (value0) {\n        return function (value1) {\n            return new MouseEnterLogHeader(value0, value1);\n        };\n    };\n    return MouseEnterLogHeader;\n})();\nvar MouseLeaveLogHeader = /* #__PURE__ */ (function () {\n    function MouseLeaveLogHeader(value0) {\n        this.value0 = value0;\n    };\n    MouseLeaveLogHeader.create = function (value0) {\n        return new MouseLeaveLogHeader(value0);\n    };\n    return MouseLeaveLogHeader;\n})();\nvar component = /* #__PURE__ */ (function () {\n    var renderLog = function (v) {\n        return Halogen_HTML_Elements.div([ Foliage_App_Style.style(append(Foliage_App_Style.flex_column)([  ])) ])([ Halogen_HTML_Elements.div([ Foliage_App_Style.style(append(Foliage_App_Style.bold)([ \"background-color: rgba(0, 0, 0, 0.2)\" ])), Halogen_HTML_Events.onMouseEnter(MouseEnterLogHeader.create(v.value1)), Halogen_HTML_Events.onMouseLeave(MouseLeaveLogHeader.create) ])([ Halogen_HTML_Core.text(v.value0.label) ]), Halogen_HTML_Elements.div([ Foliage_App_Style.style(append(Foliage_App_Style.flex_column)([ \"padding-left: 1.0em\", \"gap: 1em\" ])) ])(map(function (v1) {\n            return Halogen_HTML.fromPlainHTML(Halogen_HTML_Elements.div([ Foliage_App_Style.style(Foliage_App_Style.flex_row) ])([ Halogen_HTML_Elements.div([ Foliage_App_Style.style(append(Foliage_App_Style.underline)([ \"flex-shrink: 0\", \"padding-right: 0.2em\", \"width: 8em\", \"text-align: right\", \"border-right: 1px solid black\" ])) ])(pure(Halogen_HTML_Core.text(v1.value0))), v1.value1 ]));\n        })(v.value0.messages)) ]);\n    };\n    var render = function (state) {\n        return Halogen_HTML_Elements.div([ Foliage_App_Style.style(append(Foliage_App_Style.flex_column)(append(Foliage_App_Style.font_code)([ \"gap: 1.0em\" ]))) ])([ Halogen_HTML_Elements.div([ Foliage_App_Style.style(Foliage_App_Style.flex_row) ])([ Halogen_HTML_Elements.button([ Foliage_App_Style.style(Foliage_App_Style.button) ])([ Halogen_HTML_Core.text(\"Clear\") ]) ]), Halogen_HTML_Elements.div([ Foliage_App_Style.style(append(Foliage_App_Style.padding_small)(append(Foliage_App_Style.flex_column)([ \"gap: 2em\", \"overflow: scroll\" ]))) ])(mapFlipped(state.logs)(renderLog)) ]);\n    };\n    var initialState = function (input) {\n        return {\n            logs: [  ]\n        };\n    };\n    var handleQuery = function (v) {\n        if (v instanceof AddLog) {\n            return discard(modify_(function (state) {\n                var $22 = {};\n                for (var $23 in state) {\n                    if ({}.hasOwnProperty.call(state, $23)) {\n                        $22[$23] = state[$23];\n                    };\n                };\n                $22.logs = Data_Array.snoc(state.logs)(v.value0);\n                return $22;\n            }))(function () {\n                return pure1(new Data_Maybe.Just(v.value1));\n            });\n        };\n        if (v instanceof SetLogs) {\n            return discard(modify_(function (v1) {\n                var $27 = {};\n                for (var $28 in v1) {\n                    if ({}.hasOwnProperty.call(v1, $28)) {\n                        $27[$28] = v1[$28];\n                    };\n                };\n                $27.logs = v.value0;\n                return $27;\n            }))(function () {\n                return pure1(new Data_Maybe.Just(v.value1));\n            });\n        };\n        throw new Error(\"Failed pattern match at Foliage.App.Console.Component (line 39, column 17 - line 45, column 20): \" + [ v.constructor.name ]);\n    };\n    var handleAction = function (v) {\n        if (v instanceof MouseEnterLogHeader) {\n            return discard(Data_Maybe.maybe(pure1(Data_Unit.unit))(function (env) {\n                return Halogen_Query_HalogenM.raise(new ShowIntermediateEnv(env));\n            })(v.value0))(function () {\n                return pure1(Data_Unit.unit);\n            });\n        };\n        if (v instanceof MouseLeaveLogHeader) {\n            return discard(Halogen_Query_HalogenM.raise(HideIntermediateEnv.value))(function () {\n                return pure1(Data_Unit.unit);\n            });\n        };\n        throw new Error(\"Failed pattern match at Foliage.App.Console.Component (line 47, column 18 - line 53, column 16): \" + [ v.constructor.name ]);\n    };\n    var $$eval = Halogen_Component.mkEval({\n        receive: Halogen_Component.defaultEval.receive,\n        initialize: Halogen_Component.defaultEval.initialize,\n        finalize: Halogen_Component.defaultEval.finalize,\n        handleQuery: handleQuery,\n        handleAction: handleAction\n    });\n    return Halogen_Component.mkComponent({\n        initialState: initialState,\n        \"eval\": $$eval,\n        render: render\n    });\n})();\nexport {\n    AddLog,\n    SetLogs,\n    ShowIntermediateEnv,\n    HideIntermediateEnv,\n    MouseEnterLogHeader,\n    MouseLeaveLogHeader,\n    component\n};\n", "export function unsafeUnionFn(r1, r2) {\n  var copy = {};\n  for (var k1 in r2) {\n    if ({}.hasOwnProperty.call(r2, k1)) {\n      copy[k1] = r2[k1];\n    }\n  }\n  for (var k2 in r1) {\n    if ({}.hasOwnProperty.call(r1, k2)) {\n      copy[k2] = r1[k2];\n    }\n  }\n  return copy;\n}\n", "// Generated by purs version 0.15.15\nimport * as Data_Eq from \"../Data.Eq/index.js\";\nimport * as Data_Symbol from \"../Data.Symbol/index.js\";\nimport * as Record_Unsafe from \"../Record.Unsafe/index.js\";\nimport * as Record_Unsafe_Union from \"../Record.Unsafe.Union/index.js\";\nimport * as Type_Proxy from \"../Type.Proxy/index.js\";\nimport * as Unsafe_Coerce from \"../Unsafe.Coerce/index.js\";\nvar union = function () {\n    return function (l) {\n        return function (r) {\n            return Record_Unsafe_Union.unsafeUnionFn(l, r);\n        };\n    };\n};\nvar set = function (dictIsSymbol) {\n    var reflectSymbol = Data_Symbol.reflectSymbol(dictIsSymbol);\n    return function () {\n        return function () {\n            return function (l) {\n                return function (b) {\n                    return function (r) {\n                        return Record_Unsafe.unsafeSet(reflectSymbol(l))(b)(r);\n                    };\n                };\n            };\n        };\n    };\n};\nvar nub = function () {\n    return Unsafe_Coerce.unsafeCoerce;\n};\nvar merge = function () {\n    return function () {\n        return function (l) {\n            return function (r) {\n                return Record_Unsafe_Union.unsafeUnionFn(l, r);\n            };\n        };\n    };\n};\nvar insert = function (dictIsSymbol) {\n    var reflectSymbol = Data_Symbol.reflectSymbol(dictIsSymbol);\n    return function () {\n        return function () {\n            return function (l) {\n                return function (a) {\n                    return function (r) {\n                        return Record_Unsafe.unsafeSet(reflectSymbol(l))(a)(r);\n                    };\n                };\n            };\n        };\n    };\n};\nvar get = function (dictIsSymbol) {\n    var reflectSymbol = Data_Symbol.reflectSymbol(dictIsSymbol);\n    return function () {\n        return function (l) {\n            return function (r) {\n                return Record_Unsafe.unsafeGet(reflectSymbol(l))(r);\n            };\n        };\n    };\n};\nvar modify = function (dictIsSymbol) {\n    var set1 = set(dictIsSymbol)()();\n    var get1 = get(dictIsSymbol)();\n    return function () {\n        return function () {\n            return function (l) {\n                return function (f) {\n                    return function (r) {\n                        return set1(l)(f(get1(l)(r)))(r);\n                    };\n                };\n            };\n        };\n    };\n};\nvar equalFieldsNil = {\n    equalFields: function (v) {\n        return function (v1) {\n            return function (v2) {\n                return true;\n            };\n        };\n    }\n};\nvar equalFields = function (dict) {\n    return dict.equalFields;\n};\nvar equalFieldsCons = function (dictIsSymbol) {\n    var get1 = get(dictIsSymbol)();\n    return function (dictEq) {\n        var eq = Data_Eq.eq(dictEq);\n        return function () {\n            return function (dictEqualFields) {\n                var equalFields1 = equalFields(dictEqualFields);\n                return {\n                    equalFields: function (v) {\n                        return function (a) {\n                            return function (b) {\n                                var get$prime = get1(Type_Proxy[\"Proxy\"].value);\n                                var equalRest = equalFields1(Type_Proxy[\"Proxy\"].value);\n                                return eq(get$prime(a))(get$prime(b)) && equalRest(a)(b);\n                            };\n                        };\n                    }\n                };\n            };\n        };\n    };\n};\nvar equal = function () {\n    return function (dictEqualFields) {\n        var equalFields1 = equalFields(dictEqualFields);\n        return function (a) {\n            return function (b) {\n                return equalFields1(Type_Proxy[\"Proxy\"].value)(a)(b);\n            };\n        };\n    };\n};\nvar disjointUnion = function () {\n    return function () {\n        return function (l) {\n            return function (r) {\n                return Record_Unsafe_Union.unsafeUnionFn(l, r);\n            };\n        };\n    };\n};\nvar $$delete = function (dictIsSymbol) {\n    var reflectSymbol = Data_Symbol.reflectSymbol(dictIsSymbol);\n    return function () {\n        return function () {\n            return function (l) {\n                return function (r) {\n                    return Record_Unsafe.unsafeDelete(reflectSymbol(l))(r);\n                };\n            };\n        };\n    };\n};\nvar rename = function (dictIsSymbol) {\n    var get1 = get(dictIsSymbol)();\n    var delete1 = $$delete(dictIsSymbol)()();\n    return function (dictIsSymbol1) {\n        var insert1 = insert(dictIsSymbol1)()();\n        return function () {\n            return function () {\n                return function () {\n                    return function () {\n                        return function (prev) {\n                            return function (next) {\n                                return function (record) {\n                                    return insert1(next)(get1(prev)(record))(delete1(prev)(record));\n                                };\n                            };\n                        };\n                    };\n                };\n            };\n        };\n    };\n};\nexport {\n    get,\n    set,\n    modify,\n    insert,\n    $$delete as delete,\n    rename,\n    equal,\n    merge,\n    union,\n    disjointUnion,\n    nub,\n    equalFields,\n    equalFieldsCons,\n    equalFieldsNil\n};\n", "// Generated by purs version 0.15.15\nimport * as $foreign from \"./foreign.js\";\nimport * as Data_Functor from \"../Data.Functor/index.js\";\nimport * as Data_Nullable from \"../Data.Nullable/index.js\";\nimport * as Unsafe_Coerce from \"../Unsafe.Coerce/index.js\";\nimport * as Web_Internal_FFI from \"../Web.Internal.FFI/index.js\";\nvar toUIEvent = Unsafe_Coerce.unsafeCoerce;\nvar toEvent = Unsafe_Coerce.unsafeCoerce;\nvar relatedTarget = /* #__PURE__ */ Data_Functor.map(Data_Functor.functorFn)(Data_Nullable.toMaybe)($foreign[\"_relatedTarget\"]);\nvar fromUIEvent = /* #__PURE__ */ Web_Internal_FFI.unsafeReadProtoTagged(\"MouseEvent\");\nvar fromEvent = /* #__PURE__ */ Web_Internal_FFI.unsafeReadProtoTagged(\"MouseEvent\");\nexport {\n    screenX,\n    screenY,\n    clientX,\n    clientY,\n    pageX,\n    pageY,\n    ctrlKey,\n    shiftKey,\n    altKey,\n    metaKey,\n    button,\n    buttons,\n    getModifierState\n} from \"./foreign.js\";\nexport {\n    fromUIEvent,\n    fromEvent,\n    toUIEvent,\n    toEvent,\n    relatedTarget\n};\n", "// Generated by purs version 0.15.15\nimport * as Control_Bind from \"../Control.Bind/index.js\";\nimport * as Control_Monad_State_Class from \"../Control.Monad.State.Class/index.js\";\nimport * as Data_Function from \"../Data.Function/index.js\";\nimport * as Data_Functor from \"../Data.Functor/index.js\";\nimport * as Data_HeytingAlgebra from \"../Data.HeytingAlgebra/index.js\";\nimport * as Data_Semigroup from \"../Data.Semigroup/index.js\";\nimport * as Effect_Class from \"../Effect.Class/index.js\";\nimport * as Foliage_App_Style from \"../Foliage.App.Style/index.js\";\nimport * as Halogen_Component from \"../Halogen.Component/index.js\";\nimport * as Halogen_HTML from \"../Halogen.HTML/index.js\";\nimport * as Halogen_HTML_Elements from \"../Halogen.HTML.Elements/index.js\";\nimport * as Halogen_HTML_Events from \"../Halogen.HTML.Events/index.js\";\nimport * as Halogen_Query_HalogenM from \"../Halogen.Query.HalogenM/index.js\";\nimport * as Record from \"../Record/index.js\";\nimport * as Type_Proxy from \"../Type.Proxy/index.js\";\nimport * as Web_Event_Event from \"../Web.Event.Event/index.js\";\nimport * as Web_UIEvent_MouseEvent from \"../Web.UIEvent.MouseEvent/index.js\";\nvar append = /* #__PURE__ */ Data_Semigroup.append(Data_Semigroup.semigroupArray);\nvar mapFlipped = /* #__PURE__ */ Data_Functor.mapFlipped(Data_Functor.functorArray);\nvar merge = /* #__PURE__ */ Record.merge()();\nvar discard = /* #__PURE__ */ Control_Bind.discard(Control_Bind.discardUnit)(Halogen_Query_HalogenM.bindHalogenM);\nvar modify_ = /* #__PURE__ */ Control_Monad_State_Class.modify_(Halogen_Query_HalogenM.monadStateHalogenM);\nvar modify = /* #__PURE__ */ Record.modify({\n    reflectSymbol: function () {\n        return \"open\";\n    }\n})()();\nvar not = /* #__PURE__ */ Data_HeytingAlgebra.not(Data_HeytingAlgebra.heytingAlgebraBoolean);\nvar Select = /* #__PURE__ */ (function () {\n    function Select(value0, value1) {\n        this.value0 = value0;\n        this.value1 = value1;\n    };\n    Select.create = function (value0) {\n        return function (value1) {\n            return new Select(value0, value1);\n        };\n    };\n    return Select;\n})();\nvar Toggle = /* #__PURE__ */ (function () {\n    function Toggle(value0) {\n        this.value0 = value0;\n    };\n    Toggle.create = function (value0) {\n        return new Toggle(value0);\n    };\n    return Toggle;\n})();\nvar MouseLeave = /* #__PURE__ */ (function () {\n    function MouseLeave(value0) {\n        this.value0 = value0;\n    };\n    MouseLeave.create = function (value0) {\n        return new MouseLeave(value0);\n    };\n    return MouseLeave;\n})();\nvar component = function (dictMonadEffect) {\n    var liftEffect = Effect_Class.liftEffect(Halogen_Query_HalogenM.monadEffectHalogenM(dictMonadEffect));\n    var render = function (state) {\n        return Halogen_HTML_Elements.div([  ])([ Halogen_HTML_Elements.div([ Halogen_HTML_Events.onClick(Toggle.create) ])([ Halogen_HTML.fromPlainHTML(state.title) ]), Halogen_HTML_Elements.div([ Foliage_App_Style.style(append((function () {\n            if (state.open) {\n                return [  ];\n            };\n            return Foliage_App_Style.hidden;\n        })())([ \"position: relative\" ])) ])([ Halogen_HTML_Elements.div([ Halogen_HTML_Events.onMouseLeave(MouseLeave.create), Foliage_App_Style.style(append(Foliage_App_Style.flex_column)(append([ \"position: absolute\", \"top: 0.5em\", \"max-height: 16em\", \"overflow-y: scroll\", \"background-color: white\" ])(append(Foliage_App_Style.rounded)(Foliage_App_Style.shadowed)))) ])(mapFlipped(state.items)(function (v) {\n            return Halogen_HTML_Elements.div([ Halogen_HTML_Events.onClick(Select.create(v.value1)) ])([ Halogen_HTML.fromPlainHTML(v.value0) ]);\n        })) ]) ]);\n    };\n    var initialState = function (input) {\n        return merge(input)({\n            open: false\n        });\n    };\n    var handleAction = function (v) {\n        if (v instanceof Select) {\n            return discard(liftEffect(Web_Event_Event.stopPropagation(Web_UIEvent_MouseEvent.toEvent(v.value1))))(function () {\n                return discard(modify_(modify(Type_Proxy[\"Proxy\"].value)(Data_Function[\"const\"](false))))(function () {\n                    return Halogen_Query_HalogenM.raise(v.value0);\n                });\n            });\n        };\n        if (v instanceof Toggle) {\n            return discard(liftEffect(Web_Event_Event.stopPropagation(Web_UIEvent_MouseEvent.toEvent(v.value0))))(function () {\n                return modify_(modify(Type_Proxy[\"Proxy\"].value)(not));\n            });\n        };\n        if (v instanceof MouseLeave) {\n            return discard(liftEffect(Web_Event_Event.stopPropagation(Web_UIEvent_MouseEvent.toEvent(v.value0))))(function () {\n                return modify_(modify(Type_Proxy[\"Proxy\"].value)(Data_Function[\"const\"](false)));\n            });\n        };\n        throw new Error(\"Failed pattern match at Foliage.App.ComponentLibrary.DropdownMenu (line 37, column 18 - line 47, column 70): \" + [ v.constructor.name ]);\n    };\n    var $$eval = Halogen_Component.mkEval({\n        handleQuery: Halogen_Component.defaultEval.handleQuery,\n        receive: Halogen_Component.defaultEval.receive,\n        initialize: Halogen_Component.defaultEval.initialize,\n        finalize: Halogen_Component.defaultEval.finalize,\n        handleAction: handleAction\n    });\n    return Halogen_Component.mkComponent({\n        initialState: initialState,\n        \"eval\": $$eval,\n        render: render\n    });\n};\nexport {\n    Select,\n    Toggle,\n    MouseLeave,\n    component\n};\n", "// Generated by purs version 0.15.15\nimport * as Data_Eq from \"../Data.Eq/index.js\";\nimport * as Data_Generic_Rep from \"../Data.Generic.Rep/index.js\";\nvar genericEqNoConstructors = {\n    \"genericEq'\": function (v) {\n        return function (v1) {\n            return true;\n        };\n    }\n};\nvar genericEqNoArguments = {\n    \"genericEq'\": function (v) {\n        return function (v1) {\n            return true;\n        };\n    }\n};\nvar genericEqArgument = function (dictEq) {\n    var eq = Data_Eq.eq(dictEq);\n    return {\n        \"genericEq'\": function (v) {\n            return function (v1) {\n                return eq(v)(v1);\n            };\n        }\n    };\n};\nvar genericEq$prime = function (dict) {\n    return dict[\"genericEq'\"];\n};\nvar genericEqConstructor = function (dictGenericEq) {\n    var genericEq$prime1 = genericEq$prime(dictGenericEq);\n    return {\n        \"genericEq'\": function (v) {\n            return function (v1) {\n                return genericEq$prime1(v)(v1);\n            };\n        }\n    };\n};\nvar genericEqProduct = function (dictGenericEq) {\n    var genericEq$prime1 = genericEq$prime(dictGenericEq);\n    return function (dictGenericEq1) {\n        var genericEq$prime2 = genericEq$prime(dictGenericEq1);\n        return {\n            \"genericEq'\": function (v) {\n                return function (v1) {\n                    return genericEq$prime1(v.value0)(v1.value0) && genericEq$prime2(v.value1)(v1.value1);\n                };\n            }\n        };\n    };\n};\nvar genericEqSum = function (dictGenericEq) {\n    var genericEq$prime1 = genericEq$prime(dictGenericEq);\n    return function (dictGenericEq1) {\n        var genericEq$prime2 = genericEq$prime(dictGenericEq1);\n        return {\n            \"genericEq'\": function (v) {\n                return function (v1) {\n                    if (v instanceof Data_Generic_Rep.Inl && v1 instanceof Data_Generic_Rep.Inl) {\n                        return genericEq$prime1(v.value0)(v1.value0);\n                    };\n                    if (v instanceof Data_Generic_Rep.Inr && v1 instanceof Data_Generic_Rep.Inr) {\n                        return genericEq$prime2(v.value0)(v1.value0);\n                    };\n                    return false;\n                };\n            }\n        };\n    };\n};\nvar genericEq = function (dictGeneric) {\n    var from = Data_Generic_Rep.from(dictGeneric);\n    return function (dictGenericEq) {\n        var genericEq$prime1 = genericEq$prime(dictGenericEq);\n        return function (x) {\n            return function (y) {\n                return genericEq$prime1(from(x))(from(y));\n            };\n        };\n    };\n};\nexport {\n    genericEq$prime,\n    genericEq,\n    genericEqNoConstructors,\n    genericEqNoArguments,\n    genericEqSum,\n    genericEqProduct,\n    genericEqConstructor,\n    genericEqArgument\n};\n", "export const intercalate = function (separator) {\n  return function (xs) {\n    return xs.join(separator);\n  };\n};\n", "// Generated by purs version 0.15.15\nimport * as $foreign from \"./foreign.js\";\nimport * as Data_Generic_Rep from \"../Data.Generic.Rep/index.js\";\nimport * as Data_Semigroup from \"../Data.Semigroup/index.js\";\nimport * as Data_Show from \"../Data.Show/index.js\";\nimport * as Data_Symbol from \"../Data.Symbol/index.js\";\nimport * as Type_Proxy from \"../Type.Proxy/index.js\";\nvar append = /* #__PURE__ */ Data_Semigroup.append(Data_Semigroup.semigroupArray);\nvar genericShowArgsNoArguments = {\n    genericShowArgs: function (v) {\n        return [  ];\n    }\n};\nvar genericShowArgsArgument = function (dictShow) {\n    var show = Data_Show.show(dictShow);\n    return {\n        genericShowArgs: function (v) {\n            return [ show(v) ];\n        }\n    };\n};\nvar genericShowArgs = function (dict) {\n    return dict.genericShowArgs;\n};\nvar genericShowArgsProduct = function (dictGenericShowArgs) {\n    var genericShowArgs1 = genericShowArgs(dictGenericShowArgs);\n    return function (dictGenericShowArgs1) {\n        var genericShowArgs2 = genericShowArgs(dictGenericShowArgs1);\n        return {\n            genericShowArgs: function (v) {\n                return append(genericShowArgs1(v.value0))(genericShowArgs2(v.value1));\n            }\n        };\n    };\n};\nvar genericShowConstructor = function (dictGenericShowArgs) {\n    var genericShowArgs1 = genericShowArgs(dictGenericShowArgs);\n    return function (dictIsSymbol) {\n        var reflectSymbol = Data_Symbol.reflectSymbol(dictIsSymbol);\n        return {\n            \"genericShow'\": function (v) {\n                var ctor = reflectSymbol(Type_Proxy[\"Proxy\"].value);\n                var v1 = genericShowArgs1(v);\n                if (v1.length === 0) {\n                    return ctor;\n                };\n                return \"(\" + ($foreign.intercalate(\" \")(append([ ctor ])(v1)) + \")\");\n            }\n        };\n    };\n};\nvar genericShow$prime = function (dict) {\n    return dict[\"genericShow'\"];\n};\nvar genericShowNoConstructors = {\n    \"genericShow'\": function (a) {\n        return genericShow$prime(genericShowNoConstructors)(a);\n    }\n};\nvar genericShowSum = function (dictGenericShow) {\n    var genericShow$prime1 = genericShow$prime(dictGenericShow);\n    return function (dictGenericShow1) {\n        var genericShow$prime2 = genericShow$prime(dictGenericShow1);\n        return {\n            \"genericShow'\": function (v) {\n                if (v instanceof Data_Generic_Rep.Inl) {\n                    return genericShow$prime1(v.value0);\n                };\n                if (v instanceof Data_Generic_Rep.Inr) {\n                    return genericShow$prime2(v.value0);\n                };\n                throw new Error(\"Failed pattern match at Data.Show.Generic (line 26, column 1 - line 28, column 40): \" + [ v.constructor.name ]);\n            }\n        };\n    };\n};\nvar genericShow = function (dictGeneric) {\n    var from = Data_Generic_Rep.from(dictGeneric);\n    return function (dictGenericShow) {\n        var genericShow$prime1 = genericShow$prime(dictGenericShow);\n        return function (x) {\n            return genericShow$prime1(from(x));\n        };\n    };\n};\nexport {\n    genericShow$prime,\n    genericShow,\n    genericShowArgs,\n    genericShowNoConstructors,\n    genericShowArgsNoArguments,\n    genericShowSum,\n    genericShowArgsProduct,\n    genericShowConstructor,\n    genericShowArgsArgument\n};\n", "// Generated by purs version 0.15.15\nimport * as Data_Eq from \"../Data.Eq/index.js\";\nimport * as Data_Symbol from \"../Data.Symbol/index.js\";\nimport * as Type_Proxy from \"../Type.Proxy/index.js\";\nvar Opaque = /* #__PURE__ */ (function () {\n    function Opaque(value0, value1) {\n        this.value0 = value0;\n        this.value1 = value1;\n    };\n    Opaque.create = function (value0) {\n        return function (value1) {\n            return new Opaque(value0, value1);\n        };\n    };\n    return Opaque;\n})();\nvar Exc = function (x) {\n    return x;\n};\nvar map_Exc_label = function (label) {\n    return function (v) {\n        return {\n            label: label,\n            source: v.source,\n            description: v.description\n        };\n    };\n};\nvar fromOpaque = function (v) {\n    return v.value1;\n};\nvar _error = /* #__PURE__ */ (function () {\n    return Type_Proxy[\"Proxy\"].value;\n})();\nvar _compare = /* #__PURE__ */ (function () {\n    return Type_Proxy[\"Proxy\"].value;\n})();\nvar _apply_rule = /* #__PURE__ */ (function () {\n    return Type_Proxy[\"Proxy\"].value;\n})();\nvar _Show_Opaque = function (dictIsSymbol) {\n    var reflectSymbol = Data_Symbol.reflectSymbol(dictIsSymbol);\n    return {\n        show: function (v) {\n            return \"<\" + (reflectSymbol(v.value0) + \">\");\n        }\n    };\n};\nvar _Show_Exc = function (dictIsSymbol) {\n    var reflectSymbol = Data_Symbol.reflectSymbol(dictIsSymbol);\n    return {\n        show: function (v) {\n            return \"[exc . \" + (reflectSymbol(v.label) + (\"] \" + (v.source + (\": \" + v.description))));\n        }\n    };\n};\nvar _Newtype_Exc = {\n    Coercible0: function () {\n        return undefined;\n    }\n};\nvar _Eq_Opaque = {\n    eq: function (v) {\n        return function (v1) {\n            return false;\n        };\n    }\n};\nvar _Eq_Exc = /* #__PURE__ */ Data_Eq.eqRec()(/* #__PURE__ */ Data_Eq.eqRowCons(/* #__PURE__ */ Data_Eq.eqRowCons(/* #__PURE__ */ Data_Eq.eqRowCons(Data_Eq.eqRowNil)()({\n    reflectSymbol: function () {\n        return \"source\";\n    }\n})(Data_Eq.eqString))()({\n    reflectSymbol: function () {\n        return \"label\";\n    }\n})(Data_Eq.eqProxy))()({\n    reflectSymbol: function () {\n        return \"description\";\n    }\n})(Data_Eq.eqString));\nexport {\n    Exc,\n    _apply_rule,\n    _compare,\n    _error,\n    map_Exc_label,\n    Opaque,\n    fromOpaque,\n    _Newtype_Exc,\n    _Eq_Exc,\n    _Show_Exc,\n    _Eq_Opaque,\n    _Show_Opaque\n};\n", "import * as Control_Applicative from \"../Control.Applicative/index.js\";\nimport * as Control_Apply from \"../Control.Apply/index.js\";\nimport * as Control_Bind from \"../Control.Bind/index.js\";\nimport * as Control_Category from \"../Control.Category/index.js\";\nimport * as Control_Monad_Error_Class from \"../Control.Monad.Error.Class/index.js\";\nimport * as Data_Either from \"../Data.Either/index.js\";\nimport * as Data_Eq from \"../Data.Eq/index.js\";\nimport * as Data_Eq_Generic from \"../Data.Eq.Generic/index.js\";\nimport * as Data_Foldable from \"../Data.Foldable/index.js\";\nimport * as Data_Function from \"../Data.Function/index.js\";\nimport * as Data_Functor from \"../Data.Functor/index.js\";\nimport * as Data_Generic_Rep from \"../Data.Generic.Rep/index.js\";\nimport * as Data_List_Types from \"../Data.List.Types/index.js\";\nimport * as Data_Map_Internal from \"../Data.Map.Internal/index.js\";\nimport * as Data_Maybe from \"../Data.Maybe/index.js\";\nimport * as Data_Monoid from \"../Data.Monoid/index.js\";\nimport * as Data_Newtype from \"../Data.Newtype/index.js\";\nimport * as Data_Ord from \"../Data.Ord/index.js\";\nimport * as Data_Semigroup from \"../Data.Semigroup/index.js\";\nimport * as Data_Show from \"../Data.Show/index.js\";\nimport * as Data_Show_Generic from \"../Data.Show.Generic/index.js\";\nimport * as Data_Traversable from \"../Data.Traversable/index.js\";\nimport * as Data_Tuple from \"../Data.Tuple/index.js\";\nimport * as Effect from \"../Effect/index.js\";\nimport * as Effect_Ref from \"../Effect.Ref/index.js\";\nimport * as Effect_Unsafe from \"../Effect.Unsafe/index.js\";\nimport * as Foliage_Common from \"../Foliage.Common/index.js\";\nimport * as Record from \"../Record/index.js\";\nvar throwError = /* #__PURE__ */ Control_Monad_Error_Class.throwError(Control_Monad_Error_Class.monadThrowEither);\nvar $$null = /* #__PURE__ */ Data_Foldable[\"null\"](Data_List_Types.foldableList);\nvar mapFlipped = /* #__PURE__ */ Data_Functor.mapFlipped(Data_Functor.functorArray);\nvar mapFlipped1 = /* #__PURE__ */ Data_Functor.mapFlipped(Data_List_Types.functorList);\nvar map = /* #__PURE__ */ Data_Functor.map(Effect.functorEffect);\nvar wrap = /* #__PURE__ */ Data_Newtype.wrap();\nvar show = /* #__PURE__ */ Data_Show.show(Data_Show.showInt);\nvar genericShowConstructor = /* #__PURE__ */ Data_Show_Generic.genericShowConstructor(Data_Show_Generic.genericShowArgsNoArguments);\nvar genericShowSum = /* #__PURE__ */ Data_Show_Generic.genericShowSum(/* #__PURE__ */ genericShowConstructor({\n    reflectSymbol: function () {\n        return \"UnitLatticeType\";\n    }\n}));\nvar SumLatticeTypeIsSymbol = {\n    reflectSymbol: function () {\n        return \"SumLatticeType\";\n    }\n};\nvar ProductLatticeTypeIsSymbol = {\n    reflectSymbol: function () {\n        return \"ProductLatticeType\";\n    }\n};\nvar SetLatticeTypeIsSymbol = {\n    reflectSymbol: function () {\n        return \"SetLatticeType\";\n    }\n};\nvar OppositeLatticeTypeIsSymbol = {\n    reflectSymbol: function () {\n        return \"OppositeLatticeType\";\n    }\n};\nvar DiscreteLatticeTypeIsSymbol = {\n    reflectSymbol: function () {\n        return \"DiscreteLatticeType\";\n    }\n};\nvar PowerLatticeTypeIsSymbol = {\n    reflectSymbol: function () {\n        return \"PowerLatticeType\";\n    }\n};\nvar showRecord = /* #__PURE__ */ Data_Show.showRecord()();\nvar compare_implIsSymbol = {\n    reflectSymbol: function () {\n        return \"compare_impl\";\n    }\n};\nvar nameIsSymbol = {\n    reflectSymbol: function () {\n        return \"name\";\n    }\n};\nvar showRecordFieldsConsNil = /* #__PURE__ */ Data_Show.showRecordFieldsConsNil(nameIsSymbol);\nvar domainIsSymbol = {\n    reflectSymbol: function () {\n        return \"domain\";\n    }\n};\nvar genericShowSum1 = /* #__PURE__ */ Data_Show_Generic.genericShowSum(/* #__PURE__ */ genericShowConstructor({\n    reflectSymbol: function () {\n        return \"UnitDataType\";\n    }\n}));\nvar SumDataTypeIsSymbol = {\n    reflectSymbol: function () {\n        return \"SumDataType\";\n    }\n};\nvar ProductDataTypeIsSymbol = {\n    reflectSymbol: function () {\n        return \"ProductDataType\";\n    }\n};\nvar SetDataTypeIsSymbol = {\n    reflectSymbol: function () {\n        return \"SetDataType\";\n    }\n};\nvar genericShowArgsArgument = /* #__PURE__ */ Data_Show_Generic.genericShowArgsArgument(Data_Show.showString);\nvar implIsSymbol = {\n    reflectSymbol: function () {\n        return \"impl\";\n    }\n};\nvar inputsIsSymbol = {\n    reflectSymbol: function () {\n        return \"inputs\";\n    }\n};\nvar showRecordFieldsCons = /* #__PURE__ */ Data_Show.showRecordFieldsCons(nameIsSymbol);\nvar outputIsSymbol = {\n    reflectSymbol: function () {\n        return \"output\";\n    }\n};\nvar VarTermIsSymbol = {\n    reflectSymbol: function () {\n        return \"VarTerm\";\n    }\n};\nvar genericShowSum2 = /* #__PURE__ */ Data_Show_Generic.genericShowSum(/* #__PURE__ */ genericShowConstructor({\n    reflectSymbol: function () {\n        return \"UnitTerm\";\n    }\n}));\nvar genericShowArgsProduct = /* #__PURE__ */ Data_Show_Generic.genericShowArgsProduct(genericShowArgsArgument);\nvar ConTermIsSymbol = {\n    reflectSymbol: function () {\n        return \"ConTerm\";\n    }\n};\nvar LeftTermIsSymbol = {\n    reflectSymbol: function () {\n        return \"LeftTerm\";\n    }\n};\nvar RightTermIsSymbol = {\n    reflectSymbol: function () {\n        return \"RightTerm\";\n    }\n};\nvar PairTermIsSymbol = {\n    reflectSymbol: function () {\n        return \"PairTerm\";\n    }\n};\nvar SetTermIsSymbol = {\n    reflectSymbol: function () {\n        return \"SetTerm\";\n    }\n};\nvar PropIsSymbol = {\n    reflectSymbol: function () {\n        return \"Prop\";\n    }\n};\nvar argsIsSymbol = {\n    reflectSymbol: function () {\n        return \"args\";\n    }\n};\nvar functionNameIsSymbol = {\n    reflectSymbol: function () {\n        return \"functionName\";\n    }\n};\nvar resultVarNameIsSymbol = {\n    reflectSymbol: function () {\n        return \"resultVarName\";\n    }\n};\nvar conclusionIsSymbol = {\n    reflectSymbol: function () {\n        return \"conclusion\";\n    }\n};\nvar hypothesesIsSymbol = {\n    reflectSymbol: function () {\n        return \"hypotheses\";\n    }\n};\nvar dataTypeDefsIsSymbol = {\n    reflectSymbol: function () {\n        return \"dataTypeDefs\";\n    }\n};\nvar docIsSymbol = {\n    reflectSymbol: function () {\n        return \"doc\";\n    }\n};\nvar showRecordFieldsCons1 = /* #__PURE__ */ Data_Show.showRecordFieldsCons(docIsSymbol);\nvar functionDefsIsSymbol = {\n    reflectSymbol: function () {\n        return \"functionDefs\";\n    }\n};\nvar initialGasIsSymbol = {\n    reflectSymbol: function () {\n        return \"initialGas\";\n    }\n};\nvar latticeTypeDefsIsSymbol = {\n    reflectSymbol: function () {\n        return \"latticeTypeDefs\";\n    }\n};\nvar relationsIsSymbol = {\n    reflectSymbol: function () {\n        return \"relations\";\n    }\n};\nvar rulesIsSymbol = {\n    reflectSymbol: function () {\n        return \"rules\";\n    }\n};\nvar showMaybe = /* #__PURE__ */ Data_Maybe.showMaybe(Data_Show.showString);\nvar modulesIsSymbol = {\n    reflectSymbol: function () {\n        return \"modules\";\n    }\n};\nvar map1 = /* #__PURE__ */ Data_Functor.map(Data_Functor.functorArray);\nvar foldl = /* #__PURE__ */ Data_Foldable.foldl(Data_Foldable.foldableArray);\nvar foldr = /* #__PURE__ */ Data_Foldable.foldr(Data_Foldable.foldableArray);\nvar foldMap = /* #__PURE__ */ Data_Foldable.foldMap(Data_Foldable.foldableArray);\nvar traverse = /* #__PURE__ */ Data_Traversable.traverse(Data_Traversable.traversableArray);\nvar identity = /* #__PURE__ */ Control_Category.identity(Control_Category.categoryFn);\nvar genericEqConstructor = /* #__PURE__ */ Data_Eq_Generic.genericEqConstructor(Data_Eq_Generic.genericEqNoArguments);\nvar genericEqSum = /* #__PURE__ */ Data_Eq_Generic.genericEqSum(genericEqConstructor);\nvar eqRec = /* #__PURE__ */ Data_Eq.eqRec();\nvar eqRowCons = /* #__PURE__ */ Data_Eq.eqRowCons(Data_Eq.eqRowNil)();\nvar eqRowCons1 = /* #__PURE__ */ eqRowCons(nameIsSymbol);\nvar genericEqArgument = /* #__PURE__ */ Data_Eq_Generic.genericEqArgument(Data_Eq.eqString);\nvar genericEqProduct = /* #__PURE__ */ Data_Eq_Generic.genericEqProduct(genericEqArgument);\nvar eqMaybe = /* #__PURE__ */ Data_Maybe.eqMaybe(Data_Eq.eqString);\nvar bindFlipped = /* #__PURE__ */ Control_Bind.bindFlipped(Data_Either.bindEither);\nvar pure1 = /* #__PURE__ */ Control_Applicative.pure(Data_Either.applicativeEither);\nvar show1 = /* #__PURE__ */ Data_Show.show(Data_Show.showString);\nvar lookup = /* #__PURE__ */ Data_Map_Internal.lookup(Data_Ord.ordString);\nvar LeftGreaterThanRight_SumLatticeTypeOrdering = /* #__PURE__ */ (function () {\n    function LeftGreaterThanRight_SumLatticeTypeOrdering() {\n\n    };\n    LeftGreaterThanRight_SumLatticeTypeOrdering.value = new LeftGreaterThanRight_SumLatticeTypeOrdering();\n    return LeftGreaterThanRight_SumLatticeTypeOrdering;\n})();\nvar LeftLessThanRight_SumLatticeTypeOrdering = /* #__PURE__ */ (function () {\n    function LeftLessThanRight_SumLatticeTypeOrdering() {\n\n    };\n    LeftLessThanRight_SumLatticeTypeOrdering.value = new LeftLessThanRight_SumLatticeTypeOrdering();\n    return LeftLessThanRight_SumLatticeTypeOrdering;\n})();\nvar LeftIncomparableRight_SumLatticeTypeOrdering = /* #__PURE__ */ (function () {\n    function LeftIncomparableRight_SumLatticeTypeOrdering() {\n\n    };\n    LeftIncomparableRight_SumLatticeTypeOrdering.value = new LeftIncomparableRight_SumLatticeTypeOrdering();\n    return LeftIncomparableRight_SumLatticeTypeOrdering;\n})();\nvar LeftEqualRight_SumLatticeTypeOrdering = /* #__PURE__ */ (function () {\n    function LeftEqualRight_SumLatticeTypeOrdering() {\n\n    };\n    LeftEqualRight_SumLatticeTypeOrdering.value = new LeftEqualRight_SumLatticeTypeOrdering();\n    return LeftEqualRight_SumLatticeTypeOrdering;\n})();\nvar SetOrdering = /* #__PURE__ */ (function () {\n    function SetOrdering() {\n\n    };\n    SetOrdering.value = new SetOrdering();\n    return SetOrdering;\n})();\nvar FirstThenSecond_ProductLatticeTypeOrdering = /* #__PURE__ */ (function () {\n    function FirstThenSecond_ProductLatticeTypeOrdering() {\n\n    };\n    FirstThenSecond_ProductLatticeTypeOrdering.value = new FirstThenSecond_ProductLatticeTypeOrdering();\n    return FirstThenSecond_ProductLatticeTypeOrdering;\n})();\nvar Name = function (x) {\n    return x;\n};\nvar NamedLatticeType = /* #__PURE__ */ (function () {\n    function NamedLatticeType(value0) {\n        this.value0 = value0;\n    };\n    NamedLatticeType.create = function (value0) {\n        return new NamedLatticeType(value0);\n    };\n    return NamedLatticeType;\n})();\nvar UnitLatticeType = /* #__PURE__ */ (function () {\n    function UnitLatticeType() {\n\n    };\n    UnitLatticeType.value = new UnitLatticeType();\n    return UnitLatticeType;\n})();\nvar SumLatticeType = /* #__PURE__ */ (function () {\n    function SumLatticeType(value0, value1, value2) {\n        this.value0 = value0;\n        this.value1 = value1;\n        this.value2 = value2;\n    };\n    SumLatticeType.create = function (value0) {\n        return function (value1) {\n            return function (value2) {\n                return new SumLatticeType(value0, value1, value2);\n            };\n        };\n    };\n    return SumLatticeType;\n})();\nvar ProductLatticeType = /* #__PURE__ */ (function () {\n    function ProductLatticeType(value0, value1, value2) {\n        this.value0 = value0;\n        this.value1 = value1;\n        this.value2 = value2;\n    };\n    ProductLatticeType.create = function (value0) {\n        return function (value1) {\n            return function (value2) {\n                return new ProductLatticeType(value0, value1, value2);\n            };\n        };\n    };\n    return ProductLatticeType;\n})();\nvar SetLatticeType = /* #__PURE__ */ (function () {\n    function SetLatticeType(value0, value1) {\n        this.value0 = value0;\n        this.value1 = value1;\n    };\n    SetLatticeType.create = function (value0) {\n        return function (value1) {\n            return new SetLatticeType(value0, value1);\n        };\n    };\n    return SetLatticeType;\n})();\nvar OppositeLatticeType = /* #__PURE__ */ (function () {\n    function OppositeLatticeType(value0) {\n        this.value0 = value0;\n    };\n    OppositeLatticeType.create = function (value0) {\n        return new OppositeLatticeType(value0);\n    };\n    return OppositeLatticeType;\n})();\nvar DiscreteLatticeType = /* #__PURE__ */ (function () {\n    function DiscreteLatticeType(value0) {\n        this.value0 = value0;\n    };\n    DiscreteLatticeType.create = function (value0) {\n        return new DiscreteLatticeType(value0);\n    };\n    return DiscreteLatticeType;\n})();\nvar PowerLatticeType = /* #__PURE__ */ (function () {\n    function PowerLatticeType(value0) {\n        this.value0 = value0;\n    };\n    PowerLatticeType.create = function (value0) {\n        return new PowerLatticeType(value0);\n    };\n    return PowerLatticeType;\n})();\nvar Relation = /* #__PURE__ */ (function () {\n    function Relation(value0) {\n        this.value0 = value0;\n    };\n    Relation.create = function (value0) {\n        return new Relation(value0);\n    };\n    return Relation;\n})();\nvar UnitDataType = /* #__PURE__ */ (function () {\n    function UnitDataType() {\n\n    };\n    UnitDataType.value = new UnitDataType();\n    return UnitDataType;\n})();\nvar NamedDataType = /* #__PURE__ */ (function () {\n    function NamedDataType(value0) {\n        this.value0 = value0;\n    };\n    NamedDataType.create = function (value0) {\n        return new NamedDataType(value0);\n    };\n    return NamedDataType;\n})();\nvar SumDataType = /* #__PURE__ */ (function () {\n    function SumDataType(value0, value1) {\n        this.value0 = value0;\n        this.value1 = value1;\n    };\n    SumDataType.create = function (value0) {\n        return function (value1) {\n            return new SumDataType(value0, value1);\n        };\n    };\n    return SumDataType;\n})();\nvar ProductDataType = /* #__PURE__ */ (function () {\n    function ProductDataType(value0, value1) {\n        this.value0 = value0;\n        this.value1 = value1;\n    };\n    ProductDataType.create = function (value0) {\n        return function (value1) {\n            return new ProductDataType(value0, value1);\n        };\n    };\n    return ProductDataType;\n})();\nvar SetDataType = /* #__PURE__ */ (function () {\n    function SetDataType(value0) {\n        this.value0 = value0;\n    };\n    SetDataType.create = function (value0) {\n        return new SetDataType(value0);\n    };\n    return SetDataType;\n})();\nvar ExternalDataTypeDef = /* #__PURE__ */ (function () {\n    function ExternalDataTypeDef(value0) {\n        this.value0 = value0;\n    };\n    ExternalDataTypeDef.create = function (value0) {\n        return new ExternalDataTypeDef(value0);\n    };\n    return ExternalDataTypeDef;\n})();\nvar DataTypeDef = /* #__PURE__ */ (function () {\n    function DataTypeDef(value0) {\n        this.value0 = value0;\n    };\n    DataTypeDef.create = function (value0) {\n        return new DataTypeDef(value0);\n    };\n    return DataTypeDef;\n})();\nvar VarTerm = /* #__PURE__ */ (function () {\n    function VarTerm(value0) {\n        this.value0 = value0;\n    };\n    VarTerm.create = function (value0) {\n        return new VarTerm(value0);\n    };\n    return VarTerm;\n})();\nvar UnitTerm = /* #__PURE__ */ (function () {\n    function UnitTerm() {\n\n    };\n    UnitTerm.value = new UnitTerm();\n    return UnitTerm;\n})();\nvar LiteralTerm = /* #__PURE__ */ (function () {\n    function LiteralTerm(value0, value1) {\n        this.value0 = value0;\n        this.value1 = value1;\n    };\n    LiteralTerm.create = function (value0) {\n        return function (value1) {\n            return new LiteralTerm(value0, value1);\n        };\n    };\n    return LiteralTerm;\n})();\nvar ConTerm = /* #__PURE__ */ (function () {\n    function ConTerm(value0, value1) {\n        this.value0 = value0;\n        this.value1 = value1;\n    };\n    ConTerm.create = function (value0) {\n        return function (value1) {\n            return new ConTerm(value0, value1);\n        };\n    };\n    return ConTerm;\n})();\nvar LeftTerm = /* #__PURE__ */ (function () {\n    function LeftTerm(value0) {\n        this.value0 = value0;\n    };\n    LeftTerm.create = function (value0) {\n        return new LeftTerm(value0);\n    };\n    return LeftTerm;\n})();\nvar RightTerm = /* #__PURE__ */ (function () {\n    function RightTerm(value0) {\n        this.value0 = value0;\n    };\n    RightTerm.create = function (value0) {\n        return new RightTerm(value0);\n    };\n    return RightTerm;\n})();\nvar PairTerm = /* #__PURE__ */ (function () {\n    function PairTerm(value0, value1) {\n        this.value0 = value0;\n        this.value1 = value1;\n    };\n    PairTerm.create = function (value0) {\n        return function (value1) {\n            return new PairTerm(value0, value1);\n        };\n    };\n    return PairTerm;\n})();\nvar SetTerm = /* #__PURE__ */ (function () {\n    function SetTerm(value0) {\n        this.value0 = value0;\n    };\n    SetTerm.create = function (value0) {\n        return new SetTerm(value0);\n    };\n    return SetTerm;\n})();\nvar Prop = /* #__PURE__ */ (function () {\n    function Prop(value0, value1) {\n        this.value0 = value0;\n        this.value1 = value1;\n    };\n    Prop.create = function (value0) {\n        return function (value1) {\n            return new Prop(value0, value1);\n        };\n    };\n    return Prop;\n})();\nvar ExternalFunctionDef = /* #__PURE__ */ (function () {\n    function ExternalFunctionDef(value0) {\n        this.value0 = value0;\n    };\n    ExternalFunctionDef.create = function (value0) {\n        return new ExternalFunctionDef(value0);\n    };\n    return ExternalFunctionDef;\n})();\nvar FunctionSideHypothesis = /* #__PURE__ */ (function () {\n    function FunctionSideHypothesis(value0) {\n        this.value0 = value0;\n    };\n    FunctionSideHypothesis.create = function (value0) {\n        return new FunctionSideHypothesis(value0);\n    };\n    return FunctionSideHypothesis;\n})();\nvar Hypothesis = /* #__PURE__ */ (function () {\n    function Hypothesis(value0, value1) {\n        this.value0 = value0;\n        this.value1 = value1;\n    };\n    Hypothesis.create = function (value0) {\n        return function (value1) {\n            return new Hypothesis(value0, value1);\n        };\n    };\n    return Hypothesis;\n})();\nvar Rule = /* #__PURE__ */ (function () {\n    function Rule(value0) {\n        this.value0 = value0;\n    };\n    Rule.create = function (value0) {\n        return new Rule(value0);\n    };\n    return Rule;\n})();\nvar LatticeTypeDef = /* #__PURE__ */ (function () {\n    function LatticeTypeDef(value0) {\n        this.value0 = value0;\n    };\n    LatticeTypeDef.create = function (value0) {\n        return new LatticeTypeDef(value0);\n    };\n    return LatticeTypeDef;\n})();\nvar ExternalLatticeTypeDef = /* #__PURE__ */ (function () {\n    function ExternalLatticeTypeDef(value0) {\n        this.value0 = value0;\n    };\n    ExternalLatticeTypeDef.create = function (value0) {\n        return new ExternalLatticeTypeDef(value0);\n    };\n    return ExternalLatticeTypeDef;\n})();\nvar Module = /* #__PURE__ */ (function () {\n    function Module(value0) {\n        this.value0 = value0;\n    };\n    Module.create = function (value0) {\n        return new Module(value0);\n    };\n    return Module;\n})();\nvar Program = /* #__PURE__ */ (function () {\n    function Program(value0) {\n        this.value0 = value0;\n    };\n    Program.create = function (value0) {\n        return new Program(value0);\n    };\n    return Program;\n})();\nvar throwExternalFunctionCallError = function (f) {\n    return function (msg) {\n        return throwError(\"when calling external function \" + (f + (\", \" + msg)));\n    };\n};\nvar nextHypothesis = function (v) {\n    if (v.value0.hypotheses instanceof Data_List_Types.Nil) {\n        return new Data_Either.Left(v.value0.conclusion);\n    };\n    if (v.value0.hypotheses instanceof Data_List_Types.Cons) {\n        return new Data_Either.Right({\n            hypothesis: v.value0.hypotheses.value0,\n            \"rule'\": new Rule({\n                conclusion: v.value0.conclusion,\n                hypotheses: v.value0.hypotheses.value1\n            })\n        });\n    };\n    throw new Error(\"Failed pattern match at Foliage.Program (line 215, column 30 - line 217, column 99): \" + [ v.value0.hypotheses.constructor.name ]);\n};\nvar mainModuleName = \"Main\";\nvar lookupModule = function (dictIsSymbol) {\n    var get = Record.get(dictIsSymbol);\n    return function (dictCons) {\n        var get1 = get(dictCons);\n        return function (dictOrd) {\n            var lookup2 = Data_Map_Internal.lookup(dictOrd);\n            return function (label) {\n                return function (k) {\n                    var $994 = lookup2(k);\n                    var $995 = get1(label);\n                    return function ($996) {\n                        return $994($995((function (v) {\n                            return v.value0;\n                        })($996)));\n                    };\n                };\n            };\n        };\n    };\n};\nvar from_RipeRule_to_Rule = function (v) {\n    return new Rule({\n        hypotheses: new Data_List_Types.Cons(v.hypothesis, v[\"rule'\"].value0.hypotheses),\n        conclusion: v[\"rule'\"].value0.conclusion\n    });\n};\nvar fromNoHypothesesRule = function (v) {\n    var $693 = $$null(v.value0.hypotheses);\n    if ($693) {\n        return new Data_Maybe.Just(v.value0.conclusion);\n    };\n    return Data_Maybe.Nothing.value;\n};\nvar freshNameIndexRef = /* #__PURE__ */ Effect_Unsafe.unsafePerformEffect(/* #__PURE__ */ Effect_Ref[\"new\"](0));\nvar _Show_Name = Data_Show.showString;\nvar genericShowArgsArgument1 = /* #__PURE__ */ Data_Show_Generic.genericShowArgsArgument(_Show_Name);\nvar genericShowConstructor1 = /* #__PURE__ */ Data_Show_Generic.genericShowConstructor(genericShowArgsArgument1);\nvar genericShowSum3 = /* #__PURE__ */ Data_Show_Generic.genericShowSum(/* #__PURE__ */ genericShowConstructor1({\n    reflectSymbol: function () {\n        return \"NamedLatticeType\";\n    }\n}));\nvar genericShowSum4 = /* #__PURE__ */ Data_Show_Generic.genericShowSum(/* #__PURE__ */ genericShowConstructor1({\n    reflectSymbol: function () {\n        return \"NamedDataType\";\n    }\n}));\nvar genericShowArgsProduct1 = /* #__PURE__ */ Data_Show_Generic.genericShowArgsProduct(genericShowArgsArgument1);\nvar showMap = /* #__PURE__ */ Data_Map_Internal.showMap(_Show_Name);\nvar _Ord_Name = Data_Ord.ordString;\nvar lookup1 = /* #__PURE__ */ Data_Map_Internal.lookup(_Ord_Name);\nvar substTerm = function (v) {\n    return function (v1) {\n        if (v1 instanceof VarTerm) {\n            return Data_Maybe.fromMaybe(new VarTerm(v1.value0))(lookup1(v1.value0)(v));\n        };\n        if (v1 instanceof LiteralTerm) {\n            return new LiteralTerm(v1.value0, v1.value1);\n        };\n        if (v1 instanceof ConTerm) {\n            return new ConTerm(v1.value0, substTerm(v)(v1.value1));\n        };\n        if (v1 instanceof UnitTerm) {\n            return UnitTerm.value;\n        };\n        if (v1 instanceof LeftTerm) {\n            return new LeftTerm(substTerm(v)(v1.value0));\n        };\n        if (v1 instanceof RightTerm) {\n            return new RightTerm(substTerm(v)(v1.value0));\n        };\n        if (v1 instanceof PairTerm) {\n            return new PairTerm(substTerm(v)(v1.value0), substTerm(v)(v1.value1));\n        };\n        if (v1 instanceof SetTerm) {\n            return new SetTerm(mapFlipped(v1.value0)(substTerm(v)));\n        };\n        throw new Error(\"Failed pattern match at Foliage.Program (line 320, column 1 - line 320, column 39): \" + [ v.constructor.name, v1.constructor.name ]);\n    };\n};\nvar substProp = function (sigma) {\n    return function (v) {\n        return new Prop(v.value0, substTerm(sigma)(v.value1));\n    };\n};\nvar substSideHypothesis = function (sigma) {\n    return function (v) {\n        return new FunctionSideHypothesis({\n            resultVarName: v.value0.resultVarName,\n            functionName: v.value0.functionName,\n            args: mapFlipped(v.value0.args)(substTerm(sigma))\n        });\n    };\n};\nvar substHypothesis = function (sigma) {\n    return function (v) {\n        return new Hypothesis(substProp(sigma)(v.value0), mapFlipped(v.value1)(substSideHypothesis(sigma)));\n    };\n};\nvar substRule = function (sigma) {\n    return function (v) {\n        return new Rule({\n            hypotheses: mapFlipped1(v.value0.hypotheses)(substHypothesis(sigma)),\n            conclusion: substProp(sigma)(v.value0.conclusion)\n        });\n    };\n};\nvar _Newtype_Name = {\n    Coercible0: function () {\n        return undefined;\n    }\n};\nvar freshName = function (v) {\n    return Effect_Unsafe.unsafePerformEffect(function __do() {\n        var n = map(function (i) {\n            return wrap(show(i));\n        })(Effect_Ref.read(freshNameIndexRef))();\n        Effect_Ref.modify_(function (v1) {\n            return v1 + 1 | 0;\n        })(freshNameIndexRef)();\n        return n;\n    });\n};\nvar _Generic_TermF = {\n    to: function (x) {\n        if (x instanceof Data_Generic_Rep.Inl) {\n            return new VarTerm(x.value0);\n        };\n        if (x instanceof Data_Generic_Rep.Inr && x.value0 instanceof Data_Generic_Rep.Inl) {\n            return UnitTerm.value;\n        };\n        if (x instanceof Data_Generic_Rep.Inr && (x.value0 instanceof Data_Generic_Rep.Inr && x.value0.value0 instanceof Data_Generic_Rep.Inl)) {\n            return new LiteralTerm(x.value0.value0.value0.value0, x.value0.value0.value0.value1);\n        };\n        if (x instanceof Data_Generic_Rep.Inr && (x.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0 instanceof Data_Generic_Rep.Inr && x.value0.value0.value0 instanceof Data_Generic_Rep.Inl))) {\n            return new ConTerm(x.value0.value0.value0.value0.value0, x.value0.value0.value0.value0.value1);\n        };\n        if (x instanceof Data_Generic_Rep.Inr && (x.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0 instanceof Data_Generic_Rep.Inr && x.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inl)))) {\n            return new LeftTerm(x.value0.value0.value0.value0.value0);\n        };\n        if (x instanceof Data_Generic_Rep.Inr && (x.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && x.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inl))))) {\n            return new RightTerm(x.value0.value0.value0.value0.value0.value0);\n        };\n        if (x instanceof Data_Generic_Rep.Inr && (x.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && x.value0.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inl)))))) {\n            return new PairTerm(x.value0.value0.value0.value0.value0.value0.value0.value0, x.value0.value0.value0.value0.value0.value0.value0.value1);\n        };\n        if (x instanceof Data_Generic_Rep.Inr && (x.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && x.value0.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr)))))) {\n            return new SetTerm(x.value0.value0.value0.value0.value0.value0.value0);\n        };\n        throw new Error(\"Failed pattern match at Foliage.Program (line 289, column 1 - line 289, column 54): \" + [ x.constructor.name ]);\n    },\n    from: function (x) {\n        if (x instanceof VarTerm) {\n            return new Data_Generic_Rep.Inl(x.value0);\n        };\n        if (x instanceof UnitTerm) {\n            return new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inl(Data_Generic_Rep.NoArguments.value));\n        };\n        if (x instanceof LiteralTerm) {\n            return new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inl(new Data_Generic_Rep.Product(x.value0, x.value1))));\n        };\n        if (x instanceof ConTerm) {\n            return new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inl(new Data_Generic_Rep.Product(x.value0, x.value1)))));\n        };\n        if (x instanceof LeftTerm) {\n            return new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inl(x.value0)))));\n        };\n        if (x instanceof RightTerm) {\n            return new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inl(x.value0))))));\n        };\n        if (x instanceof PairTerm) {\n            return new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inl(new Data_Generic_Rep.Product(x.value0, x.value1))))))));\n        };\n        if (x instanceof SetTerm) {\n            return new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(x.value0)))))));\n        };\n        throw new Error(\"Failed pattern match at Foliage.Program (line 289, column 1 - line 289, column 54): \" + [ x.constructor.name ]);\n    }\n};\nvar genericShow = /* #__PURE__ */ Data_Show_Generic.genericShow(_Generic_TermF);\nvar genericEq = /* #__PURE__ */ Data_Eq_Generic.genericEq(_Generic_TermF);\nvar _Generic_SumLatticeTypeOrdering = {\n    to: function (x) {\n        if (x instanceof Data_Generic_Rep.Inl) {\n            return LeftGreaterThanRight_SumLatticeTypeOrdering.value;\n        };\n        if (x instanceof Data_Generic_Rep.Inr && x.value0 instanceof Data_Generic_Rep.Inl) {\n            return LeftLessThanRight_SumLatticeTypeOrdering.value;\n        };\n        if (x instanceof Data_Generic_Rep.Inr && (x.value0 instanceof Data_Generic_Rep.Inr && x.value0.value0 instanceof Data_Generic_Rep.Inl)) {\n            return LeftIncomparableRight_SumLatticeTypeOrdering.value;\n        };\n        if (x instanceof Data_Generic_Rep.Inr && (x.value0 instanceof Data_Generic_Rep.Inr && x.value0.value0 instanceof Data_Generic_Rep.Inr)) {\n            return LeftEqualRight_SumLatticeTypeOrdering.value;\n        };\n        throw new Error(\"Failed pattern match at Foliage.Program (line 128, column 1 - line 128, column 84): \" + [ x.constructor.name ]);\n    },\n    from: function (x) {\n        if (x instanceof LeftGreaterThanRight_SumLatticeTypeOrdering) {\n            return new Data_Generic_Rep.Inl(Data_Generic_Rep.NoArguments.value);\n        };\n        if (x instanceof LeftLessThanRight_SumLatticeTypeOrdering) {\n            return new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inl(Data_Generic_Rep.NoArguments.value));\n        };\n        if (x instanceof LeftIncomparableRight_SumLatticeTypeOrdering) {\n            return new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inl(Data_Generic_Rep.NoArguments.value)));\n        };\n        if (x instanceof LeftEqualRight_SumLatticeTypeOrdering) {\n            return new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(Data_Generic_Rep.NoArguments.value)));\n        };\n        throw new Error(\"Failed pattern match at Foliage.Program (line 128, column 1 - line 128, column 84): \" + [ x.constructor.name ]);\n    }\n};\nvar genericShow1 = /* #__PURE__ */ Data_Show_Generic.genericShow(_Generic_SumLatticeTypeOrdering)(/* #__PURE__ */ Data_Show_Generic.genericShowSum(/* #__PURE__ */ genericShowConstructor({\n    reflectSymbol: function () {\n        return \"LeftGreaterThanRight_SumLatticeTypeOrdering\";\n    }\n}))(/* #__PURE__ */ Data_Show_Generic.genericShowSum(/* #__PURE__ */ genericShowConstructor({\n    reflectSymbol: function () {\n        return \"LeftLessThanRight_SumLatticeTypeOrdering\";\n    }\n}))(/* #__PURE__ */ Data_Show_Generic.genericShowSum(/* #__PURE__ */ genericShowConstructor({\n    reflectSymbol: function () {\n        return \"LeftIncomparableRight_SumLatticeTypeOrdering\";\n    }\n}))(/* #__PURE__ */ genericShowConstructor({\n    reflectSymbol: function () {\n        return \"LeftEqualRight_SumLatticeTypeOrdering\";\n    }\n})))));\nvar genericEq1 = /* #__PURE__ */ Data_Eq_Generic.genericEq(_Generic_SumLatticeTypeOrdering)(/* #__PURE__ */ genericEqSum(/* #__PURE__ */ genericEqSum(/* #__PURE__ */ genericEqSum(genericEqConstructor))));\nvar _Show_SumLatticeTypeOrdering = {\n    show: function (x) {\n        return genericShow1(x);\n    }\n};\nvar genericShowArgsProduct2 = /* #__PURE__ */ Data_Show_Generic.genericShowArgsProduct(/* #__PURE__ */ Data_Show_Generic.genericShowArgsArgument(_Show_SumLatticeTypeOrdering));\nvar _Generic_SideHypothesis = {\n    to: function (x) {\n        return new FunctionSideHypothesis(x);\n    },\n    from: function (x) {\n        return x.value0;\n    }\n};\nvar _Generic_SetOrdering = {\n    to: function (x) {\n        return SetOrdering.value;\n    },\n    from: function (x) {\n        return Data_Generic_Rep.NoArguments.value;\n    }\n};\nvar genericShow2 = /* #__PURE__ */ Data_Show_Generic.genericShow(_Generic_SetOrdering)(/* #__PURE__ */ genericShowConstructor({\n    reflectSymbol: function () {\n        return \"SetOrdering\";\n    }\n}));\nvar genericEq2 = /* #__PURE__ */ Data_Eq_Generic.genericEq(_Generic_SetOrdering)(genericEqConstructor);\nvar _Show_SetOrdering = {\n    show: function (x) {\n        return genericShow2(x);\n    }\n};\nvar genericShowArgsProduct3 = /* #__PURE__ */ Data_Show_Generic.genericShowArgsProduct(/* #__PURE__ */ Data_Show_Generic.genericShowArgsArgument(_Show_SetOrdering));\nvar _Generic_Rule = {\n    to: function (x) {\n        return new Rule(x);\n    },\n    from: function (x) {\n        return x.value0;\n    }\n};\nvar _Generic_Relation = {\n    to: function (x) {\n        return new Relation(x);\n    },\n    from: function (x) {\n        return x.value0;\n    }\n};\nvar _Generic_PropF = {\n    to: function (x) {\n        return new Prop(x.value0, x.value1);\n    },\n    from: function (x) {\n        return new Data_Generic_Rep.Product(x.value0, x.value1);\n    }\n};\nvar genericShow3 = /* #__PURE__ */ Data_Show_Generic.genericShow(_Generic_PropF);\nvar genericEq3 = /* #__PURE__ */ Data_Eq_Generic.genericEq(_Generic_PropF);\nvar _Generic_Program = {\n    to: function (x) {\n        return new Program(x);\n    },\n    from: function (x) {\n        return x.value0;\n    }\n};\nvar _Generic_ProductLatticeTypeOrdering = {\n    to: function (x) {\n        return FirstThenSecond_ProductLatticeTypeOrdering.value;\n    },\n    from: function (x) {\n        return Data_Generic_Rep.NoArguments.value;\n    }\n};\nvar genericShow4 = /* #__PURE__ */ Data_Show_Generic.genericShow(_Generic_ProductLatticeTypeOrdering)(/* #__PURE__ */ genericShowConstructor({\n    reflectSymbol: function () {\n        return \"FirstThenSecond_ProductLatticeTypeOrdering\";\n    }\n}));\nvar genericEq4 = /* #__PURE__ */ Data_Eq_Generic.genericEq(_Generic_ProductLatticeTypeOrdering)(genericEqConstructor);\nvar _Show_ProductLatticeTypeOrdering = {\n    show: function (x) {\n        return genericShow4(x);\n    }\n};\nvar genericShowArgsProduct4 = /* #__PURE__ */ Data_Show_Generic.genericShowArgsProduct(/* #__PURE__ */ Data_Show_Generic.genericShowArgsArgument(_Show_ProductLatticeTypeOrdering));\nvar _Generic_Module = {\n    to: function (x) {\n        return new Module(x);\n    },\n    from: function (x) {\n        return x.value0;\n    }\n};\nvar _Generic_LatticeTypeDef = {\n    to: function (x) {\n        if (x instanceof Data_Generic_Rep.Inl) {\n            return new LatticeTypeDef(x.value0);\n        };\n        if (x instanceof Data_Generic_Rep.Inr) {\n            return new ExternalLatticeTypeDef(x.value0);\n        };\n        throw new Error(\"Failed pattern match at Foliage.Program (line 96, column 1 - line 96, column 68): \" + [ x.constructor.name ]);\n    },\n    from: function (x) {\n        if (x instanceof LatticeTypeDef) {\n            return new Data_Generic_Rep.Inl(x.value0);\n        };\n        if (x instanceof ExternalLatticeTypeDef) {\n            return new Data_Generic_Rep.Inr(x.value0);\n        };\n        throw new Error(\"Failed pattern match at Foliage.Program (line 96, column 1 - line 96, column 68): \" + [ x.constructor.name ]);\n    }\n};\nvar _Generic_LatticeType = {\n    to: function (x) {\n        if (x instanceof Data_Generic_Rep.Inl) {\n            return new NamedLatticeType(x.value0);\n        };\n        if (x instanceof Data_Generic_Rep.Inr && x.value0 instanceof Data_Generic_Rep.Inl) {\n            return UnitLatticeType.value;\n        };\n        if (x instanceof Data_Generic_Rep.Inr && (x.value0 instanceof Data_Generic_Rep.Inr && x.value0.value0 instanceof Data_Generic_Rep.Inl)) {\n            return new SumLatticeType(x.value0.value0.value0.value0, x.value0.value0.value0.value1.value0, x.value0.value0.value0.value1.value1);\n        };\n        if (x instanceof Data_Generic_Rep.Inr && (x.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0 instanceof Data_Generic_Rep.Inr && x.value0.value0.value0 instanceof Data_Generic_Rep.Inl))) {\n            return new ProductLatticeType(x.value0.value0.value0.value0.value0, x.value0.value0.value0.value0.value1.value0, x.value0.value0.value0.value0.value1.value1);\n        };\n        if (x instanceof Data_Generic_Rep.Inr && (x.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0 instanceof Data_Generic_Rep.Inr && x.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inl)))) {\n            return new SetLatticeType(x.value0.value0.value0.value0.value0.value0, x.value0.value0.value0.value0.value0.value1);\n        };\n        if (x instanceof Data_Generic_Rep.Inr && (x.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && x.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inl))))) {\n            return new OppositeLatticeType(x.value0.value0.value0.value0.value0.value0);\n        };\n        if (x instanceof Data_Generic_Rep.Inr && (x.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && x.value0.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inl)))))) {\n            return new DiscreteLatticeType(x.value0.value0.value0.value0.value0.value0.value0);\n        };\n        if (x instanceof Data_Generic_Rep.Inr && (x.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && x.value0.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr)))))) {\n            return new PowerLatticeType(x.value0.value0.value0.value0.value0.value0.value0);\n        };\n        throw new Error(\"Failed pattern match at Foliage.Program (line 114, column 1 - line 114, column 62): \" + [ x.constructor.name ]);\n    },\n    from: function (x) {\n        if (x instanceof NamedLatticeType) {\n            return new Data_Generic_Rep.Inl(x.value0);\n        };\n        if (x instanceof UnitLatticeType) {\n            return new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inl(Data_Generic_Rep.NoArguments.value));\n        };\n        if (x instanceof SumLatticeType) {\n            return new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inl(new Data_Generic_Rep.Product(x.value0, new Data_Generic_Rep.Product(x.value1, x.value2)))));\n        };\n        if (x instanceof ProductLatticeType) {\n            return new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inl(new Data_Generic_Rep.Product(x.value0, new Data_Generic_Rep.Product(x.value1, x.value2))))));\n        };\n        if (x instanceof SetLatticeType) {\n            return new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inl(new Data_Generic_Rep.Product(x.value0, x.value1))))));\n        };\n        if (x instanceof OppositeLatticeType) {\n            return new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inl(x.value0))))));\n        };\n        if (x instanceof DiscreteLatticeType) {\n            return new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inl(x.value0)))))));\n        };\n        if (x instanceof PowerLatticeType) {\n            return new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(x.value0)))))));\n        };\n        throw new Error(\"Failed pattern match at Foliage.Program (line 114, column 1 - line 114, column 62): \" + [ x.constructor.name ]);\n    }\n};\nvar genericShow5 = /* #__PURE__ */ Data_Show_Generic.genericShow(_Generic_LatticeType);\nvar genericEq5 = /* #__PURE__ */ Data_Eq_Generic.genericEq(_Generic_LatticeType);\nvar _Show_LatticeType = {\n    show: function (x) {\n        return genericShow5(genericShowSum3(genericShowSum(Data_Show_Generic.genericShowSum(Data_Show_Generic.genericShowConstructor(genericShowArgsProduct2(Data_Show_Generic.genericShowArgsProduct(Data_Show_Generic.genericShowArgsArgument(_Show_LatticeType))(Data_Show_Generic.genericShowArgsArgument(_Show_LatticeType))))(SumLatticeTypeIsSymbol))(Data_Show_Generic.genericShowSum(Data_Show_Generic.genericShowConstructor(genericShowArgsProduct4(Data_Show_Generic.genericShowArgsProduct(Data_Show_Generic.genericShowArgsArgument(_Show_LatticeType))(Data_Show_Generic.genericShowArgsArgument(_Show_LatticeType))))(ProductLatticeTypeIsSymbol))(Data_Show_Generic.genericShowSum(Data_Show_Generic.genericShowConstructor(genericShowArgsProduct3(Data_Show_Generic.genericShowArgsArgument(_Show_LatticeType)))(SetLatticeTypeIsSymbol))(Data_Show_Generic.genericShowSum(Data_Show_Generic.genericShowConstructor(Data_Show_Generic.genericShowArgsArgument(_Show_LatticeType))(OppositeLatticeTypeIsSymbol))(Data_Show_Generic.genericShowSum(Data_Show_Generic.genericShowConstructor(Data_Show_Generic.genericShowArgsArgument(_Show_LatticeType))(DiscreteLatticeTypeIsSymbol))(Data_Show_Generic.genericShowConstructor(Data_Show_Generic.genericShowArgsArgument(_Show_LatticeType))(PowerLatticeTypeIsSymbol)))))))))(x);\n    }\n};\nvar genericShow6 = /* #__PURE__ */ Data_Show_Generic.genericShow(_Generic_LatticeTypeDef)(/* #__PURE__ */ Data_Show_Generic.genericShowSum(/* #__PURE__ */ Data_Show_Generic.genericShowConstructor(/* #__PURE__ */ Data_Show_Generic.genericShowArgsArgument(_Show_LatticeType))({\n    reflectSymbol: function () {\n        return \"LatticeTypeDef\";\n    }\n}))(/* #__PURE__ */ Data_Show_Generic.genericShowConstructor(/* #__PURE__ */ Data_Show_Generic.genericShowArgsArgument(/* #__PURE__ */ showRecord(/* #__PURE__ */ Data_Show.showRecordFieldsCons(compare_implIsSymbol)(/* #__PURE__ */ showRecordFieldsConsNil(Data_Show.showString))(/* #__PURE__ */ Foliage_Common[\"_Show_Opaque\"]({\n    reflectSymbol: function () {\n        return \"compare\";\n    }\n})))))({\n    reflectSymbol: function () {\n        return \"ExternalLatticeTypeDef\";\n    }\n})));\nvar genericShow7 = /* #__PURE__ */ Data_Show_Generic.genericShow(_Generic_Relation)(/* #__PURE__ */ Data_Show_Generic.genericShowConstructor(/* #__PURE__ */ Data_Show_Generic.genericShowArgsArgument(/* #__PURE__ */ showRecord(/* #__PURE__ */ Data_Show.showRecordFieldsConsNil(domainIsSymbol)(_Show_LatticeType))))({\n    reflectSymbol: function () {\n        return \"Relation\";\n    }\n}));\nvar _Show_LatticeTypeDef = {\n    show: function (x) {\n        return genericShow6(x);\n    }\n};\nvar _Show_Relation = {\n    show: function (x) {\n        return genericShow7(x);\n    }\n};\nvar _Generic_Hypothesis = {\n    to: function (x) {\n        return new Hypothesis(x.value0, x.value1);\n    },\n    from: function (x) {\n        return new Data_Generic_Rep.Product(x.value0, x.value1);\n    }\n};\nvar _Generic_FunctionDef = {\n    to: function (x) {\n        return new ExternalFunctionDef(x);\n    },\n    from: function (x) {\n        return x.value0;\n    }\n};\nvar _Generic_DataTypeDef = {\n    to: function (x) {\n        if (x instanceof Data_Generic_Rep.Inl) {\n            return new ExternalDataTypeDef(x.value0);\n        };\n        if (x instanceof Data_Generic_Rep.Inr) {\n            return new DataTypeDef(x.value0);\n        };\n        throw new Error(\"Failed pattern match at Foliage.Program (line 66, column 1 - line 66, column 62): \" + [ x.constructor.name ]);\n    },\n    from: function (x) {\n        if (x instanceof ExternalDataTypeDef) {\n            return new Data_Generic_Rep.Inl(x.value0);\n        };\n        if (x instanceof DataTypeDef) {\n            return new Data_Generic_Rep.Inr(x.value0);\n        };\n        throw new Error(\"Failed pattern match at Foliage.Program (line 66, column 1 - line 66, column 62): \" + [ x.constructor.name ]);\n    }\n};\nvar _Generic_DataType = {\n    to: function (x) {\n        if (x instanceof Data_Generic_Rep.Inl) {\n            return UnitDataType.value;\n        };\n        if (x instanceof Data_Generic_Rep.Inr && x.value0 instanceof Data_Generic_Rep.Inl) {\n            return new NamedDataType(x.value0.value0);\n        };\n        if (x instanceof Data_Generic_Rep.Inr && (x.value0 instanceof Data_Generic_Rep.Inr && x.value0.value0 instanceof Data_Generic_Rep.Inl)) {\n            return new SumDataType(x.value0.value0.value0.value0, x.value0.value0.value0.value1);\n        };\n        if (x instanceof Data_Generic_Rep.Inr && (x.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0 instanceof Data_Generic_Rep.Inr && x.value0.value0.value0 instanceof Data_Generic_Rep.Inl))) {\n            return new ProductDataType(x.value0.value0.value0.value0.value0, x.value0.value0.value0.value0.value1);\n        };\n        if (x instanceof Data_Generic_Rep.Inr && (x.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0 instanceof Data_Generic_Rep.Inr && x.value0.value0.value0 instanceof Data_Generic_Rep.Inr))) {\n            return new SetDataType(x.value0.value0.value0.value0);\n        };\n        throw new Error(\"Failed pattern match at Foliage.Program (line 81, column 1 - line 81, column 56): \" + [ x.constructor.name ]);\n    },\n    from: function (x) {\n        if (x instanceof UnitDataType) {\n            return new Data_Generic_Rep.Inl(Data_Generic_Rep.NoArguments.value);\n        };\n        if (x instanceof NamedDataType) {\n            return new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inl(x.value0));\n        };\n        if (x instanceof SumDataType) {\n            return new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inl(new Data_Generic_Rep.Product(x.value0, x.value1))));\n        };\n        if (x instanceof ProductDataType) {\n            return new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inl(new Data_Generic_Rep.Product(x.value0, x.value1)))));\n        };\n        if (x instanceof SetDataType) {\n            return new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(x.value0))));\n        };\n        throw new Error(\"Failed pattern match at Foliage.Program (line 81, column 1 - line 81, column 56): \" + [ x.constructor.name ]);\n    }\n};\nvar genericShow8 = /* #__PURE__ */ Data_Show_Generic.genericShow(_Generic_DataType);\nvar genericEq6 = /* #__PURE__ */ Data_Eq_Generic.genericEq(_Generic_DataType);\nvar _Show_DataType = {\n    show: function (x) {\n        return genericShow8(genericShowSum1(genericShowSum4(Data_Show_Generic.genericShowSum(Data_Show_Generic.genericShowConstructor(Data_Show_Generic.genericShowArgsProduct(Data_Show_Generic.genericShowArgsArgument(_Show_DataType))(Data_Show_Generic.genericShowArgsArgument(_Show_DataType)))(SumDataTypeIsSymbol))(Data_Show_Generic.genericShowSum(Data_Show_Generic.genericShowConstructor(Data_Show_Generic.genericShowArgsProduct(Data_Show_Generic.genericShowArgsArgument(_Show_DataType))(Data_Show_Generic.genericShowArgsArgument(_Show_DataType)))(ProductDataTypeIsSymbol))(Data_Show_Generic.genericShowConstructor(Data_Show_Generic.genericShowArgsArgument(_Show_DataType))(SetDataTypeIsSymbol))))))(x);\n    }\n};\nvar genericShowArgsArgument2 = /* #__PURE__ */ Data_Show_Generic.genericShowArgsArgument(_Show_DataType);\nvar genericShow9 = /* #__PURE__ */ Data_Show_Generic.genericShow(_Generic_DataTypeDef)(/* #__PURE__ */ Data_Show_Generic.genericShowSum(/* #__PURE__ */ Data_Show_Generic.genericShowConstructor(genericShowArgsArgument)({\n    reflectSymbol: function () {\n        return \"ExternalDataTypeDef\";\n    }\n}))(/* #__PURE__ */ Data_Show_Generic.genericShowConstructor(genericShowArgsArgument2)({\n    reflectSymbol: function () {\n        return \"DataTypeDef\";\n    }\n})));\nvar genericShow10 = /* #__PURE__ */ Data_Show_Generic.genericShow(_Generic_FunctionDef)(/* #__PURE__ */ Data_Show_Generic.genericShowConstructor(/* #__PURE__ */ Data_Show_Generic.genericShowArgsArgument(/* #__PURE__ */ showRecord(/* #__PURE__ */ Data_Show.showRecordFieldsCons(implIsSymbol)(/* #__PURE__ */ Data_Show.showRecordFieldsCons(inputsIsSymbol)(/* #__PURE__ */ showRecordFieldsCons(/* #__PURE__ */ Data_Show.showRecordFieldsConsNil(outputIsSymbol)(_Show_DataType))(Data_Show.showString))(/* #__PURE__ */ Data_Show.showArray(/* #__PURE__ */ Data_Tuple.showTuple(Data_Show.showString)(_Show_DataType))))(/* #__PURE__ */ Foliage_Common[\"_Show_Opaque\"]({\n    reflectSymbol: function () {\n        return \"function\";\n    }\n})))))({\n    reflectSymbol: function () {\n        return \"ExternalFunctionDef\";\n    }\n}));\nvar genericShowSum5 = /* #__PURE__ */ Data_Show_Generic.genericShowSum(/* #__PURE__ */ Data_Show_Generic.genericShowConstructor(/* #__PURE__ */ genericShowArgsProduct(genericShowArgsArgument2))({\n    reflectSymbol: function () {\n        return \"LiteralTerm\";\n    }\n}));\nvar _Show_DataTypeDef = {\n    show: function (x) {\n        return genericShow9(x);\n    }\n};\nvar _Show_FunctionDef = {\n    show: function (x) {\n        return genericShow10(x);\n    }\n};\nvar _Show_Term = function (dictShow) {\n    var genericShowSum6 = Data_Show_Generic.genericShowSum(Data_Show_Generic.genericShowConstructor(Data_Show_Generic.genericShowArgsArgument(dictShow))(VarTermIsSymbol));\n    return {\n        show: function (x) {\n            return genericShow(genericShowSum6(genericShowSum2(genericShowSum5(Data_Show_Generic.genericShowSum(Data_Show_Generic.genericShowConstructor(genericShowArgsProduct(Data_Show_Generic.genericShowArgsArgument(_Show_Term(dictShow))))(ConTermIsSymbol))(Data_Show_Generic.genericShowSum(Data_Show_Generic.genericShowConstructor(Data_Show_Generic.genericShowArgsArgument(_Show_Term(dictShow)))(LeftTermIsSymbol))(Data_Show_Generic.genericShowSum(Data_Show_Generic.genericShowConstructor(Data_Show_Generic.genericShowArgsArgument(_Show_Term(dictShow)))(RightTermIsSymbol))(Data_Show_Generic.genericShowSum(Data_Show_Generic.genericShowConstructor(Data_Show_Generic.genericShowArgsProduct(Data_Show_Generic.genericShowArgsArgument(_Show_Term(dictShow)))(Data_Show_Generic.genericShowArgsArgument(_Show_Term(dictShow))))(PairTermIsSymbol))(Data_Show_Generic.genericShowConstructor(Data_Show_Generic.genericShowArgsArgument(Data_Show.showArray(_Show_Term(dictShow))))(SetTermIsSymbol)))))))))(x);\n        }\n    };\n};\nvar _Show_Term1 = /* #__PURE__ */ _Show_Term(_Show_Name);\nvar genericShow11 = /* #__PURE__ */ Data_Show_Generic.genericShow(_Generic_SideHypothesis)(/* #__PURE__ */ Data_Show_Generic.genericShowConstructor(/* #__PURE__ */ Data_Show_Generic.genericShowArgsArgument(/* #__PURE__ */ showRecord(/* #__PURE__ */ Data_Show.showRecordFieldsCons(argsIsSymbol)(/* #__PURE__ */ Data_Show.showRecordFieldsCons(functionNameIsSymbol)(/* #__PURE__ */ Data_Show.showRecordFieldsConsNil(resultVarNameIsSymbol)(_Show_Name))(_Show_Name))(/* #__PURE__ */ Data_Show.showArray(_Show_Term1)))))({\n    reflectSymbol: function () {\n        return \"FunctionSideHypothesis\";\n    }\n}));\nvar show2 = /* #__PURE__ */ Data_Show.show(_Show_Term1);\nvar _Show_PropF = function (dictShow) {\n    var genericShow16 = genericShow3(Data_Show_Generic.genericShowConstructor(genericShowArgsProduct1(Data_Show_Generic.genericShowArgsArgument(_Show_Term(dictShow))))(PropIsSymbol));\n    return {\n        show: function (x) {\n            return genericShow16(x);\n        }\n    };\n};\nvar _Show_PropF1 = /* #__PURE__ */ _Show_PropF(_Show_Name);\nvar _Show_SideHypothesis = {\n    show: function (x) {\n        return genericShow11(x);\n    }\n};\nvar genericShow12 = /* #__PURE__ */ Data_Show_Generic.genericShow(_Generic_Hypothesis)(/* #__PURE__ */ Data_Show_Generic.genericShowConstructor(/* #__PURE__ */ Data_Show_Generic.genericShowArgsProduct(/* #__PURE__ */ Data_Show_Generic.genericShowArgsArgument(_Show_PropF1))(/* #__PURE__ */ Data_Show_Generic.genericShowArgsArgument(/* #__PURE__ */ Data_Show.showArray(_Show_SideHypothesis))))({\n    reflectSymbol: function () {\n        return \"Hypothesis\";\n    }\n}));\nvar _Show_Hypothesis = {\n    show: function (x) {\n        return genericShow12(x);\n    }\n};\nvar genericShow13 = /* #__PURE__ */ Data_Show_Generic.genericShow(_Generic_Rule)(/* #__PURE__ */ Data_Show_Generic.genericShowConstructor(/* #__PURE__ */ Data_Show_Generic.genericShowArgsArgument(/* #__PURE__ */ showRecord(/* #__PURE__ */ Data_Show.showRecordFieldsCons(conclusionIsSymbol)(/* #__PURE__ */ Data_Show.showRecordFieldsConsNil(hypothesesIsSymbol)(/* #__PURE__ */ Data_List_Types.showList(_Show_Hypothesis)))(_Show_PropF1))))({\n    reflectSymbol: function () {\n        return \"Rule\";\n    }\n}));\nvar _Show_Rule = {\n    show: function (x) {\n        return genericShow13(x);\n    }\n};\nvar genericShow14 = /* #__PURE__ */ Data_Show_Generic.genericShow(_Generic_Module)(/* #__PURE__ */ Data_Show_Generic.genericShowConstructor(/* #__PURE__ */ Data_Show_Generic.genericShowArgsArgument(/* #__PURE__ */ showRecord(/* #__PURE__ */ Data_Show.showRecordFieldsCons(dataTypeDefsIsSymbol)(/* #__PURE__ */ showRecordFieldsCons1(/* #__PURE__ */ Data_Show.showRecordFieldsCons(functionDefsIsSymbol)(/* #__PURE__ */ Data_Show.showRecordFieldsCons(initialGasIsSymbol)(/* #__PURE__ */ Data_Show.showRecordFieldsCons(latticeTypeDefsIsSymbol)(/* #__PURE__ */ showRecordFieldsCons(/* #__PURE__ */ Data_Show.showRecordFieldsCons(relationsIsSymbol)(/* #__PURE__ */ Data_Show.showRecordFieldsConsNil(rulesIsSymbol)(/* #__PURE__ */ showMap(_Show_Rule)))(/* #__PURE__ */ showMap(_Show_Relation)))(_Show_Name))(/* #__PURE__ */ showMap(_Show_LatticeTypeDef)))(Data_Show.showInt))(/* #__PURE__ */ showMap(_Show_FunctionDef)))(showMaybe))(/* #__PURE__ */ showMap(_Show_DataTypeDef)))))({\n    reflectSymbol: function () {\n        return \"Module\";\n    }\n}));\nvar _Show_Module = {\n    show: function (x) {\n        return genericShow14(x);\n    }\n};\nvar genericShow15 = /* #__PURE__ */ Data_Show_Generic.genericShow(_Generic_Program)(/* #__PURE__ */ Data_Show_Generic.genericShowConstructor(/* #__PURE__ */ Data_Show_Generic.genericShowArgsArgument(/* #__PURE__ */ showRecord(/* #__PURE__ */ showRecordFieldsCons1(/* #__PURE__ */ Data_Show.showRecordFieldsCons(modulesIsSymbol)(/* #__PURE__ */ showRecordFieldsConsNil(_Show_Name))(/* #__PURE__ */ showMap(_Show_Module)))(showMaybe))))({\n    reflectSymbol: function () {\n        return \"Program\";\n    }\n}));\nvar _Show_Program = {\n    show: function (x) {\n        return genericShow15(x);\n    }\n};\nvar _Functor_TermF = {\n    map: function (f) {\n        return function (m) {\n            if (m instanceof VarTerm) {\n                return new VarTerm(f(m.value0));\n            };\n            if (m instanceof UnitTerm) {\n                return UnitTerm.value;\n            };\n            if (m instanceof LiteralTerm) {\n                return new LiteralTerm(m.value0, m.value1);\n            };\n            if (m instanceof ConTerm) {\n                return new ConTerm(m.value0, Data_Functor.map(_Functor_TermF)(f)(m.value1));\n            };\n            if (m instanceof LeftTerm) {\n                return new LeftTerm(Data_Functor.map(_Functor_TermF)(f)(m.value0));\n            };\n            if (m instanceof RightTerm) {\n                return new RightTerm(Data_Functor.map(_Functor_TermF)(f)(m.value0));\n            };\n            if (m instanceof PairTerm) {\n                return new PairTerm(Data_Functor.map(_Functor_TermF)(f)(m.value0), Data_Functor.map(_Functor_TermF)(f)(m.value1));\n            };\n            if (m instanceof SetTerm) {\n                return new SetTerm(map1(Data_Functor.map(_Functor_TermF)(f))(m.value0));\n            };\n            throw new Error(\"Failed pattern match at Foliage.Program (line 0, column 0 - line 0, column 0): \" + [ m.constructor.name ]);\n        };\n    }\n};\nvar map2 = /* #__PURE__ */ Data_Functor.map(_Functor_TermF);\nvar _Functor_PropF = {\n    map: function (f) {\n        return function (m) {\n            return new Prop(m.value0, map2(f)(m.value1));\n        };\n    }\n};\nvar _Foldable_TermF = {\n    foldl: function (f) {\n        return function (z) {\n            return function (m) {\n                if (m instanceof VarTerm) {\n                    return f(z)(m.value0);\n                };\n                if (m instanceof UnitTerm) {\n                    return z;\n                };\n                if (m instanceof LiteralTerm) {\n                    return z;\n                };\n                if (m instanceof ConTerm) {\n                    return Data_Foldable.foldl(_Foldable_TermF)(f)(z)(m.value1);\n                };\n                if (m instanceof LeftTerm) {\n                    return Data_Foldable.foldl(_Foldable_TermF)(f)(z)(m.value0);\n                };\n                if (m instanceof RightTerm) {\n                    return Data_Foldable.foldl(_Foldable_TermF)(f)(z)(m.value0);\n                };\n                if (m instanceof PairTerm) {\n                    return Data_Foldable.foldl(_Foldable_TermF)(f)(Data_Foldable.foldl(_Foldable_TermF)(f)(z)(m.value0))(m.value1);\n                };\n                if (m instanceof SetTerm) {\n                    return foldl(Data_Foldable.foldl(_Foldable_TermF)(f))(z)(m.value0);\n                };\n                throw new Error(\"Failed pattern match at Foliage.Program (line 0, column 0 - line 0, column 0): \" + [ m.constructor.name ]);\n            };\n        };\n    },\n    foldr: function (f) {\n        return function (z) {\n            return function (m) {\n                if (m instanceof VarTerm) {\n                    return f(m.value0)(z);\n                };\n                if (m instanceof UnitTerm) {\n                    return z;\n                };\n                if (m instanceof LiteralTerm) {\n                    return z;\n                };\n                if (m instanceof ConTerm) {\n                    return Data_Foldable.foldr(_Foldable_TermF)(f)(z)(m.value1);\n                };\n                if (m instanceof LeftTerm) {\n                    return Data_Foldable.foldr(_Foldable_TermF)(f)(z)(m.value0);\n                };\n                if (m instanceof RightTerm) {\n                    return Data_Foldable.foldr(_Foldable_TermF)(f)(z)(m.value0);\n                };\n                if (m instanceof PairTerm) {\n                    return Data_Foldable.foldr(_Foldable_TermF)(f)(Data_Foldable.foldr(_Foldable_TermF)(f)(z)(m.value1))(m.value0);\n                };\n                if (m instanceof SetTerm) {\n                    return foldr(Data_Function.flip(Data_Foldable.foldr(_Foldable_TermF)(f)))(z)(m.value0);\n                };\n                throw new Error(\"Failed pattern match at Foliage.Program (line 0, column 0 - line 0, column 0): \" + [ m.constructor.name ]);\n            };\n        };\n    },\n    foldMap: function (dictMonoid) {\n        var mempty = Data_Monoid.mempty(dictMonoid);\n        var append1 = Data_Semigroup.append(dictMonoid.Semigroup0());\n        var foldMap2 = foldMap(dictMonoid);\n        return function (f) {\n            return function (m) {\n                if (m instanceof VarTerm) {\n                    return f(m.value0);\n                };\n                if (m instanceof UnitTerm) {\n                    return mempty;\n                };\n                if (m instanceof LiteralTerm) {\n                    return mempty;\n                };\n                if (m instanceof ConTerm) {\n                    return Data_Foldable.foldMap(_Foldable_TermF)(dictMonoid)(f)(m.value1);\n                };\n                if (m instanceof LeftTerm) {\n                    return Data_Foldable.foldMap(_Foldable_TermF)(dictMonoid)(f)(m.value0);\n                };\n                if (m instanceof RightTerm) {\n                    return Data_Foldable.foldMap(_Foldable_TermF)(dictMonoid)(f)(m.value0);\n                };\n                if (m instanceof PairTerm) {\n                    return append1(Data_Foldable.foldMap(_Foldable_TermF)(dictMonoid)(f)(m.value0))(Data_Foldable.foldMap(_Foldable_TermF)(dictMonoid)(f)(m.value1));\n                };\n                if (m instanceof SetTerm) {\n                    return foldMap2(Data_Foldable.foldMap(_Foldable_TermF)(dictMonoid)(f))(m.value0);\n                };\n                throw new Error(\"Failed pattern match at Foliage.Program (line 0, column 0 - line 0, column 0): \" + [ m.constructor.name ]);\n            };\n        };\n    }\n};\nvar foldl1 = /* #__PURE__ */ Data_Foldable.foldl(_Foldable_TermF);\nvar foldr1 = /* #__PURE__ */ Data_Foldable.foldr(_Foldable_TermF);\nvar foldMap1 = /* #__PURE__ */ Data_Foldable.foldMap(_Foldable_TermF);\nvar _Traversable_TermF = {\n    traverse: function (dictApplicative) {\n        var Apply0 = dictApplicative.Apply0();\n        var map3 = Data_Functor.map(Apply0.Functor0());\n        var pure2 = Control_Applicative.pure(dictApplicative);\n        var apply = Control_Apply.apply(Apply0);\n        var traverse2 = traverse(dictApplicative);\n        return function (f) {\n            return function (m) {\n                if (m instanceof VarTerm) {\n                    return map3(function (v1) {\n                        return new VarTerm(v1);\n                    })(f(m.value0));\n                };\n                if (m instanceof UnitTerm) {\n                    return pure2(UnitTerm.value);\n                };\n                if (m instanceof LiteralTerm) {\n                    return pure2(new LiteralTerm(m.value0, m.value1));\n                };\n                if (m instanceof ConTerm) {\n                    return map3(function (v2) {\n                        return new ConTerm(m.value0, v2);\n                    })(Data_Traversable.traverse(_Traversable_TermF)(dictApplicative)(f)(m.value1));\n                };\n                if (m instanceof LeftTerm) {\n                    return map3(function (v1) {\n                        return new LeftTerm(v1);\n                    })(Data_Traversable.traverse(_Traversable_TermF)(dictApplicative)(f)(m.value0));\n                };\n                if (m instanceof RightTerm) {\n                    return map3(function (v1) {\n                        return new RightTerm(v1);\n                    })(Data_Traversable.traverse(_Traversable_TermF)(dictApplicative)(f)(m.value0));\n                };\n                if (m instanceof PairTerm) {\n                    return apply(map3(function (v2) {\n                        return function (v3) {\n                            return new PairTerm(v2, v3);\n                        };\n                    })(Data_Traversable.traverse(_Traversable_TermF)(dictApplicative)(f)(m.value0)))(Data_Traversable.traverse(_Traversable_TermF)(dictApplicative)(f)(m.value1));\n                };\n                if (m instanceof SetTerm) {\n                    return map3(function (v1) {\n                        return new SetTerm(v1);\n                    })(traverse2(Data_Traversable.traverse(_Traversable_TermF)(dictApplicative)(f))(m.value0));\n                };\n                throw new Error(\"Failed pattern match at Foliage.Program (line 0, column 0 - line 0, column 0): \" + [ m.constructor.name ]);\n            };\n        };\n    },\n    sequence: function (dictApplicative) {\n        return function (v) {\n            return Data_Traversable.traverse(_Traversable_TermF)(dictApplicative)(identity)(v);\n        };\n    },\n    Functor0: function () {\n        return _Functor_TermF;\n    },\n    Foldable1: function () {\n        return _Foldable_TermF;\n    }\n};\nvar traverse1 = /* #__PURE__ */ Data_Traversable.traverse(_Traversable_TermF);\nvar _Foldable_PropF = {\n    foldl: function (f) {\n        return function (z) {\n            return function (m) {\n                return foldl1(f)(z)(m.value1);\n            };\n        };\n    },\n    foldr: function (f) {\n        return function (z) {\n            return function (m) {\n                return foldr1(f)(z)(m.value1);\n            };\n        };\n    },\n    foldMap: function (dictMonoid) {\n        var foldMap2 = foldMap1(dictMonoid);\n        return function (f) {\n            return function (m) {\n                return foldMap2(f)(m.value1);\n            };\n        };\n    }\n};\nvar _Traversable_PropF = {\n    traverse: function (dictApplicative) {\n        var map3 = Data_Functor.map((dictApplicative.Apply0()).Functor0());\n        var traverse2 = traverse1(dictApplicative);\n        return function (f) {\n            return function (m) {\n                return map3(function (v2) {\n                    return new Prop(m.value0, v2);\n                })(traverse2(f)(m.value1));\n            };\n        };\n    },\n    sequence: function (dictApplicative) {\n        return function (v) {\n            return Data_Traversable.traverse(_Traversable_PropF)(dictApplicative)(identity)(v);\n        };\n    },\n    Functor0: function () {\n        return _Functor_PropF;\n    },\n    Foldable1: function () {\n        return _Foldable_PropF;\n    }\n};\nvar _Eq_SumLatticeTypeOrdering = {\n    eq: function (x) {\n        return genericEq1(x);\n    }\n};\nvar genericEqProduct1 = /* #__PURE__ */ Data_Eq_Generic.genericEqProduct(/* #__PURE__ */ Data_Eq_Generic.genericEqArgument(_Eq_SumLatticeTypeOrdering));\nvar _Eq_SetOrdering = {\n    eq: function (x) {\n        return genericEq2(x);\n    }\n};\nvar genericEqProduct2 = /* #__PURE__ */ Data_Eq_Generic.genericEqProduct(/* #__PURE__ */ Data_Eq_Generic.genericEqArgument(_Eq_SetOrdering));\nvar _Eq_ProductLatticeTypeOrdering = {\n    eq: function (x) {\n        return genericEq4(x);\n    }\n};\nvar genericEqProduct3 = /* #__PURE__ */ Data_Eq_Generic.genericEqProduct(/* #__PURE__ */ Data_Eq_Generic.genericEqArgument(_Eq_ProductLatticeTypeOrdering));\nvar _Eq_Name = Data_Eq.eqString;\nvar genericEqArgument1 = /* #__PURE__ */ Data_Eq_Generic.genericEqArgument(_Eq_Name);\nvar genericEqSum1 = /* #__PURE__ */ Data_Eq_Generic.genericEqSum(/* #__PURE__ */ Data_Eq_Generic.genericEqConstructor(genericEqArgument1));\nvar genericEqProduct4 = /* #__PURE__ */ Data_Eq_Generic.genericEqProduct(genericEqArgument1);\nvar eqMap = /* #__PURE__ */ Data_Map_Internal.eqMap(_Eq_Name);\nvar _Eq_LatticeType = {\n    eq: function (x) {\n        return genericEq5(genericEqSum1(genericEqSum(Data_Eq_Generic.genericEqSum(Data_Eq_Generic.genericEqConstructor(genericEqProduct1(Data_Eq_Generic.genericEqProduct(Data_Eq_Generic.genericEqArgument(_Eq_LatticeType))(Data_Eq_Generic.genericEqArgument(_Eq_LatticeType)))))(Data_Eq_Generic.genericEqSum(Data_Eq_Generic.genericEqConstructor(genericEqProduct3(Data_Eq_Generic.genericEqProduct(Data_Eq_Generic.genericEqArgument(_Eq_LatticeType))(Data_Eq_Generic.genericEqArgument(_Eq_LatticeType)))))(Data_Eq_Generic.genericEqSum(Data_Eq_Generic.genericEqConstructor(genericEqProduct2(Data_Eq_Generic.genericEqArgument(_Eq_LatticeType))))(Data_Eq_Generic.genericEqSum(Data_Eq_Generic.genericEqConstructor(Data_Eq_Generic.genericEqArgument(_Eq_LatticeType)))(Data_Eq_Generic.genericEqSum(Data_Eq_Generic.genericEqConstructor(Data_Eq_Generic.genericEqArgument(_Eq_LatticeType)))(Data_Eq_Generic.genericEqConstructor(Data_Eq_Generic.genericEqArgument(_Eq_LatticeType))))))))))(x);\n    }\n};\nvar genericEq7 = /* #__PURE__ */ Data_Eq_Generic.genericEq(_Generic_LatticeTypeDef)(/* #__PURE__ */ Data_Eq_Generic.genericEqSum(/* #__PURE__ */ Data_Eq_Generic.genericEqConstructor(/* #__PURE__ */ Data_Eq_Generic.genericEqArgument(_Eq_LatticeType)))(/* #__PURE__ */ Data_Eq_Generic.genericEqConstructor(/* #__PURE__ */ Data_Eq_Generic.genericEqArgument(/* #__PURE__ */ eqRec(/* #__PURE__ */ Data_Eq.eqRowCons(/* #__PURE__ */ eqRowCons1(Data_Eq.eqString))()(compare_implIsSymbol)(Foliage_Common[\"_Eq_Opaque\"]))))));\nvar genericEq8 = /* #__PURE__ */ Data_Eq_Generic.genericEq(_Generic_Relation)(/* #__PURE__ */ Data_Eq_Generic.genericEqConstructor(/* #__PURE__ */ Data_Eq_Generic.genericEqArgument(/* #__PURE__ */ eqRec(/* #__PURE__ */ eqRowCons(domainIsSymbol)(_Eq_LatticeType)))));\nvar _Eq_LatticeTypeDef = {\n    eq: function (x) {\n        return genericEq7(x);\n    }\n};\nvar _Eq_Relation = {\n    eq: function (x) {\n        return genericEq8(x);\n    }\n};\nvar _Eq_DataType = {\n    eq: function (x) {\n        return genericEq6(genericEqSum(genericEqSum1(Data_Eq_Generic.genericEqSum(Data_Eq_Generic.genericEqConstructor(Data_Eq_Generic.genericEqProduct(Data_Eq_Generic.genericEqArgument(_Eq_DataType))(Data_Eq_Generic.genericEqArgument(_Eq_DataType))))(Data_Eq_Generic.genericEqSum(Data_Eq_Generic.genericEqConstructor(Data_Eq_Generic.genericEqProduct(Data_Eq_Generic.genericEqArgument(_Eq_DataType))(Data_Eq_Generic.genericEqArgument(_Eq_DataType))))(Data_Eq_Generic.genericEqConstructor(Data_Eq_Generic.genericEqArgument(_Eq_DataType)))))))(x);\n    }\n};\nvar genericEqArgument2 = /* #__PURE__ */ Data_Eq_Generic.genericEqArgument(_Eq_DataType);\nvar genericEq9 = /* #__PURE__ */ Data_Eq_Generic.genericEq(_Generic_DataTypeDef)(/* #__PURE__ */ Data_Eq_Generic.genericEqSum(/* #__PURE__ */ Data_Eq_Generic.genericEqConstructor(genericEqArgument))(/* #__PURE__ */ Data_Eq_Generic.genericEqConstructor(genericEqArgument2)));\nvar genericEq10 = /* #__PURE__ */ Data_Eq_Generic.genericEq(_Generic_FunctionDef)(/* #__PURE__ */ Data_Eq_Generic.genericEqConstructor(/* #__PURE__ */ Data_Eq_Generic.genericEqArgument(/* #__PURE__ */ eqRec(/* #__PURE__ */ Data_Eq.eqRowCons(/* #__PURE__ */ Data_Eq.eqRowCons(/* #__PURE__ */ Data_Eq.eqRowCons(/* #__PURE__ */ eqRowCons(outputIsSymbol)(_Eq_DataType))()(nameIsSymbol)(Data_Eq.eqString))()(inputsIsSymbol)(/* #__PURE__ */ Data_Eq.eqArray(/* #__PURE__ */ Data_Tuple.eqTuple(Data_Eq.eqString)(_Eq_DataType))))()(implIsSymbol)(Foliage_Common[\"_Eq_Opaque\"])))));\nvar genericEqSum2 = /* #__PURE__ */ Data_Eq_Generic.genericEqSum(/* #__PURE__ */ Data_Eq_Generic.genericEqConstructor(/* #__PURE__ */ genericEqProduct(genericEqArgument2)));\nvar eq = /* #__PURE__ */ Data_Eq.eq(_Eq_DataType);\nvar _Eq_DataTypeDef = {\n    eq: function (x) {\n        return genericEq9(x);\n    }\n};\nvar _Eq_FunctionDef = {\n    eq: function (x) {\n        return genericEq10(x);\n    }\n};\nvar _Eq_Term = function (dictEq) {\n    var genericEqSum3 = Data_Eq_Generic.genericEqSum(Data_Eq_Generic.genericEqConstructor(Data_Eq_Generic.genericEqArgument(dictEq)));\n    return {\n        eq: function (x) {\n            return genericEq(genericEqSum3(genericEqSum(genericEqSum2(Data_Eq_Generic.genericEqSum(Data_Eq_Generic.genericEqConstructor(genericEqProduct(Data_Eq_Generic.genericEqArgument(_Eq_Term(dictEq)))))(Data_Eq_Generic.genericEqSum(Data_Eq_Generic.genericEqConstructor(Data_Eq_Generic.genericEqArgument(_Eq_Term(dictEq))))(Data_Eq_Generic.genericEqSum(Data_Eq_Generic.genericEqConstructor(Data_Eq_Generic.genericEqArgument(_Eq_Term(dictEq))))(Data_Eq_Generic.genericEqSum(Data_Eq_Generic.genericEqConstructor(Data_Eq_Generic.genericEqProduct(Data_Eq_Generic.genericEqArgument(_Eq_Term(dictEq)))(Data_Eq_Generic.genericEqArgument(_Eq_Term(dictEq)))))(Data_Eq_Generic.genericEqConstructor(Data_Eq_Generic.genericEqArgument(Data_Eq.eqArray(_Eq_Term(dictEq))))))))))))(x);\n        }\n    };\n};\nvar genericEq11 = /* #__PURE__ */ Data_Eq_Generic.genericEq(_Generic_SideHypothesis)(/* #__PURE__ */ Data_Eq_Generic.genericEqConstructor(/* #__PURE__ */ Data_Eq_Generic.genericEqArgument(/* #__PURE__ */ eqRec(/* #__PURE__ */ Data_Eq.eqRowCons(/* #__PURE__ */ Data_Eq.eqRowCons(/* #__PURE__ */ eqRowCons(resultVarNameIsSymbol)(_Eq_Name))()(functionNameIsSymbol)(_Eq_Name))()(argsIsSymbol)(/* #__PURE__ */ Data_Eq.eqArray(/* #__PURE__ */ _Eq_Term(_Eq_Name)))))));\nvar _Eq_PropF = function (dictEq) {\n    var genericEq16 = genericEq3(Data_Eq_Generic.genericEqConstructor(genericEqProduct4(Data_Eq_Generic.genericEqArgument(_Eq_Term(dictEq)))));\n    return {\n        eq: function (x) {\n            return genericEq16(x);\n        }\n    };\n};\nvar _Eq_PropF1 = /* #__PURE__ */ _Eq_PropF(_Eq_Name);\nvar _Eq_SideHypothesis = {\n    eq: function (x) {\n        return genericEq11(x);\n    }\n};\nvar genericEq12 = /* #__PURE__ */ Data_Eq_Generic.genericEq(_Generic_Hypothesis)(/* #__PURE__ */ Data_Eq_Generic.genericEqConstructor(/* #__PURE__ */ Data_Eq_Generic.genericEqProduct(/* #__PURE__ */ Data_Eq_Generic.genericEqArgument(_Eq_PropF1))(/* #__PURE__ */ Data_Eq_Generic.genericEqArgument(/* #__PURE__ */ Data_Eq.eqArray(_Eq_SideHypothesis)))));\nvar _Eq_Hypothesis = {\n    eq: function (x) {\n        return genericEq12(x);\n    }\n};\nvar genericEq13 = /* #__PURE__ */ Data_Eq_Generic.genericEq(_Generic_Rule)(/* #__PURE__ */ Data_Eq_Generic.genericEqConstructor(/* #__PURE__ */ Data_Eq_Generic.genericEqArgument(/* #__PURE__ */ eqRec(/* #__PURE__ */ Data_Eq.eqRowCons(/* #__PURE__ */ eqRowCons(hypothesesIsSymbol)(/* #__PURE__ */ Data_List_Types.eqList(_Eq_Hypothesis)))()(conclusionIsSymbol)(_Eq_PropF1)))));\nvar _Eq_Rule = {\n    eq: function (x) {\n        return genericEq13(x);\n    }\n};\nvar genericEq14 = /* #__PURE__ */ Data_Eq_Generic.genericEq(_Generic_Module)(/* #__PURE__ */ Data_Eq_Generic.genericEqConstructor(/* #__PURE__ */ Data_Eq_Generic.genericEqArgument(/* #__PURE__ */ eqRec(/* #__PURE__ */ Data_Eq.eqRowCons(/* #__PURE__ */ Data_Eq.eqRowCons(/* #__PURE__ */ Data_Eq.eqRowCons(/* #__PURE__ */ Data_Eq.eqRowCons(/* #__PURE__ */ Data_Eq.eqRowCons(/* #__PURE__ */ Data_Eq.eqRowCons(/* #__PURE__ */ Data_Eq.eqRowCons(/* #__PURE__ */ eqRowCons(rulesIsSymbol)(/* #__PURE__ */ eqMap(_Eq_Rule)))()(relationsIsSymbol)(/* #__PURE__ */ eqMap(_Eq_Relation)))()(nameIsSymbol)(_Eq_Name))()(latticeTypeDefsIsSymbol)(/* #__PURE__ */ eqMap(_Eq_LatticeTypeDef)))()(initialGasIsSymbol)(Data_Eq.eqInt))()(functionDefsIsSymbol)(/* #__PURE__ */ eqMap(_Eq_FunctionDef)))()(docIsSymbol)(eqMaybe))()(dataTypeDefsIsSymbol)(/* #__PURE__ */ eqMap(_Eq_DataTypeDef))))));\nvar _Eq_Module = {\n    eq: function (x) {\n        return genericEq14(x);\n    }\n};\nvar genericEq15 = /* #__PURE__ */ Data_Eq_Generic.genericEq(_Generic_Program)(/* #__PURE__ */ Data_Eq_Generic.genericEqConstructor(/* #__PURE__ */ Data_Eq_Generic.genericEqArgument(/* #__PURE__ */ eqRec(/* #__PURE__ */ Data_Eq.eqRowCons(/* #__PURE__ */ Data_Eq.eqRowCons(/* #__PURE__ */ eqRowCons1(_Eq_Name))()(modulesIsSymbol)(/* #__PURE__ */ eqMap(_Eq_Module)))()(docIsSymbol)(eqMaybe)))));\nvar _Eq_Program = {\n    eq: function (x) {\n        return genericEq15(x);\n    }\n};\n\n//  Utilities for defining external functions\nvar getValidatedArg = function (v) {\n    return function (args) {\n        return bindFlipped(function (v1) {\n            if (v1 instanceof LiteralTerm && eq(v.dt)(v1.value1)) {\n                return Data_Maybe.maybe(throwExternalFunctionCallError(v.f)(v1.value0 + (\" is not a \" + v.dt_name)))(pure1)(v.fromString(v1.value0));\n            };\n            return throwExternalFunctionCallError(v.f)(\"expected arg \" + (v.x + (\" = \" + (show2(v1) + (\" to be a \" + v.dt_name)))));\n        })(Data_Maybe.maybe(throwExternalFunctionCallError(v.f)(\"no arg for \" + show1(v.x)))(pure1)(lookup(v.x)(args)));\n    };\n};\nexport {\n    Program,\n    lookupModule,\n    Module,\n    ExternalDataTypeDef,\n    DataTypeDef,\n    UnitDataType,\n    NamedDataType,\n    SumDataType,\n    ProductDataType,\n    SetDataType,\n    LatticeTypeDef,\n    ExternalLatticeTypeDef,\n    NamedLatticeType,\n    UnitLatticeType,\n    SumLatticeType,\n    ProductLatticeType,\n    SetLatticeType,\n    OppositeLatticeType,\n    DiscreteLatticeType,\n    PowerLatticeType,\n    LeftGreaterThanRight_SumLatticeTypeOrdering,\n    LeftLessThanRight_SumLatticeTypeOrdering,\n    LeftIncomparableRight_SumLatticeTypeOrdering,\n    LeftEqualRight_SumLatticeTypeOrdering,\n    FirstThenSecond_ProductLatticeTypeOrdering,\n    SetOrdering,\n    ExternalFunctionDef,\n    Relation,\n    Rule,\n    from_RipeRule_to_Rule,\n    fromNoHypothesesRule,\n    nextHypothesis,\n    Hypothesis,\n    substHypothesis,\n    FunctionSideHypothesis,\n    substSideHypothesis,\n    Prop,\n    VarTerm,\n    UnitTerm,\n    LiteralTerm,\n    ConTerm,\n    LeftTerm,\n    RightTerm,\n    PairTerm,\n    SetTerm,\n    substRule,\n    substProp,\n    substTerm,\n    freshName,\n    freshNameIndexRef,\n    Name,\n    mainModuleName,\n    getValidatedArg,\n    throwExternalFunctionCallError,\n    _Generic_Program,\n    _Eq_Program,\n    _Show_Program,\n    _Generic_Module,\n    _Eq_Module,\n    _Show_Module,\n    _Generic_DataTypeDef,\n    _Eq_DataTypeDef,\n    _Show_DataTypeDef,\n    _Generic_DataType,\n    _Eq_DataType,\n    _Show_DataType,\n    _Generic_LatticeTypeDef,\n    _Eq_LatticeTypeDef,\n    _Show_LatticeTypeDef,\n    _Generic_LatticeType,\n    _Eq_LatticeType,\n    _Show_LatticeType,\n    _Generic_SumLatticeTypeOrdering,\n    _Eq_SumLatticeTypeOrdering,\n    _Show_SumLatticeTypeOrdering,\n    _Generic_ProductLatticeTypeOrdering,\n    _Eq_ProductLatticeTypeOrdering,\n    _Show_ProductLatticeTypeOrdering,\n    _Generic_SetOrdering,\n    _Eq_SetOrdering,\n    _Show_SetOrdering,\n    _Generic_FunctionDef,\n    _Eq_FunctionDef,\n    _Show_FunctionDef,\n    _Generic_Relation,\n    _Eq_Relation,\n    _Show_Relation,\n    _Generic_Rule,\n    _Eq_Rule,\n    _Show_Rule,\n    _Generic_Hypothesis,\n    _Eq_Hypothesis,\n    _Show_Hypothesis,\n    _Generic_SideHypothesis,\n    _Eq_SideHypothesis,\n    _Show_SideHypothesis,\n    _Generic_PropF,\n    _Functor_PropF,\n    _Foldable_PropF,\n    _Traversable_PropF,\n    _Eq_PropF,\n    _Show_PropF,\n    _Generic_TermF,\n    _Functor_TermF,\n    _Foldable_TermF,\n    _Traversable_TermF,\n    _Eq_Term,\n    _Show_Term,\n    _Newtype_Name,\n    _Eq_Name,\n    _Ord_Name,\n    _Show_Name\n};\n", "// Generated by purs version 0.15.15\nimport * as Control_Applicative from \"../Control.Applicative/index.js\";\nimport * as Control_Category from \"../Control.Category/index.js\";\nimport * as Data_Array from \"../Data.Array/index.js\";\nimport * as Data_Foldable from \"../Data.Foldable/index.js\";\nimport * as Data_Functor from \"../Data.Functor/index.js\";\nimport * as Data_FunctorWithIndex from \"../Data.FunctorWithIndex/index.js\";\nimport * as Data_List from \"../Data.List/index.js\";\nimport * as Data_List_Types from \"../Data.List.Types/index.js\";\nimport * as Data_Map_Internal from \"../Data.Map.Internal/index.js\";\nimport * as Data_Maybe from \"../Data.Maybe/index.js\";\nimport * as Data_Monoid from \"../Data.Monoid/index.js\";\nimport * as Data_Newtype from \"../Data.Newtype/index.js\";\nimport * as Data_Semigroup from \"../Data.Semigroup/index.js\";\nimport * as Foliage_App_Style from \"../Foliage.App.Style/index.js\";\nimport * as Foliage_Program from \"../Foliage.Program/index.js\";\nimport * as Halogen_HTML_Core from \"../Halogen.HTML.Core/index.js\";\nimport * as Halogen_HTML_Elements from \"../Halogen.HTML.Elements/index.js\";\nvar append = /* #__PURE__ */ Data_Semigroup.append(Data_Semigroup.semigroupArray);\nvar pure = /* #__PURE__ */ Control_Applicative.pure(Control_Applicative.applicativeArray);\nvar unwrap = /* #__PURE__ */ Data_Newtype.unwrap();\nvar intercalate = /* #__PURE__ */ Data_Array.intercalate(Data_Monoid.monoidArray);\nvar mapFlipped = /* #__PURE__ */ Data_Functor.mapFlipped(Data_Functor.functorArray);\nvar fold = /* #__PURE__ */ Data_Array.fold(Data_Monoid.monoidArray);\nvar map = /* #__PURE__ */ Data_Functor.map(Data_Functor.functorArray);\nvar fold1 = /* #__PURE__ */ Data_Foldable.fold(Data_List_Types.foldableList)(Data_Monoid.monoidArray);\nvar map1 = /* #__PURE__ */ Data_Functor.map(Data_List_Types.functorList);\nvar mapFlipped1 = /* #__PURE__ */ Data_Functor.mapFlipped(Data_Maybe.functorMaybe);\nvar fromFoldable = /* #__PURE__ */ Data_Array.fromFoldable(Data_List_Types.foldableList);\nvar mapWithIndex = /* #__PURE__ */ Data_FunctorWithIndex.mapWithIndex(Data_Map_Internal.functorWithIndexMap);\nvar map2 = /* #__PURE__ */ Data_Functor.map(Data_Map_Internal.functorMap);\nvar Raw = function (x) {\n    return x;\n};\nvar Punc = function (x) {\n    return x;\n};\nvar Prim = function (x) {\n    return x;\n};\nvar Lit = function (x) {\n    return x;\n};\nvar section = /* #__PURE__ */ (function () {\n    var $120 = Halogen_HTML_Elements.div([ Foliage_App_Style.style(append(Foliage_App_Style.flex_column)(Foliage_App_Style.padding_horizontal_big)) ]);\n    return function ($121) {\n        return pure($120($121));\n    };\n})();\nvar render = function (dict) {\n    return dict.render;\n};\nvar line = /* #__PURE__ */ (function () {\n    var $122 = Halogen_HTML_Elements.div([ Foliage_App_Style.style(append(Foliage_App_Style.flex_row)([ \"gap: 0.8em\", \"display: inline-flex\", \"white-space: flex-wrap\" ])) ]);\n    return function ($123) {\n        return pure($122($123));\n    };\n})();\nvar doc_block = function (s) {\n    return [ Halogen_HTML_Elements.div([ Foliage_App_Style.style(append(Foliage_App_Style.padding_small)(append(Foliage_App_Style.font_prose)([ \"max-width: 30em\", \"background-color: rgba(0, 0, 0, 0.1)\", \"white-space: pre-wrap\" ]))) ])([ Halogen_HTML_Core.text(s) ]) ];\n};\nvar divs = function (props) {\n    var $124 = Halogen_HTML_Elements.div(props);\n    return function ($125) {\n        return $124(Data_Array.concat($125));\n    };\n};\nvar append_render = function (dictRender) {\n    var render8 = render(dictRender);\n    return function (a) {\n        return append(render8(a));\n    };\n};\nvar _Render_Raw = {\n    render: function (v) {\n        return [ Halogen_HTML_Elements.div([ Foliage_App_Style.style([ \"color: blue\" ]) ])([ Halogen_HTML_Core.text(v) ]) ];\n    }\n};\nvar append_render1 = /* #__PURE__ */ append_render(_Render_Raw);\nvar _Render_Punc = {\n    render: function (v) {\n        return pure(Halogen_HTML_Elements.div([ Foliage_App_Style.style(append(Foliage_App_Style.bold)([ \"color: black\" ])) ])([ Halogen_HTML_Core.text(v) ]));\n    }\n};\nvar append_render2 = /* #__PURE__ */ append_render(_Render_Punc);\nvar render1 = /* #__PURE__ */ render(_Render_Punc);\nvar _Render_Prim = {\n    render: function (v) {\n        return pure(Halogen_HTML_Elements.div([ Foliage_App_Style.style([ \"color: purple\" ]) ])([ Halogen_HTML_Core.text(v) ]));\n    }\n};\nvar append_render3 = /* #__PURE__ */ append_render(_Render_Prim);\nvar _Render_Name = {\n    render: function (name) {\n        return pure(Halogen_HTML_Elements.div([ Foliage_App_Style.style([ \"color: darkgreen\" ]) ])([ Halogen_HTML_Core.text(unwrap(name)) ]));\n    }\n};\nvar append_render4 = /* #__PURE__ */ append_render(_Render_Name);\nvar render2 = /* #__PURE__ */ render(_Render_Name);\nvar _Render_Lit = {\n    render: function (v) {\n        return [ Halogen_HTML_Elements.div([ Foliage_App_Style.style(append(Foliage_App_Style.italic)([ \"color: #e67e00\" ])) ])([ Halogen_HTML_Core.text(v) ]) ];\n    }\n};\nvar append_render5 = /* #__PURE__ */ append_render(_Render_Lit);\nvar _Render_Htmls = {\n    render: /* #__PURE__ */ Control_Category.identity(Control_Category.categoryFn)\n};\nvar append_render6 = /* #__PURE__ */ append_render(_Render_Htmls);\nvar _Render_LatticeType = {\n    render: function (v) {\n        if (v instanceof Foliage_Program.NamedLatticeType) {\n            return append_render4(v.value0)([  ]);\n        };\n        if (v instanceof Foliage_Program.UnitLatticeType) {\n            return append_render3(\"Unit\")([  ]);\n        };\n        if (v instanceof Foliage_Program.SumLatticeType) {\n            var sup = (function () {\n                if (v.value0 instanceof Foliage_Program.LeftGreaterThanRight_SumLatticeTypeOrdering) {\n                    return \"L>R\";\n                };\n                if (v.value0 instanceof Foliage_Program.LeftLessThanRight_SumLatticeTypeOrdering) {\n                    return \"L<R\";\n                };\n                if (v.value0 instanceof Foliage_Program.LeftIncomparableRight_SumLatticeTypeOrdering) {\n                    return \"L\\u22c8R\";\n                };\n                if (v.value0 instanceof Foliage_Program.LeftEqualRight_SumLatticeTypeOrdering) {\n                    return \"L=R\";\n                };\n                throw new Error(\"Failed pattern match at Foliage.App.Rendering (line 123, column 13 - line 127, column 55): \" + [ v.value0.constructor.name ]);\n            })();\n            var plus_sup = Halogen_HTML_Elements.span([ Foliage_App_Style.style([ \"display: flex\", \"flex-direction: row\" ]) ])(append_render2(\"+\")([ Halogen_HTML_Elements.sup([  ])([ Halogen_HTML_Core.text(sup) ]) ]));\n            return append_render2(\"(\")(append_render(_Render_LatticeType)(v.value1)(append_render6([ plus_sup ])(append_render2(\")\")([  ]))));\n        };\n        if (v instanceof Foliage_Program.ProductLatticeType) {\n            var prod_sup = Halogen_HTML_Elements.span([ Foliage_App_Style.style([ \"display: flex\", \"flex-direction: row\" ]) ])(append_render2(\"\\xd7\")([ Halogen_HTML_Elements.sup([  ])([ Halogen_HTML_Core.text(\"1,2\") ]) ]));\n            return append_render2(\"(\")(append_render(_Render_LatticeType)(v.value1)(append_render6([ prod_sup ])(append_render(_Render_LatticeType)(v.value2)(append_render2(\")\")([  ])))));\n        };\n        if (v instanceof Foliage_Program.SetLatticeType) {\n            return append_render3(\"Set\")(append_render2(\"(\")(append_render(_Render_LatticeType)(v.value1)(append_render2(\")\")([  ]))));\n        };\n        if (v instanceof Foliage_Program.OppositeLatticeType) {\n            return append_render3(\"Opposite\")(append_render2(\"(\")(append_render(_Render_LatticeType)(v.value0)(append_render2(\")\")([  ]))));\n        };\n        if (v instanceof Foliage_Program.DiscreteLatticeType) {\n            return append_render3(\"Discrete\")(append_render2(\"(\")(append_render(_Render_LatticeType)(v.value0)(append_render2(\")\")([  ]))));\n        };\n        if (v instanceof Foliage_Program.PowerLatticeType) {\n            return append_render3(\"Power\")(append_render2(\"(\")(append_render(_Render_LatticeType)(v.value0)(append_render2(\")\")([  ]))));\n        };\n        throw new Error(\"Failed pattern match at Foliage.App.Rendering (line 114, column 12 - line 139, column 70): \" + [ v.constructor.name ]);\n    }\n};\nvar append_render7 = /* #__PURE__ */ append_render(_Render_LatticeType);\nvar _Render_Term = {\n    render: function (v) {\n        if (v instanceof Foliage_Program.VarTerm) {\n            return append_render4(v.value0)([  ]);\n        };\n        if (v instanceof Foliage_Program.LiteralTerm) {\n            return append_render5(v.value0)([  ]);\n        };\n        if (v instanceof Foliage_Program.ConTerm) {\n            return append_render2(\"(\")(append_render3(v.value0)(append_render(_Render_Term)(v.value1)(append_render2(\")\")([  ]))));\n        };\n        if (v instanceof Foliage_Program.UnitTerm) {\n            return append_render3(\"\\u25cf\")([  ]);\n        };\n        if (v instanceof Foliage_Program.LeftTerm) {\n            return append_render2(\"(\")(append_render3(\"Left\")(append_render(_Render_Term)(v.value0)(append_render2(\")\")([  ]))));\n        };\n        if (v instanceof Foliage_Program.RightTerm) {\n            return append_render2(\"(\")(append_render3(\"Right\")(append_render(_Render_Term)(v.value0)(append_render2(\")\")([  ]))));\n        };\n        if (v instanceof Foliage_Program.PairTerm) {\n            return append_render2(\"\\u27e8\")(append_render(_Render_Term)(v.value0)(append_render2(\",\")(append_render(_Render_Term)(v.value1)(append_render2(\"\\u27e9\")([  ])))));\n        };\n        if (v instanceof Foliage_Program.SetTerm) {\n            return append_render2(\"{\")(append_render6(intercalate(append_render2(\",\")([  ]))(mapFlipped(v.value0)(render(_Render_Term))))(append_render2(\"}\")([  ])));\n        };\n        throw new Error(\"Failed pattern match at Foliage.App.Rendering (line 180, column 12 - line 188, column 99): \" + [ v.constructor.name ]);\n    }\n};\nvar append_render8 = /* #__PURE__ */ append_render(_Render_Term);\nvar render3 = /* #__PURE__ */ render(_Render_Term);\nvar _Render_Prop = {\n    render: function (v) {\n        return append_render4(v.value0)(append_render8(v.value1)([  ]));\n    }\n};\nvar append_render9 = /* #__PURE__ */ append_render(_Render_Prop);\nvar _Render_SideHypothesis = {\n    render: function (v) {\n        return append_render2(\"let\")(append_render4(v.value0.resultVarName)(append_render2(\"=\")(append_render4(v.value0.functionName)(append_render2(\"(\")(append_render6(intercalate(append_render2(\",\")([  ]))(mapFlipped(v.value0.args)(render3)))(append_render2(\")\")([  ])))))));\n    }\n};\nvar render4 = /* #__PURE__ */ render(_Render_SideHypothesis);\nvar _Render_Hypothesis = {\n    render: function (v) {\n        return append_render6(line(append_render9(v.value0)([  ])))(append_render6(fold(map(function ($126) {\n            return line(render4($126));\n        })(v.value1)))([  ]));\n    }\n};\nvar render5 = /* #__PURE__ */ render(_Render_Hypothesis);\nvar _Render_Rule = {\n    render: function (v) {\n        return [ Halogen_HTML_Elements.div([ Foliage_App_Style.style(Foliage_App_Style.flex_column) ])((function () {\n            var $94 = Data_List[\"null\"](v.value0.hypotheses);\n            if ($94) {\n                return line(append_render9(v.value0.conclusion)([  ]));\n            };\n            return Data_Array.concat([ fold1(map1(render5)(v.value0.hypotheses)), [ Halogen_HTML_Elements.div([ Foliage_App_Style.style(Foliage_App_Style.horizontal_bar) ])([  ]) ], line(append_render9(v.value0.conclusion)([  ])) ]);\n        })()) ];\n    }\n};\nvar render6 = /* #__PURE__ */ render(_Render_Rule);\nvar definition = function (mb_doc) {\n    return function (sort) {\n        return function (name) {\n            return function (body) {\n                return [ divs([ Foliage_App_Style.style(append(Foliage_App_Style.flex_column)(append(Foliage_App_Style.padding_small)(Foliage_App_Style.boundaries))) ])([ Data_Maybe.maybe([  ])((function () {\n                    var $127 = Halogen_HTML_Elements.div([  ]);\n                    return function ($128) {\n                        return pure($127($128));\n                    };\n                })())(mb_doc), line(append_render6(sort)(append_render6(name)(append_render2(\"=\")([  ])))), section(body) ]) ];\n            };\n        };\n    };\n};\nvar _Render_DataType = {\n    render: function (v) {\n        if (v instanceof Foliage_Program.NamedDataType) {\n            return append_render4(v.value0)([  ]);\n        };\n        if (v instanceof Foliage_Program.UnitDataType) {\n            return append_render3(\"Unit\")([  ]);\n        };\n        if (v instanceof Foliage_Program.SumDataType) {\n            return append_render2(\"(\")(append_render(_Render_DataType)(v.value0)(append_render2(\"+\")(append_render(_Render_DataType)(v.value1)(append_render2(\")\")([  ])))));\n        };\n        if (v instanceof Foliage_Program.SetDataType) {\n            return append_render3(\"Set\")(append_render(_Render_DataType)(v.value0)([  ]));\n        };\n        if (v instanceof Foliage_Program.ProductDataType) {\n            return append_render2(\"(\")(append_render(_Render_DataType)(v.value0)(append_render2(\"*\")(append_render(_Render_DataType)(v.value1)(append_render2(\")\")([  ])))));\n        };\n        throw new Error(\"Failed pattern match at Foliage.App.Rendering (line 142, column 12 - line 147, column 71): \" + [ v.constructor.name ]);\n    }\n};\nvar append_render10 = /* #__PURE__ */ append_render(_Render_DataType);\nvar _Render_Module = {\n    render: function (v) {\n        return definition(mapFlipped1(v.value0.doc)(doc_block))(render1(\"module\"))(render2(v.value0.name))((function () {\n            var renderModDefinition = function (label) {\n                return function (renderBody) {\n                    return function (items) {\n                        return Data_Array.concat(fromFoldable(Data_Map_Internal.values(mapWithIndex(function (name) {\n                            return function (body) {\n                                return definition(Data_Maybe.Nothing.value)(label)(render2(name))(renderBody(body));\n                            };\n                        })(items))));\n                    };\n                };\n            };\n            return Data_Array.concat([ renderModDefinition(append_render2(\"data type\")([  ]))(function (v1) {\n                if (v1 instanceof Foliage_Program.DataTypeDef) {\n                    return line(append_render10(v1.value0)([  ]));\n                };\n                if (v1 instanceof Foliage_Program.ExternalDataTypeDef) {\n                    return line(append_render2(\"external\")(append_render1(v1.value0)([  ])));\n                };\n                throw new Error(\"Failed pattern match at Foliage.App.Rendering (line 73, column 63 - line 75, column 85): \" + [ v1.constructor.name ]);\n            })(v.value0.dataTypeDefs), renderModDefinition(append_render2(\"function\")([  ]))(function (v1) {\n                return line(append_render1(v1.value0.name)(append_render2(\"(\")(append_render6(intercalate(append_render2(\",\")([  ]))(mapFlipped(v1.value0.inputs)(function (v2) {\n                    return append_render1(v2.value0)(append_render2(\":\")(append_render10(v2.value1)([  ])));\n                })))(append_render2(\")\")(append_render2(\"\\u2192\")(append_render10(v1.value0.output)([  ])))))));\n            })(v.value0.functionDefs), renderModDefinition(append_render2(\"lattice type\")([  ]))(function (v1) {\n                if (v1 instanceof Foliage_Program.LatticeTypeDef) {\n                    return line(append_render7(v1.value0)([  ]));\n                };\n                if (v1 instanceof Foliage_Program.ExternalLatticeTypeDef) {\n                    return line(append_render2(\"external\")(append_render1(v1.value0.name)([  ])));\n                };\n                throw new Error(\"Failed pattern match at Foliage.App.Rendering (line 80, column 66 - line 82, column 93): \" + [ v1.constructor.name ]);\n            })(v.value0.latticeTypeDefs), renderModDefinition(append_render2(\"relation\")([  ]))(function (v1) {\n                return line(append_render2(\"\\u211b\")(append_render7(v1.value0.domain)([  ])));\n            })(v.value0.relations), renderModDefinition(append_render2(\"rule\")([  ]))((function () {\n                var $129 = Halogen_HTML_Elements.div([ Foliage_App_Style.style([ \"display: inline-flex\", \"flex-direction: row\" ]) ]);\n                return function ($130) {\n                    return pure($129(render6($130)));\n                };\n            })())(v.value0.rules) ]);\n        })());\n    }\n};\nvar render7 = /* #__PURE__ */ render(_Render_Module);\nvar _Render_Program = {\n    render: function (v) {\n        return [ divs([ Foliage_App_Style.style(append(Foliage_App_Style.flex_column)([ \"gap: 1.0em\" ])) ])([ line(append_render2(\"program\")(append_render4(v.value0.name)([  ]))), Data_Maybe.maybe([  ])(doc_block)(v.value0.doc), Data_Array.concat(fromFoldable(Data_Map_Internal.values(map2(render7)(v.value0.modules)))) ]) ];\n    }\n};\nexport {\n    render,\n    append_render,\n    divs,\n    doc_block,\n    definition,\n    line,\n    Punc,\n    Prim,\n    section,\n    Raw,\n    Lit,\n    _Render_Htmls,\n    _Render_Program,\n    _Render_Module,\n    _Render_Rule,\n    _Render_LatticeType,\n    _Render_DataType,\n    _Render_Punc,\n    _Render_Prim,\n    _Render_Name,\n    _Render_Hypothesis,\n    _Render_SideHypothesis,\n    _Render_Prop,\n    _Render_Term,\n    _Render_Raw,\n    _Render_Lit\n};\n", "// Generated by purs version 0.15.15\nimport * as Data_Lazy from \"../Data.Lazy/index.js\";\nimport * as Data_Map_Internal from \"../Data.Map.Internal/index.js\";\nimport * as Data_Maybe from \"../Data.Maybe/index.js\";\nimport * as Foliage_Program from \"../Foliage.Program/index.js\";\nvar blank = /* #__PURE__ */ Data_Lazy.defer(function (v) {\n    return new Foliage_Program.Program({\n        name: \"Blank\",\n        doc: Data_Maybe.Nothing.value,\n        modules: Data_Map_Internal.singleton(Foliage_Program.mainModuleName)(new Foliage_Program.Module({\n            name: Foliage_Program.mainModuleName,\n            doc: Data_Maybe.Nothing.value,\n            initialGas: 100,\n            dataTypeDefs: Data_Map_Internal.empty,\n            functionDefs: Data_Map_Internal.empty,\n            latticeTypeDefs: Data_Map_Internal.empty,\n            relations: Data_Map_Internal.empty,\n            rules: Data_Map_Internal.empty\n        }))\n    });\n});\nexport {\n    blank\n};\n", "// Generated by purs version 0.15.15\nimport * as Control_Applicative from \"../Control.Applicative/index.js\";\nimport * as Data_Eq from \"../Data.Eq/index.js\";\nimport * as Data_Foldable from \"../Data.Foldable/index.js\";\nimport * as Data_FoldableWithIndex from \"../Data.FoldableWithIndex/index.js\";\nimport * as Data_Function from \"../Data.Function/index.js\";\nimport * as Data_Functor from \"../Data.Functor/index.js\";\nimport * as Data_Homogeneous from \"../Data.Homogeneous/index.js\";\nimport * as Data_List from \"../Data.List/index.js\";\nimport * as Data_List_Types from \"../Data.List.Types/index.js\";\nimport * as Data_Maybe from \"../Data.Maybe/index.js\";\nimport * as Data_Monoid from \"../Data.Monoid/index.js\";\nimport * as Data_Ord from \"../Data.Ord/index.js\";\nimport * as Data_Semigroup_Foldable from \"../Data.Semigroup.Foldable/index.js\";\nimport * as Data_Show from \"../Data.Show/index.js\";\nimport * as Data_Symbol from \"../Data.Symbol/index.js\";\nimport * as Data_Tuple from \"../Data.Tuple/index.js\";\nimport * as Foreign_Object from \"../Foreign.Object/index.js\";\nimport * as Record_Unsafe from \"../Record.Unsafe/index.js\";\nimport * as Type_Proxy from \"../Type.Proxy/index.js\";\nvar map = /* #__PURE__ */ Data_Functor.map(Foreign_Object.functorObject);\nvar fromJust = /* #__PURE__ */ Data_Maybe.fromJust();\nvar foldr = /* #__PURE__ */ Data_Foldable.foldr(Data_List_Types.foldableList);\nvar map1 = /* #__PURE__ */ Data_Functor.map(Data_List_Types.functorList);\nvar foldlWithIndex = /* #__PURE__ */ Data_FoldableWithIndex.foldlWithIndex(Foreign_Object.foldableWithIndexObject);\nvar fromFoldable = /* #__PURE__ */ Foreign_Object.fromFoldable(Data_List_Types.foldableList);\nvar Homogeneous = function (x) {\n    return x;\n};\nvar traversableHomogeneous = Foreign_Object.traversableObject;\nvar showHomogeneous = function (dictShow) {\n    var show = Data_Show.show(Foreign_Object.showObject(dictShow));\n    return {\n        show: function (v) {\n            return \"Homogeneous (\" + (show(v) + \")\");\n        }\n    };\n};\nvar semigroupHomogeneous = function (dictSemigroup) {\n    return Foreign_Object.semigroupObject(dictSemigroup);\n};\nvar functorHomogeneous = {\n    map: function (f) {\n        return function (m) {\n            return map(f)(m);\n        };\n    }\n};\nvar foldableWithIndexStringHo = Foreign_Object.foldableWithIndexObject;\nvar foldableHomogeneous = Foreign_Object.foldableObject;\nvar foldable1Homogeneous = function (dictIsSymbol) {\n    var reflectSymbol = Data_Symbol.reflectSymbol(dictIsSymbol);\n    return function () {\n        return function (dictKeys) {\n            var keysImpl = Data_Homogeneous.keysImpl(dictKeys);\n            return {\n                foldl1: function (f) {\n                    return function (v) {\n                        var keys = keysImpl(Type_Proxy[\"Proxy\"].value);\n                        var key = reflectSymbol(Type_Proxy[\"Proxy\"].value);\n                        var h = fromJust(Foreign_Object.lookup(key)(v));\n                        return foldr(f)(h)(Data_List.catMaybes(map1(Data_Function.flip(Foreign_Object.lookup)(v))(keys)));\n                    };\n                },\n                foldr1: function (f) {\n                    return Data_Semigroup_Foldable.foldr1Default(foldable1Homogeneous(dictIsSymbol)()(dictKeys))(f);\n                },\n                foldMap1: function (dictSemigroup) {\n                    return function (f) {\n                        return Data_Semigroup_Foldable.foldMap1DefaultL(foldable1Homogeneous(dictIsSymbol)()(dictKeys))(functorHomogeneous)(dictSemigroup)(f);\n                    };\n                },\n                Foldable0: function () {\n                    return foldableHomogeneous;\n                }\n            };\n        };\n    };\n};\nvar eqHomogeneous = function (dictEq) {\n    var eq = Data_Eq.eq(Foreign_Object.eqObject(dictEq));\n    return {\n        eq: function (x) {\n            return function (y) {\n                return eq(x)(y);\n            };\n        }\n    };\n};\nvar ordHomogeneous = function (dictOrd) {\n    var compare = Data_Ord.compare(Foreign_Object.ordObject(dictOrd));\n    var eqHomogeneous1 = eqHomogeneous(dictOrd.Eq0());\n    return {\n        compare: function (x) {\n            return function (y) {\n                return compare(x)(y);\n            };\n        },\n        Eq0: function () {\n            return eqHomogeneous1;\n        }\n    };\n};\nvar objUnsafeSet = Record_Unsafe.unsafeSet;\nvar objUnsafeGet = Record_Unsafe.unsafeGet;\nvar applyHomogeneous = {\n    apply: function (v) {\n        return function (v1) {\n            var step = function (key) {\n                return function (result) {\n                    return function (f) {\n                        return objUnsafeSet(key)(f(objUnsafeGet(key)(v1)))(result);\n                    };\n                };\n            };\n            return foldlWithIndex(step)(Foreign_Object.empty)(v);\n        };\n    },\n    Functor0: function () {\n        return functorHomogeneous;\n    }\n};\nvar applicativeHomogeneous = function () {\n    return function (dictKeys) {\n        var keysImpl = Data_Homogeneous.keysImpl(dictKeys);\n        return {\n            pure: function (a) {\n                var keys = keysImpl(Type_Proxy[\"Proxy\"].value);\n                var obj = fromFoldable(map1(Data_Function.flip(Data_Tuple.Tuple.create)(a))(keys));\n                return obj;\n            },\n            Apply0: function () {\n                return applyHomogeneous;\n            }\n        };\n    };\n};\nvar applicativeHomogeneous1 = /* #__PURE__ */ applicativeHomogeneous();\nvar monoidHomogeneous = function () {\n    return function (dictKeys) {\n        var pure = Control_Applicative.pure(applicativeHomogeneous1(dictKeys));\n        return function (dictMonoid) {\n            var semigroupHomogeneous1 = semigroupHomogeneous(dictMonoid.Semigroup0());\n            return {\n                mempty: pure(Data_Monoid.mempty(dictMonoid)),\n                Semigroup0: function () {\n                    return semigroupHomogeneous1;\n                }\n            };\n        };\n    };\n};\nvar homogeneous$prime = function () {\n    return function ($77) {\n        return Homogeneous($77);\n    };\n};\nvar homogeneous = function () {\n    return function (r) {\n        return r;\n    };\n};\nvar homogeneous1 = /* #__PURE__ */ homogeneous();\nvar fromHomogeneous = function () {\n    return function (v) {\n        return v;\n    };\n};\nvar fromHomogeneous1 = /* #__PURE__ */ fromHomogeneous();\nvar get = function () {\n    return function (h) {\n        return function (f) {\n            return f(fromHomogeneous1(h));\n        };\n    };\n};\nvar modify = function () {\n    return function () {\n        return function () {\n            return function (h) {\n                return function (f) {\n                    return homogeneous1(f(fromHomogeneous1(h)));\n                };\n            };\n        };\n    };\n};\nexport {\n    homogeneous,\n    homogeneous$prime,\n    fromHomogeneous,\n    modify,\n    get,\n    eqHomogeneous,\n    ordHomogeneous,\n    functorHomogeneous,\n    applyHomogeneous,\n    applicativeHomogeneous,\n    foldableHomogeneous,\n    foldableWithIndexStringHo,\n    foldable1Homogeneous,\n    traversableHomogeneous,\n    semigroupHomogeneous,\n    monoidHomogeneous,\n    showHomogeneous\n};\n", "// Generated by purs version 0.15.15\nimport * as Control_Applicative from \"../Control.Applicative/index.js\";\nimport * as Control_Bind from \"../Control.Bind/index.js\";\nimport * as Control_Monad_Error_Class from \"../Control.Monad.Error.Class/index.js\";\nimport * as Control_Monad_Except_Trans from \"../Control.Monad.Except.Trans/index.js\";\nimport * as Control_Plus from \"../Control.Plus/index.js\";\nimport * as Data_Array from \"../Data.Array/index.js\";\nimport * as Data_Either from \"../Data.Either/index.js\";\nimport * as Data_Eq from \"../Data.Eq/index.js\";\nimport * as Data_Foldable from \"../Data.Foldable/index.js\";\nimport * as Data_Functor from \"../Data.Functor/index.js\";\nimport * as Data_Homogeneous_Record from \"../Data.Homogeneous.Record/index.js\";\nimport * as Data_Identity from \"../Data.Identity/index.js\";\nimport * as Data_Int from \"../Data.Int/index.js\";\nimport * as Data_Lazy from \"../Data.Lazy/index.js\";\nimport * as Data_List from \"../Data.List/index.js\";\nimport * as Data_List_Types from \"../Data.List.Types/index.js\";\nimport * as Data_Map_Internal from \"../Data.Map.Internal/index.js\";\nimport * as Data_Maybe from \"../Data.Maybe/index.js\";\nimport * as Data_Newtype from \"../Data.Newtype/index.js\";\nimport * as Data_Ord from \"../Data.Ord/index.js\";\nimport * as Data_Show from \"../Data.Show/index.js\";\nimport * as Data_String_Common from \"../Data.String.Common/index.js\";\nimport * as Data_Tuple from \"../Data.Tuple/index.js\";\nimport * as Foliage_Common from \"../Foliage.Common/index.js\";\nimport * as Foliage_Program from \"../Foliage.Program/index.js\";\nimport * as Type_Proxy from \"../Type.Proxy/index.js\";\nvar map = /* #__PURE__ */ Data_Functor.map(Data_Homogeneous_Record.functorHomogeneous);\nvar homogeneous = /* #__PURE__ */ Data_Homogeneous_Record.homogeneous();\nvar bind = /* #__PURE__ */ Control_Bind.bind(Data_Either.bindEither);\nvar get = /* #__PURE__ */ Data_Homogeneous_Record.get();\nvar pure = /* #__PURE__ */ Control_Applicative.pure(Data_Either.applicativeEither);\nvar wrap = /* #__PURE__ */ Data_Newtype.wrap();\nvar show = /* #__PURE__ */ Data_Show.show(Data_Show.showInt);\nvar mapFlipped = /* #__PURE__ */ Data_Functor.mapFlipped(Data_Functor.functorArray);\nvar eq = /* #__PURE__ */ Data_Eq.eq(Foliage_Program[\"_Eq_Name\"]);\nvar monadExceptT = /* #__PURE__ */ Control_Monad_Except_Trans.monadExceptT(Data_Identity.monadIdentity);\nvar bind1 = /* #__PURE__ */ Control_Bind.bind(/* #__PURE__ */ Control_Monad_Except_Trans.bindExceptT(monadExceptT));\nvar throwError = /* #__PURE__ */ Control_Monad_Error_Class.throwError(/* #__PURE__ */ Control_Monad_Except_Trans.monadThrowExceptT(monadExceptT));\nvar show1 = /* #__PURE__ */ Data_Show.show(Data_Show.showString);\nvar pure1 = /* #__PURE__ */ Control_Applicative.pure(/* #__PURE__ */ Control_Monad_Except_Trans.applicativeExceptT(monadExceptT));\nvar compare1 = /* #__PURE__ */ Data_Ord.compare(Data_Ord.ordInt);\nvar empty = /* #__PURE__ */ Control_Plus.empty(/* #__PURE__ */ Data_Map_Internal.plusMap(Foliage_Program[\"_Ord_Name\"]));\nvar show2 = /* #__PURE__ */ Data_Show.show(/* #__PURE__ */ Foliage_Program[\"_Show_Term\"](Foliage_Program[\"_Show_Name\"]));\nvar fromFoldable = /* #__PURE__ */ Data_Map_Internal.fromFoldable(Foliage_Program[\"_Ord_Name\"])(Data_Foldable.foldableArray);\nvar fromFoldable1 = /* #__PURE__ */ Data_List.fromFoldable(Data_Foldable.foldableArray);\nvar Graph = /* #__PURE__ */ (function () {\n    function Graph(value0) {\n        this.value0 = value0;\n    };\n    Graph.create = function (value0) {\n        return new Graph(value0);\n    };\n    return Graph;\n})();\nvar name = /* #__PURE__ */ map(Foliage_Program.Name)(/* #__PURE__ */ homogeneous({\n    \"int\": \"Int\",\n    node: \"Node\",\n    weight: \"Weight\",\n    addWeight: \"addWeight\",\n    edge: \"Edge\",\n    dist: \"Distance\",\n    edge_distance: \"EdgeDistance\",\n    append_edge_distance: \"AppendEdgeDistance\"\n}));\nvar $$function = /* #__PURE__ */ (function () {\n    return map(Foliage_Common.Opaque.create(Type_Proxy[\"Proxy\"].value))(homogeneous({\n        addWeight: function (args) {\n            return bind(Foliage_Program.getValidatedArg({\n                f: \"addWeight\",\n                x: \"w1\",\n                dt: new Foliage_Program.NamedDataType(get(name)(function (v) {\n                    return v[\"int\"];\n                })),\n                dt_name: \"Int\",\n                fromString: Data_Int.fromString\n            })(args))(function (w1) {\n                return bind(Foliage_Program.getValidatedArg({\n                    f: \"addWeight\",\n                    x: \"w2\",\n                    dt: new Foliage_Program.NamedDataType(get(name)(function (v) {\n                        return v[\"int\"];\n                    })),\n                    dt_name: \"Int\",\n                    fromString: Data_Int.fromString\n                })(args))(function (w2) {\n                    var w3 = w1 + w2 | 0;\n                    return pure(new Foliage_Program.LiteralTerm(Data_Int.toStringAs(Data_Int.decimal)(w3), new Foliage_Program.NamedDataType(get(name)(function (v) {\n                        return v[\"int\"];\n                    }))));\n                });\n            });\n        }\n    }));\n})();\nvar compileGraph = function (v) {\n    var f = function (v1) {\n        return new Data_Tuple.Tuple(wrap(show(v1.value0.value0) + (\" -> \" + show(v1.value0.value1))), new Foliage_Program.Rule({\n            hypotheses: Data_List_Types.Nil.value,\n            conclusion: new Foliage_Program.Prop(get(name)(function (v2) {\n                return v2.edge;\n            }), new Foliage_Program.PairTerm(new Foliage_Program.PairTerm(new Foliage_Program.LiteralTerm(show(v1.value0.value0), new Foliage_Program.NamedDataType(get(name)(function (v2) {\n                return v2[\"int\"];\n            }))), new Foliage_Program.LiteralTerm(show(v1.value0.value1), new Foliage_Program.NamedDataType(get(name)(function (v2) {\n                return v2[\"int\"];\n            })))), new Foliage_Program.LiteralTerm(show(v1.value1), new Foliage_Program.NamedDataType(get(name)(function (v2) {\n                return v2[\"int\"];\n            })))))\n        }));\n    };\n    return Data_Array.cons(new Data_Tuple.Tuple(show(v.value0.start_node) + (\" <==> \" + show(v.value0.start_node)), new Foliage_Program.Rule({\n        hypotheses: Data_List_Types.Nil.value,\n        conclusion: new Foliage_Program.Prop(get(name)(function (v1) {\n            return v1.dist;\n        }), new Foliage_Program.PairTerm(new Foliage_Program.PairTerm(new Foliage_Program.LiteralTerm(show(v.value0.start_node), new Foliage_Program.NamedDataType(get(name)(function (v1) {\n            return v1[\"int\"];\n        }))), new Foliage_Program.LiteralTerm(show(v.value0.start_node), new Foliage_Program.NamedDataType(get(name)(function (v1) {\n            return v1[\"int\"];\n        })))), new Foliage_Program.LiteralTerm(show(0), new Foliage_Program.NamedDataType(get(name)(function (v1) {\n            return v1[\"int\"];\n        })))))\n    })))(mapFlipped(v.value0.edges)(f));\n};\nvar compare = /* #__PURE__ */ (function () {\n    return map(Foliage_Common.Opaque.create(Type_Proxy[\"Proxy\"].value))(homogeneous({\n        Int: function (v) {\n            if (v.value0 instanceof Foliage_Program.LiteralTerm && (v.value0.value1 instanceof Foliage_Program.NamedDataType && (v.value1 instanceof Foliage_Program.LiteralTerm && (v.value1.value1 instanceof Foliage_Program.NamedDataType && (eq(v.value0.value1.value0)(get(name)(function (v1) {\n                return v1[\"int\"];\n            })) && eq(v.value1.value1.value0)(get(name)(function (v1) {\n                return v1[\"int\"];\n            }))))))) {\n                return bind1(Data_Maybe.maybe(throwError({\n                    label: Foliage_Common[\"_error\"],\n                    source: \"compare.Int\",\n                    description: show1(v.value0.value0) + \" is not an Int\"\n                }))(pure1)(Data_Int.fromString(v.value0.value0)))(function (x1) {\n                    return bind1(Data_Maybe.maybe(throwError({\n                        label: Foliage_Common[\"_error\"],\n                        source: \"compare.Int\",\n                        description: show1(v.value1.value0) + \" is not an Int\"\n                    }))(pure1)(Data_Int.fromString(v.value1.value0)))(function (x2) {\n                        return pure1(new Data_Tuple.Tuple(compare1(x1)(x2), empty));\n                    });\n                });\n            };\n            return throwError({\n                label: Foliage_Common[\"_error\"],\n                source: \"compare.Int\",\n                description: \"inputs are not literal Ints: \" + (show2(v.value0) + (\", \" + show2(v.value1)))\n            });\n        }\n    }));\n})();\nvar make_dijkstra = function (label) {\n    return function (graph) {\n        return Data_Lazy.defer(function (v) {\n            var lex = Foliage_Program.ProductLatticeType.create(Foliage_Program.FirstThenSecond_ProductLatticeTypeOrdering.value);\n            return new Foliage_Program.Program({\n                name: \"Dijstra . \" + label,\n                doc: new Data_Maybe.Just(Data_String_Common.trim(\"\\x0aThis program implements Dijstra's algorithm for computing the shortest path in a graph from a starting node to any other node in the graph.\\x0a          \")),\n                modules: Data_Map_Internal.singleton(Foliage_Program.mainModuleName)(new Foliage_Program.Module({\n                    name: Foliage_Program.mainModuleName,\n                    doc: Data_Maybe.Nothing.value,\n                    initialGas: 50,\n                    dataTypeDefs: fromFoldable([ new Data_Tuple.Tuple(get(name)(function (v1) {\n                        return v1[\"int\"];\n                    }), new Foliage_Program.ExternalDataTypeDef(\"Int\")), new Data_Tuple.Tuple(get(name)(function (v1) {\n                        return v1.node;\n                    }), new Foliage_Program.DataTypeDef(new Foliage_Program.NamedDataType(get(name)(function (v1) {\n                        return v1[\"int\"];\n                    })))), new Data_Tuple.Tuple(get(name)(function (v1) {\n                        return v1.weight;\n                    }), new Foliage_Program.DataTypeDef(new Foliage_Program.NamedDataType(get(name)(function (v1) {\n                        return v1[\"int\"];\n                    })))) ]),\n                    latticeTypeDefs: fromFoldable([ new Data_Tuple.Tuple(get(name)(function (v1) {\n                        return v1[\"int\"];\n                    }), new Foliage_Program.ExternalLatticeTypeDef({\n                        name: \"Int\",\n                        compare_impl: get(compare)(function (v1) {\n                            return v1.Int;\n                        })\n                    })), new Data_Tuple.Tuple(get(name)(function (v1) {\n                        return v1.node;\n                    }), new Foliage_Program.LatticeTypeDef(new Foliage_Program.DiscreteLatticeType(new Foliage_Program.NamedLatticeType(get(name)(function (v1) {\n                        return v1[\"int\"];\n                    }))))), new Data_Tuple.Tuple(get(name)(function (v1) {\n                        return v1.weight;\n                    }), new Foliage_Program.LatticeTypeDef(new Foliage_Program.OppositeLatticeType(new Foliage_Program.NamedLatticeType(get(name)(function (v1) {\n                        return v1[\"int\"];\n                    }))))) ]),\n                    functionDefs: fromFoldable([ new Data_Tuple.Tuple(get(name)(function (v1) {\n                        return v1.addWeight;\n                    }), new Foliage_Program.ExternalFunctionDef({\n                        name: \"addWeight\",\n                        inputs: [ new Data_Tuple.Tuple(\"w1\", new Foliage_Program.NamedDataType(get(name)(function (v1) {\n                            return v1.weight;\n                        }))), new Data_Tuple.Tuple(\"w2\", new Foliage_Program.NamedDataType(get(name)(function (v1) {\n                            return v1.weight;\n                        }))) ],\n                        output: new Foliage_Program.NamedDataType(get(name)(function (v1) {\n                            return v1.weight;\n                        })),\n                        impl: get($$function)(function (v1) {\n                            return v1.addWeight;\n                        })\n                    })) ]),\n                    relations: fromFoldable([ new Data_Tuple.Tuple(get(name)(function (v1) {\n                        return v1.edge;\n                    }), new Foliage_Program.Relation({\n                        domain: lex(lex(new Foliage_Program.NamedLatticeType(get(name)(function (v1) {\n                            return v1.node;\n                        })))(new Foliage_Program.NamedLatticeType(get(name)(function (v1) {\n                            return v1.node;\n                        }))))(new Foliage_Program.NamedLatticeType(get(name)(function (v1) {\n                            return v1.weight;\n                        })))\n                    })), new Data_Tuple.Tuple(get(name)(function (v1) {\n                        return v1.dist;\n                    }), new Foliage_Program.Relation({\n                        domain: lex(lex(new Foliage_Program.NamedLatticeType(get(name)(function (v1) {\n                            return v1.node;\n                        })))(new Foliage_Program.NamedLatticeType(get(name)(function (v1) {\n                            return v1.node;\n                        }))))(new Foliage_Program.NamedLatticeType(get(name)(function (v1) {\n                            return v1.weight;\n                        })))\n                    })) ]),\n                    rules: fromFoldable(Data_Array.concat([ [ new Data_Tuple.Tuple(get(name)(function (v1) {\n                        return v1.append_edge_distance;\n                    }), (function () {\n                        var $94 = {\n                            n1: wrap(\"n1\"),\n                            n2: wrap(\"n2\"),\n                            n3: wrap(\"n3\"),\n                            w1: wrap(\"w1\"),\n                            w2: wrap(\"w2\"),\n                            w3: wrap(\"w3\")\n                        };\n                        return new Foliage_Program.Rule({\n                            hypotheses: fromFoldable1([ new Foliage_Program.Hypothesis(new Foliage_Program.Prop(get(name)(function (v1) {\n                                return v1.dist;\n                            }), new Foliage_Program.PairTerm(new Foliage_Program.PairTerm(new Foliage_Program.VarTerm($94.n1), new Foliage_Program.VarTerm($94.n2)), new Foliage_Program.VarTerm($94.w1))), [  ]), new Foliage_Program.Hypothesis(new Foliage_Program.Prop(get(name)(function (v1) {\n                                return v1.edge;\n                            }), new Foliage_Program.PairTerm(new Foliage_Program.PairTerm(new Foliage_Program.VarTerm($94.n2), new Foliage_Program.VarTerm($94.n3)), new Foliage_Program.VarTerm($94.w2))), [ new Foliage_Program.FunctionSideHypothesis({\n                                resultVarName: $94.w3,\n                                functionName: get(name)(function (v1) {\n                                    return v1.addWeight;\n                                }),\n                                args: [ new Foliage_Program.VarTerm($94.w1), new Foliage_Program.VarTerm($94.w2) ]\n                            }) ]) ]),\n                            conclusion: new Foliage_Program.Prop(get(name)(function (v1) {\n                                return v1.dist;\n                            }), new Foliage_Program.PairTerm(new Foliage_Program.PairTerm(new Foliage_Program.VarTerm($94.n1), new Foliage_Program.VarTerm($94.n3)), new Foliage_Program.VarTerm($94.w3)))\n                        });\n                    })()) ], compileGraph(graph) ]))\n                }))\n            });\n        });\n    };\n};\nvar cycle = /* #__PURE__ */ (function () {\n    return make_dijkstra(\"Cycle\")(new Graph({\n        start_node: 0,\n        edges: [ new Data_Tuple.Tuple(new Data_Tuple.Tuple(0, 1), 10), new Data_Tuple.Tuple(new Data_Tuple.Tuple(1, 0), 11) ]\n    }));\n})();\nvar diamond = /* #__PURE__ */ (function () {\n    return make_dijkstra(\"Diamond\")(new Graph({\n        start_node: 0,\n        edges: [ new Data_Tuple.Tuple(new Data_Tuple.Tuple(0, 1), 10), new Data_Tuple.Tuple(new Data_Tuple.Tuple(1, 3), 40), new Data_Tuple.Tuple(new Data_Tuple.Tuple(0, 2), 20), new Data_Tuple.Tuple(new Data_Tuple.Tuple(2, 3), 10) ]\n    }));\n})();\nexport {\n    diamond,\n    cycle\n};\n", "// Generated by purs version 0.15.15\nimport * as Data_Array from \"../Data.Array/index.js\";\nimport * as Data_Maybe from \"../Data.Maybe/index.js\";\nimport * as Data_Monoid from \"../Data.Monoid/index.js\";\nimport * as Data_String_CodeUnits from \"../Data.String.CodeUnits/index.js\";\nimport * as Partial_Unsafe from \"../Partial.Unsafe/index.js\";\nvar intercalate = /* #__PURE__ */ Data_Array.intercalate(Data_Monoid.monoidString);\nvar todo = function (msg) {\n    var header = Data_String_CodeUnits.fromCharArray(Data_Array.replicate(20)(\"=\"));\n    return Partial_Unsafe.unsafeCrashWith(intercalate(\"\\x0a\")([ header, \"[TODO]\", msg, header ]));\n};\nvar fromJust = function (msg) {\n    return function (v) {\n        if (v instanceof Data_Maybe.Nothing) {\n            return Partial_Unsafe.unsafeCrashWith(\"[unsafe] fromJust Nothing: \" + msg);\n        };\n        if (v instanceof Data_Maybe.Just) {\n            return v.value0;\n        };\n        throw new Error(\"Failed pattern match at Unsafe (line 17, column 16 - line 19, column 14): \" + [ v.constructor.name ]);\n    };\n};\nexport {\n    todo,\n    fromJust\n};\n", "// Generated by purs version 0.15.15\nimport * as Control_Applicative from \"../Control.Applicative/index.js\";\nimport * as Control_Bind from \"../Control.Bind/index.js\";\nimport * as Control_Monad_Error_Class from \"../Control.Monad.Error.Class/index.js\";\nimport * as Control_Monad_Except_Trans from \"../Control.Monad.Except.Trans/index.js\";\nimport * as Control_Plus from \"../Control.Plus/index.js\";\nimport * as Data_Array from \"../Data.Array/index.js\";\nimport * as Data_Either from \"../Data.Either/index.js\";\nimport * as Data_Eq from \"../Data.Eq/index.js\";\nimport * as Data_Foldable from \"../Data.Foldable/index.js\";\nimport * as Data_Functor from \"../Data.Functor/index.js\";\nimport * as Data_Homogeneous_Record from \"../Data.Homogeneous.Record/index.js\";\nimport * as Data_Identity from \"../Data.Identity/index.js\";\nimport * as Data_Int from \"../Data.Int/index.js\";\nimport * as Data_Lazy from \"../Data.Lazy/index.js\";\nimport * as Data_List from \"../Data.List/index.js\";\nimport * as Data_List_Types from \"../Data.List.Types/index.js\";\nimport * as Data_Map_Internal from \"../Data.Map.Internal/index.js\";\nimport * as Data_Maybe from \"../Data.Maybe/index.js\";\nimport * as Data_Monoid from \"../Data.Monoid/index.js\";\nimport * as Data_Ord from \"../Data.Ord/index.js\";\nimport * as Data_Show from \"../Data.Show/index.js\";\nimport * as Data_String_CodeUnits from \"../Data.String.CodeUnits/index.js\";\nimport * as Data_String_Common from \"../Data.String.Common/index.js\";\nimport * as Data_Tuple from \"../Data.Tuple/index.js\";\nimport * as Foliage_Common from \"../Foliage.Common/index.js\";\nimport * as Foliage_Program from \"../Foliage.Program/index.js\";\nimport * as Type_Proxy from \"../Type.Proxy/index.js\";\nimport * as Unsafe from \"../Unsafe/index.js\";\nvar fromHomogeneous = /* #__PURE__ */ Data_Homogeneous_Record.fromHomogeneous();\nvar map = /* #__PURE__ */ Data_Functor.map(Data_Homogeneous_Record.functorHomogeneous);\nvar homogeneous = /* #__PURE__ */ Data_Homogeneous_Record.homogeneous();\nvar map1 = /* #__PURE__ */ Data_Functor.map(Data_Either.functorEither);\nvar pure = /* #__PURE__ */ Control_Applicative.pure(Data_Either.applicativeEither);\nvar mempty = /* #__PURE__ */ Data_Monoid.mempty(Data_List_Types.monoidList);\nvar throwError = /* #__PURE__ */ Control_Monad_Error_Class.throwError(Control_Monad_Error_Class.monadThrowEither);\nvar bind = /* #__PURE__ */ Control_Bind.bind(Data_Either.bindEither);\nvar fromFoldable = /* #__PURE__ */ Data_Array.fromFoldable(Data_List_Types.foldableList);\nvar lookup = /* #__PURE__ */ Data_Map_Internal.lookup(Data_Ord.ordString);\nvar show = /* #__PURE__ */ Data_Show.show(Data_Show.showInt);\nvar fromFoldable1 = /* #__PURE__ */ Data_List.fromFoldable(Data_Foldable.foldableArray);\nvar eq = /* #__PURE__ */ Data_Eq.eq(Foliage_Program[\"_Eq_Name\"]);\nvar monadExceptT = /* #__PURE__ */ Control_Monad_Except_Trans.monadExceptT(Data_Identity.monadIdentity);\nvar bind1 = /* #__PURE__ */ Control_Bind.bind(/* #__PURE__ */ Control_Monad_Except_Trans.bindExceptT(monadExceptT));\nvar throwError1 = /* #__PURE__ */ Control_Monad_Error_Class.throwError(/* #__PURE__ */ Control_Monad_Except_Trans.monadThrowExceptT(monadExceptT));\nvar show1 = /* #__PURE__ */ Data_Show.show(Data_Show.showString);\nvar pure1 = /* #__PURE__ */ Control_Applicative.pure(/* #__PURE__ */ Control_Monad_Except_Trans.applicativeExceptT(monadExceptT));\nvar compare1 = /* #__PURE__ */ Data_Ord.compare(Data_Ord.ordInt);\nvar empty = /* #__PURE__ */ Control_Plus.empty(/* #__PURE__ */ Data_Map_Internal.plusMap(Foliage_Program[\"_Ord_Name\"]));\nvar show2 = /* #__PURE__ */ Data_Show.show(/* #__PURE__ */ Foliage_Program[\"_Show_Term\"](Foliage_Program[\"_Show_Name\"]));\nvar compare2 = /* #__PURE__ */ Data_Ord.compare(Data_Ord.ordString);\nvar intercalate = /* #__PURE__ */ Data_Array.intercalate(Data_Monoid.monoidString);\nvar mapFlipped = /* #__PURE__ */ Data_Functor.mapFlipped(Data_Functor.functorArray);\nvar fromFoldable2 = /* #__PURE__ */ Data_Map_Internal.fromFoldable(Foliage_Program[\"_Ord_Name\"])(Data_Foldable.foldableArray);\nvar map2 = /* #__PURE__ */ Data_Functor.map(Data_Functor.functorArray);\nvar pure2 = /* #__PURE__ */ Control_Applicative.pure(Control_Applicative.applicativeArray);\nvar Input = /* #__PURE__ */ (function () {\n    function Input(value0) {\n        this.value0 = value0;\n    };\n    Input.create = function (value0) {\n        return new Input(value0);\n    };\n    return Input;\n})();\nvar Grammar = /* #__PURE__ */ (function () {\n    function Grammar(value0) {\n        this.value0 = value0;\n    };\n    Grammar.create = function (value0) {\n        return new Grammar(value0);\n    };\n    return Grammar;\n})();\nvar pair = /* #__PURE__ */ (function () {\n    return Foliage_Program.PairTerm.create;\n})();\nvar name = /* #__PURE__ */ fromHomogeneous(/* #__PURE__ */ map(Foliage_Program.Name)(/* #__PURE__ */ homogeneous({\n    Int: \"Int\",\n    Index: \"Index\",\n    \"Symbol\": \"Symbol\",\n    Parse: \"Parse\",\n    \"String\": \"String\",\n    \"List String\": \"List String\",\n    joinStrings: \"joinStrings\"\n})));\nvar parse = function (sym) {\n    return function (str) {\n        return function (i) {\n            return function (j) {\n                return new Foliage_Program.Prop(name.Parse, pair(pair(new Foliage_Program.LiteralTerm(sym, new Foliage_Program.NamedDataType(name[\"String\"])))(str))(pair(i)(j)));\n            };\n        };\n    };\n};\nvar lex = /* #__PURE__ */ (function () {\n    return Foliage_Program.ProductLatticeType.create(Foliage_Program.FirstThenSecond_ProductLatticeTypeOrdering.value);\n})();\nvar from_StringList = function (v) {\n    if (v instanceof Foliage_Program.ConTerm && (v.value0 === \"cons\" && (v.value1 instanceof Foliage_Program.PairTerm && (v.value1.value0 instanceof Foliage_Program.LiteralTerm && (v.value1.value0.value1 instanceof Foliage_Program.NamedDataType && v.value1.value0.value1.value0 === \"String\"))))) {\n        return map1(Data_List_Types.Cons.create(v.value1.value0.value0))(from_StringList(v.value1.value1));\n    };\n    if (v instanceof Foliage_Program.ConTerm && (v.value0 === \"nil\" && v.value1 instanceof Foliage_Program.UnitTerm)) {\n        return pure(mempty);\n    };\n    return throwError(\"invalid\");\n};\nvar $$function = /* #__PURE__ */ (function () {\n    return fromHomogeneous(map(Foliage_Common.Opaque.create(Type_Proxy[\"Proxy\"].value))(homogeneous({\n        joinStrings: function (args) {\n            return bind(map1(fromFoldable)(Data_Maybe.maybe(throwError(\"did not find arg for parameter 'strs'\"))(from_StringList)(lookup(\"strs\")(args))))(function (strs) {\n                var $61 = Data_Array.length(strs) <= 2;\n                if ($61) {\n                    return pure(new Foliage_Program.LiteralTerm(Data_String_Common.joinWith(\"\")(strs), new Foliage_Program.NamedDataType(name[\"String\"])));\n                };\n                return pure(new Foliage_Program.LiteralTerm(\"[\" + (Data_String_Common.joinWith(\"\")(strs) + \"]\"), new Foliage_Program.NamedDataType(name[\"String\"])));\n            });\n        }\n    })));\n})();\nvar compileInput = function (v) {\n    return Data_Array.mapWithIndex(function (i) {\n        return function (s) {\n            return new Data_Tuple.Tuple(s + (\"#\" + show(i)), new Foliage_Program.Rule({\n                hypotheses: mempty,\n                conclusion: parse(s)(new Foliage_Program.LiteralTerm(s, new Foliage_Program.NamedDataType(name[\"String\"])))(new Foliage_Program.LiteralTerm(show(i), new Foliage_Program.NamedDataType(name.Int)))(new Foliage_Program.LiteralTerm(show(i + 1 | 0), new Foliage_Program.NamedDataType(name.Int)))\n            }));\n        };\n    })(v.value0);\n};\nvar compileGrammar = function (v) {\n    return Data_Array.mapWithIndex(function (i) {\n        return function (v1) {\n            return new Data_Tuple.Tuple(v1.value0 + (\"#\" + show(i)), (function () {\n                var res_var = new Foliage_Program.VarTerm(\"res\");\n                var make_str_var = function (j) {\n                    return new Foliage_Program.VarTerm(\"s\" + show(j));\n                };\n                var make_index_var = function (j) {\n                    return new Foliage_Program.VarTerm(\"j\" + show(j));\n                };\n                return new Foliage_Program.Rule({\n                    hypotheses: fromFoldable1(Unsafe.fromJust(\"impossible\")(Data_Array.modifyAt(Data_Array.length(v1.value1) - 1 | 0)(function (v2) {\n                        return new Foliage_Program.Hypothesis(v2.value0, [ new Foliage_Program.FunctionSideHypothesis({\n                            resultVarName: \"res\",\n                            functionName: name.joinStrings,\n                            args: [ Data_Array.foldr(function (h) {\n                                return function (t) {\n                                    return new Foliage_Program.ConTerm(\"cons\", pair(h)(t));\n                                };\n                            })(new Foliage_Program.ConTerm(\"nil\", Foliage_Program.UnitTerm.value))(Data_Array.mapWithIndex(function (k) {\n                                return function (v3) {\n                                    return make_str_var(k);\n                                };\n                            })(v1.value1)) ]\n                        }) ]);\n                    })(Data_Array.mapWithIndex(function (j) {\n                        return function (s) {\n                            return new Foliage_Program.Hypothesis(parse(s)(make_str_var(j))(make_index_var(j))(make_index_var(j + 1 | 0)), [  ]);\n                        };\n                    })(v1.value1)))),\n                    conclusion: parse(v1.value0)(res_var)(make_index_var(0))(make_index_var(Data_Array.length(v1.value1)))\n                });\n            })());\n        };\n    })(v.value0);\n};\nvar compare = /* #__PURE__ */ (function () {\n    return fromHomogeneous(map(Foliage_Common.Opaque.create(Type_Proxy[\"Proxy\"].value))(homogeneous({\n        Int: function (v) {\n            if (v.value0 instanceof Foliage_Program.LiteralTerm && (v.value0.value1 instanceof Foliage_Program.NamedDataType && (v.value1 instanceof Foliage_Program.LiteralTerm && (v.value1.value1 instanceof Foliage_Program.NamedDataType && (eq(v.value0.value1.value0)(name.Int) && eq(v.value1.value1.value0)(name.Int)))))) {\n                return bind1(Data_Maybe.maybe(throwError1({\n                    label: Foliage_Common[\"_error\"],\n                    source: \"compare.Int\",\n                    description: show1(v.value0.value0) + \" is not an Int\"\n                }))(pure1)(Data_Int.fromString(v.value0.value0)))(function (x1) {\n                    return bind1(Data_Maybe.maybe(throwError1({\n                        label: Foliage_Common[\"_error\"],\n                        source: \"compare.Int\",\n                        description: show1(v.value1.value0) + \" is not an Int\"\n                    }))(pure1)(Data_Int.fromString(v.value1.value0)))(function (x2) {\n                        return pure1(new Data_Tuple.Tuple(compare1(x1)(x2), empty));\n                    });\n                });\n            };\n            return throwError1({\n                label: Foliage_Common[\"_error\"],\n                source: \"compare.Int\",\n                description: \"inputs are not literal Ints: \" + (show2(v.value0) + (\", \" + show2(v.value1)))\n            });\n        },\n        \"String\": function (v) {\n            if (v.value0 instanceof Foliage_Program.LiteralTerm && (v.value0.value1 instanceof Foliage_Program.NamedDataType && (v.value1 instanceof Foliage_Program.LiteralTerm && (v.value1.value1 instanceof Foliage_Program.NamedDataType && (eq(v.value0.value1.value0)(name[\"String\"]) && eq(v.value1.value1.value0)(name[\"String\"])))))) {\n                return pure1(new Data_Tuple.Tuple(compare2(v.value0.value0)(v.value1.value0), empty));\n            };\n            return throwError1({\n                label: Foliage_Common[\"_error\"],\n                source: \"compare.String\",\n                description: \"inputs are not literal Strings: \" + (show2(v.value0) + (\", \" + show2(v.value1)))\n            });\n        }\n    })));\n})();\nvar make_parsing = function (label) {\n    return function (v) {\n        return function (v1) {\n            return Data_Lazy.defer(function (v2) {\n                return new Foliage_Program.Program({\n                    name: \"Parsing . \" + label,\n                    doc: new Data_Maybe.Just(intercalate(\"\\x0a\")(Data_Array.concat([ [ \"This program implements a parser for the following context-free grammar:\", \"\" ], mapFlipped(v.value0)(function (v3) {\n                        return \"    \" + (v3.value0 + (\" \\u2192 \" + intercalate(\"\")(v3.value1)));\n                    }), [ \"\", \"The input string is: \", \"\", \"    \" + intercalate(\"\")(v1.value0), \"\" ] ]))),\n                    modules: Data_Map_Internal.singleton(Foliage_Program.mainModuleName)(new Foliage_Program.Module({\n                        name: Foliage_Program.mainModuleName,\n                        doc: Data_Maybe.Nothing.value,\n                        initialGas: 40,\n                        dataTypeDefs: fromFoldable2([ new Data_Tuple.Tuple(name.Int, new Foliage_Program.ExternalDataTypeDef(\"Int\")), new Data_Tuple.Tuple(name[\"String\"], new Foliage_Program.ExternalDataTypeDef(\"String\")), new Data_Tuple.Tuple(name[\"List String\"], new Foliage_Program.ExternalDataTypeDef(\"List String\")) ]),\n                        latticeTypeDefs: fromFoldable2([ new Data_Tuple.Tuple(name.Int, new Foliage_Program.ExternalLatticeTypeDef({\n                            name: \"Int\",\n                            compare_impl: compare.Int\n                        })), new Data_Tuple.Tuple(name[\"String\"], new Foliage_Program.ExternalLatticeTypeDef({\n                            name: \"String\",\n                            compare_impl: compare[\"String\"]\n                        })), new Data_Tuple.Tuple(name.Index, new Foliage_Program.LatticeTypeDef(new Foliage_Program.DiscreteLatticeType(new Foliage_Program.NamedLatticeType(name.Int)))), new Data_Tuple.Tuple(name[\"Symbol\"], new Foliage_Program.LatticeTypeDef(new Foliage_Program.DiscreteLatticeType(new Foliage_Program.NamedLatticeType(name[\"String\"])))) ]),\n                        functionDefs: fromFoldable2([ new Data_Tuple.Tuple(name.joinStrings, new Foliage_Program.ExternalFunctionDef({\n                            name: \"joinStrings\",\n                            inputs: [ new Data_Tuple.Tuple(\"strs\", new Foliage_Program.NamedDataType(name[\"List String\"])) ],\n                            output: new Foliage_Program.NamedDataType(name[\"String\"]),\n                            impl: $$function.joinStrings\n                        })) ]),\n                        relations: fromFoldable2([ new Data_Tuple.Tuple(name.Parse, new Foliage_Program.Relation({\n                            domain: lex(lex(new Foliage_Program.NamedLatticeType(name[\"Symbol\"]))(new Foliage_Program.NamedLatticeType(name[\"Symbol\"])))(lex(new Foliage_Program.NamedLatticeType(name.Index))(new Foliage_Program.NamedLatticeType(name.Index)))\n                        })) ]),\n                        rules: fromFoldable2(Data_Array.concat([ compileGrammar(v), compileInput(v1) ]))\n                    }))\n                });\n            });\n        };\n    };\n};\nvar nat = /* #__PURE__ */ (function () {\n    return make_parsing(\"Nat\")(new Grammar([ new Data_Tuple.Tuple(\"N\", [ \"S\", \"N\" ]), new Data_Tuple.Tuple(\"N\", [ \"Z\" ]) ]))(new Input(map2(function ($102) {\n        return Data_String_CodeUnits.fromCharArray(pure2($102));\n    })(Data_String_CodeUnits.toCharArray(\"SSSZ\"))));\n})();\nvar binary_tree = /* #__PURE__ */ (function () {\n    return make_parsing(\"Binary Tree\")(new Grammar([ new Data_Tuple.Tuple(\"A\", [ \"(\", \"A\", \"A\", \")\" ]), new Data_Tuple.Tuple(\"A\", [ \"\\u2022\" ]) ]))(new Input(map2(function ($103) {\n        return Data_String_CodeUnits.fromCharArray(pure2($103));\n    })(Data_String_CodeUnits.toCharArray(\"((\\u2022\\u2022)(\\u2022\\u2022))\"))));\n})();\nvar ambiguous = /* #__PURE__ */ (function () {\n    return make_parsing(\"Ambiguous\")(new Grammar([ new Data_Tuple.Tuple(\"Term\", [ \"Term\", \"+\", \"Term\" ]), new Data_Tuple.Tuple(\"Term\", [ \"x\" ]), new Data_Tuple.Tuple(\"Term\", [ \"y\" ]), new Data_Tuple.Tuple(\"Term\", [ \"z\" ]) ]))(new Input(map2(function ($104) {\n        return Data_String_CodeUnits.fromCharArray(pure2($104));\n    })(Data_String_CodeUnits.toCharArray(\"x+y+z\"))));\n})();\nvar abc = /* #__PURE__ */ (function () {\n    return make_parsing(\"ABC\")(new Grammar([ new Data_Tuple.Tuple(\"A\", [ \"a\", \"b\", \"c\" ]) ]))(new Input(map2(function ($105) {\n        return Data_String_CodeUnits.fromCharArray(pure2($105));\n    })(Data_String_CodeUnits.toCharArray(\"abc\"))));\n})();\nexport {\n    abc,\n    nat,\n    ambiguous,\n    binary_tree,\n    name,\n    from_StringList,\n    $$function as function,\n    compare,\n    make_parsing,\n    lex,\n    pair,\n    parse,\n    Grammar,\n    compileGrammar,\n    Input,\n    compileInput\n};\n", "// Generated by purs version 0.15.15\nimport * as Data_Tuple from \"../Data.Tuple/index.js\";\nimport * as Foliage_Example_Blank from \"../Foliage.Example.Blank/index.js\";\nimport * as Foliage_Example_Dijkstra from \"../Foliage.Example.Dijkstra/index.js\";\nimport * as Foliage_Example_Parsing from \"../Foliage.Example.Parsing/index.js\";\nvar examples = /* #__PURE__ */ (function () {\n    return [ new Data_Tuple.Tuple(\"Blank\", Foliage_Example_Blank.blank), new Data_Tuple.Tuple(\"Dijkstra . Diamond\", Foliage_Example_Dijkstra.diamond), new Data_Tuple.Tuple(\"Dijkstra . Cycle\", Foliage_Example_Dijkstra.cycle), new Data_Tuple.Tuple(\"Parsing . ABC\", Foliage_Example_Parsing.abc), new Data_Tuple.Tuple(\"Parsing . Nat\", Foliage_Example_Parsing.nat), new Data_Tuple.Tuple(\"Parsing . Binary Tree\", Foliage_Example_Parsing.binary_tree), new Data_Tuple.Tuple(\"Parsing . Ambiguous\", Foliage_Example_Parsing.ambiguous) ];\n})();\nexport {\n    examples\n};\n", "// Generated by purs version 0.15.15\nimport * as Control_Applicative from \"../Control.Applicative/index.js\";\nimport * as Control_Bind from \"../Control.Bind/index.js\";\nimport * as Control_Monad_State_Class from \"../Control.Monad.State.Class/index.js\";\nimport * as Data_Array from \"../Data.Array/index.js\";\nimport * as Data_Functor from \"../Data.Functor/index.js\";\nimport * as Data_Lazy from \"../Data.Lazy/index.js\";\nimport * as Data_Map_Internal from \"../Data.Map.Internal/index.js\";\nimport * as Data_Maybe from \"../Data.Maybe/index.js\";\nimport * as Data_Ord from \"../Data.Ord/index.js\";\nimport * as Data_Semigroup from \"../Data.Semigroup/index.js\";\nimport * as Data_Tuple from \"../Data.Tuple/index.js\";\nimport * as Effect_Aff from \"../Effect.Aff/index.js\";\nimport * as Effect_Class_Console from \"../Effect.Class.Console/index.js\";\nimport * as Foliage_App_ComponentLibrary_DropdownMenu from \"../Foliage.App.ComponentLibrary.DropdownMenu/index.js\";\nimport * as Foliage_App_Rendering from \"../Foliage.App.Rendering/index.js\";\nimport * as Foliage_App_Style from \"../Foliage.App.Style/index.js\";\nimport * as Foliage_Example from \"../Foliage.Example/index.js\";\nimport * as Foliage_Program from \"../Foliage.Program/index.js\";\nimport * as Halogen_Component from \"../Halogen.Component/index.js\";\nimport * as Halogen_HTML from \"../Halogen.HTML/index.js\";\nimport * as Halogen_HTML_Core from \"../Halogen.HTML.Core/index.js\";\nimport * as Halogen_HTML_Elements from \"../Halogen.HTML.Elements/index.js\";\nimport * as Halogen_HTML_Events from \"../Halogen.HTML.Events/index.js\";\nimport * as Halogen_Query_HalogenM from \"../Halogen.Query.HalogenM/index.js\";\nimport * as Type_Proxy from \"../Type.Proxy/index.js\";\nvar discard = /* #__PURE__ */ Control_Bind.discard(Control_Bind.discardUnit)(Halogen_Query_HalogenM.bindHalogenM);\nvar modify_ = /* #__PURE__ */ Control_Monad_State_Class.modify_(Halogen_Query_HalogenM.monadStateHalogenM);\nvar append = /* #__PURE__ */ Data_Semigroup.append(Data_Semigroup.semigroupArray);\nvar slot = /* #__PURE__ */ Halogen_HTML.slot()({\n    reflectSymbol: function () {\n        return \"dropdown\";\n    }\n})(Data_Ord.ordString);\nvar component1 = /* #__PURE__ */ Foliage_App_ComponentLibrary_DropdownMenu.component(Effect_Aff.monadEffectAff);\nvar mapFlipped = /* #__PURE__ */ Data_Functor.mapFlipped(Data_Functor.functorArray);\nvar map = /* #__PURE__ */ Data_Functor.map(Data_Functor.functorArray);\nvar render = /* #__PURE__ */ Foliage_App_Rendering.render(Foliage_App_Rendering[\"_Render_Program\"]);\nvar bind = /* #__PURE__ */ Control_Bind.bind(Halogen_Query_HalogenM.bindHalogenM);\nvar get = /* #__PURE__ */ Control_Monad_State_Class.get(Halogen_Query_HalogenM.monadStateHalogenM);\nvar pure = /* #__PURE__ */ Control_Applicative.pure(Halogen_Query_HalogenM.applicativeHalogenM);\nvar log = /* #__PURE__ */ Effect_Class_Console.log(/* #__PURE__ */ Halogen_Query_HalogenM.monadEffectHalogenM(Effect_Aff.monadEffectAff));\nvar GetProgram = /* #__PURE__ */ (function () {\n    function GetProgram(value0) {\n        this.value0 = value0;\n    };\n    GetProgram.create = function (value0) {\n        return new GetProgram(value0);\n    };\n    return GetProgram;\n})();\nvar UpdatedProgram = /* #__PURE__ */ (function () {\n    function UpdatedProgram(value0) {\n        this.value0 = value0;\n    };\n    UpdatedProgram.create = function (value0) {\n        return new UpdatedProgram(value0);\n    };\n    return UpdatedProgram;\n})();\nvar SetProgram = /* #__PURE__ */ (function () {\n    function SetProgram(value0) {\n        this.value0 = value0;\n    };\n    SetProgram.create = function (value0) {\n        return new SetProgram(value0);\n    };\n    return SetProgram;\n})();\nvar component = /* #__PURE__ */ (function () {\n    var set_program = function (program) {\n        return discard(modify_(function (v) {\n            var $24 = {};\n            for (var $25 in v) {\n                if ({}.hasOwnProperty.call(v, $25)) {\n                    $24[$25] = v[$25];\n                };\n            };\n            $24.program = program;\n            return $24;\n        }))(function () {\n            return Halogen_Query_HalogenM.raise(new UpdatedProgram(program));\n        });\n    };\n    var render1 = function (state) {\n        return Halogen_HTML_Elements.div([ Foliage_App_Style.style(append(Foliage_App_Style.font_code)(append(Foliage_App_Style.flex_column)([ \"gap: 1.0em\" ]))) ])(Data_Array.concat([ [ Halogen_HTML_Elements.div([ Foliage_App_Style.style(Foliage_App_Style.flex_row) ])((function () {\n            var button = function (onClick) {\n                return function (label) {\n                    return Halogen_HTML_Elements.div([  ])([ Halogen_HTML_Elements.button([ Halogen_HTML_Events.onClick(onClick), Foliage_App_Style.style(Foliage_App_Style.button) ])([ Halogen_HTML_Core.text(label) ]) ]);\n                };\n            };\n            return [ slot(Type_Proxy[\"Proxy\"].value)(\"examples\")(component1)({\n                title: Halogen_HTML_Elements.div([ Foliage_App_Style.style(Foliage_App_Style.button) ])([ Halogen_HTML_Core.text(\"Examples\") ]),\n                items: (function () {\n                    var label = function (str) {\n                        return Halogen_HTML_Elements.div([ Foliage_App_Style.style(append(Foliage_App_Style.button_secondary)([ \"width: 20em\" ])) ])([ Halogen_HTML_Core.text(str) ]);\n                    };\n                    return mapFlipped(Foliage_Example.examples)(function (v) {\n                        return new Data_Tuple.Tuple(label(v.value0), v.value1);\n                    });\n                })()\n            })(function ($38) {\n                return SetProgram.create(Data_Lazy.force($38));\n            }) ];\n        })()) ], (function () {\n            if (state.load_error instanceof Data_Maybe.Nothing) {\n                return [  ];\n            };\n            if (state.load_error instanceof Data_Maybe.Just) {\n                return [ Halogen_HTML_Elements.div([ Foliage_App_Style.style(Foliage_App_Style.color_error) ])([ Halogen_HTML_Core.text(state.load_error.value0) ]) ];\n            };\n            throw new Error(\"Failed pattern match at Foliage.App.Editor.Component (line 148, column 13 - line 150, column 89): \" + [ state.load_error.constructor.name ]);\n        })(), [ Halogen_HTML_Elements.div([ Foliage_App_Style.style(append(Foliage_App_Style.flex_column)([ \"overflow: scroll\" ])) ])(map(Halogen_HTML.fromPlainHTML)(render(state.program))) ] ]));\n    };\n    var initialState = function (input) {\n        return {\n            program: Data_Maybe.fromMaybe(new Foliage_Program.Program({\n                name: \"Main\",\n                doc: Data_Maybe.Nothing.value,\n                modules: Data_Map_Internal.singleton(Foliage_Program.mainModuleName)(new Foliage_Program.Module({\n                    name: Foliage_Program.mainModuleName,\n                    doc: Data_Maybe.Nothing.value,\n                    initialGas: 40,\n                    dataTypeDefs: Data_Map_Internal.empty,\n                    latticeTypeDefs: Data_Map_Internal.empty,\n                    functionDefs: Data_Map_Internal.empty,\n                    relations: Data_Map_Internal.empty,\n                    rules: Data_Map_Internal.empty\n                }))\n            }))(input.program),\n            load_error: Data_Maybe.Nothing.value\n        };\n    };\n    var handleQuery = function (v) {\n        return bind(get)(function (v1) {\n            return pure(new Data_Maybe.Just(v.value0(v1.program)));\n        });\n    };\n    var handleAction = function (v) {\n        return discard(log(\"[Editor.SetProgram]\"))(function () {\n            return set_program(v.value0);\n        });\n    };\n    var $$eval = Halogen_Component.mkEval({\n        receive: Halogen_Component.defaultEval.receive,\n        initialize: Halogen_Component.defaultEval.initialize,\n        finalize: Halogen_Component.defaultEval.finalize,\n        handleAction: handleAction,\n        handleQuery: handleQuery\n    });\n    return Halogen_Component.mkComponent({\n        initialState: initialState,\n        \"eval\": $$eval,\n        render: render1\n    });\n})();\nexport {\n    GetProgram,\n    UpdatedProgram,\n    SetProgram,\n    component\n};\n", "// Generated by purs version 0.15.15\nimport * as Control_Applicative from \"../Control.Applicative/index.js\";\nimport * as Control_Bind from \"../Control.Bind/index.js\";\nimport * as Control_Monad_State_Class from \"../Control.Monad.State.Class/index.js\";\nimport * as Data_Array from \"../Data.Array/index.js\";\nimport * as Data_Foldable from \"../Data.Foldable/index.js\";\nimport * as Data_Function from \"../Data.Function/index.js\";\nimport * as Data_Functor from \"../Data.Functor/index.js\";\nimport * as Data_List_Types from \"../Data.List.Types/index.js\";\nimport * as Data_Map_Internal from \"../Data.Map.Internal/index.js\";\nimport * as Data_Maybe from \"../Data.Maybe/index.js\";\nimport * as Data_Semigroup from \"../Data.Semigroup/index.js\";\nimport * as Data_Show from \"../Data.Show/index.js\";\nimport * as Foliage_App_Rendering from \"../Foliage.App.Rendering/index.js\";\nimport * as Foliage_App_Style from \"../Foliage.App.Style/index.js\";\nimport * as Foliage_Common from \"../Foliage.Common/index.js\";\nimport * as Foliage_Program from \"../Foliage.Program/index.js\";\nimport * as Halogen_Component from \"../Halogen.Component/index.js\";\nimport * as Halogen_HTML from \"../Halogen.HTML/index.js\";\nimport * as Halogen_HTML_Core from \"../Halogen.HTML.Core/index.js\";\nimport * as Halogen_HTML_Elements from \"../Halogen.HTML.Elements/index.js\";\nimport * as Halogen_HTML_Events from \"../Halogen.HTML.Events/index.js\";\nimport * as Halogen_Query_HalogenM from \"../Halogen.Query.HalogenM/index.js\";\nvar append = /* #__PURE__ */ Data_Semigroup.append(Data_Semigroup.semigroupArray);\nvar fromFoldable = /* #__PURE__ */ Data_Array.fromFoldable(Data_List_Types.foldableList);\nvar map = /* #__PURE__ */ Data_Functor.map(Data_List_Types.functorList);\nvar render = /* #__PURE__ */ Foliage_App_Rendering.render(Foliage_App_Rendering[\"_Render_Prop\"]);\nvar fold = /* #__PURE__ */ Data_Foldable.fold(Data_List_Types.foldableList)(Data_List_Types.monoidList);\nvar render1 = /* #__PURE__ */ Foliage_App_Rendering.render(Foliage_App_Rendering[\"_Render_Rule\"]);\nvar show = /* #__PURE__ */ Data_Show.show(/* #__PURE__ */ Foliage_Common[\"_Show_Exc\"]({\n    reflectSymbol: function () {\n        return \"error\";\n    }\n}));\nvar discard = /* #__PURE__ */ Control_Bind.discard(Control_Bind.discardUnit)(Halogen_Query_HalogenM.bindHalogenM);\nvar modify_ = /* #__PURE__ */ Control_Monad_State_Class.modify_(Halogen_Query_HalogenM.monadStateHalogenM);\nvar pure = /* #__PURE__ */ Control_Applicative.pure(Halogen_Query_HalogenM.applicativeHalogenM);\nvar OkResult = /* #__PURE__ */ (function () {\n    function OkResult(value0) {\n        this.value0 = value0;\n    };\n    OkResult.create = function (value0) {\n        return new OkResult(value0);\n    };\n    return OkResult;\n})();\nvar PendingResult = /* #__PURE__ */ (function () {\n    function PendingResult() {\n\n    };\n    PendingResult.value = new PendingResult();\n    return PendingResult;\n})();\nvar ErrResult = /* #__PURE__ */ (function () {\n    function ErrResult(value0) {\n        this.value0 = value0;\n    };\n    ErrResult.create = function (value0) {\n        return new ErrResult(value0);\n    };\n    return ErrResult;\n})();\nvar SetResult = /* #__PURE__ */ (function () {\n    function SetResult(value0, value1) {\n        this.value0 = value0;\n        this.value1 = value1;\n    };\n    SetResult.create = function (value0) {\n        return function (value1) {\n            return new SetResult(value0, value1);\n        };\n    };\n    return SetResult;\n})();\nvar SetIntermediateEnv = /* #__PURE__ */ (function () {\n    function SetIntermediateEnv(value0, value1) {\n        this.value0 = value0;\n        this.value1 = value1;\n    };\n    SetIntermediateEnv.create = function (value0) {\n        return function (value1) {\n            return new SetIntermediateEnv(value0, value1);\n        };\n    };\n    return SetIntermediateEnv;\n})();\nvar Ran = /* #__PURE__ */ (function () {\n    function Ran() {\n\n    };\n    Ran.value = new Ran();\n    return Ran;\n})();\nvar Run = /* #__PURE__ */ (function () {\n    function Run() {\n\n    };\n    Run.value = new Run();\n    return Run;\n})();\nvar component = /* #__PURE__ */ (function () {\n    var renderEnv = function (v) {\n        return [ Halogen_HTML_Elements.div([ Foliage_App_Style.style(Foliage_App_Style.flex_column) ])(Data_Array.concat([ append([ Halogen_HTML_Elements.div([ Foliage_App_Style.style(Foliage_App_Style.bold) ])([ Halogen_HTML_Core.text(\"known_props\") ]) ])(fromFoldable(map(function ($51) {\n            return Halogen_HTML.fromPlainHTML(Halogen_HTML_Elements.span_(Foliage_App_Rendering.line(render($51))));\n        })(fold(Data_Map_Internal.values(v.known_props))))), append([ Halogen_HTML_Elements.div([ Foliage_App_Style.style(Foliage_App_Style.bold) ])([ Halogen_HTML_Core.text(\"active_props\") ]) ])(fromFoldable(map(function (v1) {\n            return Halogen_HTML_Elements.div([ Foliage_App_Style.style(Foliage_App_Style.flex_row) ])([ Halogen_HTML_Elements.div([  ])([ Halogen_HTML_Core.text(\"[new:\" + ((function () {\n                if (v1.isNew) {\n                    return \"T\";\n                };\n                return \"F\";\n            })() + \"]\")) ]), Halogen_HTML.fromPlainHTML(Halogen_HTML_Elements.div([  ])(Foliage_App_Rendering.line(render(v1.prop)))) ]);\n        })(v.active_props))), append([ Halogen_HTML_Elements.div([ Foliage_App_Style.style(Foliage_App_Style.bold) ])([ Halogen_HTML_Core.text(\"ripe_rules\") ]) ])(fromFoldable(map((function () {\n            var $52 = Halogen_HTML_Elements.div([ Foliage_App_Style.style(Foliage_App_Style.flex_column) ]);\n            var $53 = map((function () {\n                var $55 = Halogen_HTML_Elements.div([ Foliage_App_Style.style(append(Foliage_App_Style.margin_small)(append(Foliage_App_Style.padding_small)(Foliage_App_Style.boundaries))) ]);\n                return function ($56) {\n                    return Halogen_HTML.fromPlainHTML($55(Foliage_App_Rendering.line(render1(Foliage_Program.from_RipeRule_to_Rule($56)))));\n                };\n            })());\n            return function ($54) {\n                return $52(fromFoldable($53($54)));\n            };\n        })())(Data_Map_Internal.values(v.ripe_rules)))) ])) ];\n    };\n    var render2 = function (state) {\n        return Halogen_HTML_Elements.div([ Foliage_App_Style.style(append(Foliage_App_Style.font_code)(append(Foliage_App_Style.flex_column)([ \"gap: 1.0em\" ]))) ])(Data_Array.concat([ [ Halogen_HTML_Elements.div([  ])([ Halogen_HTML_Elements.div([ Foliage_App_Style.style(Foliage_App_Style.flex_row) ])([ Halogen_HTML_Elements.div([  ])([ Halogen_HTML_Elements.button([ Halogen_HTML_Events.onClick(Data_Function[\"const\"](Run.value)), Foliage_App_Style.style(Foliage_App_Style.button) ])([ Halogen_HTML_Core.text(\"Run\") ]) ]) ]) ]) ], [ Halogen_HTML_Elements.div([ Foliage_App_Style.style(append(Foliage_App_Style.font_code)(append(Foliage_App_Style.flex_column)([ \"overflow: scroll\" ]))) ])((function () {\n            if (state.intermediate_env instanceof Data_Maybe.Just) {\n                return renderEnv(state.intermediate_env.value0);\n            };\n            if (state.intermediate_env instanceof Data_Maybe.Nothing) {\n                if (state.result instanceof Data_Maybe.Nothing) {\n                    return [  ];\n                };\n                if (state.result instanceof Data_Maybe.Just && state.result.value0 instanceof ErrResult) {\n                    if (state.result.value0.value0.env instanceof Data_Maybe.Nothing) {\n                        return [ Halogen_HTML_Core.text(show(state.result.value0.value0.err)) ];\n                    };\n                    if (state.result.value0.value0.env instanceof Data_Maybe.Just) {\n                        return append(renderEnv(state.result.value0.value0.env.value0))([ Halogen_HTML_Core.text(show(state.result.value0.value0.err)) ]);\n                    };\n                    throw new Error(\"Failed pattern match at Foliage.App.Viewer.Component (line 127, column 43 - line 129, column 76): \" + [ state.result.value0.value0.env.constructor.name ]);\n                };\n                if (state.result instanceof Data_Maybe.Just && state.result.value0 instanceof PendingResult) {\n                    return [ Halogen_HTML_Elements.div([ Foliage_App_Style.style(Foliage_App_Style.font_prose) ])([ Halogen_HTML_Core.text(\"running...\") ]) ];\n                };\n                if (state.result instanceof Data_Maybe.Just && state.result.value0 instanceof OkResult) {\n                    return renderEnv(state.result.value0.value0.env);\n                };\n                throw new Error(\"Failed pattern match at Foliage.App.Viewer.Component (line 125, column 28 - line 134, column 59): \" + [ state.result.constructor.name ]);\n            };\n            throw new Error(\"Failed pattern match at Foliage.App.Viewer.Component (line 123, column 103 - line 134, column 59): \" + [ state.intermediate_env.constructor.name ]);\n        })()) ] ]));\n    };\n    var initialState = function (_input) {\n        return {\n            result: Data_Maybe.Nothing.value,\n            intermediate_env: Data_Maybe.Nothing.value\n        };\n    };\n    var handleQuery = function (v) {\n        if (v instanceof SetResult) {\n            return discard(modify_(function (v1) {\n                var $40 = {};\n                for (var $41 in v1) {\n                    if ({}.hasOwnProperty.call(v1, $41)) {\n                        $40[$41] = v1[$41];\n                    };\n                };\n                $40.result = v.value0;\n                return $40;\n            }))(function () {\n                return pure(new Data_Maybe.Just(v.value1));\n            });\n        };\n        if (v instanceof SetIntermediateEnv) {\n            return discard(modify_(function (v1) {\n                var $45 = {};\n                for (var $46 in v1) {\n                    if ({}.hasOwnProperty.call(v1, $46)) {\n                        $45[$46] = v1[$46];\n                    };\n                };\n                $45.intermediate_env = v.value0;\n                return $45;\n            }))(function () {\n                return pure(new Data_Maybe.Just(v.value1));\n            });\n        };\n        throw new Error(\"Failed pattern match at Foliage.App.Viewer.Component (line 61, column 17 - line 67, column 20): \" + [ v.constructor.name ]);\n    };\n    var handleAction = function (v) {\n        return Halogen_Query_HalogenM.raise(Ran.value);\n    };\n    var $$eval = Halogen_Component.mkEval({\n        receive: Halogen_Component.defaultEval.receive,\n        initialize: Halogen_Component.defaultEval.initialize,\n        finalize: Halogen_Component.defaultEval.finalize,\n        handleQuery: handleQuery,\n        handleAction: handleAction\n    });\n    return Halogen_Component.mkComponent({\n        initialState: initialState,\n        \"eval\": $$eval,\n        render: render2\n    });\n})();\nexport {\n    SetResult,\n    SetIntermediateEnv,\n    OkResult,\n    PendingResult,\n    ErrResult,\n    Ran,\n    Run,\n    component\n};\n", "// Generated by purs version 0.15.15\nimport * as Data_Const from \"../Data.Const/index.js\";\nimport * as Data_Either from \"../Data.Either/index.js\";\nimport * as Data_Monoid from \"../Data.Monoid/index.js\";\nimport * as Data_Newtype from \"../Data.Newtype/index.js\";\nimport * as Data_Semigroup from \"../Data.Semigroup/index.js\";\nimport * as Data_Tuple from \"../Data.Tuple/index.js\";\nvar alaF = /* #__PURE__ */ Data_Newtype.alaF()()()();\nvar Forget = function (x) {\n    return x;\n};\nvar semigroupForget = function (dictSemigroup) {\n    return Data_Semigroup.semigroupFn(dictSemigroup);\n};\nvar profunctorForget = {\n    dimap: function (f) {\n        return function (v) {\n            return function (v1) {\n                return function ($36) {\n                    return v1(f($36));\n                };\n            };\n        };\n    }\n};\nvar strongForget = {\n    first: function (v) {\n        return function ($37) {\n            return v(Data_Tuple.fst($37));\n        };\n    },\n    second: function (v) {\n        return function ($38) {\n            return v(Data_Tuple.snd($38));\n        };\n    },\n    Profunctor0: function () {\n        return profunctorForget;\n    }\n};\nvar newtypeForget = {\n    Coercible0: function () {\n        return undefined;\n    }\n};\nvar monoidForget = function (dictMonoid) {\n    return Data_Monoid.monoidFn(dictMonoid);\n};\nvar cochoiceForget = {\n    unleft: function (v) {\n        return function ($39) {\n            return v(Data_Either.Left.create($39));\n        };\n    },\n    unright: function (v) {\n        return function ($40) {\n            return v(Data_Either.Right.create($40));\n        };\n    },\n    Profunctor0: function () {\n        return profunctorForget;\n    }\n};\nvar choiceForget = function (dictMonoid) {\n    var mempty = Data_Monoid.mempty(Data_Monoid.monoidFn(dictMonoid));\n    return {\n        left: function (v) {\n            return Data_Either.either(v)(mempty);\n        },\n        right: function (v) {\n            return Data_Either.either(mempty)(v);\n        },\n        Profunctor0: function () {\n            return profunctorForget;\n        }\n    };\n};\nvar wanderForget = function (dictMonoid) {\n    var applicativeConst = Data_Const.applicativeConst(dictMonoid);\n    var choiceForget1 = choiceForget(dictMonoid);\n    return {\n        wander: function (f) {\n            return function (v) {\n                return alaF(Data_Const.Const)(f(applicativeConst))(v);\n            };\n        },\n        Strong0: function () {\n            return strongForget;\n        },\n        Choice1: function () {\n            return choiceForget1;\n        }\n    };\n};\nexport {\n    Forget,\n    newtypeForget,\n    semigroupForget,\n    monoidForget,\n    profunctorForget,\n    choiceForget,\n    strongForget,\n    cochoiceForget,\n    wanderForget\n};\n", "// Generated by purs version 0.15.15\nimport * as Control_Semigroupoid from \"../Control.Semigroupoid/index.js\";\nimport * as Data_Functor from \"../Data.Functor/index.js\";\nimport * as Data_Profunctor from \"../Data.Profunctor/index.js\";\nimport * as Data_Tuple from \"../Data.Tuple/index.js\";\nvar strongFn = {\n    first: function (a2b) {\n        return function (v) {\n            return new Data_Tuple.Tuple(a2b(v.value0), v.value1);\n        };\n    },\n    second: /* #__PURE__ */ Data_Functor.map(Data_Tuple.functorTuple),\n    Profunctor0: function () {\n        return Data_Profunctor.profunctorFn;\n    }\n};\nvar second = function (dict) {\n    return dict.second;\n};\nvar first = function (dict) {\n    return dict.first;\n};\nvar splitStrong = function (dictSemigroupoid) {\n    var composeFlipped = Control_Semigroupoid.composeFlipped(dictSemigroupoid);\n    return function (dictStrong) {\n        var first1 = first(dictStrong);\n        var second1 = second(dictStrong);\n        return function (l) {\n            return function (r) {\n                return composeFlipped(first1(l))(second1(r));\n            };\n        };\n    };\n};\nvar fanout = function (dictSemigroupoid) {\n    var splitStrong1 = splitStrong(dictSemigroupoid);\n    return function (dictStrong) {\n        var lcmap = Data_Profunctor.lcmap(dictStrong.Profunctor0());\n        var splitStrong2 = splitStrong1(dictStrong);\n        return function (l) {\n            return function (r) {\n                return lcmap(function (a) {\n                    return new Data_Tuple.Tuple(a, a);\n                })(splitStrong2(l)(r));\n            };\n        };\n    };\n};\nexport {\n    first,\n    second,\n    splitStrong,\n    fanout,\n    strongFn\n};\n", "// Generated by purs version 0.15.15\nimport * as Control_Category from \"../Control.Category/index.js\";\nimport * as Control_Monad_State_Class from \"../Control.Monad.State.Class/index.js\";\nimport * as Control_Semigroupoid from \"../Control.Semigroupoid/index.js\";\nimport * as Data_Lens_Types from \"../Data.Lens.Types/index.js\";\nimport * as Data_Newtype from \"../Data.Newtype/index.js\";\nimport * as Data_Profunctor_Strong from \"../Data.Profunctor.Strong/index.js\";\nvar unwrap = /* #__PURE__ */ Data_Newtype.unwrap();\nvar identity = /* #__PURE__ */ Control_Category.identity(Control_Category.categoryFn);\nvar fanout = /* #__PURE__ */ Data_Profunctor_Strong.fanout(Control_Semigroupoid.semigroupoidFn)(Data_Profunctor_Strong.strongFn);\nvar view = function (l) {\n    return unwrap(l(identity));\n};\nvar viewOn = function (s) {\n    return function (l) {\n        return view(l)(s);\n    };\n};\nvar use = function (dictMonadState) {\n    var gets = Control_Monad_State_Class.gets(dictMonadState);\n    return function (p) {\n        return gets(function (v) {\n            return viewOn(v)(p);\n        });\n    };\n};\nvar to = function (f) {\n    return function (p) {\n        var $10 = unwrap(p);\n        return function ($11) {\n            return $10(f($11));\n        };\n    };\n};\nvar takeBoth = function (l) {\n    return function (r) {\n        return to(fanout(view(l))(view(r)));\n    };\n};\nvar iview = function (l) {\n    return unwrap(l(identity));\n};\nvar iuse = function (dictMonadState) {\n    var gets = Control_Monad_State_Class.gets(dictMonadState);\n    return function (p) {\n        return gets(iview(p));\n    };\n};\nvar cloneGetter = function (g) {\n    return to(view(g));\n};\nexport {\n    viewOn,\n    view,\n    to,\n    takeBoth,\n    use,\n    iview,\n    iuse,\n    cloneGetter\n};\nexport {\n    Indexed\n} from \"../Data.Lens.Types/index.js\";\n", "// Generated by purs version 0.15.15\nimport * as Control_Apply from \"../Control.Apply/index.js\";\nimport * as Control_Category from \"../Control.Category/index.js\";\nimport * as Data_Lens_Internal_Indexed from \"../Data.Lens.Internal.Indexed/index.js\";\nimport * as Data_Lens_Internal_Shop from \"../Data.Lens.Internal.Shop/index.js\";\nimport * as Data_Lens_Types from \"../Data.Lens.Types/index.js\";\nimport * as Data_Newtype from \"../Data.Newtype/index.js\";\nimport * as Data_Profunctor from \"../Data.Profunctor/index.js\";\nimport * as Data_Profunctor_Strong from \"../Data.Profunctor.Strong/index.js\";\nimport * as Data_Tuple from \"../Data.Tuple/index.js\";\nvar identity = /* #__PURE__ */ Control_Category.identity(Control_Category.categoryFn);\nvar lift2 = /* #__PURE__ */ Control_Apply.lift2(Control_Apply.applyFn);\nvar un = /* #__PURE__ */ Data_Newtype.un();\nvar withLens = function (l) {\n    return function (f) {\n        var v = l(new Data_Lens_Internal_Shop.Shop(identity, function (v1) {\n            return function (b) {\n                return b;\n            };\n        }));\n        return f(v.value0)(v.value1);\n    };\n};\nvar withIndexedLens = function (l) {\n    return function (f) {\n        var v = l(new Data_Lens_Internal_Shop.Shop(identity, function (v1) {\n            return function (b) {\n                return b;\n            };\n        }));\n        return f(v.value0)(v.value1);\n    };\n};\nvar lensStore = function (l) {\n    return withLens(l)(lift2(Data_Tuple.Tuple.create));\n};\nvar lens$prime = function (to) {\n    return function (dictStrong) {\n        var dimap = Data_Profunctor.dimap(dictStrong.Profunctor0());\n        var first = Data_Profunctor_Strong.first(dictStrong);\n        return function (pab) {\n            return dimap(to)(function (v) {\n                return v.value1(v.value0);\n            })(first(pab));\n        };\n    };\n};\nvar lens = function (get) {\n    return function (set) {\n        return function (dictStrong) {\n            return lens$prime(function (s) {\n                return new Data_Tuple.Tuple(get(s), function (b) {\n                    return set(s)(b);\n                });\n            })(dictStrong);\n        };\n    };\n};\nvar ilens$prime = function (to) {\n    return function (dictStrong) {\n        var dimap = Data_Profunctor.dimap(dictStrong.Profunctor0());\n        var first = Data_Profunctor_Strong.first(dictStrong);\n        return function (pab) {\n            return dimap(to)(function (v) {\n                return v.value1(v.value0);\n            })(first(un(Data_Lens_Internal_Indexed.Indexed)(pab)));\n        };\n    };\n};\nvar ilens = function (get) {\n    return function (set) {\n        return function (dictStrong) {\n            return ilens$prime(function (s) {\n                return new Data_Tuple.Tuple(get(s), function (b) {\n                    return set(s)(b);\n                });\n            })(dictStrong);\n        };\n    };\n};\nvar cloneLens = function (l) {\n    return function (dictStrong) {\n        return withLens(l)(function (x) {\n            return function (y) {\n                return function (p) {\n                    return lens(x)(y)(dictStrong)(p);\n                };\n            };\n        });\n    };\n};\nvar cloneIndexedLens = function (l) {\n    return function (dictStrong) {\n        return withIndexedLens(l)(function (x) {\n            return function (y) {\n                return function (p) {\n                    return ilens(x)(y)(dictStrong)(p);\n                };\n            };\n        });\n    };\n};\nexport {\n    lens,\n    lens$prime,\n    withLens,\n    cloneLens,\n    ilens,\n    ilens$prime,\n    withIndexedLens,\n    cloneIndexedLens,\n    lensStore\n};\n", "// Generated by purs version 0.15.15\nimport * as Data_Function from \"../Data.Function/index.js\";\nimport * as Data_Lens_Lens from \"../Data.Lens.Lens/index.js\";\nimport * as Record from \"../Record/index.js\";\nvar prop = function (dictIsSymbol) {\n    var get = Record.get(dictIsSymbol)();\n    var set = Record.set(dictIsSymbol)()();\n    return function () {\n        return function () {\n            return function (l) {\n                return function (dictStrong) {\n                    return Data_Lens_Lens.lens(get(l))(Data_Function.flip(set(l)))(dictStrong);\n                };\n            };\n        };\n    };\n};\nexport {\n    prop\n};\n", "// Generated by purs version 0.15.15\nimport * as Control_Applicative from \"../Control.Applicative/index.js\";\nimport * as Control_Bind from \"../Control.Bind/index.js\";\nimport * as Control_Category from \"../Control.Category/index.js\";\nimport * as Control_Monad_Error_Class from \"../Control.Monad.Error.Class/index.js\";\nimport * as Control_Monad_Except from \"../Control.Monad.Except/index.js\";\nimport * as Control_Monad_Except_Trans from \"../Control.Monad.Except.Trans/index.js\";\nimport * as Control_Monad_Reader_Class from \"../Control.Monad.Reader.Class/index.js\";\nimport * as Control_Monad_Reader_Trans from \"../Control.Monad.Reader.Trans/index.js\";\nimport * as Control_Monad_State_Class from \"../Control.Monad.State.Class/index.js\";\nimport * as Control_Monad_State_Trans from \"../Control.Monad.State.Trans/index.js\";\nimport * as Control_Monad_Trans_Class from \"../Control.Monad.Trans.Class/index.js\";\nimport * as Control_Monad_Writer_Class from \"../Control.Monad.Writer.Class/index.js\";\nimport * as Data_Array from \"../Data.Array/index.js\";\nimport * as Data_Bifunctor from \"../Data.Bifunctor/index.js\";\nimport * as Data_Either from \"../Data.Either/index.js\";\nimport * as Data_Eq from \"../Data.Eq/index.js\";\nimport * as Data_Foldable from \"../Data.Foldable/index.js\";\nimport * as Data_Function from \"../Data.Function/index.js\";\nimport * as Data_Functor from \"../Data.Functor/index.js\";\nimport * as Data_Lens_Getter from \"../Data.Lens.Getter/index.js\";\nimport * as Data_Lens_Internal_Forget from \"../Data.Lens.Internal.Forget/index.js\";\nimport * as Data_Lens_Record from \"../Data.Lens.Record/index.js\";\nimport * as Data_List from \"../Data.List/index.js\";\nimport * as Data_List_Types from \"../Data.List.Types/index.js\";\nimport * as Data_Map_Internal from \"../Data.Map.Internal/index.js\";\nimport * as Data_Maybe from \"../Data.Maybe/index.js\";\nimport * as Data_Ord from \"../Data.Ord/index.js\";\nimport * as Data_Ordering from \"../Data.Ordering/index.js\";\nimport * as Data_Semigroup from \"../Data.Semigroup/index.js\";\nimport * as Data_Show from \"../Data.Show/index.js\";\nimport * as Data_Traversable from \"../Data.Traversable/index.js\";\nimport * as Data_Tuple from \"../Data.Tuple/index.js\";\nimport * as Data_Unit from \"../Data.Unit/index.js\";\nimport * as Debug from \"../Debug/index.js\";\nimport * as Foliage_App_Rendering from \"../Foliage.App.Rendering/index.js\";\nimport * as Foliage_Common from \"../Foliage.Common/index.js\";\nimport * as Foliage_Program from \"../Foliage.Program/index.js\";\nimport * as Halogen_HTML_Core from \"../Halogen.HTML.Core/index.js\";\nimport * as Halogen_HTML_Elements from \"../Halogen.HTML.Elements/index.js\";\nimport * as Type_Proxy from \"../Type.Proxy/index.js\";\nimport * as Unsafe from \"../Unsafe/index.js\";\nvar show = /* #__PURE__ */ Data_Show.show(Foliage_Program[\"_Show_LatticeType\"]);\nvar show1 = /* #__PURE__ */ Data_Show.show(/* #__PURE__ */ Foliage_Program[\"_Show_Term\"](Foliage_Program[\"_Show_Name\"]));\nvar foldr = /* #__PURE__ */ Data_Foldable.foldr(Data_List_Types.foldableList);\nvar traverse = /* #__PURE__ */ Data_Traversable.traverse(Foliage_Program[\"_Traversable_TermF\"]);\nvar show2 = /* #__PURE__ */ Data_Show.show(Foliage_Program[\"_Show_Name\"]);\nvar lift = /* #__PURE__ */ Control_Monad_Trans_Class.lift(Control_Monad_Except_Trans.monadTransExceptT);\nvar lookupModule = /* #__PURE__ */ Foliage_Program.lookupModule({\n    reflectSymbol: function () {\n        return \"functionDefs\";\n    }\n})()(Foliage_Program[\"_Ord_Name\"]);\nvar traverse1 = /* #__PURE__ */ Data_Traversable.traverse(Data_Traversable.traversableArray);\nvar show3 = /* #__PURE__ */ Data_Show.show(Data_Show.showString);\nvar fromFoldable = /* #__PURE__ */ Data_Map_Internal.fromFoldable(Data_Ord.ordString)(Data_Foldable.foldableArray);\nvar map = /* #__PURE__ */ Data_Functor.map(Data_Functor.functorArray);\nvar lmap = /* #__PURE__ */ Data_Bifunctor.lmap(Data_Bifunctor.bifunctorTuple);\nvar fromFoldable1 = /* #__PURE__ */ Data_Map_Internal.fromFoldable(Foliage_Program[\"_Ord_Name\"])(Data_Foldable.foldableArray);\nvar lookupModule1 = /* #__PURE__ */ Foliage_Program.lookupModule({\n    reflectSymbol: function () {\n        return \"latticeTypeDefs\";\n    }\n})()(Foliage_Program[\"_Ord_Name\"]);\nvar rmap = /* #__PURE__ */ Data_Bifunctor.rmap(Data_Bifunctor.bifunctorTuple);\nvar union = /* #__PURE__ */ Data_Map_Internal.union(Foliage_Program[\"_Ord_Name\"]);\nvar discard = /* #__PURE__ */ Control_Bind.discard(Control_Bind.discardUnit);\nvar eq = /* #__PURE__ */ Data_Eq.eq(Foliage_Program[\"_Eq_Name\"]);\nvar lookup1 = /* #__PURE__ */ Data_Map_Internal.lookup(Foliage_Program[\"_Ord_Name\"]);\nvar show4 = /* #__PURE__ */ Data_Show.show(/* #__PURE__ */ Foliage_Program[\"_Show_PropF\"](Foliage_Program[\"_Show_Name\"]));\nvar render = /* #__PURE__ */ Foliage_App_Rendering.render(Foliage_App_Rendering[\"_Render_Prop\"]);\nvar pure = /* #__PURE__ */ Control_Applicative.pure(Control_Applicative.applicativeArray);\nvar show5 = /* #__PURE__ */ Data_Show.show(Data_Show.showBoolean);\nvar show6 = /* #__PURE__ */ Data_Show.show(/* #__PURE__ */ Foliage_Common[\"_Show_Exc\"]({\n    reflectSymbol: function () {\n        return \"ignore prop\";\n    }\n}));\nvar prop = /* #__PURE__ */ Data_Lens_Record.prop({\n    reflectSymbol: function () {\n        return \"prop\";\n    }\n})()();\nvar identity = /* #__PURE__ */ Control_Category.identity(Control_Category.categoryFn);\nvar insert = /* #__PURE__ */ Data_Map_Internal.insert(Foliage_Program[\"_Ord_Name\"]);\nvar lmap1 = /* #__PURE__ */ Data_Bifunctor.lmap(Data_Bifunctor.bifunctorEither);\nvar mapFlipped = /* #__PURE__ */ Data_Functor.mapFlipped(Data_Functor.functorArray);\nvar render1 = /* #__PURE__ */ Foliage_App_Rendering.render(Foliage_App_Rendering[\"_Render_Rule\"]);\nvar insertWith = /* #__PURE__ */ Data_Map_Internal.insertWith(Foliage_Program[\"_Ord_Name\"]);\nvar append1 = /* #__PURE__ */ Data_Semigroup.append(Data_List_Types.semigroupList);\nvar fold = /* #__PURE__ */ Data_Foldable.fold(Data_List_Types.foldableList);\nvar fold1 = /* #__PURE__ */ fold(Data_List_Types.monoidList);\nvar traverse2 = /* #__PURE__ */ Data_Traversable.traverse(Data_List_Types.traversableList);\nvar show7 = /* #__PURE__ */ Data_Show.show(/* #__PURE__ */ Foliage_Common[\"_Show_Exc\"]({\n    reflectSymbol: function () {\n        return \"apply rule\";\n    }\n}));\nvar show8 = /* #__PURE__ */ Data_Show.show(Data_Show.showInt);\nvar traceM = /* #__PURE__ */ Debug.traceM();\nvar fold2 = /* #__PURE__ */ fold(/* #__PURE__ */ Data_Map_Internal.monoidSemigroupMap()(Foliage_Program[\"_Ord_Name\"])(Data_List_Types.semigroupList));\nvar unions = /* #__PURE__ */ Data_Map_Internal.unions(Foliage_Program[\"_Ord_Name\"])(Data_List_Types.foldableList);\nvar map1 = /* #__PURE__ */ Data_Functor.map(Data_List_Types.functorList);\nvar Env = function (x) {\n    return x;\n};\nvar Log = /* #__PURE__ */ (function () {\n    function Log(value0, value1) {\n        this.value0 = value0;\n        this.value1 = value1;\n    };\n    Log.create = function (value0) {\n        return function (value1) {\n            return new Log(value0, value1);\n        };\n    };\n    return Log;\n})();\nvar Ctx = function (x) {\n    return x;\n};\nvar throwError_compareTerm = function (dictMonadThrow) {\n    var throwError = Control_Monad_Error_Class.throwError(dictMonadThrow);\n    return function (lty) {\n        return function (t1) {\n            return function (t2) {\n                return throwError({\n                    label: Foliage_Common[\"_compare\"],\n                    source: \"compareTerm\",\n                    description: \"in lattice \" + (show(lty) + (\", \" + (show1(t1) + (\" !<= \" + show1(t2)))))\n                });\n            };\n        };\n    };\n};\nvar tellLog = function (dictMonadState) {\n    var bind = Control_Bind.bind((dictMonadState.Monad0()).Bind1());\n    var get = Control_Monad_State_Class.get(dictMonadState);\n    return function (dictMonadWriter) {\n        var tell = Control_Monad_Writer_Class.tell(dictMonadWriter.MonadTell1());\n        return function (r) {\n            return bind(get)(function (env) {\n                return tell([ new Log(r, new Data_Maybe.Just(env)) ]);\n            });\n        };\n    };\n};\nvar partitionEither = function (p) {\n    return function (xs) {\n        var select = function (a) {\n            return function (v) {\n                var v1 = p(a);\n                if (v1 instanceof Data_Either.Left) {\n                    return new Data_Tuple.Tuple(new Data_List_Types.Cons(v1.value0, v.value0), v.value1);\n                };\n                if (v1 instanceof Data_Either.Right) {\n                    return new Data_Tuple.Tuple(v.value0, new Data_List_Types.Cons(v1.value0, v.value1));\n                };\n                throw new Error(\"Failed pattern match at Foliage.Interpretation (line 509, column 25 - line 511, column 30): \" + [ v1.constructor.name ]);\n            };\n        };\n        return foldr(select)(new Data_Tuple.Tuple(Data_List_Types.Nil.value, Data_List_Types.Nil.value))(xs);\n    };\n};\nvar lookup = function (dictOrd) {\n    var lookup3 = Data_Map_Internal.lookup(dictOrd);\n    return function (dictMonadThrow) {\n        var throwError = Control_Monad_Error_Class.throwError(dictMonadThrow);\n        var pure1 = Control_Applicative.pure((dictMonadThrow.Monad0()).Applicative0());\n        return function (dictShow) {\n            var show9 = Data_Show.show(dictShow);\n            return function (label) {\n                return function (x) {\n                    return function (m) {\n                        var v = lookup3(x)(m);\n                        if (v instanceof Data_Maybe.Nothing) {\n                            return throwError({\n                                label: Foliage_Common[\"_error\"],\n                                source: \"lookup\",\n                                description: label + (\" not found: \" + show9(x))\n                            });\n                        };\n                        if (v instanceof Data_Maybe.Just) {\n                            return pure1(v.value0);\n                        };\n                        throw new Error(\"Failed pattern match at Foliage.Interpretation (line 502, column 20 - line 504, column 19): \" + [ v.constructor.name ]);\n                    };\n                };\n            };\n        };\n    };\n};\nvar lookup2 = /* #__PURE__ */ lookup(Foliage_Program[\"_Ord_Name\"]);\nvar evaluateTerm = function (dictMonadThrow) {\n    var throwError = Control_Monad_Error_Class.throwError(dictMonadThrow);\n    return traverse((dictMonadThrow.Monad0()).Applicative0())(function (x) {\n        return throwError({\n            label: Foliage_Common[\"_error\"],\n            source: \"evaluateTerm\",\n            description: \"expected term to be a value, but found a variable \" + show2(x)\n        });\n    });\n};\nvar processSideHypothesis = function (dictMonadReader) {\n    var MonadAsk0 = dictMonadReader.MonadAsk0();\n    var Monad0 = MonadAsk0.Monad0();\n    var bind = Control_Bind.bind(Control_Monad_Except_Trans.bindExceptT(Monad0));\n    var ask = Control_Monad_Reader_Class.ask(Control_Monad_Except_Trans.monadAskExceptT(MonadAsk0));\n    var lift1 = lift(Monad0);\n    var applicativeExceptT = Control_Monad_Except_Trans.applicativeExceptT(Monad0);\n    var pure1 = Control_Applicative.pure(applicativeExceptT);\n    var traverse3 = traverse1(applicativeExceptT);\n    return function (dictMonadThrow) {\n        var throwError = Control_Monad_Error_Class.throwError(dictMonadThrow);\n        var evaluateTerm1 = evaluateTerm(dictMonadThrow);\n        return function (rule) {\n            return function (v) {\n                return bind(ask)(function (v1) {\n                    return bind(Data_Maybe.maybe(lift1(throwError({\n                        label: Foliage_Common[\"_error\"],\n                        source: \"processSideHypothesis\",\n                        description: \"could not function definition of the name \" + show2(v.value0.functionName)\n                    })))(pure1)(lookupModule(Type_Proxy[\"Proxy\"].value)(v.value0.functionName)(v1.focusModule)))(function (functionDef) {\n                        return bind(bind(traverse3(function ($693) {\n                            return lift1(evaluateTerm1($693));\n                        })(v.value0.args))(function (args) {\n                            return bind(Data_Either.either(function (err) {\n                                return lift1(throwError({\n                                    label: Foliage_Common[\"_error\"],\n                                    source: \"processSideHypothesis\",\n                                    description: \"error in function \" + (show3(functionDef.value0.name) + (\": \" + err))\n                                }));\n                            })(pure1)(Foliage_Common.fromOpaque(functionDef.value0.impl)(fromFoldable(map(lmap(Data_Tuple.fst))(Data_Array.zip(functionDef.value0.inputs)(args))))))(function (result) {\n                                return pure1(result);\n                            });\n                        }))(function (result) {\n                            return pure1(Foliage_Program.substRule(Data_Map_Internal.singleton(v.value0.resultVarName)(result))(rule));\n                        });\n                    });\n                });\n            };\n        };\n    };\n};\nvar processSideHypotheses = function (dictMonadReader) {\n    var Monad0 = (dictMonadReader.MonadAsk0()).Monad0();\n    var bind = Control_Bind.bind(Control_Monad_Except_Trans.bindExceptT(Monad0));\n    var processSideHypothesis1 = processSideHypothesis(dictMonadReader);\n    var pure1 = Control_Applicative.pure(Control_Monad_Except_Trans.applicativeExceptT(Monad0));\n    return function (dictMonadThrow) {\n        var processSideHypothesis2 = processSideHypothesis1(dictMonadThrow);\n        return function (rule) {\n            return function (sides) {\n                return Data_Array.foldr(function (side) {\n                    return function (m_rule) {\n                        return bind(m_rule)(function (rule$prime) {\n                            return processSideHypothesis2(rule$prime)(side);\n                        });\n                    };\n                })(pure1(rule))(sides);\n            };\n        };\n    };\n};\nvar compareTerm = function (dictMonadThrow) {\n    var throwError = Control_Monad_Error_Class.throwError(dictMonadThrow);\n    return function (dictMonadReader) {\n        var MonadAsk0 = dictMonadReader.MonadAsk0();\n        var Monad0 = MonadAsk0.Monad0();\n        var pure1 = Control_Applicative.pure(Control_Monad_Except_Trans.applicativeExceptT(Monad0));\n        var bind = Control_Bind.bind(Control_Monad_Except_Trans.bindExceptT(Monad0));\n        var ask = Control_Monad_Reader_Class.ask(Control_Monad_Except_Trans.monadAskExceptT(MonadAsk0));\n        var monadThrowExceptT = Control_Monad_Except_Trans.monadThrowExceptT(Monad0);\n        var throwError1 = Control_Monad_Error_Class.throwError(monadThrowExceptT);\n        var lift1 = lift(Monad0);\n        var throwError_compareTerm1 = throwError_compareTerm(monadThrowExceptT);\n        var map2 = Data_Functor.map(Control_Monad_Except_Trans.functorExceptT(((Monad0.Bind1()).Apply0()).Functor0()));\n        return function (dictMonadWriter) {\n            return function (v) {\n                return function (v1) {\n                    return function (v2) {\n                        if (v1 instanceof Foliage_Program.VarTerm && v2 instanceof Foliage_Program.VarTerm) {\n                            return pure1(new Data_Tuple.Tuple(Data_Ordering.EQ.value, fromFoldable1([ new Data_Tuple.Tuple(v1.value0, new Foliage_Program.VarTerm(Foliage_Program.freshName(Data_Unit.unit))), new Data_Tuple.Tuple(v2.value0, new Foliage_Program.VarTerm(Foliage_Program.freshName(Data_Unit.unit))) ])));\n                        };\n                        if (v2 instanceof Foliage_Program.VarTerm) {\n                            return pure1(new Data_Tuple.Tuple(Data_Ordering.EQ.value, Data_Map_Internal.singleton(v2.value0)(v1)));\n                        };\n                        if (v1 instanceof Foliage_Program.VarTerm) {\n                            return pure1(new Data_Tuple.Tuple(Data_Ordering.EQ.value, Data_Map_Internal.singleton(v1.value0)(v2)));\n                        };\n                        if (v instanceof Foliage_Program.NamedLatticeType) {\n                            return bind(ask)(function (v3) {\n                                var v4 = lookupModule1(Type_Proxy[\"Proxy\"].value)(v.value0)(v3.focusModule);\n                                if (v4 instanceof Data_Maybe.Nothing) {\n                                    return throwError1({\n                                        label: Foliage_Common[\"_compare\"],\n                                        source: \"comapreTerm \" + (show(v) + (\" \" + (show1(v1) + (\" \" + show1(v2))))),\n                                        description: \"could not find lattice type definition with name \" + show2(v.value0)\n                                    });\n                                };\n                                if (v4 instanceof Data_Maybe.Just) {\n                                    if (v4.value0 instanceof Foliage_Program.LatticeTypeDef) {\n                                        return compareTerm(dictMonadThrow)(dictMonadReader)(dictMonadWriter)(v4.value0.value0)(v1)(v2);\n                                    };\n                                    if (v4.value0 instanceof Foliage_Program.ExternalLatticeTypeDef) {\n                                        var v5 = Control_Monad_Except.runExcept(Control_Monad_Except_Trans.runExceptT(Foliage_Common.fromOpaque(v4.value0.value0.compare_impl)(new Data_Tuple.Tuple(v1, v2))));\n                                        if (v5 instanceof Data_Either.Left) {\n                                            return throwError1(v5.value0);\n                                        };\n                                        if (v5 instanceof Data_Either.Right && v5.value0 instanceof Data_Either.Left) {\n                                            return lift1(throwError(Foliage_Common.map_Exc_label(Foliage_Common[\"_error\"])(v5.value0.value0)));\n                                        };\n                                        if (v5 instanceof Data_Either.Right && v5.value0 instanceof Data_Either.Right) {\n                                            return pure1(new Data_Tuple.Tuple(v5.value0.value0.value0, v5.value0.value0.value1));\n                                        };\n                                        throw new Error(\"Failed pattern match at Foliage.Interpretation (line 424, column 9 - line 427, column 58): \" + [ v5.constructor.name ]);\n                                    };\n                                    throw new Error(\"Failed pattern match at Foliage.Interpretation (line 419, column 28 - line 427, column 58): \" + [ v4.value0.constructor.name ]);\n                                };\n                                throw new Error(\"Failed pattern match at Foliage.Interpretation (line 417, column 3 - line 427, column 58): \" + [ v4.constructor.name ]);\n                            });\n                        };\n                        if (v instanceof Foliage_Program.UnitLatticeType) {\n                            var v3 = new Data_Tuple.Tuple(v1, v2);\n                            if (v3.value0 instanceof Foliage_Program.UnitTerm && v3.value1 instanceof Foliage_Program.UnitTerm) {\n                                return pure1(new Data_Tuple.Tuple(Data_Ordering.EQ.value, Data_Map_Internal.empty));\n                            };\n                            return lift1(throwError({\n                                label: Foliage_Common[\"_error\"],\n                                source: \"compareTerm\",\n                                description: \"type error; expected \" + (show3(show1(v1)) + (\" and \" + (show3(show1(v2)) + (\" to have the type \" + (show3(show(v)) + \".\")))))\n                            }));\n                        };\n                        if (v instanceof Foliage_Program.SumLatticeType && v.value0 instanceof Foliage_Program.LeftGreaterThanRight_SumLatticeTypeOrdering) {\n                            var v3 = new Data_Tuple.Tuple(v1, v2);\n                            if (v3.value0 instanceof Foliage_Program.LeftTerm && v3.value1 instanceof Foliage_Program.LeftTerm) {\n                                return compareTerm(dictMonadThrow)(dictMonadReader)(dictMonadWriter)(v.value1)(v3.value0.value0)(v3.value1.value0);\n                            };\n                            if (v3.value0 instanceof Foliage_Program.LeftTerm && v3.value1 instanceof Foliage_Program.RightTerm) {\n                                return pure1(new Data_Tuple.Tuple(Data_Ordering.GT.value, Data_Map_Internal.empty));\n                            };\n                            if (v3.value0 instanceof Foliage_Program.RightTerm && v3.value1 instanceof Foliage_Program.LeftTerm) {\n                                return pure1(new Data_Tuple.Tuple(Data_Ordering.LT.value, Data_Map_Internal.empty));\n                            };\n                            if (v3.value0 instanceof Foliage_Program.RightTerm && v3.value1 instanceof Foliage_Program.RightTerm) {\n                                return compareTerm(dictMonadThrow)(dictMonadReader)(dictMonadWriter)(v.value2)(v3.value0.value0)(v3.value1.value0);\n                            };\n                            return lift1(throwError({\n                                label: Foliage_Common[\"_error\"],\n                                source: \"compareTerm\",\n                                description: \"type error; expected \" + (show3(show1(v1)) + (\" and \" + (show3(show1(v2)) + (\" to have the type \" + (show3(show(v)) + \".\")))))\n                            }));\n                        };\n                        if (v instanceof Foliage_Program.SumLatticeType && v.value0 instanceof Foliage_Program.LeftLessThanRight_SumLatticeTypeOrdering) {\n                            var v3 = new Data_Tuple.Tuple(v1, v2);\n                            if (v3.value0 instanceof Foliage_Program.LeftTerm && v3.value1 instanceof Foliage_Program.LeftTerm) {\n                                return compareTerm(dictMonadThrow)(dictMonadReader)(dictMonadWriter)(v.value1)(v3.value0.value0)(v3.value1.value0);\n                            };\n                            if (v3.value0 instanceof Foliage_Program.LeftTerm && v3.value1 instanceof Foliage_Program.RightTerm) {\n                                return pure1(new Data_Tuple.Tuple(Data_Ordering.LT.value, Data_Map_Internal.empty));\n                            };\n                            if (v3.value0 instanceof Foliage_Program.RightTerm && v3.value1 instanceof Foliage_Program.LeftTerm) {\n                                return pure1(new Data_Tuple.Tuple(Data_Ordering.GT.value, Data_Map_Internal.empty));\n                            };\n                            if (v3.value0 instanceof Foliage_Program.RightTerm && v3.value1 instanceof Foliage_Program.RightTerm) {\n                                return compareTerm(dictMonadThrow)(dictMonadReader)(dictMonadWriter)(v.value2)(v3.value0.value0)(v3.value1.value0);\n                            };\n                            return lift1(throwError({\n                                label: Foliage_Common[\"_error\"],\n                                source: \"compareTerm\",\n                                description: \"type error; expected \" + (show3(show1(v1)) + (\" and \" + (show3(show1(v2)) + (\" to have the type \" + (show3(show(v)) + \".\")))))\n                            }));\n                        };\n                        if (v instanceof Foliage_Program.SumLatticeType && v.value0 instanceof Foliage_Program.LeftIncomparableRight_SumLatticeTypeOrdering) {\n                            var v3 = new Data_Tuple.Tuple(v1, v2);\n                            if (v3.value0 instanceof Foliage_Program.LeftTerm && v3.value1 instanceof Foliage_Program.LeftTerm) {\n                                return compareTerm(dictMonadThrow)(dictMonadReader)(dictMonadWriter)(v.value1)(v3.value0.value0)(v3.value1.value0);\n                            };\n                            if (v3.value0 instanceof Foliage_Program.LeftTerm && v3.value1 instanceof Foliage_Program.RightTerm) {\n                                return throwError_compareTerm1(v)(v3.value0.value0)(v3.value1.value0);\n                            };\n                            if (v3.value0 instanceof Foliage_Program.RightTerm && v3.value1 instanceof Foliage_Program.LeftTerm) {\n                                return throwError_compareTerm1(v)(v3.value0.value0)(v3.value1.value0);\n                            };\n                            if (v3.value0 instanceof Foliage_Program.RightTerm && v3.value1 instanceof Foliage_Program.RightTerm) {\n                                return compareTerm(dictMonadThrow)(dictMonadReader)(dictMonadWriter)(v.value2)(v3.value0.value0)(v3.value1.value0);\n                            };\n                            return lift1(throwError({\n                                label: Foliage_Common[\"_error\"],\n                                source: \"compareTerm\",\n                                description: \"type error; expected \" + (show3(show1(v1)) + (\" and \" + (show3(show1(v2)) + (\" to have the type \" + (show3(show(v)) + \".\")))))\n                            }));\n                        };\n                        if (v instanceof Foliage_Program.SumLatticeType && v.value0 instanceof Foliage_Program.LeftEqualRight_SumLatticeTypeOrdering) {\n                            var v3 = new Data_Tuple.Tuple(v1, v2);\n                            if (v3.value0 instanceof Foliage_Program.LeftTerm && v3.value1 instanceof Foliage_Program.LeftTerm) {\n                                return compareTerm(dictMonadThrow)(dictMonadReader)(dictMonadWriter)(v.value1)(v3.value0.value0)(v3.value1.value0);\n                            };\n                            if (v3.value0 instanceof Foliage_Program.LeftTerm && v3.value1 instanceof Foliage_Program.RightTerm) {\n                                return pure1(new Data_Tuple.Tuple(Data_Ordering.EQ.value, Data_Map_Internal.empty));\n                            };\n                            if (v3.value0 instanceof Foliage_Program.RightTerm && v3.value1 instanceof Foliage_Program.LeftTerm) {\n                                return pure1(new Data_Tuple.Tuple(Data_Ordering.EQ.value, Data_Map_Internal.empty));\n                            };\n                            if (v3.value0 instanceof Foliage_Program.RightTerm && v3.value1 instanceof Foliage_Program.RightTerm) {\n                                return compareTerm(dictMonadThrow)(dictMonadReader)(dictMonadWriter)(v.value2)(v3.value0.value0)(v3.value1.value0);\n                            };\n                            return lift1(throwError({\n                                label: Foliage_Common[\"_error\"],\n                                source: \"compareTerm\",\n                                description: \"type error; expected \" + (show3(show1(v1)) + (\" and \" + (show3(show1(v2)) + (\" to have the type \" + (show3(show(v)) + \".\")))))\n                            }));\n                        };\n                        if (v instanceof Foliage_Program.ProductLatticeType) {\n                            var v3 = new Data_Tuple.Tuple(v1, v2);\n                            if (v3.value0 instanceof Foliage_Program.PairTerm && v3.value1 instanceof Foliage_Program.PairTerm) {\n                                return bind(compareTerm(dictMonadThrow)(dictMonadReader)(dictMonadWriter)(v.value1)(v3.value0.value0)(v3.value1.value0))(function (v4) {\n                                    if (v4.value0 instanceof Data_Ordering.LT) {\n                                        return pure1(new Data_Tuple.Tuple(Data_Ordering.LT.value, v4.value1));\n                                    };\n                                    if (v4.value0 instanceof Data_Ordering.EQ) {\n                                        return bind(pure1(Foliage_Program.substTerm(v4.value1)(v3.value0.value1)))(function (t1_21) {\n                                            return bind(pure1(Foliage_Program.substTerm(v4.value1)(v3.value1.value1)))(function (t2_21) {\n                                                return map2(rmap(union(v4.value1)))(compareTerm(dictMonadThrow)(dictMonadReader)(dictMonadWriter)(v.value2)(t1_21)(t2_21));\n                                            });\n                                        });\n                                    };\n                                    if (v4.value0 instanceof Data_Ordering.GT) {\n                                        return pure1(new Data_Tuple.Tuple(Data_Ordering.GT.value, v4.value1));\n                                    };\n                                    throw new Error(\"Failed pattern match at Foliage.Interpretation (line 464, column 11 - line 470, column 44): \" + [ v4.constructor.name ]);\n                                });\n                            };\n                            return lift1(throwError({\n                                label: Foliage_Common[\"_error\"],\n                                source: \"compareTerm\",\n                                description: \"type error; expected \" + (show3(show1(v1)) + (\" and \" + (show3(show1(v2)) + (\" to have the type \" + (show3(show(v)) + \".\")))))\n                            }));\n                        };\n                        if (v instanceof Foliage_Program.SetLatticeType) {\n                            return Unsafe.todo(\"compareTerm SetLatticeType\");\n                        };\n                        if (v instanceof Foliage_Program.OppositeLatticeType) {\n                            return bind(compareTerm(dictMonadThrow)(dictMonadReader)(dictMonadWriter)(v.value0)(v1)(v2))(function (v3) {\n                                if (v3.value0 instanceof Data_Ordering.LT) {\n                                    return pure1(new Data_Tuple.Tuple(Data_Ordering.GT.value, v3.value1));\n                                };\n                                if (v3.value0 instanceof Data_Ordering.EQ) {\n                                    return pure1(new Data_Tuple.Tuple(Data_Ordering.EQ.value, v3.value1));\n                                };\n                                if (v3.value0 instanceof Data_Ordering.GT) {\n                                    return pure1(new Data_Tuple.Tuple(Data_Ordering.LT.value, v3.value1));\n                                };\n                                throw new Error(\"Failed pattern match at Foliage.Interpretation (line 477, column 9 - line 480, column 42): \" + [ v3.constructor.name ]);\n                            });\n                        };\n                        if (v instanceof Foliage_Program.DiscreteLatticeType) {\n                            return bind(compareTerm(dictMonadThrow)(dictMonadReader)(dictMonadWriter)(v.value0)(v1)(v2))(function (v3) {\n                                if (v3.value0 instanceof Data_Ordering.LT) {\n                                    return throwError_compareTerm1(new Foliage_Program.DiscreteLatticeType(v.value0))(v1)(v2);\n                                };\n                                if (v3.value0 instanceof Data_Ordering.EQ) {\n                                    return pure1(new Data_Tuple.Tuple(Data_Ordering.EQ.value, v3.value1));\n                                };\n                                if (v3.value0 instanceof Data_Ordering.GT) {\n                                    return throwError_compareTerm1(new Foliage_Program.DiscreteLatticeType(v.value0))(v1)(v2);\n                                };\n                                throw new Error(\"Failed pattern match at Foliage.Interpretation (line 484, column 9 - line 487, column 79): \" + [ v3.constructor.name ]);\n                            });\n                        };\n                        if (v instanceof Foliage_Program.PowerLatticeType) {\n                            return Unsafe.todo(\"compareTerm PowerLatticeType\");\n                        };\n                        throw new Error(\"Failed pattern match at Foliage.Interpretation (line 396, column 1 - line 401, column 75): \" + [ v.constructor.name, v1.constructor.name, v2.constructor.name ]);\n                    };\n                };\n            };\n        };\n    };\n};\nvar compareProp = function (dictMonadReader) {\n    var MonadAsk0 = dictMonadReader.MonadAsk0();\n    var Monad0 = MonadAsk0.Monad0();\n    var bindExceptT = Control_Monad_Except_Trans.bindExceptT(Monad0);\n    var discard1 = discard(bindExceptT);\n    var applicativeExceptT = Control_Monad_Except_Trans.applicativeExceptT(Monad0);\n    var unless = Control_Applicative.unless(applicativeExceptT);\n    var throwError = Control_Monad_Error_Class.throwError(Control_Monad_Except_Trans.monadThrowExceptT(Monad0));\n    var bind = Control_Bind.bind(bindExceptT);\n    var ask = Control_Monad_Reader_Class.ask(Control_Monad_Except_Trans.monadAskExceptT(MonadAsk0));\n    var lift1 = lift(Monad0);\n    var pure1 = Control_Applicative.pure(applicativeExceptT);\n    return function (dictMonadThrow) {\n        var throwError1 = Control_Monad_Error_Class.throwError(dictMonadThrow);\n        var compareTerm1 = compareTerm(dictMonadThrow)(dictMonadReader);\n        return function (dictMonadWriter) {\n            var compareTerm2 = compareTerm1(dictMonadWriter);\n            return function (v) {\n                return function (v1) {\n                    return discard1(unless(eq(v.value0)(v1.value0))(throwError({\n                        label: Foliage_Common[\"_compare\"],\n                        source: \"compareProp\",\n                        description: show2(v.value0) + (\" != \" + show2(v1.value0))\n                    })))(function () {\n                        return bind(ask)(function (v2) {\n                            return bind((function () {\n                                var v3 = lookup1(v.value0)(v2.focusModule.value0.relations);\n                                if (v3 instanceof Data_Maybe.Nothing) {\n                                    return lift1(throwError1({\n                                        label: Foliage_Common[\"_error\"],\n                                        source: \"compareProp\",\n                                        description: \"could not find relation \" + show3(show2(v.value0))\n                                    }));\n                                };\n                                if (v3 instanceof Data_Maybe.Just) {\n                                    return pure1(v3.value0.value0.domain);\n                                };\n                                throw new Error(\"Failed pattern match at Foliage.Interpretation (line 389, column 13 - line 391, column 46): \" + [ v3.constructor.name ]);\n                            })())(function (domain) {\n                                return compareTerm2(domain)(v.value1)(v1.value1);\n                            });\n                        });\n                    });\n                };\n            };\n        };\n    };\n};\nvar joinProps = function (dictMonad) {\n    var foldM = Data_List.foldM(Control_Monad_Except_Trans.monadExceptT(dictMonad));\n    var bindExceptT = Control_Monad_Except_Trans.bindExceptT(dictMonad);\n    var bindFlipped = Control_Bind.bindFlipped(bindExceptT);\n    var pure1 = Control_Applicative.pure(Control_Monad_Except_Trans.applicativeExceptT(dictMonad));\n    var throwError = Control_Monad_Error_Class.throwError(Control_Monad_Except_Trans.monadThrowExceptT(dictMonad));\n    var discard1 = discard(bindExceptT);\n    var lift1 = lift(dictMonad);\n    return function (dictMonadReader) {\n        var compareProp1 = compareProp(dictMonadReader);\n        return function (dictMonadThrow) {\n            var compareProp2 = compareProp1(dictMonadThrow);\n            return function (dictMonadState) {\n                var tellLog1 = tellLog(Control_Monad_Except_Trans.monadStateExceptT(dictMonadState));\n                return function (dictMonadWriter) {\n                    var tellLog2 = tellLog1(Control_Monad_Except_Trans.monadWriterExceptT(dictMonadWriter));\n                    var compareProp3 = compareProp2(dictMonadWriter);\n                    return function (g) {\n                        return function (props) {\n                            return function (prop1) {\n                                return foldM(function (known_props) {\n                                    return function (prop$prime) {\n                                        return bindFlipped(function (v) {\n                                            if (v instanceof Data_Either.Left) {\n                                                return pure1(new Data_List_Types.Cons(prop$prime, known_props));\n                                            };\n                                            if (v instanceof Data_Either.Right && v.value0.value0 instanceof Data_Ordering.LT) {\n                                                return throwError({\n                                                    label: Type_Proxy[\"Proxy\"].value,\n                                                    source: \"joinProps\",\n                                                    description: show4(Data_Lens_Getter.viewOn(prop1)(g)) + (\" is subsumed by \" + show4(Data_Lens_Getter.viewOn(prop$prime)(g)))\n                                                });\n                                            };\n                                            if (v instanceof Data_Either.Right && v.value0.value0 instanceof Data_Ordering.EQ) {\n                                                return throwError({\n                                                    label: Type_Proxy[\"Proxy\"].value,\n                                                    source: \"joinProps\",\n                                                    description: show4(Data_Lens_Getter.viewOn(prop1)(g)) + (\" is subsumed by \" + show4(Data_Lens_Getter.viewOn(prop$prime)(g)))\n                                                });\n                                            };\n                                            if (v instanceof Data_Either.Right && v.value0.value0 instanceof Data_Ordering.GT) {\n                                                return discard1(tellLog2({\n                                                    label: \"joinProps . prop subsumes prop'\",\n                                                    messages: [ new Data_Tuple.Tuple(\"prop\", Halogen_HTML_Elements.div([  ])(Foliage_App_Rendering.line(render(Data_Lens_Getter.viewOn(prop1)(g))))), new Data_Tuple.Tuple(\"prop'\", Halogen_HTML_Elements.div([  ])(Foliage_App_Rendering.line(render(Data_Lens_Getter.viewOn(prop$prime)(g))))) ]\n                                                }))(function () {\n                                                    return pure1(known_props);\n                                                });\n                                            };\n                                            throw new Error(\"Failed pattern match at Foliage.Interpretation (line 186, column 29 - line 196, column 37): \" + [ v.constructor.name ]);\n                                        })(lift1(Control_Monad_Except_Trans.runExceptT(compareProp3(Data_Lens_Getter.viewOn(prop1)(g))(Data_Lens_Getter.viewOn(prop$prime)(g)))));\n                                    };\n                                })(Data_List_Types.Nil.value)(props);\n                            };\n                        };\n                    };\n                };\n            };\n        };\n    };\n};\nvar insertProp = function (dictMonad) {\n    var bind = Control_Bind.bind(Control_Monad_Except_Trans.bindExceptT(dictMonad));\n    var joinProps1 = joinProps(dictMonad);\n    var pure1 = Control_Applicative.pure(Control_Monad_Except_Trans.applicativeExceptT(dictMonad));\n    return function (dictMonadReader) {\n        var joinProps2 = joinProps1(dictMonadReader);\n        return function (dictMonadThrow) {\n            var joinProps3 = joinProps2(dictMonadThrow);\n            return function (dictMonadState) {\n                var joinProps4 = joinProps3(dictMonadState);\n                return function (dictMonadWriter) {\n                    var joinProps5 = joinProps4(dictMonadWriter);\n                    return function (g) {\n                        return function (props) {\n                            return function (prop1) {\n                                return Control_Monad_Except_Trans.runExceptT(bind(joinProps5(g)(props)(prop1))(function (props$prime) {\n                                    return pure1(Data_List.snoc(props$prime)(prop1));\n                                }));\n                            };\n                        };\n                    };\n                };\n            };\n        };\n    };\n};\nvar deferProp = function (dictMonadState) {\n    var tellLog1 = tellLog(dictMonadState);\n    var get = Control_Monad_State_Class.get(dictMonadState);\n    var modify_ = Control_Monad_State_Class.modify_(dictMonadState);\n    return function (dictMonadWriter) {\n        var tellLog2 = tellLog1(dictMonadWriter);\n        return function (dictMonadReader) {\n            var Monad0 = (dictMonadReader.MonadAsk0()).Monad0();\n            var Bind1 = Monad0.Bind1();\n            var discard1 = discard(Bind1);\n            var bind = Control_Bind.bind(Bind1);\n            var insertProp1 = insertProp(Monad0)(dictMonadReader);\n            var bindFlipped = Control_Bind.bindFlipped(Bind1);\n            var joinProps1 = joinProps(Monad0)(dictMonadReader);\n            return function (dictMonadThrow) {\n                var insertProp2 = insertProp1(dictMonadThrow)(dictMonadState)(dictMonadWriter);\n                var joinProps2 = joinProps1(dictMonadThrow)(dictMonadState)(dictMonadWriter);\n                return function (isNew) {\n                    return function (v) {\n                        return discard1(tellLog2({\n                            label: \"defer prop\",\n                            messages: [ new Data_Tuple.Tuple(\"prop\", Halogen_HTML_Elements.div([  ])(Foliage_App_Rendering.line(render(v)))), new Data_Tuple.Tuple(\"isNew\", Halogen_HTML_Elements.div([  ])(pure(Halogen_HTML_Core.text(show5(isNew))))) ]\n                        }))(function () {\n                            return bind(get)(function (v1) {\n                                var success = function (active_props) {\n                                    return discard1(tellLog2({\n                                        label: \"defer prop . success\",\n                                        messages: [ new Data_Tuple.Tuple(\"prop\", Halogen_HTML_Elements.div([  ])(Foliage_App_Rendering.line(render(v)))) ]\n                                    }))(function () {\n                                        return modify_(function (v2) {\n                                            return {\n                                                gas: v2.gas,\n                                                ripe_rules: v2.ripe_rules,\n                                                known_props: v2.known_props,\n                                                active_props: active_props\n                                            };\n                                        });\n                                    });\n                                };\n                                var failure = function (exc) {\n                                    return tellLog2({\n                                        label: \"defer prop . failure\",\n                                        messages: [ new Data_Tuple.Tuple(\"prop\", Halogen_HTML_Elements.div([  ])(Foliage_App_Rendering.line(render(v)))), new Data_Tuple.Tuple(\"reason\", Halogen_HTML_Elements.div([  ])(pure(Halogen_HTML_Core.text(show6(exc))))) ]\n                                    });\n                                };\n                                return bind(insertProp2(prop(Type_Proxy[\"Proxy\"].value)(Data_Lens_Internal_Forget.strongForget))(v1.active_props)({\n                                    prop: v,\n                                    isNew: isNew\n                                }))(function (v2) {\n                                    if (v2 instanceof Data_Either.Left) {\n                                        return failure(v2.value0);\n                                    };\n                                    if (v2 instanceof Data_Either.Right) {\n                                        if (isNew) {\n                                            return Data_Maybe.maybe(success(v2.value0))(function (known_props) {\n                                                return bindFlipped(function (v3) {\n                                                    if (v3 instanceof Data_Either.Left) {\n                                                        return failure(v3.value0);\n                                                    };\n                                                    if (v3 instanceof Data_Either.Right) {\n                                                        return success(v2.value0);\n                                                    };\n                                                    throw new Error(\"Failed pattern match at Foliage.Interpretation (line 277, column 35 - line 279, column 56): \" + [ v3.constructor.name ]);\n                                                })(Control_Monad_Except_Trans.runExceptT(joinProps2(identity)(known_props)(v)));\n                                            })(lookup1(v.value0)(v1.known_props));\n                                        };\n                                        return success(v2.value0);\n                                    };\n                                    throw new Error(\"Failed pattern match at Foliage.Interpretation (line 267, column 9 - line 282, column 33): \" + [ v2.constructor.name ]);\n                                });\n                            });\n                        });\n                    };\n                };\n            };\n        };\n    };\n};\nvar learnProp = function (dictMonadReader) {\n    var Monad0 = (dictMonadReader.MonadAsk0()).Monad0();\n    var Bind1 = Monad0.Bind1();\n    var bind = Control_Bind.bind(Bind1);\n    var discard1 = discard(Bind1);\n    var bindFlipped = Control_Bind.bindFlipped(Bind1);\n    var insertProp1 = insertProp(Monad0)(dictMonadReader);\n    return function (dictMonadState) {\n        var get = Control_Monad_State_Class.get(dictMonadState);\n        var tellLog1 = tellLog(dictMonadState);\n        var modify_ = Control_Monad_State_Class.modify_(dictMonadState);\n        return function (dictMonadThrow) {\n            var insertProp2 = insertProp1(dictMonadThrow)(dictMonadState);\n            return function (dictMonadWriter) {\n                var tellLog2 = tellLog1(dictMonadWriter);\n                var insertProp3 = insertProp2(dictMonadWriter);\n                return function (v) {\n                    return bind(get)(function (v1) {\n                        var success = function (known_props$prime) {\n                            return discard1(tellLog2({\n                                label: \"learn prop . success\",\n                                messages: [ new Data_Tuple.Tuple(\"prop\", Halogen_HTML_Elements.div([  ])(Foliage_App_Rendering.line(render(v)))) ]\n                            }))(function () {\n                                return modify_(function (v2) {\n                                    return {\n                                        gas: v2.gas,\n                                        ripe_rules: v2.ripe_rules,\n                                        active_props: v2.active_props,\n                                        known_props: known_props$prime\n                                    };\n                                });\n                            });\n                        };\n                        var failure = function (exc) {\n                            return tellLog2({\n                                label: \"learn prop . failure\",\n                                messages: [ new Data_Tuple.Tuple(\"reason\", Halogen_HTML_Elements.div([  ])(pure(Halogen_HTML_Core.text(show6(exc))))) ]\n                            });\n                        };\n                        return Data_Maybe.maybe(success(Data_Map_Internal.empty))(function (known_props) {\n                            return bindFlipped(function (v2) {\n                                if (v2 instanceof Data_Either.Left) {\n                                    return failure(v2.value0);\n                                };\n                                if (v2 instanceof Data_Either.Right) {\n                                    return success(insert(v.value0)(v2.value0)(v1.known_props));\n                                };\n                                throw new Error(\"Failed pattern match at Foliage.Interpretation (line 167, column 25 - line 169, column 98): \" + [ v2.constructor.name ]);\n                            })(insertProp3(identity)(known_props)(v));\n                        })(lookup1(v.value0)(v1.known_props));\n                    });\n                };\n            };\n        };\n    };\n};\nvar applyRipeRuleToProp = function (dictMonadReader) {\n    var Monad0 = (dictMonadReader.MonadAsk0()).Monad0();\n    var bindExceptT = Control_Monad_Except_Trans.bindExceptT(Monad0);\n    var bind = Control_Bind.bind(bindExceptT);\n    var bindFlipped = Control_Bind.bindFlipped(bindExceptT);\n    var pure1 = Control_Applicative.pure(Control_Monad_Except_Trans.applicativeExceptT(Monad0));\n    var throwError = Control_Monad_Error_Class.throwError(Control_Monad_Except_Trans.monadThrowExceptT(Monad0));\n    var map2 = Data_Functor.map(((Monad0.Bind1()).Apply0()).Functor0());\n    var compareProp1 = compareProp(dictMonadReader);\n    var processSideHypotheses1 = processSideHypotheses(dictMonadReader);\n    return function (dictMonadThrow) {\n        var compareProp2 = compareProp1(dictMonadThrow);\n        var processSideHypotheses2 = processSideHypotheses1(dictMonadThrow);\n        return function (dictMonadWriter) {\n            var compareProp3 = compareProp2(dictMonadWriter);\n            return function (dictMonadState) {\n                return function (v) {\n                    return function (prop1) {\n                        return bind(bindFlipped(function (v1) {\n                            if (v1.value0 instanceof Data_Ordering.LT) {\n                                return pure1(v1.value1);\n                            };\n                            if (v1.value0 instanceof Data_Ordering.EQ) {\n                                return pure1(v1.value1);\n                            };\n                            return throwError({\n                                label: Foliage_Common[\"_apply_rule\"],\n                                source: \"applyRipeRuleToProp\",\n                                description: show4(v.hypothesis.value0) + (\" < \" + show4(prop1))\n                            });\n                        })(Control_Monad_Except_Trans.mapExceptT(map2(lmap1(Foliage_Common.map_Exc_label(Foliage_Common[\"_apply_rule\"]))))(compareProp3(v.hypothesis.value0)(prop1))))(function (sigma) {\n                            var rule$prime = Foliage_Program.substRule(sigma)(v[\"rule'\"]);\n                            var hyp_sides$prime = mapFlipped(v.hypothesis.value1)(Foliage_Program.substSideHypothesis(sigma));\n                            return bind(Control_Monad_Except_Trans.mapExceptT(map2(lmap1(Foliage_Common.map_Exc_label(Foliage_Common[\"_apply_rule\"]))))(processSideHypotheses2(rule$prime)(hyp_sides$prime)))(function (rule$prime$prime) {\n                                return pure1(rule$prime$prime);\n                            });\n                        });\n                    };\n                };\n            };\n        };\n    };\n};\nvar deferRipeRule = function (dictMonadReader) {\n    var Monad0 = (dictMonadReader.MonadAsk0()).Monad0();\n    var Bind1 = Monad0.Bind1();\n    var discard1 = discard(Bind1);\n    var bind = Control_Bind.bind(Bind1);\n    var Applicative0 = Monad0.Applicative0();\n    var pure1 = Control_Applicative.pure(Applicative0);\n    var filterM = Data_List.filterM(Monad0);\n    var map2 = Data_Functor.map((Bind1.Apply0()).Functor0());\n    var applyRipeRuleToProp1 = applyRipeRuleToProp(dictMonadReader);\n    var traverse_ = Data_Foldable.traverse_(Applicative0)(Data_List_Types.foldableList);\n    return function (dictMonadState) {\n        var tellLog1 = tellLog(dictMonadState);\n        var modify_ = Control_Monad_State_Class.modify_(dictMonadState);\n        var get = Control_Monad_State_Class.get(dictMonadState);\n        var deferProp1 = deferProp(dictMonadState);\n        return function (dictMonadThrow) {\n            var applyRipeRuleToProp2 = applyRipeRuleToProp1(dictMonadThrow);\n            return function (dictMonadWriter) {\n                var tellLog2 = tellLog1(dictMonadWriter);\n                var applyRipeRuleToProp3 = applyRipeRuleToProp2(dictMonadWriter)(dictMonadState);\n                var deferProp2 = deferProp1(dictMonadWriter)(dictMonadReader)(dictMonadThrow);\n                return function (v) {\n                    return discard1(tellLog2({\n                        label: \"defer rule\",\n                        messages: [ new Data_Tuple.Tuple(\"ripe_rule\", Halogen_HTML_Elements.div([  ])(Foliage_App_Rendering.line(render1(Foliage_Program.from_RipeRule_to_Rule(v))))) ]\n                    }))(function () {\n                        return discard1(modify_(function (v1) {\n                            return {\n                                gas: v1.gas,\n                                known_props: v1.known_props,\n                                active_props: v1.active_props,\n                                ripe_rules: insertWith(append1)(v.hypothesis.value0.value0)(Data_List.singleton(v))(v1.ripe_rules)\n                            };\n                        }))(function () {\n                            return bind(get)(function (v1) {\n                                return bind(Data_Maybe.maybe(pure1(Data_List_Types.Nil.value))(filterM(function (prop1) {\n                                    return map2(Data_Either.either(Data_Function[\"const\"](false))(Data_Function[\"const\"](true)))(Control_Monad_Except_Trans.runExceptT(applyRipeRuleToProp3(v)(prop1)));\n                                }))(lookup1(v.hypothesis.value0.value0)(v1.known_props)))(function (props) {\n                                    return traverse_(deferProp2(false))(props);\n                                });\n                            });\n                        });\n                    });\n                };\n            };\n        };\n    };\n};\nvar resolveProp = function (dictMonadReader) {\n    var Monad0 = (dictMonadReader.MonadAsk0()).Monad0();\n    var Bind1 = Monad0.Bind1();\n    var discard1 = discard(Bind1);\n    var bind = Control_Bind.bind(Bind1);\n    var map2 = Data_Functor.map((Bind1.Apply0()).Functor0());\n    var Applicative0 = Monad0.Applicative0();\n    var traverse3 = traverse2(Applicative0);\n    var applyRipeRuleToProp1 = applyRipeRuleToProp(dictMonadReader);\n    var pure1 = Control_Applicative.pure(Applicative0);\n    var traverse_ = Data_Foldable.traverse_(Applicative0)(Data_List_Types.foldableList);\n    var deferRipeRule1 = deferRipeRule(dictMonadReader);\n    return function (dictMonadState) {\n        var tellLog1 = tellLog(dictMonadState);\n        var get = Control_Monad_State_Class.get(dictMonadState);\n        var deferProp1 = deferProp(dictMonadState);\n        var deferRipeRule2 = deferRipeRule1(dictMonadState);\n        return function (dictMonadThrow) {\n            var applyRipeRuleToProp2 = applyRipeRuleToProp1(dictMonadThrow);\n            var deferRipeRule3 = deferRipeRule2(dictMonadThrow);\n            return function (dictMonadWriter) {\n                var tellLog2 = tellLog1(dictMonadWriter);\n                var applyRipeRuleToProp3 = applyRipeRuleToProp2(dictMonadWriter)(dictMonadState);\n                var deferProp2 = deferProp1(dictMonadWriter)(dictMonadReader)(dictMonadThrow);\n                var deferRipeRule4 = deferRipeRule3(dictMonadWriter);\n                return function (v) {\n                    return discard1(tellLog2({\n                        label: \"resolve prop\",\n                        messages: [ new Data_Tuple.Tuple(\"prop\", Halogen_HTML_Elements.div([  ])(Foliage_App_Rendering.line(render(v)))) ]\n                    }))(function () {\n                        return bind(get)(function (v1) {\n                            return bind(map2(fold1)(traverse3(function (ripe_rule) {\n                                return bind(Control_Monad_Except_Trans.runExceptT(applyRipeRuleToProp3(ripe_rule)(v)))(function (v2) {\n                                    if (v2 instanceof Data_Either.Left) {\n                                        return discard1(tellLog2({\n                                            label: \"resolve prop . apply rule . failure\",\n                                            messages: [ new Data_Tuple.Tuple(\"prop\", Halogen_HTML_Elements.div([  ])(Foliage_App_Rendering.line(render(v)))), new Data_Tuple.Tuple(\"ripe_rule\", Halogen_HTML_Elements.div([  ])(Foliage_App_Rendering.line(render1(Foliage_Program.from_RipeRule_to_Rule(ripe_rule))))), new Data_Tuple.Tuple(\"reason\", Halogen_HTML_Elements.div([  ])(pure(Halogen_HTML_Core.text(show7(v2.value0))))) ]\n                                        }))(function () {\n                                            return pure1(Data_List_Types.Nil.value);\n                                        });\n                                    };\n                                    if (v2 instanceof Data_Either.Right) {\n                                        return discard1(tellLog2({\n                                            label: \"resolve prop . apply rule . success\",\n                                            messages: [ new Data_Tuple.Tuple(\"prop\", Halogen_HTML_Elements.div([  ])(Foliage_App_Rendering.line(render(v)))), new Data_Tuple.Tuple(\"ripe_rule\", Halogen_HTML_Elements.div([  ])(Foliage_App_Rendering.line(render1(Foliage_Program.from_RipeRule_to_Rule(ripe_rule))))), new Data_Tuple.Tuple(\"rule after subst\", Halogen_HTML_Elements.div([  ])(Foliage_App_Rendering.line(render1(v2.value0)))) ]\n                                        }))(function () {\n                                            var v3 = Foliage_Program.nextHypothesis(v2.value0);\n                                            if (v3 instanceof Data_Either.Left) {\n                                                return discard1(deferProp2(true)(v3.value0))(function () {\n                                                    return pure1(Data_List_Types.Nil.value);\n                                                });\n                                            };\n                                            if (v3 instanceof Data_Either.Right) {\n                                                return pure1(Data_List.singleton(v3.value0));\n                                            };\n                                            throw new Error(\"Failed pattern match at Foliage.Interpretation (line 237, column 23 - line 243, column 59): \" + [ v3.constructor.name ]);\n                                        });\n                                    };\n                                    throw new Error(\"Failed pattern match at Foliage.Interpretation (line 231, column 21 - line 243, column 59): \" + [ v2.constructor.name ]);\n                                });\n                            })(Data_Maybe.fromMaybe(Data_List_Types.Nil.value)(lookup1(v.value0)(v1.ripe_rules)))))(function (v2) {\n                                return traverse_(deferRipeRule4)(v2);\n                            });\n                        });\n                    });\n                };\n            };\n        };\n    };\n};\nvar fixpointFocusModule = function (dictMonadReader) {\n    var MonadAsk0 = dictMonadReader.MonadAsk0();\n    var Monad0 = MonadAsk0.Monad0();\n    var Bind1 = Monad0.Bind1();\n    var bind = Control_Bind.bind(Bind1);\n    var ask = Control_Monad_Reader_Class.ask(MonadAsk0);\n    var discard1 = discard(Bind1);\n    var Applicative0 = Monad0.Applicative0();\n    var when = Control_Applicative.when(Applicative0);\n    var pure1 = Control_Applicative.pure(Applicative0);\n    var learnProp1 = learnProp(dictMonadReader);\n    var resolveProp1 = resolveProp(dictMonadReader);\n    return function (dictMonadState) {\n        var modify = Control_Monad_State_Class.modify(dictMonadState);\n        var tellLog1 = tellLog(dictMonadState);\n        var modify_ = Control_Monad_State_Class.modify_(dictMonadState);\n        var learnProp2 = learnProp1(dictMonadState);\n        var resolveProp2 = resolveProp1(dictMonadState);\n        return function (dictMonadThrow) {\n            var throwError = Control_Monad_Error_Class.throwError(dictMonadThrow);\n            var learnProp3 = learnProp2(dictMonadThrow);\n            var resolveProp3 = resolveProp2(dictMonadThrow);\n            return function (dictMonadWriter) {\n                var tellLog2 = tellLog1(dictMonadWriter);\n                var learnProp4 = learnProp3(dictMonadWriter);\n                var resolveProp4 = resolveProp3(dictMonadWriter);\n                return bind(modify(function (v) {\n                    return {\n                        ripe_rules: v.ripe_rules,\n                        known_props: v.known_props,\n                        active_props: v.active_props,\n                        gas: v.gas - 1 | 0\n                    };\n                }))(function (v) {\n                    return bind(ask)(function (v1) {\n                        return discard1(tellLog2({\n                            label: \"gas = \" + show8(v.gas),\n                            messages: [  ]\n                        }))(function () {\n                            return discard1(when(v.gas <= 0)(discard1(tellLog2({\n                                label: \"error\",\n                                messages: [ new Data_Tuple.Tuple(\"reason\", Halogen_HTML_Elements.div([  ])(pure(Halogen_HTML_Core.text(\"out of gas\")))), new Data_Tuple.Tuple(\"initialGas\", Halogen_HTML_Elements.div([  ])(pure(Halogen_HTML_Core.text(show8(v1.focusModule.value0.initialGas))))) ]\n                            }))(function () {\n                                return throwError({\n                                    label: Foliage_Common[\"_error\"],\n                                    source: \"fixpointFocusModule\",\n                                    description: \"ran out of gas\"\n                                });\n                            })))(function () {\n                                if (v.active_props instanceof Data_List_Types.Nil) {\n                                    return discard1(tellLog2({\n                                        label: \"done\",\n                                        messages: [ new Data_Tuple.Tuple(\"gas\", Halogen_HTML_Elements.div([  ])(pure(Halogen_HTML_Core.text(show8(v.gas))))) ]\n                                    }))(function () {\n                                        return pure1(Data_Unit.unit);\n                                    });\n                                };\n                                if (v.active_props instanceof Data_List_Types.Cons) {\n                                    return discard1(modify_(function (v2) {\n                                        return {\n                                            gas: v2.gas,\n                                            ripe_rules: v2.ripe_rules,\n                                            known_props: v2.known_props,\n                                            active_props: v.active_props.value1\n                                        };\n                                    }))(function () {\n                                        return discard1(when(v.active_props.value0.isNew)(learnProp4(v.active_props.value0.prop)))(function () {\n                                            return discard1(resolveProp4(v.active_props.value0.prop))(function () {\n                                                return fixpointFocusModule(dictMonadReader)(dictMonadState)(dictMonadThrow)(dictMonadWriter);\n                                            });\n                                        });\n                                    });\n                                };\n                                throw new Error(\"Failed pattern match at Foliage.Interpretation (line 137, column 3 - line 146, column 26): \" + [ v.active_props.constructor.name ]);\n                            });\n                        });\n                    });\n                });\n            };\n        };\n    };\n};\nvar interpProgram = function (dictMonad) {\n    var Bind1 = dictMonad.Bind1();\n    var bind = Control_Bind.bind(Bind1);\n    var discard1 = discard(Bind1);\n    var traceM1 = traceM(dictMonad);\n    var monadStateT = Control_Monad_State_Trans.monadStateT(dictMonad);\n    var fixpointFocusModule1 = fixpointFocusModule(Control_Monad_Except_Trans.monadReaderExceptT(Control_Monad_Reader_Trans.monadReaderReaderT(monadStateT)))(Control_Monad_Except_Trans.monadStateExceptT(Control_Monad_Reader_Trans.monadStateReaderT(Control_Monad_State_Trans.monadStateStateT(dictMonad))))(Control_Monad_Except_Trans.monadThrowExceptT(Control_Monad_Reader_Trans.monadReaderT(monadStateT)));\n    var pure1 = Control_Applicative.pure(dictMonad.Applicative0());\n    return function (dictMonadWriter) {\n        var fixpointFocusModule2 = fixpointFocusModule1(Control_Monad_Except_Trans.monadWriterExceptT(Control_Monad_Reader_Trans.monadWriterReaderT(Control_Monad_State_Trans.monadWriterStateT(dictMonadWriter))));\n        return function (dictMonadThrow) {\n            var lookup3 = lookup2(dictMonadThrow)(Foliage_Program[\"_Show_Name\"]);\n            return function (v) {\n                return bind(lookup3(\"module Main\")(Foliage_Program.mainModuleName)(v.value0.modules))(function (v1) {\n                    return discard1(traceM1(\"[interpProgram]\"))(function () {\n                        var env = (function () {\n                            var v2 = lmap(fold2)(partitionEither(function (rule) {\n                                return (function (v3) {\n                                    if (v3 instanceof Data_Either.Left) {\n                                        return new Data_Either.Right({\n                                            prop: v3.value0,\n                                            isNew: true\n                                        });\n                                    };\n                                    if (v3 instanceof Data_Either.Right) {\n                                        return new Data_Either.Left(Data_Map_Internal.singleton(v3.value0.hypothesis.value0.value0)(Data_List.singleton({\n                                            hypothesis: v3.value0.hypothesis,\n                                            \"rule'\": v3[\"value0\"][\"rule'\"]\n                                        })));\n                                    };\n                                    throw new Error(\"Failed pattern match at Foliage.Interpretation (line 101, column 25 - line 103, column 173): \" + [ v3.constructor.name ]);\n                                })(Foliage_Program.nextHypothesis(rule));\n                            })(Data_Map_Internal.values(v1.value0.rules)));\n                            return {\n                                gas: v1.value0.initialGas,\n                                ripe_rules: v2.value0,\n                                known_props: unions(map1(function (v3) {\n                                    return Data_Map_Internal.singleton(v3.prop.value0)(Data_List.singleton(v3.prop));\n                                })(v2.value1)),\n                                active_props: v2.value1\n                            };\n                        })();\n                        var ctx = {\n                            modules: v.value0.modules,\n                            focusModule: v1\n                        };\n                        return bind(Data_Function.flip(Control_Monad_State_Trans.runStateT)(env)(Data_Function.flip(Control_Monad_Reader_Trans.runReaderT)(ctx)(Control_Monad_Except_Trans.runExceptT(fixpointFocusModule2))))(function (v2) {\n                            return pure1(new Data_Tuple.Tuple(Data_Either.either(Data_Maybe.Just.create)(Data_Function[\"const\"](Data_Maybe.Nothing.value))(v2.value0), v2.value1));\n                        });\n                    });\n                });\n            };\n        };\n    };\n};\nvar _Newtype_Env = {\n    Coercible0: function () {\n        return undefined;\n    }\n};\nvar _Newtype_Ctx = {\n    Coercible0: function () {\n        return undefined;\n    }\n};\nexport {\n    Ctx,\n    Env,\n    Log,\n    tellLog,\n    interpProgram,\n    fixpointFocusModule,\n    learnProp,\n    joinProps,\n    insertProp,\n    resolveProp,\n    deferProp,\n    deferRipeRule,\n    applyRipeRuleToProp,\n    processSideHypotheses,\n    processSideHypothesis,\n    evaluateTerm,\n    compareProp,\n    compareTerm,\n    throwError_compareTerm,\n    lookup,\n    partitionEither,\n    _Newtype_Ctx,\n    _Newtype_Env\n};\n", "export function _read(nothing, just, value) {\n  var tag = Object.prototype.toString.call(value);\n  if (tag.indexOf(\"[object HTML\") === 0 && tag.indexOf(\"Element]\") === tag.length - 8) {\n    return just(value);\n  } else {\n    return nothing;\n  }\n}\n\n// ----------------------------------------------------------------------------\n\nexport function title(elt) {\n  return function () {\n    return elt.title;\n  };\n}\n\nexport function setTitle(title) {\n  return function (elt) {\n    return function () {\n      elt.title = title;\n    };\n  };\n}\n\n// ----------------------------------------------------------------------------\n\nexport function lang(elt) {\n  return function () {\n    return elt.lang;\n  };\n}\n\nexport function setLang(lang) {\n  return function (elt) {\n    return function () {\n      elt.lang = lang;\n    };\n  };\n}\n\n// ----------------------------------------------------------------------------\n\nexport function dir(elt) {\n  return function () {\n    return elt.dir;\n  };\n}\n\nexport function setDir(dir) {\n  return function (elt) {\n    return function () {\n      elt.dir = dir;\n    };\n  };\n}\n\n// ----------------------------------------------------------------------------\n\nexport function hidden(elt) {\n  return function () {\n    return elt.hidden;\n  };\n}\n\nexport function setHidden(hidden) {\n  return function (elt) {\n    return function () {\n      elt.hidden = hidden;\n    };\n  };\n}\n\n// ----------------------------------------------------------------------------\n\nexport function tabIndex(elt) {\n  return function () {\n    return elt.tabIndex;\n  };\n}\n\nexport function setTabIndex(tabIndex) {\n  return function (elt) {\n    return function () {\n      elt.tabIndex = tabIndex;\n    };\n  };\n}\n\n// ----------------------------------------------------------------------------\n\nexport function draggable(elt) {\n  return function () {\n    return elt.draggable;\n  };\n}\n\nexport function setDraggable(draggable) {\n  return function (elt) {\n    return function () {\n      elt.draggable = draggable;\n    };\n  };\n}\n\n// ----------------------------------------------------------------------------\n\nexport function contentEditable(elt) {\n  return function () {\n    return elt.contentEditable;\n  };\n}\n\nexport function setContentEditable(contentEditable) {\n  return function (elt) {\n    return function () {\n      elt.contentEditable = contentEditable;\n    };\n  };\n}\n\nexport function isContentEditable(elt) {\n  return function () {\n    return elt.isContentEditable;\n  };\n}\n\n// ----------------------------------------------------------------------------\n\nexport function spellcheck(elt) {\n  return function () {\n    return elt.spellcheck;\n  };\n}\n\nexport function setSpellcheck(spellcheck) {\n  return function (elt) {\n    return function () {\n      elt.spellcheck = spellcheck;\n    };\n  };\n}\n\n// ----------------------------------------------------------------------------\n\nexport function click(elt) {\n  return function () {\n    return elt.click();\n  };\n}\n\nexport function focus(elt) {\n  return function () {\n    return elt.focus();\n  };\n}\n\nexport function blur(elt) {\n  return function () {\n    return elt.blur();\n  };\n}\n\n// - CSSOM ---------------------------------------------------------------------\n\nexport function _offsetParent(el) {\n  return function () {\n    return el.offsetParent;\n  };\n}\n\nexport function offsetTop(el) {\n  return function () {\n    return el.offsetTop;\n  };\n}\n\nexport function offsetLeft(el) {\n  return function () {\n    return el.offsetLeft;\n  };\n}\n\nexport function offsetWidth(el) {\n  return function () {\n    return el.offsetWidth;\n  };\n}\n\nexport function offsetHeight(el) {\n  return function () {\n    return el.offsetHeight;\n  };\n}\n", "// Generated by purs version 0.15.15\nimport * as $foreign from \"./foreign.js\";\nimport * as Data_Functor from \"../Data.Functor/index.js\";\nimport * as Data_Maybe from \"../Data.Maybe/index.js\";\nimport * as Data_Nullable from \"../Data.Nullable/index.js\";\nimport * as Effect from \"../Effect/index.js\";\nimport * as Unsafe_Coerce from \"../Unsafe.Coerce/index.js\";\nvar toParentNode = Unsafe_Coerce.unsafeCoerce;\nvar toNonDocumentTypeChildNode = Unsafe_Coerce.unsafeCoerce;\nvar toNode = Unsafe_Coerce.unsafeCoerce;\nvar toEventTarget = Unsafe_Coerce.unsafeCoerce;\nvar toElement = Unsafe_Coerce.unsafeCoerce;\nvar toChildNode = Unsafe_Coerce.unsafeCoerce;\nvar offsetParent = /* #__PURE__ */ (function () {\n    var $2 = Data_Functor.map(Effect.functorEffect)(Data_Nullable.toMaybe);\n    return function ($3) {\n        return $2($foreign[\"_offsetParent\"]($3));\n    };\n})();\nvar fromParentNode = function (x) {\n    return $foreign[\"_read\"](Data_Maybe.Nothing.value, Data_Maybe.Just.create, x);\n};\nvar fromNonDocumentTypeChildNode = function (x) {\n    return $foreign[\"_read\"](Data_Maybe.Nothing.value, Data_Maybe.Just.create, x);\n};\nvar fromNode = function (x) {\n    return $foreign[\"_read\"](Data_Maybe.Nothing.value, Data_Maybe.Just.create, x);\n};\nvar fromEventTarget = function (x) {\n    return $foreign[\"_read\"](Data_Maybe.Nothing.value, Data_Maybe.Just.create, x);\n};\nvar fromElement = function (x) {\n    return $foreign[\"_read\"](Data_Maybe.Nothing.value, Data_Maybe.Just.create, x);\n};\nvar fromChildNode = function (x) {\n    return $foreign[\"_read\"](Data_Maybe.Nothing.value, Data_Maybe.Just.create, x);\n};\nexport {\n    title,\n    setTitle,\n    lang,\n    setLang,\n    dir,\n    setDir,\n    hidden,\n    setHidden,\n    tabIndex,\n    setTabIndex,\n    draggable,\n    setDraggable,\n    contentEditable,\n    setContentEditable,\n    isContentEditable,\n    spellcheck,\n    setSpellcheck,\n    click,\n    focus,\n    blur,\n    offsetTop,\n    offsetLeft,\n    offsetWidth,\n    offsetHeight\n} from \"./foreign.js\";\nexport {\n    fromElement,\n    fromNode,\n    fromChildNode,\n    fromNonDocumentTypeChildNode,\n    fromParentNode,\n    fromEventTarget,\n    toElement,\n    toNode,\n    toChildNode,\n    toNonDocumentTypeChildNode,\n    toParentNode,\n    toEventTarget,\n    offsetParent\n};\n", "// Generated by purs version 0.15.15\nimport * as Control_Bind from \"../Control.Bind/index.js\";\nimport * as Control_Category from \"../Control.Category/index.js\";\nimport * as Control_Monad_State_Class from \"../Control.Monad.State.Class/index.js\";\nimport * as Control_Monad_Trans_Class from \"../Control.Monad.Trans.Class/index.js\";\nimport * as Data_Functor from \"../Data.Functor/index.js\";\nimport * as Data_Maybe from \"../Data.Maybe/index.js\";\nimport * as Data_Unit from \"../Data.Unit/index.js\";\nimport * as Effect_Aff_Class from \"../Effect.Aff.Class/index.js\";\nimport * as Effect_Class from \"../Effect.Class/index.js\";\nimport * as Halogen_Query_HalogenM from \"../Halogen.Query.HalogenM/index.js\";\nimport * as Halogen_Query_HalogenQ from \"../Halogen.Query.HalogenQ/index.js\";\nimport * as Halogen_Query_Input from \"../Halogen.Query.Input/index.js\";\nimport * as Web_HTML_HTMLElement from \"../Web.HTML.HTMLElement/index.js\";\nvar $$void = /* #__PURE__ */ Data_Functor[\"void\"](Halogen_Query_HalogenM.functorHalogenM);\nvar queryAll = /* #__PURE__ */ Halogen_Query_HalogenM.queryAll();\nvar query = /* #__PURE__ */ Halogen_Query_HalogenM.query();\nvar identity = /* #__PURE__ */ Control_Category.identity(Control_Category.categoryFn);\nvar bindFlipped = /* #__PURE__ */ Control_Bind.bindFlipped(Data_Maybe.bindMaybe);\nvar tellAll = function () {\n    return function (dictIsSymbol) {\n        var queryAll1 = queryAll(dictIsSymbol);\n        return function (dictOrd) {\n            var queryAll2 = queryAll1(dictOrd);\n            return function (label) {\n                return function (req) {\n                    return $$void(queryAll2(label)(req(Data_Unit.unit)));\n                };\n            };\n        };\n    };\n};\nvar tell = function () {\n    return function (dictIsSymbol) {\n        var query1 = query(dictIsSymbol);\n        return function (dictOrd) {\n            var query2 = query1(dictOrd);\n            return function (slot) {\n                return function (label) {\n                    return function (req) {\n                        return $$void(query2(slot)(label)(req(Data_Unit.unit)));\n                    };\n                };\n            };\n        };\n    };\n};\nvar requestAll = function () {\n    return function (dictIsSymbol) {\n        var queryAll1 = queryAll(dictIsSymbol);\n        return function (dictOrd) {\n            var queryAll2 = queryAll1(dictOrd);\n            return function (label) {\n                return function (req) {\n                    return queryAll2(label)(req(identity));\n                };\n            };\n        };\n    };\n};\nvar request = function () {\n    return function (dictIsSymbol) {\n        var query1 = query(dictIsSymbol);\n        return function (dictOrd) {\n            var query2 = query1(dictOrd);\n            return function (slot) {\n                return function (label) {\n                    return function (req) {\n                        return query2(slot)(label)(req(identity));\n                    };\n                };\n            };\n        };\n    };\n};\nvar mkTell = function (act) {\n    return act(Data_Unit.unit);\n};\nvar mkRequest = function (req) {\n    return req(identity);\n};\nvar getHTMLElementRef = /* #__PURE__ */ (function () {\n    var $24 = Data_Functor.map(Halogen_Query_HalogenM.functorHalogenM)(function (v) {\n        return bindFlipped(Web_HTML_HTMLElement.fromElement)(v);\n    });\n    return function ($25) {\n        return $24(Halogen_Query_HalogenM.getRef($25));\n    };\n})();\nexport {\n    mkTell,\n    tell,\n    tellAll,\n    mkRequest,\n    request,\n    requestAll,\n    getHTMLElementRef\n};\nexport {\n    get,\n    gets,\n    modify,\n    modify_,\n    put\n} from \"../Control.Monad.State.Class/index.js\";\nexport {\n    lift\n} from \"../Control.Monad.Trans.Class/index.js\";\nexport {\n    liftAff\n} from \"../Effect.Aff.Class/index.js\";\nexport {\n    liftEffect\n} from \"../Effect.Class/index.js\";\nexport {\n    ChildQuery,\n    Fork,\n    GetRef,\n    Join,\n    Kill,\n    Lift,\n    Par,\n    Raise,\n    State,\n    Subscribe,\n    Unsubscribe,\n    HalogenM,\n    fork,\n    getRef,\n    join,\n    kill,\n    query,\n    queryAll,\n    raise,\n    subscribe,\n    subscribe$prime,\n    unsubscribe\n} from \"../Halogen.Query.HalogenM/index.js\";\nexport {\n    Action,\n    Finalize,\n    Initialize,\n    Query,\n    Receive\n} from \"../Halogen.Query.HalogenQ/index.js\";\nexport {\n    RefLabel\n} from \"../Halogen.Query.Input/index.js\";\n", "// Generated by purs version 0.15.15\nimport * as Control_Applicative from \"../Control.Applicative/index.js\";\nimport * as Control_Bind from \"../Control.Bind/index.js\";\nimport * as Control_Monad_Except_Trans from \"../Control.Monad.Except.Trans/index.js\";\nimport * as Control_Monad_Trans_Class from \"../Control.Monad.Trans.Class/index.js\";\nimport * as Control_Monad_Writer_Trans from \"../Control.Monad.Writer.Trans/index.js\";\nimport * as Data_Either from \"../Data.Either/index.js\";\nimport * as Data_Functor from \"../Data.Functor/index.js\";\nimport * as Data_Lazy from \"../Data.Lazy/index.js\";\nimport * as Data_Maybe from \"../Data.Maybe/index.js\";\nimport * as Data_Monoid from \"../Data.Monoid/index.js\";\nimport * as Data_Ord from \"../Data.Ord/index.js\";\nimport * as Data_Semigroup from \"../Data.Semigroup/index.js\";\nimport * as Data_Show from \"../Data.Show/index.js\";\nimport * as Data_Unit from \"../Data.Unit/index.js\";\nimport * as Debug from \"../Debug/index.js\";\nimport * as Effect_Aff from \"../Effect.Aff/index.js\";\nimport * as Effect_Class_Console from \"../Effect.Class.Console/index.js\";\nimport * as Foliage_App_Console_Component from \"../Foliage.App.Console.Component/index.js\";\nimport * as Foliage_App_Editor_Component from \"../Foliage.App.Editor.Component/index.js\";\nimport * as Foliage_App_Style from \"../Foliage.App.Style/index.js\";\nimport * as Foliage_App_Viewer_Component from \"../Foliage.App.Viewer.Component/index.js\";\nimport * as Foliage_Common from \"../Foliage.Common/index.js\";\nimport * as Foliage_Example_Typing from \"../Foliage.Example.Typing/index.js\";\nimport * as Foliage_Interpretation from \"../Foliage.Interpretation/index.js\";\nimport * as Halogen_Component from \"../Halogen.Component/index.js\";\nimport * as Halogen_HTML from \"../Halogen.HTML/index.js\";\nimport * as Halogen_HTML_Core from \"../Halogen.HTML.Core/index.js\";\nimport * as Halogen_HTML_Elements from \"../Halogen.HTML.Elements/index.js\";\nimport * as Halogen_Query from \"../Halogen.Query/index.js\";\nimport * as Halogen_Query_HalogenM from \"../Halogen.Query.HalogenM/index.js\";\nimport * as Type_Proxy from \"../Type.Proxy/index.js\";\nimport * as Unsafe from \"../Unsafe/index.js\";\nvar append = /* #__PURE__ */ Data_Semigroup.append(Data_Semigroup.semigroupArray);\nvar slot = /* #__PURE__ */ Halogen_HTML.slot();\nvar editorIsSymbol = {\n    reflectSymbol: function () {\n        return \"editor\";\n    }\n};\nvar slot1 = /* #__PURE__ */ slot(editorIsSymbol)(Data_Ord.ordUnit);\nvar viewerIsSymbol = {\n    reflectSymbol: function () {\n        return \"viewer\";\n    }\n};\nvar slot2 = /* #__PURE__ */ slot(viewerIsSymbol)(Data_Ord.ordUnit);\nvar consoleIsSymbol = {\n    reflectSymbol: function () {\n        return \"console\";\n    }\n};\nvar slot3 = /* #__PURE__ */ slot(consoleIsSymbol)(Data_Ord.ordUnit);\nvar discard = /* #__PURE__ */ Control_Bind.discard(Control_Bind.discardUnit);\nvar discard1 = /* #__PURE__ */ discard(Halogen_Query_HalogenM.bindHalogenM);\nvar tell = /* #__PURE__ */ Halogen_Query.tell();\nvar tell1 = /* #__PURE__ */ tell(viewerIsSymbol)(Data_Ord.ordUnit);\nvar tell2 = /* #__PURE__ */ tell(consoleIsSymbol)(Data_Ord.ordUnit);\nvar pure = /* #__PURE__ */ Control_Applicative.pure(Halogen_Query_HalogenM.applicativeHalogenM);\nvar bind = /* #__PURE__ */ Control_Bind.bind(Halogen_Query_HalogenM.bindHalogenM);\nvar mapFlipped = /* #__PURE__ */ Data_Functor.mapFlipped(Halogen_Query_HalogenM.functorHalogenM);\nvar request = /* #__PURE__ */ Halogen_Query.request()(editorIsSymbol)(Data_Ord.ordUnit);\nvar log = /* #__PURE__ */ Effect_Class_Console.log(/* #__PURE__ */ Halogen_Query_HalogenM.monadEffectHalogenM(Effect_Aff.monadEffectAff));\nvar bindExceptT = /* #__PURE__ */ Control_Monad_Except_Trans.bindExceptT(Halogen_Query_HalogenM.monadHalogenM);\nvar composeKleisli = /* #__PURE__ */ Control_Bind.composeKleisli(bindExceptT);\nvar discard2 = /* #__PURE__ */ discard(bindExceptT);\nvar lift = /* #__PURE__ */ Control_Monad_Trans_Class.lift(Control_Monad_Except_Trans.monadTransExceptT)(Halogen_Query_HalogenM.monadHalogenM);\nvar pure1 = /* #__PURE__ */ Control_Applicative.pure(/* #__PURE__ */ Control_Monad_Except_Trans.applicativeExceptT(Halogen_Query_HalogenM.monadHalogenM));\nvar monadExceptT = /* #__PURE__ */ Control_Monad_Except_Trans.monadExceptT(Halogen_Query_HalogenM.monadHalogenM);\nvar interpProgram = /* #__PURE__ */ Foliage_Interpretation.interpProgram(/* #__PURE__ */ Control_Monad_Writer_Trans.monadWriterT(Data_Monoid.monoidArray)(monadExceptT))(/* #__PURE__ */ Control_Monad_Writer_Trans.monadWriterWriterT(Data_Monoid.monoidArray)(monadExceptT))(/* #__PURE__ */ Control_Monad_Writer_Trans.monadThrowWriterT(Data_Monoid.monoidArray)(/* #__PURE__ */ Control_Monad_Except_Trans.monadThrowExceptT(Halogen_Query_HalogenM.monadHalogenM)));\nvar traceM = /* #__PURE__ */ Debug.traceM()(Halogen_Query_HalogenM.monadHalogenM);\nvar show = /* #__PURE__ */ Data_Show.show(/* #__PURE__ */ Foliage_Common[\"_Show_Exc\"]({\n    reflectSymbol: function () {\n        return \"error\";\n    }\n}));\nvar EditorOutput = /* #__PURE__ */ (function () {\n    function EditorOutput(value0) {\n        this.value0 = value0;\n    };\n    EditorOutput.create = function (value0) {\n        return new EditorOutput(value0);\n    };\n    return EditorOutput;\n})();\nvar ViewerOutput = /* #__PURE__ */ (function () {\n    function ViewerOutput(value0) {\n        this.value0 = value0;\n    };\n    ViewerOutput.create = function (value0) {\n        return new ViewerOutput(value0);\n    };\n    return ViewerOutput;\n})();\nvar ConsoleOutput = /* #__PURE__ */ (function () {\n    function ConsoleOutput(value0) {\n        this.value0 = value0;\n    };\n    ConsoleOutput.create = function (value0) {\n        return new ConsoleOutput(value0);\n    };\n    return ConsoleOutput;\n})();\nvar default_program = Foliage_Example_Typing.test;\nvar _viewer = /* #__PURE__ */ (function () {\n    return Type_Proxy[\"Proxy\"].value;\n})();\nvar _editor = /* #__PURE__ */ (function () {\n    return Type_Proxy[\"Proxy\"].value;\n})();\nvar _console = /* #__PURE__ */ (function () {\n    return Type_Proxy[\"Proxy\"].value;\n})();\nvar component = /* #__PURE__ */ (function () {\n    var render = function (state) {\n        return Halogen_HTML_Elements.div([ Foliage_App_Style.style([ \"width: 100%\" ]) ])([ Halogen_HTML_Elements.div([ Foliage_App_Style.style(append(Foliage_App_Style.padding_big)(append(Foliage_App_Style.flex_column)([ \"align-items: center\" ]))) ])([ Halogen_HTML_Elements.div([ Foliage_App_Style.style(append([ \"height: 2em\" ])(append([ \"vertical-align: center\", \"text-align: center\" ])(append(Foliage_App_Style.font_fancy)(Foliage_App_Style.underline)))) ])([ Halogen_HTML_Core.text(\"Foliage\") ]), Halogen_HTML_Elements.div([ Foliage_App_Style.style(append([ \"width: calc(100vw - 2em)\", \"height: calc(100vh - 5em)\" ])(append(Foliage_App_Style.flex_row)([ \"gap: 0\" ]))) ])([ Halogen_HTML_Elements.div([ Foliage_App_Style.style(append([ \"height: 100%\", \"width: 50%\", \"overflow: scroll\" ])(Foliage_App_Style.flex_column)) ])([ Halogen_HTML_Elements.div([ Foliage_App_Style.style(Foliage_App_Style.padding_small) ])([ slot1(_editor)(Data_Unit.unit)(Foliage_App_Editor_Component.component)({\n            program: new Data_Maybe.Just(Data_Lazy.force(default_program))\n        })(EditorOutput.create) ]) ]), Halogen_HTML_Elements.div([ Foliage_App_Style.style(append([ \"height: 100%\", \"width: 50%\", \"overflow: scroll\" ])(Foliage_App_Style.flex_column)) ])([ Halogen_HTML_Elements.div([ Foliage_App_Style.style(Foliage_App_Style.padding_small) ])([ slot2(_viewer)(Data_Unit.unit)(Foliage_App_Viewer_Component.component)({})(ViewerOutput.create) ]) ]), Halogen_HTML_Elements.div([ Foliage_App_Style.style(append([ \"height: 100%\", \"width: 50%\", \"overflow: scroll\" ])(Foliage_App_Style.flex_column)) ])([ Halogen_HTML_Elements.div([ Foliage_App_Style.style(Foliage_App_Style.padding_small) ])([ slot3(_console)(Data_Unit.unit)(Foliage_App_Console_Component.component)({})(ConsoleOutput.create) ]) ]) ]) ]) ]);\n    };\n    var initialState = function (input) {\n        return {};\n    };\n    var handleAction = function (v) {\n        if (v instanceof EditorOutput) {\n            return discard1(tell1(_viewer)(Data_Unit.unit)(Foliage_App_Viewer_Component.SetResult.create(Data_Maybe.Nothing.value)))(function () {\n                return discard1(tell2(_console)(Data_Unit.unit)(Foliage_App_Console_Component.SetLogs.create([  ])))(function () {\n                    return pure(Data_Unit.unit);\n                });\n            });\n        };\n        if (v instanceof ViewerOutput) {\n            return bind(mapFlipped(request(_editor)(Data_Unit.unit)(Foliage_App_Editor_Component.GetProgram.create))(Unsafe.fromJust(\"editor must exist\")))(function (prog) {\n                return discard1(tell1(_viewer)(Data_Unit.unit)(Foliage_App_Viewer_Component.SetResult.create(new Data_Maybe.Just(Foliage_App_Viewer_Component.PendingResult.value))))(function () {\n                    return discard1(log(\"[App.run]\"))(function () {\n                        return discard1(bind(Control_Monad_Except_Trans.runExceptT(composeKleisli(Control_Monad_Writer_Trans.runWriterT)(function (v1) {\n                            return discard2(lift(tell2(_console)(Data_Unit.unit)(Foliage_App_Console_Component.SetLogs.create(v1.value1))))(function () {\n                                return pure1(v1.value0);\n                            });\n                        })(interpProgram(prog))))(function (v1) {\n                            if (v1 instanceof Data_Either.Left) {\n                                return discard1(traceM(show(v1.value0)))(function () {\n                                    return tell1(_viewer)(Data_Unit.unit)(Foliage_App_Viewer_Component.SetResult.create(new Data_Maybe.Just(new Foliage_App_Viewer_Component.ErrResult({\n                                        err: v1.value0,\n                                        env: Data_Maybe.Nothing.value\n                                    }))));\n                                });\n                            };\n                            if (v1 instanceof Data_Either.Right) {\n                                if (v1.value0.value0 instanceof Data_Maybe.Nothing) {\n                                    return tell1(_viewer)(Data_Unit.unit)(Foliage_App_Viewer_Component.SetResult.create(new Data_Maybe.Just(new Foliage_App_Viewer_Component.OkResult({\n                                        env: v1.value0.value1\n                                    }))));\n                                };\n                                if (v1.value0.value0 instanceof Data_Maybe.Just) {\n                                    return tell1(_viewer)(Data_Unit.unit)(Foliage_App_Viewer_Component.SetResult.create(new Data_Maybe.Just(new Foliage_App_Viewer_Component.ErrResult({\n                                        err: v1.value0.value0.value0,\n                                        env: new Data_Maybe.Just(v1.value0.value1)\n                                    }))));\n                                };\n                                throw new Error(\"Failed pattern match at Foliage.App.Component (line 70, column 17 - line 72, column 138): \" + [ v1.value0.value0.constructor.name ]);\n                            };\n                            throw new Error(\"Failed pattern match at Foliage.App.Component (line 65, column 15 - line 72, column 138): \" + [ v1.constructor.name ]);\n                        }))(function () {\n                            return pure(Data_Unit.unit);\n                        });\n                    });\n                });\n            });\n        };\n        if (v instanceof ConsoleOutput) {\n            if (v.value0 instanceof Foliage_App_Console_Component.ShowIntermediateEnv) {\n                return discard1(tell1(_viewer)(Data_Unit.unit)(Foliage_App_Viewer_Component.SetIntermediateEnv.create(new Data_Maybe.Just(v.value0.value0))))(function () {\n                    return pure(Data_Unit.unit);\n                });\n            };\n            if (v.value0 instanceof Foliage_App_Console_Component.HideIntermediateEnv) {\n                return discard1(tell1(_viewer)(Data_Unit.unit)(Foliage_App_Viewer_Component.SetIntermediateEnv.create(Data_Maybe.Nothing.value)))(function () {\n                    return pure(Data_Unit.unit);\n                });\n            };\n            throw new Error(\"Failed pattern match at Foliage.App.Component (line 74, column 29 - line 80, column 18): \" + [ v.value0.constructor.name ]);\n        };\n        throw new Error(\"Failed pattern match at Foliage.App.Component (line 45, column 18 - line 80, column 18): \" + [ v.constructor.name ]);\n    };\n    var $$eval = Halogen_Component.mkEval({\n        handleQuery: Halogen_Component.defaultEval.handleQuery,\n        receive: Halogen_Component.defaultEval.receive,\n        initialize: Halogen_Component.defaultEval.initialize,\n        finalize: Halogen_Component.defaultEval.finalize,\n        handleAction: handleAction\n    });\n    return Halogen_Component.mkComponent({\n        initialState: initialState,\n        \"eval\": $$eval,\n        render: render\n    });\n})();\nexport {\n    default_program,\n    EditorOutput,\n    ViewerOutput,\n    ConsoleOutput,\n    component,\n    _viewer,\n    _editor,\n    _console\n};\n", "const windowImpl = function () {\n  return window;\n};\nexport { windowImpl as window };\n", "export function _documentElement(doc) {\n  return doc.documentElement;\n}\n\nexport function _head(doc) {\n  return doc.head;\n}\n\nexport function _body(doc) {\n  return doc.body;\n}\n\nexport function _readyState(doc) {\n  return doc.readyState;\n}\n\nexport function _visibilityState(doc) {\n  return doc.readyState;\n}\n\nexport function _activeElement(doc) {\n  return doc.activeElement;\n}\n\nexport function _currentScript(doc) {\n  return doc.currentScript;\n}\n\nexport function _referrer(doc) {\n  return doc.referrer;\n}\n\nexport function _title(doc) {\n  return doc.title;\n}\n\nexport function _setTitle(title, doc) {\n  doc.title = title;\n}\n", "// Generated by purs version 0.15.15\nimport * as Data_Maybe from \"../Data.Maybe/index.js\";\nimport * as Data_Ordering from \"../Data.Ordering/index.js\";\nvar Loading = /* #__PURE__ */ (function () {\n    function Loading() {\n\n    };\n    Loading.value = new Loading();\n    return Loading;\n})();\nvar Interactive = /* #__PURE__ */ (function () {\n    function Interactive() {\n\n    };\n    Interactive.value = new Interactive();\n    return Interactive;\n})();\nvar Complete = /* #__PURE__ */ (function () {\n    function Complete() {\n\n    };\n    Complete.value = new Complete();\n    return Complete;\n})();\nvar showReadyState = {\n    show: function (v) {\n        if (v instanceof Loading) {\n            return \"Loading\";\n        };\n        if (v instanceof Interactive) {\n            return \"Interactive\";\n        };\n        if (v instanceof Complete) {\n            return \"Complete\";\n        };\n        throw new Error(\"Failed pattern match at Web.HTML.HTMLDocument.ReadyState (line 16, column 10 - line 19, column 27): \" + [ v.constructor.name ]);\n    }\n};\nvar print = function (v) {\n    if (v instanceof Loading) {\n        return \"loading\";\n    };\n    if (v instanceof Interactive) {\n        return \"interactive\";\n    };\n    if (v instanceof Complete) {\n        return \"complete\";\n    };\n    throw new Error(\"Failed pattern match at Web.HTML.HTMLDocument.ReadyState (line 22, column 9 - line 25, column 25): \" + [ v.constructor.name ]);\n};\nvar parse = function (v) {\n    if (v === \"loading\") {\n        return new Data_Maybe.Just(Loading.value);\n    };\n    if (v === \"interactive\") {\n        return new Data_Maybe.Just(Interactive.value);\n    };\n    if (v === \"complete\") {\n        return new Data_Maybe.Just(Complete.value);\n    };\n    return Data_Maybe.Nothing.value;\n};\nvar eqReadyState = {\n    eq: function (x) {\n        return function (y) {\n            if (x instanceof Loading && y instanceof Loading) {\n                return true;\n            };\n            if (x instanceof Interactive && y instanceof Interactive) {\n                return true;\n            };\n            if (x instanceof Complete && y instanceof Complete) {\n                return true;\n            };\n            return false;\n        };\n    }\n};\nvar ordReadyState = {\n    compare: function (x) {\n        return function (y) {\n            if (x instanceof Loading && y instanceof Loading) {\n                return Data_Ordering.EQ.value;\n            };\n            if (x instanceof Loading) {\n                return Data_Ordering.LT.value;\n            };\n            if (y instanceof Loading) {\n                return Data_Ordering.GT.value;\n            };\n            if (x instanceof Interactive && y instanceof Interactive) {\n                return Data_Ordering.EQ.value;\n            };\n            if (x instanceof Interactive) {\n                return Data_Ordering.LT.value;\n            };\n            if (y instanceof Interactive) {\n                return Data_Ordering.GT.value;\n            };\n            if (x instanceof Complete && y instanceof Complete) {\n                return Data_Ordering.EQ.value;\n            };\n            throw new Error(\"Failed pattern match at Web.HTML.HTMLDocument.ReadyState (line 0, column 0 - line 0, column 0): \" + [ x.constructor.name, y.constructor.name ]);\n        };\n    },\n    Eq0: function () {\n        return eqReadyState;\n    }\n};\nexport {\n    Loading,\n    Interactive,\n    Complete,\n    print,\n    parse,\n    eqReadyState,\n    ordReadyState,\n    showReadyState\n};\n", "// Generated by purs version 0.15.15\nimport * as $foreign from \"./foreign.js\";\nimport * as Data_Functor from \"../Data.Functor/index.js\";\nimport * as Data_Maybe from \"../Data.Maybe/index.js\";\nimport * as Data_Nullable from \"../Data.Nullable/index.js\";\nimport * as Effect from \"../Effect/index.js\";\nimport * as Unsafe_Coerce from \"../Unsafe.Coerce/index.js\";\nimport * as Web_HTML_HTMLDocument_ReadyState from \"../Web.HTML.HTMLDocument.ReadyState/index.js\";\nimport * as Web_HTML_HTMLDocument_VisibilityState from \"../Web.HTML.HTMLDocument.VisibilityState/index.js\";\nimport * as Web_Internal_FFI from \"../Web.Internal.FFI/index.js\";\nvar map = /* #__PURE__ */ Data_Functor.map(Effect.functorEffect);\nvar visibilityState = function (doc) {\n    return map((function () {\n        var $2 = Data_Maybe.fromMaybe(Web_HTML_HTMLDocument_VisibilityState.Visible.value);\n        return function ($3) {\n            return $2(Web_HTML_HTMLDocument_VisibilityState.parse($3));\n        };\n    })())(function () {\n        return $foreign[\"_visibilityState\"](doc);\n    });\n};\nvar toParentNode = Unsafe_Coerce.unsafeCoerce;\nvar toNonElementParentNode = Unsafe_Coerce.unsafeCoerce;\nvar toNode = Unsafe_Coerce.unsafeCoerce;\nvar toEventTarget = Unsafe_Coerce.unsafeCoerce;\nvar toDocument = Unsafe_Coerce.unsafeCoerce;\nvar title = function (doc) {\n    return function () {\n        return $foreign[\"_title\"](doc);\n    };\n};\nvar setTitle = function (newTitle) {\n    return function (doc) {\n        return function () {\n            return $foreign[\"_setTitle\"](newTitle, doc);\n        };\n    };\n};\nvar referrer = function (doc) {\n    return function () {\n        return $foreign[\"_referrer\"](doc);\n    };\n};\nvar readyState = function (doc) {\n    return map((function () {\n        var $4 = Data_Maybe.fromMaybe(Web_HTML_HTMLDocument_ReadyState.Loading.value);\n        return function ($5) {\n            return $4(Web_HTML_HTMLDocument_ReadyState.parse($5));\n        };\n    })())(function () {\n        return $foreign[\"_readyState\"](doc);\n    });\n};\nvar head = function (doc) {\n    return map(Data_Nullable.toMaybe)(function () {\n        return $foreign[\"_head\"](doc);\n    });\n};\nvar fromParentNode = /* #__PURE__ */ Web_Internal_FFI.unsafeReadProtoTagged(\"HTMLDocument\");\nvar fromNonElementParentNode = /* #__PURE__ */ Web_Internal_FFI.unsafeReadProtoTagged(\"HTMLDocument\");\nvar fromNode = /* #__PURE__ */ Web_Internal_FFI.unsafeReadProtoTagged(\"HTMLDocument\");\nvar fromEventTarget = /* #__PURE__ */ Web_Internal_FFI.unsafeReadProtoTagged(\"HTMLDocument\");\nvar fromDocument = /* #__PURE__ */ Web_Internal_FFI.unsafeReadProtoTagged(\"HTMLDocument\");\nvar documentElement = function (doc) {\n    return map(Data_Nullable.toMaybe)(function () {\n        return $foreign[\"_documentElement\"](doc);\n    });\n};\nvar currentScript = function (doc) {\n    return map(Data_Nullable.toMaybe)(function () {\n        return $foreign[\"_currentScript\"](doc);\n    });\n};\nvar body = function (doc) {\n    return map(Data_Nullable.toMaybe)(function () {\n        return $foreign[\"_body\"](doc);\n    });\n};\nvar activeElement = function (doc) {\n    return map(Data_Nullable.toMaybe)(function () {\n        return $foreign[\"_activeElement\"](doc);\n    });\n};\nexport {\n    fromDocument,\n    fromNode,\n    fromParentNode,\n    fromNonElementParentNode,\n    fromEventTarget,\n    toDocument,\n    toNode,\n    toParentNode,\n    toNonElementParentNode,\n    toEventTarget,\n    documentElement,\n    head,\n    body,\n    readyState,\n    visibilityState,\n    activeElement,\n    currentScript,\n    referrer,\n    title,\n    setTitle\n};\n", "export function document(window) {\n  return function () {\n    return window.document;\n  };\n}\n\nexport function navigator(window) {\n  return function () {\n    return window.navigator;\n  };\n}\n\nexport function location(window) {\n  return function () {\n    return window.location;\n  };\n}\n\nexport function history(window) {\n  return function() {\n    return window.history;\n  };\n}\n\nexport function innerWidth(window) {\n  return function () {\n    return window.innerWidth;\n  };\n}\n\nexport function innerHeight(window) {\n  return function () {\n    return window.innerHeight;\n  };\n}\n\nexport function alert(str) {\n  return function (window) {\n    return function () {\n      window.alert(str);\n    };\n  };\n}\n\nexport function confirm(str) {\n  return function (window) {\n    return function () {\n      return window.confirm(str);\n    };\n  };\n}\n\nexport function moveBy(xDelta) {\n  return function (yDelta) {\n    return function (window) {\n      return function () {\n        window.moveBy(xDelta, yDelta);\n      };\n    };\n  };\n}\n\nexport function moveTo(width) {\n  return function (height) {\n    return function (window) {\n      return function () {\n        window.moveTo(width, height);\n      };\n    };\n  };\n}\n\nexport function _open(url) {\n  return function (name) {\n    return function (features) {\n      return function (window) {\n        return function () {\n          return window.open(url, name, features);\n        };\n      };\n    };\n  };\n}\n\nexport function close(window) {\n  return function () {\n    return window.close();\n  };\n}\n\nexport function outerHeight(window) {\n  return function () {\n    return window.outerHeight;\n  };\n}\n\nexport function outerWidth(window) {\n  return function () {\n    return window.outerWidth;\n  };\n}\n\nexport function print(window) {\n  return function () {\n    window.print();\n  };\n}\n\nexport function _prompt(str) {\n  return function (defaultText) {\n    return function (window) {\n      return function () {\n        return window.prompt(str, defaultText);\n      };\n    };\n  };\n}\n\nexport function resizeBy(xDelta) {\n  return function (yDelta) {\n    return function (window) {\n      return function () {\n        window.resizeBy(xDelta, yDelta);\n      };\n    };\n  };\n}\n\nexport function resizeTo(width) {\n  return function (height) {\n    return function (window) {\n      return function () {\n        window.resizeTo(width, height);\n      };\n    };\n  };\n}\n\nexport function screenX(window) {\n  return function () {\n    return window.screenX;\n  };\n}\n\nexport function screenY(window) {\n  return function () {\n    return window.screenY;\n  };\n}\n\nexport function scroll(xCoord) {\n  return function (yCoord) {\n    return function (window) {\n      return function () {\n        window.scroll(xCoord, yCoord);\n      };\n    };\n  };\n}\n\nexport function scrollBy(xCoord) {\n  return function (yCoord) {\n    return function (window) {\n      return function () {\n        window.scrollBy(xCoord, yCoord);\n      };\n    };\n  };\n}\n\nexport function scrollX(window) {\n  return function () {\n    return window.scrollX;\n  };\n}\n\nexport function scrollY(window) {\n  return function () {\n    return window.scrollY;\n  };\n}\n\nexport function localStorage(window) {\n  return function () {\n    return window.localStorage;\n  };\n}\n\nexport function sessionStorage(window) {\n  return function () {\n    return window.sessionStorage;\n  };\n}\n\nexport function requestAnimationFrame(fn) {\n  return function(window) {\n    return function() {\n      return window.requestAnimationFrame(fn);\n    };\n  };\n}\n\nexport function cancelAnimationFrame(id) {\n  return function(window) {\n    return function() {\n      return window.cancelAnimationFrame(id);\n    };\n  };\n}\n\nexport function requestIdleCallback(opts) {\n  return function(fn) {\n    return function(window) {\n      return function() {\n        return window.requestIdleCallback(fn, opts);\n      };\n    };\n  };\n}\n\nexport function cancelIdleCallback(id) {\n  return function(window) {\n    return function() {\n      return window.cancelIdleCallback(id);\n    };\n  };\n}\n\nexport function parent(window) {\n  return function() {\n    return window.parent;\n  };\n}\n\nexport function _opener(window) {\n  return function() {\n    return window.opener;\n  };\n}\n", "// Generated by purs version 0.15.15\nimport * as $foreign from \"./foreign.js\";\nimport * as Data_Functor from \"../Data.Functor/index.js\";\nimport * as Data_Nullable from \"../Data.Nullable/index.js\";\nimport * as Data_Ord from \"../Data.Ord/index.js\";\nimport * as Effect from \"../Effect/index.js\";\nimport * as Unsafe_Coerce from \"../Unsafe.Coerce/index.js\";\nimport * as Web_Internal_FFI from \"../Web.Internal.FFI/index.js\";\nvar map = /* #__PURE__ */ Data_Functor.map(Effect.functorEffect);\nvar compare = /* #__PURE__ */ Data_Ord.compare(Data_Ord.ordInt);\nvar RequestIdleCallbackId = function (x) {\n    return x;\n};\nvar RequestAnimationFrameId = function (x) {\n    return x;\n};\nvar toEventTarget = Unsafe_Coerce.unsafeCoerce;\nvar promptDefault = function (msg) {\n    return function (defaultText) {\n        return function (window) {\n            return map(Data_Nullable.toMaybe)($foreign[\"_prompt\"](msg)(defaultText)(window));\n        };\n    };\n};\nvar prompt = function (msg) {\n    return function (window) {\n        return map(Data_Nullable.toMaybe)($foreign[\"_prompt\"](msg)(\"\")(window));\n    };\n};\nvar opener = function (window) {\n    return map(Data_Nullable.toMaybe)($foreign[\"_opener\"](window));\n};\nvar open = function (url$prime) {\n    return function (name) {\n        return function (features) {\n            return function (window) {\n                return map(Data_Nullable.toMaybe)($foreign[\"_open\"](url$prime)(name)(features)(window));\n            };\n        };\n    };\n};\nvar fromEventTarget = /* #__PURE__ */ Web_Internal_FFI.unsafeReadProtoTagged(\"Window\");\nvar eqRequestIdleCallbackId = {\n    eq: function (x) {\n        return function (y) {\n            return x === y;\n        };\n    }\n};\nvar ordRequestIdleCallbackId = {\n    compare: function (x) {\n        return function (y) {\n            return compare(x)(y);\n        };\n    },\n    Eq0: function () {\n        return eqRequestIdleCallbackId;\n    }\n};\nvar eqRequestAnimationFrameId = {\n    eq: function (x) {\n        return function (y) {\n            return x === y;\n        };\n    }\n};\nvar ordRequestAnimationFrameId = {\n    compare: function (x) {\n        return function (y) {\n            return compare(x)(y);\n        };\n    },\n    Eq0: function () {\n        return eqRequestAnimationFrameId;\n    }\n};\nexport {\n    document,\n    navigator,\n    location,\n    history,\n    innerWidth,\n    innerHeight,\n    alert,\n    confirm,\n    moveBy,\n    moveTo,\n    close,\n    outerHeight,\n    outerWidth,\n    print,\n    resizeBy,\n    resizeTo,\n    screenX,\n    screenY,\n    scroll,\n    scrollBy,\n    scrollX,\n    scrollY,\n    localStorage,\n    sessionStorage,\n    requestAnimationFrame,\n    cancelAnimationFrame,\n    requestIdleCallback,\n    cancelIdleCallback,\n    parent\n} from \"./foreign.js\";\nexport {\n    toEventTarget,\n    fromEventTarget,\n    open,\n    prompt,\n    promptDefault,\n    opener,\n    eqRequestAnimationFrameId,\n    ordRequestAnimationFrameId,\n    eqRequestIdleCallbackId,\n    ordRequestIdleCallbackId\n};\n", "// Generated by purs version 0.15.15\nimport * as Control_Applicative from \"../Control.Applicative/index.js\";\nimport * as Control_Bind from \"../Control.Bind/index.js\";\nimport * as Control_Monad_Error_Class from \"../Control.Monad.Error.Class/index.js\";\nimport * as Data_Either from \"../Data.Either/index.js\";\nimport * as Data_Function from \"../Data.Function/index.js\";\nimport * as Data_Functor from \"../Data.Functor/index.js\";\nimport * as Data_Maybe from \"../Data.Maybe/index.js\";\nimport * as Data_Unit from \"../Data.Unit/index.js\";\nimport * as Effect from \"../Effect/index.js\";\nimport * as Effect_Aff from \"../Effect.Aff/index.js\";\nimport * as Effect_Class from \"../Effect.Class/index.js\";\nimport * as Effect_Exception from \"../Effect.Exception/index.js\";\nimport * as Web_DOM_ParentNode from \"../Web.DOM.ParentNode/index.js\";\nimport * as Web_Event_EventTarget from \"../Web.Event.EventTarget/index.js\";\nimport * as Web_HTML from \"../Web.HTML/index.js\";\nimport * as Web_HTML_Event_EventTypes from \"../Web.HTML.Event.EventTypes/index.js\";\nimport * as Web_HTML_HTMLDocument from \"../Web.HTML.HTMLDocument/index.js\";\nimport * as Web_HTML_HTMLDocument_ReadyState from \"../Web.HTML.HTMLDocument.ReadyState/index.js\";\nimport * as Web_HTML_HTMLElement from \"../Web.HTML.HTMLElement/index.js\";\nimport * as Web_HTML_Window from \"../Web.HTML.Window/index.js\";\nvar bind = /* #__PURE__ */ Control_Bind.bind(Effect_Aff.bindAff);\nvar liftEffect = /* #__PURE__ */ Effect_Class.liftEffect(Effect_Aff.monadEffectAff);\nvar bindFlipped = /* #__PURE__ */ Control_Bind.bindFlipped(Effect.bindEffect);\nvar composeKleisliFlipped = /* #__PURE__ */ Control_Bind.composeKleisliFlipped(Effect.bindEffect);\nvar pure = /* #__PURE__ */ Control_Applicative.pure(Effect_Aff.applicativeAff);\nvar bindFlipped1 = /* #__PURE__ */ Control_Bind.bindFlipped(Data_Maybe.bindMaybe);\nvar pure1 = /* #__PURE__ */ Control_Applicative.pure(Effect.applicativeEffect);\nvar map = /* #__PURE__ */ Data_Functor.map(Effect.functorEffect);\nvar discard = /* #__PURE__ */ Control_Bind.discard(Control_Bind.discardUnit);\nvar throwError = /* #__PURE__ */ Control_Monad_Error_Class.throwError(Effect_Aff.monadThrowAff);\nvar selectElement = function (query) {\n    return bind(liftEffect(bindFlipped(composeKleisliFlipped((function () {\n        var $16 = Web_DOM_ParentNode.querySelector(query);\n        return function ($17) {\n            return $16(Web_HTML_HTMLDocument.toParentNode($17));\n        };\n    })())(Web_HTML_Window.document))(Web_HTML.window)))(function (mel) {\n        return pure(bindFlipped1(Web_HTML_HTMLElement.fromElement)(mel));\n    });\n};\nvar runHalogenAff = /* #__PURE__ */ Effect_Aff.runAff_(/* #__PURE__ */ Data_Either.either(Effect_Exception.throwException)(/* #__PURE__ */ Data_Function[\"const\"](/* #__PURE__ */ pure1(Data_Unit.unit))));\nvar awaitLoad = /* #__PURE__ */ Effect_Aff.makeAff(function (callback) {\n    return function __do() {\n        var rs = bindFlipped(Web_HTML_HTMLDocument.readyState)(bindFlipped(Web_HTML_Window.document)(Web_HTML.window))();\n        if (rs instanceof Web_HTML_HTMLDocument_ReadyState.Loading) {\n            var et = map(Web_HTML_Window.toEventTarget)(Web_HTML.window)();\n            var listener = Web_Event_EventTarget.eventListener(function (v) {\n                return callback(new Data_Either.Right(Data_Unit.unit));\n            })();\n            Web_Event_EventTarget.addEventListener(Web_HTML_Event_EventTypes.domcontentloaded)(listener)(false)(et)();\n            return Effect_Aff.effectCanceler(Web_Event_EventTarget.removeEventListener(Web_HTML_Event_EventTypes.domcontentloaded)(listener)(false)(et));\n        };\n        callback(new Data_Either.Right(Data_Unit.unit))();\n        return Effect_Aff.nonCanceler;\n    };\n});\nvar awaitBody = /* #__PURE__ */ discard(Effect_Aff.bindAff)(awaitLoad)(function () {\n    return bind(selectElement(\"body\"))(function (body) {\n        return Data_Maybe.maybe(throwError(Effect_Exception.error(\"Could not find body\")))(pure)(body);\n    });\n});\nexport {\n    awaitLoad,\n    awaitBody,\n    selectElement,\n    runHalogenAff\n};\n", "// Generated by purs version 0.15.15\nimport * as Control_Monad_Reader_Trans from \"../Control.Monad.Reader.Trans/index.js\";\nimport * as Control_Monad_Trans_Class from \"../Control.Monad.Trans.Class/index.js\";\nimport * as Effect_Aff from \"../Effect.Aff/index.js\";\nvar lift = /* #__PURE__ */ Control_Monad_Trans_Class.lift(Control_Monad_Reader_Trans.monadTransReaderT);\nvar Completed = /* #__PURE__ */ (function () {\n    function Completed(value0) {\n        this.value0 = value0;\n    };\n    Completed.create = function (value0) {\n        return new Completed(value0);\n    };\n    return Completed;\n})();\nvar Failed = /* #__PURE__ */ (function () {\n    function Failed(value0) {\n        this.value0 = value0;\n    };\n    Failed.create = function (value0) {\n        return new Failed(value0);\n    };\n    return Failed;\n})();\nvar Killed = /* #__PURE__ */ (function () {\n    function Killed(value0) {\n        this.value0 = value0;\n    };\n    Killed.create = function (value0) {\n        return new Killed(value0);\n    };\n    return Killed;\n})();\nvar uninterruptible = function (dict) {\n    return dict.uninterruptible;\n};\nvar suspend = function (dict) {\n    return dict.suspend;\n};\nvar never = function (dict) {\n    return dict.never;\n};\nvar monadForkAff = {\n    suspend: Effect_Aff.suspendAff,\n    fork: Effect_Aff.forkAff,\n    join: Effect_Aff.joinFiber,\n    Monad0: function () {\n        return Effect_Aff.monadAff;\n    },\n    Functor1: function () {\n        return Effect_Aff.functorFiber;\n    }\n};\nvar monadKillAff = {\n    kill: Effect_Aff.killFiber,\n    MonadFork0: function () {\n        return monadForkAff;\n    },\n    MonadThrow1: function () {\n        return Effect_Aff.monadThrowAff;\n    }\n};\nvar monadBracketAff = {\n    bracket: function (acquire) {\n        return function (release) {\n            return function (run) {\n                return Effect_Aff.generalBracket(acquire)({\n                    completed: function ($44) {\n                        return release(Completed.create($44));\n                    },\n                    failed: function ($45) {\n                        return release(Failed.create($45));\n                    },\n                    killed: function ($46) {\n                        return release(Killed.create($46));\n                    }\n                })(run);\n            };\n        };\n    },\n    uninterruptible: Effect_Aff.invincible,\n    never: Effect_Aff.never,\n    MonadKill0: function () {\n        return monadKillAff;\n    },\n    MonadError1: function () {\n        return Effect_Aff.monadErrorAff;\n    }\n};\nvar kill = function (dict) {\n    return dict.kill;\n};\nvar join = function (dict) {\n    return dict.join;\n};\nvar fork = function (dict) {\n    return dict.fork;\n};\nvar monadForkReaderT = function (dictMonadFork) {\n    var suspend1 = suspend(dictMonadFork);\n    var fork1 = fork(dictMonadFork);\n    var Monad0 = dictMonadFork.Monad0();\n    var monadReaderT = Control_Monad_Reader_Trans.monadReaderT(Monad0);\n    var Functor1 = dictMonadFork.Functor1();\n    return {\n        suspend: function (v) {\n            return function ($47) {\n                return suspend1(v($47));\n            };\n        },\n        fork: function (v) {\n            return function ($48) {\n                return fork1(v($48));\n            };\n        },\n        join: (function () {\n            var $49 = lift(Monad0);\n            var $50 = join(dictMonadFork);\n            return function ($51) {\n                return $49($50($51));\n            };\n        })(),\n        Monad0: function () {\n            return monadReaderT;\n        },\n        Functor1: function () {\n            return Functor1;\n        }\n    };\n};\nvar monadKillReaderT = function (dictMonadKill) {\n    var MonadThrow1 = dictMonadKill.MonadThrow1();\n    var lift1 = lift(MonadThrow1.Monad0());\n    var kill1 = kill(dictMonadKill);\n    var monadForkReaderT1 = monadForkReaderT(dictMonadKill.MonadFork0());\n    var monadThrowReaderT = Control_Monad_Reader_Trans.monadThrowReaderT(MonadThrow1);\n    return {\n        kill: function (e) {\n            var $52 = kill1(e);\n            return function ($53) {\n                return lift1($52($53));\n            };\n        },\n        MonadFork0: function () {\n            return monadForkReaderT1;\n        },\n        MonadThrow1: function () {\n            return monadThrowReaderT;\n        }\n    };\n};\nvar bracket = function (dict) {\n    return dict.bracket;\n};\nvar monadBracketReaderT = function (dictMonadBracket) {\n    var bracket1 = bracket(dictMonadBracket);\n    var uninterruptible1 = uninterruptible(dictMonadBracket);\n    var MonadError1 = dictMonadBracket.MonadError1();\n    var monadKillReaderT1 = monadKillReaderT(dictMonadBracket.MonadKill0());\n    var monadErrorReaderT = Control_Monad_Reader_Trans.monadErrorReaderT(MonadError1);\n    return {\n        bracket: function (v) {\n            return function (release) {\n                return function (run) {\n                    return function (r) {\n                        return bracket1(v(r))(function (c) {\n                            return function (a) {\n                                return Control_Monad_Reader_Trans.runReaderT(release(c)(a))(r);\n                            };\n                        })(function (a) {\n                            return Control_Monad_Reader_Trans.runReaderT(run(a))(r);\n                        });\n                    };\n                };\n            };\n        },\n        uninterruptible: function (k) {\n            return function (r) {\n                return uninterruptible1(Control_Monad_Reader_Trans.runReaderT(k)(r));\n            };\n        },\n        never: lift((MonadError1.MonadThrow0()).Monad0())(never(dictMonadBracket)),\n        MonadKill0: function () {\n            return monadKillReaderT1;\n        },\n        MonadError1: function () {\n            return monadErrorReaderT;\n        }\n    };\n};\nexport {\n    bracket,\n    fork,\n    join,\n    kill,\n    never,\n    suspend,\n    uninterruptible,\n    Completed,\n    Failed,\n    Killed,\n    monadForkAff,\n    monadForkReaderT,\n    monadKillAff,\n    monadKillReaderT,\n    monadBracketAff,\n    monadBracketReaderT\n};\n", "// Generated by purs version 0.15.15\nimport * as Data_Foldable from \"../Data.Foldable/index.js\";\nimport * as Data_List_Types from \"../Data.List.Types/index.js\";\nimport * as Data_Map_Internal from \"../Data.Map.Internal/index.js\";\nimport * as Data_Maybe from \"../Data.Maybe/index.js\";\nimport * as Effect_Ref from \"../Effect.Ref/index.js\";\nimport * as Halogen_Data_Slot from \"../Halogen.Data.Slot/index.js\";\nimport * as Unsafe_Coerce from \"../Unsafe.Coerce/index.js\";\nvar DriverStateRef = function (x) {\n    return x;\n};\nvar DriverState = function (x) {\n    return x;\n};\nvar unRenderStateX = Unsafe_Coerce.unsafeCoerce;\nvar unDriverStateX = Unsafe_Coerce.unsafeCoerce;\nvar renderStateX_ = function (dictApplicative) {\n    var traverse_ = Data_Foldable.traverse_(dictApplicative)(Data_Foldable.foldableMaybe);\n    return function (f) {\n        return unDriverStateX(function (st) {\n            return traverse_(f)(st.rendering);\n        });\n    };\n};\nvar mkRenderStateX = Unsafe_Coerce.unsafeCoerce;\nvar renderStateX = function (dictFunctor) {\n    return function (f) {\n        return unDriverStateX(function (st) {\n            return mkRenderStateX(f(st.rendering));\n        });\n    };\n};\nvar mkDriverStateXRef = Unsafe_Coerce.unsafeCoerce;\nvar mapDriverState = function (f) {\n    return function (v) {\n        return f(v);\n    };\n};\nvar initDriverState = function (component) {\n    return function (input) {\n        return function (handler) {\n            return function (lchs) {\n                return function __do() {\n                    var selfRef = Effect_Ref[\"new\"]({})();\n                    var childrenIn = Effect_Ref[\"new\"](Halogen_Data_Slot.empty)();\n                    var childrenOut = Effect_Ref[\"new\"](Halogen_Data_Slot.empty)();\n                    var handlerRef = Effect_Ref[\"new\"](handler)();\n                    var pendingQueries = Effect_Ref[\"new\"](new Data_Maybe.Just(Data_List_Types.Nil.value))();\n                    var pendingOuts = Effect_Ref[\"new\"](new Data_Maybe.Just(Data_List_Types.Nil.value))();\n                    var pendingHandlers = Effect_Ref[\"new\"](Data_Maybe.Nothing.value)();\n                    var fresh = Effect_Ref[\"new\"](1)();\n                    var subscriptions = Effect_Ref[\"new\"](new Data_Maybe.Just(Data_Map_Internal.empty))();\n                    var forks = Effect_Ref[\"new\"](Data_Map_Internal.empty)();\n                    var ds = {\n                        component: component,\n                        state: component.initialState(input),\n                        refs: Data_Map_Internal.empty,\n                        children: Halogen_Data_Slot.empty,\n                        childrenIn: childrenIn,\n                        childrenOut: childrenOut,\n                        selfRef: selfRef,\n                        handlerRef: handlerRef,\n                        pendingQueries: pendingQueries,\n                        pendingOuts: pendingOuts,\n                        pendingHandlers: pendingHandlers,\n                        rendering: Data_Maybe.Nothing.value,\n                        fresh: fresh,\n                        subscriptions: subscriptions,\n                        forks: forks,\n                        lifecycleHandlers: lchs\n                    };\n                    Effect_Ref.write(ds)(selfRef)();\n                    return mkDriverStateXRef(selfRef);\n                };\n            };\n        };\n    };\n};\nexport {\n    DriverState,\n    mapDriverState,\n    DriverStateRef,\n    unDriverStateX,\n    mkDriverStateXRef,\n    renderStateX,\n    renderStateX_,\n    unRenderStateX,\n    initDriverState\n};\n", "// Generated by purs version 0.15.15\nimport * as Control_Applicative from \"../Control.Applicative/index.js\";\nimport * as Control_Applicative_Free from \"../Control.Applicative.Free/index.js\";\nimport * as Control_Bind from \"../Control.Bind/index.js\";\nimport * as Control_Monad from \"../Control.Monad/index.js\";\nimport * as Control_Monad_Fork_Class from \"../Control.Monad.Fork.Class/index.js\";\nimport * as Control_Monad_Free from \"../Control.Monad.Free/index.js\";\nimport * as Control_Parallel from \"../Control.Parallel/index.js\";\nimport * as Control_Parallel_Class from \"../Control.Parallel.Class/index.js\";\nimport * as Data_Boolean from \"../Data.Boolean/index.js\";\nimport * as Data_Coyoneda from \"../Data.Coyoneda/index.js\";\nimport * as Data_Either from \"../Data.Either/index.js\";\nimport * as Data_Foldable from \"../Data.Foldable/index.js\";\nimport * as Data_Function from \"../Data.Function/index.js\";\nimport * as Data_Functor from \"../Data.Functor/index.js\";\nimport * as Data_List_Types from \"../Data.List.Types/index.js\";\nimport * as Data_Map_Internal from \"../Data.Map.Internal/index.js\";\nimport * as Data_Maybe from \"../Data.Maybe/index.js\";\nimport * as Data_Ord from \"../Data.Ord/index.js\";\nimport * as Data_Unit from \"../Data.Unit/index.js\";\nimport * as Effect from \"../Effect/index.js\";\nimport * as Effect_Aff from \"../Effect.Aff/index.js\";\nimport * as Effect_Class from \"../Effect.Class/index.js\";\nimport * as Effect_Exception from \"../Effect.Exception/index.js\";\nimport * as Effect_Ref from \"../Effect.Ref/index.js\";\nimport * as Halogen_Aff_Driver_State from \"../Halogen.Aff.Driver.State/index.js\";\nimport * as Halogen_Query_ChildQuery from \"../Halogen.Query.ChildQuery/index.js\";\nimport * as Halogen_Query_HalogenM from \"../Halogen.Query.HalogenM/index.js\";\nimport * as Halogen_Query_HalogenQ from \"../Halogen.Query.HalogenQ/index.js\";\nimport * as Halogen_Query_Input from \"../Halogen.Query.Input/index.js\";\nimport * as Halogen_Subscription from \"../Halogen.Subscription/index.js\";\nimport * as Unsafe_Reference from \"../Unsafe.Reference/index.js\";\nvar traverse_ = /* #__PURE__ */ Data_Foldable.traverse_(Effect.applicativeEffect)(Data_Foldable.foldableMaybe);\nvar bindFlipped = /* #__PURE__ */ Control_Bind.bindFlipped(Data_Maybe.bindMaybe);\nvar lookup = /* #__PURE__ */ Data_Map_Internal.lookup(Halogen_Query_HalogenM.ordSubscriptionId);\nvar bind1 = /* #__PURE__ */ Control_Bind.bind(Effect_Aff.bindAff);\nvar liftEffect = /* #__PURE__ */ Effect_Class.liftEffect(Effect_Aff.monadEffectAff);\nvar discard = /* #__PURE__ */ Control_Bind.discard(Control_Bind.discardUnit);\nvar discard1 = /* #__PURE__ */ discard(Effect_Aff.bindAff);\nvar traverse_1 = /* #__PURE__ */ Data_Foldable.traverse_(Effect_Aff.applicativeAff);\nvar traverse_2 = /* #__PURE__ */ traverse_1(Data_List_Types.foldableList);\nvar fork = /* #__PURE__ */ Control_Monad_Fork_Class.fork(Control_Monad_Fork_Class.monadForkAff);\nvar parSequence_ = /* #__PURE__ */ Control_Parallel.parSequence_(Effect_Aff.parallelAff)(Effect_Aff.applicativeParAff)(Data_List_Types.foldableList);\nvar pure = /* #__PURE__ */ Control_Applicative.pure(Effect_Aff.applicativeAff);\nvar map = /* #__PURE__ */ Data_Functor.map(Data_Coyoneda.functorCoyoneda);\nvar parallel = /* #__PURE__ */ Control_Parallel_Class.parallel(Effect_Aff.parallelAff);\nvar map1 = /* #__PURE__ */ Data_Functor.map(Effect_Aff.functorAff);\nvar sequential = /* #__PURE__ */ Control_Parallel_Class.sequential(Effect_Aff.parallelAff);\nvar map2 = /* #__PURE__ */ Data_Functor.map(Data_Maybe.functorMaybe);\nvar insert = /* #__PURE__ */ Data_Map_Internal.insert(Halogen_Query_HalogenM.ordSubscriptionId);\nvar retractFreeAp = /* #__PURE__ */ Control_Applicative_Free.retractFreeAp(Effect_Aff.applicativeParAff);\nvar $$delete = /* #__PURE__ */ Data_Map_Internal[\"delete\"](Halogen_Query_HalogenM.ordForkId);\nvar unlessM = /* #__PURE__ */ Control_Monad.unlessM(Effect.monadEffect);\nvar insert1 = /* #__PURE__ */ Data_Map_Internal.insert(Halogen_Query_HalogenM.ordForkId);\nvar traverse_3 = /* #__PURE__ */ traverse_1(Data_Foldable.foldableMaybe);\nvar lookup1 = /* #__PURE__ */ Data_Map_Internal.lookup(Halogen_Query_HalogenM.ordForkId);\nvar lookup2 = /* #__PURE__ */ Data_Map_Internal.lookup(Data_Ord.ordString);\nvar foldFree = /* #__PURE__ */ Control_Monad_Free.foldFree(Effect_Aff.monadRecAff);\nvar alter = /* #__PURE__ */ Data_Map_Internal.alter(Data_Ord.ordString);\nvar unsubscribe = function (sid) {\n    return function (ref) {\n        return function __do() {\n            var v = Effect_Ref.read(ref)();\n            var subs = Effect_Ref.read(v.subscriptions)();\n            return traverse_(Halogen_Subscription.unsubscribe)(bindFlipped(lookup(sid))(subs))();\n        };\n    };\n};\nvar queueOrRun = function (ref) {\n    return function (au) {\n        return bind1(liftEffect(Effect_Ref.read(ref)))(function (v) {\n            if (v instanceof Data_Maybe.Nothing) {\n                return au;\n            };\n            if (v instanceof Data_Maybe.Just) {\n                return liftEffect(Effect_Ref.write(new Data_Maybe.Just(new Data_List_Types.Cons(au, v.value0)))(ref));\n            };\n            throw new Error(\"Failed pattern match at Halogen.Aff.Driver.Eval (line 188, column 33 - line 190, column 57): \" + [ v.constructor.name ]);\n        });\n    };\n};\nvar handleLifecycle = function (lchs) {\n    return function (f) {\n        return discard1(liftEffect(Effect_Ref.write({\n            initializers: Data_List_Types.Nil.value,\n            finalizers: Data_List_Types.Nil.value\n        })(lchs)))(function () {\n            return bind1(liftEffect(f))(function (result) {\n                return bind1(liftEffect(Effect_Ref.read(lchs)))(function (v) {\n                    return discard1(traverse_2(fork)(v.finalizers))(function () {\n                        return discard1(parSequence_(v.initializers))(function () {\n                            return pure(result);\n                        });\n                    });\n                });\n            });\n        });\n    };\n};\nvar handleAff = /* #__PURE__ */ Effect_Aff.runAff_(/* #__PURE__ */ Data_Either.either(Effect_Exception.throwException)(/* #__PURE__ */ Data_Function[\"const\"](/* #__PURE__ */ Control_Applicative.pure(Effect.applicativeEffect)(Data_Unit.unit))));\nvar fresh = function (f) {\n    return function (ref) {\n        return bind1(liftEffect(Effect_Ref.read(ref)))(function (v) {\n            return liftEffect(Effect_Ref[\"modify$prime\"](function (i) {\n                return {\n                    state: i + 1 | 0,\n                    value: f(i)\n                };\n            })(v.fresh));\n        });\n    };\n};\nvar evalQ = function (render) {\n    return function (ref) {\n        return function (q) {\n            return bind1(liftEffect(Effect_Ref.read(ref)))(function (v) {\n                return evalM(render)(ref)(v[\"component\"][\"eval\"](new Halogen_Query_HalogenQ.Query(map(Data_Maybe.Just.create)(Data_Coyoneda.liftCoyoneda(q)), Data_Function[\"const\"](Data_Maybe.Nothing.value))));\n            });\n        };\n    };\n};\nvar evalM = function (render) {\n    return function (initRef) {\n        return function (v) {\n            var evalChildQuery = function (ref) {\n                return function (cqb) {\n                    return bind1(liftEffect(Effect_Ref.read(ref)))(function (v1) {\n                        return Halogen_Query_ChildQuery.unChildQueryBox(function (v2) {\n                            var evalChild = function (v3) {\n                                return parallel(bind1(liftEffect(Effect_Ref.read(v3)))(function (dsx) {\n                                    return Halogen_Aff_Driver_State.unDriverStateX(function (ds) {\n                                        return evalQ(render)(ds.selfRef)(v2.value1);\n                                    })(dsx);\n                                }));\n                            };\n                            return map1(v2.value2)(sequential(v2.value0(Effect_Aff.applicativeParAff)(evalChild)(v1.children)));\n                        })(cqb);\n                    });\n                };\n            };\n            var go = function (ref) {\n                return function (v1) {\n                    if (v1 instanceof Halogen_Query_HalogenM.State) {\n                        return bind1(liftEffect(Effect_Ref.read(ref)))(function (v2) {\n                            var v3 = v1.value0(v2.state);\n                            if (Unsafe_Reference.unsafeRefEq(v2.state)(v3.value1)) {\n                                return pure(v3.value0);\n                            };\n                            if (Data_Boolean.otherwise) {\n                                return discard1(liftEffect(Effect_Ref.write({\n                                    component: v2.component,\n                                    refs: v2.refs,\n                                    children: v2.children,\n                                    childrenIn: v2.childrenIn,\n                                    childrenOut: v2.childrenOut,\n                                    selfRef: v2.selfRef,\n                                    handlerRef: v2.handlerRef,\n                                    pendingQueries: v2.pendingQueries,\n                                    pendingOuts: v2.pendingOuts,\n                                    pendingHandlers: v2.pendingHandlers,\n                                    rendering: v2.rendering,\n                                    fresh: v2.fresh,\n                                    subscriptions: v2.subscriptions,\n                                    forks: v2.forks,\n                                    lifecycleHandlers: v2.lifecycleHandlers,\n                                    state: v3.value1\n                                })(ref)))(function () {\n                                    return discard1(handleLifecycle(v2.lifecycleHandlers)(render(v2.lifecycleHandlers)(ref)))(function () {\n                                        return pure(v3.value0);\n                                    });\n                                });\n                            };\n                            throw new Error(\"Failed pattern match at Halogen.Aff.Driver.Eval (line 86, column 7 - line 92, column 21): \" + [ v3.constructor.name ]);\n                        });\n                    };\n                    if (v1 instanceof Halogen_Query_HalogenM.Subscribe) {\n                        return bind1(fresh(Halogen_Query_HalogenM.SubscriptionId)(ref))(function (sid) {\n                            return bind1(liftEffect(Halogen_Subscription.subscribe(v1.value0(sid))(function (act) {\n                                return handleAff(evalF(render)(ref)(new Halogen_Query_Input.Action(act)));\n                            })))(function (finalize) {\n                                return bind1(liftEffect(Effect_Ref.read(ref)))(function (v2) {\n                                    return discard1(liftEffect(Effect_Ref.modify_(map2(insert(sid)(finalize)))(v2.subscriptions)))(function () {\n                                        return pure(v1.value1(sid));\n                                    });\n                                });\n                            });\n                        });\n                    };\n                    if (v1 instanceof Halogen_Query_HalogenM.Unsubscribe) {\n                        return discard1(liftEffect(unsubscribe(v1.value0)(ref)))(function () {\n                            return pure(v1.value1);\n                        });\n                    };\n                    if (v1 instanceof Halogen_Query_HalogenM.Lift) {\n                        return v1.value0;\n                    };\n                    if (v1 instanceof Halogen_Query_HalogenM.ChildQuery) {\n                        return evalChildQuery(ref)(v1.value0);\n                    };\n                    if (v1 instanceof Halogen_Query_HalogenM.Raise) {\n                        return bind1(liftEffect(Effect_Ref.read(ref)))(function (v2) {\n                            return bind1(liftEffect(Effect_Ref.read(v2.handlerRef)))(function (handler) {\n                                return discard1(queueOrRun(v2.pendingOuts)(handler(v1.value0)))(function () {\n                                    return pure(v1.value1);\n                                });\n                            });\n                        });\n                    };\n                    if (v1 instanceof Halogen_Query_HalogenM.Par) {\n                        return sequential(retractFreeAp(Control_Applicative_Free.hoistFreeAp((function () {\n                            var $119 = evalM(render)(ref);\n                            return function ($120) {\n                                return parallel($119($120));\n                            };\n                        })())(v1.value0)));\n                    };\n                    if (v1 instanceof Halogen_Query_HalogenM.Fork) {\n                        return bind1(fresh(Halogen_Query_HalogenM.ForkId)(ref))(function (fid) {\n                            return bind1(liftEffect(Effect_Ref.read(ref)))(function (v2) {\n                                return bind1(liftEffect(Effect_Ref[\"new\"](false)))(function (doneRef) {\n                                    return bind1(fork(Effect_Aff[\"finally\"](liftEffect(function __do() {\n                                        Effect_Ref.modify_($$delete(fid))(v2.forks)();\n                                        return Effect_Ref.write(true)(doneRef)();\n                                    }))(evalM(render)(ref)(v1.value0))))(function (fiber) {\n                                        return discard1(liftEffect(unlessM(Effect_Ref.read(doneRef))(Effect_Ref.modify_(insert1(fid)(fiber))(v2.forks))))(function () {\n                                            return pure(v1.value1(fid));\n                                        });\n                                    });\n                                });\n                            });\n                        });\n                    };\n                    if (v1 instanceof Halogen_Query_HalogenM.Join) {\n                        return bind1(liftEffect(Effect_Ref.read(ref)))(function (v2) {\n                            return bind1(liftEffect(Effect_Ref.read(v2.forks)))(function (forkMap) {\n                                return discard1(traverse_3(Effect_Aff.joinFiber)(lookup1(v1.value0)(forkMap)))(function () {\n                                    return pure(v1.value1);\n                                });\n                            });\n                        });\n                    };\n                    if (v1 instanceof Halogen_Query_HalogenM.Kill) {\n                        return bind1(liftEffect(Effect_Ref.read(ref)))(function (v2) {\n                            return bind1(liftEffect(Effect_Ref.read(v2.forks)))(function (forkMap) {\n                                return discard1(traverse_3(Effect_Aff.killFiber(Effect_Exception.error(\"Cancelled\")))(lookup1(v1.value0)(forkMap)))(function () {\n                                    return pure(v1.value1);\n                                });\n                            });\n                        });\n                    };\n                    if (v1 instanceof Halogen_Query_HalogenM.GetRef) {\n                        return bind1(liftEffect(Effect_Ref.read(ref)))(function (v2) {\n                            return pure(v1.value1(lookup2(v1.value0)(v2.refs)));\n                        });\n                    };\n                    throw new Error(\"Failed pattern match at Halogen.Aff.Driver.Eval (line 83, column 12 - line 139, column 33): \" + [ v1.constructor.name ]);\n                };\n            };\n            return foldFree(go(initRef))(v);\n        };\n    };\n};\nvar evalF = function (render) {\n    return function (ref) {\n        return function (v) {\n            if (v instanceof Halogen_Query_Input.RefUpdate) {\n                return liftEffect(Data_Function.flip(Effect_Ref.modify_)(ref)(Halogen_Aff_Driver_State.mapDriverState(function (st) {\n                    return {\n                        component: st.component,\n                        state: st.state,\n                        children: st.children,\n                        childrenIn: st.childrenIn,\n                        childrenOut: st.childrenOut,\n                        selfRef: st.selfRef,\n                        handlerRef: st.handlerRef,\n                        pendingQueries: st.pendingQueries,\n                        pendingOuts: st.pendingOuts,\n                        pendingHandlers: st.pendingHandlers,\n                        rendering: st.rendering,\n                        fresh: st.fresh,\n                        subscriptions: st.subscriptions,\n                        forks: st.forks,\n                        lifecycleHandlers: st.lifecycleHandlers,\n                        refs: alter(Data_Function[\"const\"](v.value1))(v.value0)(st.refs)\n                    };\n                })));\n            };\n            if (v instanceof Halogen_Query_Input.Action) {\n                return bind1(liftEffect(Effect_Ref.read(ref)))(function (v1) {\n                    return evalM(render)(ref)(v1[\"component\"][\"eval\"](new Halogen_Query_HalogenQ.Action(v.value0, Data_Unit.unit)));\n                });\n            };\n            throw new Error(\"Failed pattern match at Halogen.Aff.Driver.Eval (line 52, column 20 - line 58, column 62): \" + [ v.constructor.name ]);\n        };\n    };\n};\nexport {\n    evalF,\n    evalQ,\n    evalM,\n    handleLifecycle,\n    queueOrRun,\n    handleAff\n};\n", "// Generated by purs version 0.15.15\nimport * as Control_Applicative from \"../Control.Applicative/index.js\";\nimport * as Control_Bind from \"../Control.Bind/index.js\";\nimport * as Control_Monad_Fork_Class from \"../Control.Monad.Fork.Class/index.js\";\nimport * as Control_Monad_Rec_Class from \"../Control.Monad.Rec.Class/index.js\";\nimport * as Control_Parallel from \"../Control.Parallel/index.js\";\nimport * as Data_Foldable from \"../Data.Foldable/index.js\";\nimport * as Data_Function from \"../Data.Function/index.js\";\nimport * as Data_Functor from \"../Data.Functor/index.js\";\nimport * as Data_List from \"../Data.List/index.js\";\nimport * as Data_List_Types from \"../Data.List.Types/index.js\";\nimport * as Data_Map_Internal from \"../Data.Map.Internal/index.js\";\nimport * as Data_Maybe from \"../Data.Maybe/index.js\";\nimport * as Data_Unit from \"../Data.Unit/index.js\";\nimport * as Effect from \"../Effect/index.js\";\nimport * as Effect_Aff from \"../Effect.Aff/index.js\";\nimport * as Effect_Class from \"../Effect.Class/index.js\";\nimport * as Effect_Console from \"../Effect.Console/index.js\";\nimport * as Effect_Exception from \"../Effect.Exception/index.js\";\nimport * as Effect_Ref from \"../Effect.Ref/index.js\";\nimport * as Halogen from \"../Halogen/index.js\";\nimport * as Halogen_Aff_Driver_Eval from \"../Halogen.Aff.Driver.Eval/index.js\";\nimport * as Halogen_Aff_Driver_State from \"../Halogen.Aff.Driver.State/index.js\";\nimport * as Halogen_Component from \"../Halogen.Component/index.js\";\nimport * as Halogen_Data_Slot from \"../Halogen.Data.Slot/index.js\";\nimport * as Halogen_Query_HalogenQ from \"../Halogen.Query.HalogenQ/index.js\";\nimport * as Halogen_Query_Input from \"../Halogen.Query.Input/index.js\";\nimport * as Halogen_Subscription from \"../Halogen.Subscription/index.js\";\nvar bind = /* #__PURE__ */ Control_Bind.bind(Effect.bindEffect);\nvar discard = /* #__PURE__ */ Control_Bind.discard(Control_Bind.discardUnit);\nvar for_ = /* #__PURE__ */ Data_Foldable.for_(Effect.applicativeEffect)(Data_Foldable.foldableMaybe);\nvar traverse_ = /* #__PURE__ */ Data_Foldable.traverse_(Effect_Aff.applicativeAff)(Data_List_Types.foldableList);\nvar fork = /* #__PURE__ */ Control_Monad_Fork_Class.fork(Control_Monad_Fork_Class.monadForkAff);\nvar bindFlipped = /* #__PURE__ */ Control_Bind.bindFlipped(Effect.bindEffect);\nvar traverse_1 = /* #__PURE__ */ Data_Foldable.traverse_(Effect.applicativeEffect);\nvar traverse_2 = /* #__PURE__ */ traverse_1(Data_Foldable.foldableMaybe);\nvar traverse_3 = /* #__PURE__ */ traverse_1(Data_Map_Internal.foldableMap);\nvar discard2 = /* #__PURE__ */ discard(Effect_Aff.bindAff);\nvar parSequence_ = /* #__PURE__ */ Control_Parallel.parSequence_(Effect_Aff.parallelAff)(Effect_Aff.applicativeParAff)(Data_List_Types.foldableList);\nvar liftEffect = /* #__PURE__ */ Effect_Class.liftEffect(Effect_Aff.monadEffectAff);\nvar pure = /* #__PURE__ */ Control_Applicative.pure(Effect.applicativeEffect);\nvar map = /* #__PURE__ */ Data_Functor.map(Effect.functorEffect);\nvar pure1 = /* #__PURE__ */ Control_Applicative.pure(Effect_Aff.applicativeAff);\nvar when = /* #__PURE__ */ Control_Applicative.when(Effect.applicativeEffect);\nvar renderStateX = /* #__PURE__ */ Halogen_Aff_Driver_State.renderStateX(Effect.functorEffect);\nvar $$void = /* #__PURE__ */ Data_Functor[\"void\"](Effect_Aff.functorAff);\nvar foreachSlot = /* #__PURE__ */ Halogen_Data_Slot.foreachSlot(Effect.applicativeEffect);\nvar renderStateX_ = /* #__PURE__ */ Halogen_Aff_Driver_State.renderStateX_(Effect.applicativeEffect);\nvar tailRecM = /* #__PURE__ */ Control_Monad_Rec_Class.tailRecM(Control_Monad_Rec_Class.monadRecEffect);\nvar voidLeft = /* #__PURE__ */ Data_Functor.voidLeft(Effect.functorEffect);\nvar bind1 = /* #__PURE__ */ Control_Bind.bind(Effect_Aff.bindAff);\nvar liftEffect1 = /* #__PURE__ */ Effect_Class.liftEffect(Effect_Class.monadEffectEffect);\nvar newLifecycleHandlers = /* #__PURE__ */ (function () {\n    return Effect_Ref[\"new\"]({\n        initializers: Data_List_Types.Nil.value,\n        finalizers: Data_List_Types.Nil.value\n    });\n})();\nvar handlePending = function (ref) {\n    return function __do() {\n        var queue = Effect_Ref.read(ref)();\n        Effect_Ref.write(Data_Maybe.Nothing.value)(ref)();\n        return for_(queue)((function () {\n            var $59 = traverse_(fork);\n            return function ($60) {\n                return Halogen_Aff_Driver_Eval.handleAff($59(Data_List.reverse($60)));\n            };\n        })())();\n    };\n};\nvar cleanupSubscriptionsAndForks = function (v) {\n    return function __do() {\n        bindFlipped(traverse_2(traverse_3(Halogen_Subscription.unsubscribe)))(Effect_Ref.read(v.subscriptions))();\n        Effect_Ref.write(Data_Maybe.Nothing.value)(v.subscriptions)();\n        bindFlipped(traverse_3((function () {\n            var $61 = Effect_Aff.killFiber(Effect_Exception.error(\"finalized\"));\n            return function ($62) {\n                return Halogen_Aff_Driver_Eval.handleAff($61($62));\n            };\n        })()))(Effect_Ref.read(v.forks))();\n        return Effect_Ref.write(Data_Map_Internal.empty)(v.forks)();\n    };\n};\nvar runUI = function (renderSpec) {\n    return function (component) {\n        return function (i) {\n            var squashChildInitializers = function (lchs) {\n                return function (preInits) {\n                    return Halogen_Aff_Driver_State.unDriverStateX(function (st) {\n                        var parentInitializer = Halogen_Aff_Driver_Eval.evalM(render)(st.selfRef)(st[\"component\"][\"eval\"](new Halogen_Query_HalogenQ.Initialize(Data_Unit.unit)));\n                        return Effect_Ref.modify_(function (handlers) {\n                            return {\n                                initializers: new Data_List_Types.Cons(discard2(parSequence_(Data_List.reverse(handlers.initializers)))(function () {\n                                    return discard2(parentInitializer)(function () {\n                                        return liftEffect(function __do() {\n                                            handlePending(st.pendingQueries)();\n                                            return handlePending(st.pendingOuts)();\n                                        });\n                                    });\n                                }), preInits),\n                                finalizers: handlers.finalizers\n                            };\n                        })(lchs);\n                    });\n                };\n            };\n            var runComponent = function (lchs) {\n                return function (handler) {\n                    return function (j) {\n                        return Halogen_Component.unComponent(function (c) {\n                            return function __do() {\n                                var lchs$prime = newLifecycleHandlers();\n                                var $$var = Halogen_Aff_Driver_State.initDriverState(c)(j)(handler)(lchs$prime)();\n                                var pre = Effect_Ref.read(lchs)();\n                                Effect_Ref.write({\n                                    initializers: Data_List_Types.Nil.value,\n                                    finalizers: pre.finalizers\n                                })(lchs)();\n                                bindFlipped(Halogen_Aff_Driver_State.unDriverStateX((function () {\n                                    var $63 = render(lchs);\n                                    return function ($64) {\n                                        return $63((function (v) {\n                                            return v.selfRef;\n                                        })($64));\n                                    };\n                                })()))(Effect_Ref.read($$var))();\n                                bindFlipped(squashChildInitializers(lchs)(pre.initializers))(Effect_Ref.read($$var))();\n                                return $$var;\n                            };\n                        });\n                    };\n                };\n            };\n            var renderChild = function (lchs) {\n                return function (handler) {\n                    return function (childrenInRef) {\n                        return function (childrenOutRef) {\n                            return Halogen_Component.unComponentSlot(function (slot) {\n                                return function __do() {\n                                    var childrenIn = map(slot.pop)(Effect_Ref.read(childrenInRef))();\n                                    var $$var = (function () {\n                                        if (childrenIn instanceof Data_Maybe.Just) {\n                                            Effect_Ref.write(childrenIn.value0.value1)(childrenInRef)();\n                                            var dsx = Effect_Ref.read(childrenIn.value0.value0)();\n                                            Halogen_Aff_Driver_State.unDriverStateX(function (st) {\n                                                return function __do() {\n                                                    Data_Function.flip(Effect_Ref.write)(st.handlerRef)((function () {\n                                                        var $65 = Data_Maybe.maybe(pure1(Data_Unit.unit))(handler);\n                                                        return function ($66) {\n                                                            return $65(slot.output($66));\n                                                        };\n                                                    })())();\n                                                    return Halogen_Aff_Driver_Eval.handleAff(Halogen_Aff_Driver_Eval.evalM(render)(st.selfRef)(st[\"component\"][\"eval\"](new Halogen_Query_HalogenQ.Receive(slot.input, Data_Unit.unit))))();\n                                                };\n                                            })(dsx)();\n                                            return childrenIn.value0.value0;\n                                        };\n                                        if (childrenIn instanceof Data_Maybe.Nothing) {\n                                            return runComponent(lchs)((function () {\n                                                var $67 = Data_Maybe.maybe(pure1(Data_Unit.unit))(handler);\n                                                return function ($68) {\n                                                    return $67(slot.output($68));\n                                                };\n                                            })())(slot.input)(slot.component)();\n                                        };\n                                        throw new Error(\"Failed pattern match at Halogen.Aff.Driver (line 213, column 14 - line 222, column 98): \" + [ childrenIn.constructor.name ]);\n                                    })();\n                                    var isDuplicate = map(function ($69) {\n                                        return Data_Maybe.isJust(slot.get($69));\n                                    })(Effect_Ref.read(childrenOutRef))();\n                                    when(isDuplicate)(Effect_Console.warn(\"Halogen: Duplicate slot address was detected during rendering, unexpected results may occur\"))();\n                                    Effect_Ref.modify_(slot.set($$var))(childrenOutRef)();\n                                    return bind(Effect_Ref.read($$var))(renderStateX(function (v) {\n                                        if (v instanceof Data_Maybe.Nothing) {\n                                            return Effect_Exception[\"throw\"](\"Halogen internal error: child was not initialized in renderChild\");\n                                        };\n                                        if (v instanceof Data_Maybe.Just) {\n                                            return pure(renderSpec.renderChild(v.value0));\n                                        };\n                                        throw new Error(\"Failed pattern match at Halogen.Aff.Driver (line 227, column 37 - line 229, column 50): \" + [ v.constructor.name ]);\n                                    }))();\n                                };\n                            });\n                        };\n                    };\n                };\n            };\n            var render = function (lchs) {\n                return function ($$var) {\n                    return function __do() {\n                        var v = Effect_Ref.read($$var)();\n                        var shouldProcessHandlers = map(Data_Maybe.isNothing)(Effect_Ref.read(v.pendingHandlers))();\n                        when(shouldProcessHandlers)(Effect_Ref.write(new Data_Maybe.Just(Data_List_Types.Nil.value))(v.pendingHandlers))();\n                        Effect_Ref.write(Halogen_Data_Slot.empty)(v.childrenOut)();\n                        Effect_Ref.write(v.children)(v.childrenIn)();\n                        var handler = (function () {\n                            var $70 = Halogen_Aff_Driver_Eval.queueOrRun(v.pendingHandlers);\n                            var $71 = Halogen_Aff_Driver_Eval.evalF(render)(v.selfRef);\n                            return function ($72) {\n                                return $70($$void($71($72)));\n                            };\n                        })();\n                        var childHandler = (function () {\n                            var $73 = Halogen_Aff_Driver_Eval.queueOrRun(v.pendingQueries);\n                            return function ($74) {\n                                return $73(handler(Halogen_Query_Input.Action.create($74)));\n                            };\n                        })();\n                        var rendering = renderSpec.render(function ($75) {\n                            return Halogen_Aff_Driver_Eval.handleAff(handler($75));\n                        })(renderChild(lchs)(childHandler)(v.childrenIn)(v.childrenOut))(v.component.render(v.state))(v.rendering)();\n                        var children = Effect_Ref.read(v.childrenOut)();\n                        var childrenIn = Effect_Ref.read(v.childrenIn)();\n                        foreachSlot(childrenIn)(function (v1) {\n                            return function __do() {\n                                var childDS = Effect_Ref.read(v1)();\n                                renderStateX_(renderSpec.removeChild)(childDS)();\n                                return finalize(lchs)(childDS)();\n                            };\n                        })();\n                        Data_Function.flip(Effect_Ref.modify_)(v.selfRef)(Halogen_Aff_Driver_State.mapDriverState(function (ds$prime) {\n                            return {\n                                component: ds$prime.component,\n                                state: ds$prime.state,\n                                refs: ds$prime.refs,\n                                childrenIn: ds$prime.childrenIn,\n                                childrenOut: ds$prime.childrenOut,\n                                selfRef: ds$prime.selfRef,\n                                handlerRef: ds$prime.handlerRef,\n                                pendingQueries: ds$prime.pendingQueries,\n                                pendingOuts: ds$prime.pendingOuts,\n                                pendingHandlers: ds$prime.pendingHandlers,\n                                fresh: ds$prime.fresh,\n                                subscriptions: ds$prime.subscriptions,\n                                forks: ds$prime.forks,\n                                lifecycleHandlers: ds$prime.lifecycleHandlers,\n                                rendering: new Data_Maybe.Just(rendering),\n                                children: children\n                            };\n                        }))();\n                        return when(shouldProcessHandlers)(Data_Function.flip(tailRecM)(Data_Unit.unit)(function (v1) {\n                            return function __do() {\n                                var handlers = Effect_Ref.read(v.pendingHandlers)();\n                                Effect_Ref.write(new Data_Maybe.Just(Data_List_Types.Nil.value))(v.pendingHandlers)();\n                                traverse_2((function () {\n                                    var $76 = traverse_(fork);\n                                    return function ($77) {\n                                        return Halogen_Aff_Driver_Eval.handleAff($76(Data_List.reverse($77)));\n                                    };\n                                })())(handlers)();\n                                var mmore = Effect_Ref.read(v.pendingHandlers)();\n                                var $52 = Data_Maybe.maybe(false)(Data_List[\"null\"])(mmore);\n                                if ($52) {\n                                    return voidLeft(Effect_Ref.write(Data_Maybe.Nothing.value)(v.pendingHandlers))(new Control_Monad_Rec_Class.Done(Data_Unit.unit))();\n                                };\n                                return new Control_Monad_Rec_Class.Loop(Data_Unit.unit);\n                            };\n                        }))();\n                    };\n                };\n            };\n            var finalize = function (lchs) {\n                return Halogen_Aff_Driver_State.unDriverStateX(function (st) {\n                    return function __do() {\n                        cleanupSubscriptionsAndForks(st)();\n                        var f = Halogen_Aff_Driver_Eval.evalM(render)(st.selfRef)(st[\"component\"][\"eval\"](new Halogen_Query_HalogenQ.Finalize(Data_Unit.unit)));\n                        Effect_Ref.modify_(function (handlers) {\n                            return {\n                                initializers: handlers.initializers,\n                                finalizers: new Data_List_Types.Cons(f, handlers.finalizers)\n                            };\n                        })(lchs)();\n                        return foreachSlot(st.children)(function (v) {\n                            return function __do() {\n                                var dsx = Effect_Ref.read(v)();\n                                return finalize(lchs)(dsx)();\n                            };\n                        })();\n                    };\n                });\n            };\n            var evalDriver = function (disposed) {\n                return function (ref) {\n                    return function (q) {\n                        return bind1(liftEffect(Effect_Ref.read(disposed)))(function (v) {\n                            if (v) {\n                                return pure1(Data_Maybe.Nothing.value);\n                            };\n                            return Halogen_Aff_Driver_Eval.evalQ(render)(ref)(q);\n                        });\n                    };\n                };\n            };\n            var dispose = function (disposed) {\n                return function (lchs) {\n                    return function (dsx) {\n                        return Halogen_Aff_Driver_Eval.handleLifecycle(lchs)(function __do() {\n                            var v = Effect_Ref.read(disposed)();\n                            if (v) {\n                                return Data_Unit.unit;\n                            };\n                            Effect_Ref.write(true)(disposed)();\n                            finalize(lchs)(dsx)();\n                            return Halogen_Aff_Driver_State.unDriverStateX(function (v1) {\n                                return function __do() {\n                                    var v2 = liftEffect1(Effect_Ref.read(v1.selfRef))();\n                                    return for_(v2.rendering)(renderSpec.dispose)();\n                                };\n                            })(dsx)();\n                        });\n                    };\n                };\n            };\n            return bind1(liftEffect(newLifecycleHandlers))(function (lchs) {\n                return bind1(liftEffect(Effect_Ref[\"new\"](false)))(function (disposed) {\n                    return Halogen_Aff_Driver_Eval.handleLifecycle(lchs)(function __do() {\n                        var sio = Halogen_Subscription.create();\n                        var dsx = bindFlipped(Effect_Ref.read)(runComponent(lchs)((function () {\n                            var $78 = Halogen_Subscription.notify(sio.listener);\n                            return function ($79) {\n                                return liftEffect($78($79));\n                            };\n                        })())(i)(component))();\n                        return Halogen_Aff_Driver_State.unDriverStateX(function (st) {\n                            return pure({\n                                query: evalDriver(disposed)(st.selfRef),\n                                messages: sio.emitter,\n                                dispose: dispose(disposed)(lchs)(dsx)\n                            });\n                        })(dsx)();\n                    });\n                });\n            });\n        };\n    };\n};\nexport {\n    runUI\n};\n", "var getEffProp = function (name) {\n  return function (node) {\n    return function () {\n      return node[name];\n    };\n  };\n};\n\nexport function nodeTypeIndex(node) {\n  return node.nodeType;\n}\n\nexport function nodeName(node) {\n  return node.nodeName;\n}\n\nexport const baseURI = getEffProp(\"baseURI\");\nexport const _ownerDocument = getEffProp(\"ownerDocument\");\nexport const _parentNode = getEffProp(\"parentNode\");\nexport const _parentElement = getEffProp(\"parentElement\");\n\nexport function hasChildNodes(node) {\n  return function () {\n    return node.hasChildNodes();\n  };\n}\n\nexport const childNodes = getEffProp(\"childNodes\");\nexport const _firstChild = getEffProp(\"firstChild\");\nexport const _lastChild = getEffProp(\"lastChild\");\nexport const _previousSibling = getEffProp(\"previousSibling\");\nexport const _nextSibling = getEffProp(\"nextSibling\");\nexport const _nodeValue = getEffProp(\"nodeValue\");\n\nexport function setNodeValue(value) {\n  return function (node) {\n    return function () {\n      node.nodeValue = value;\n    };\n  };\n}\n\nexport const textContent = getEffProp(\"textContent\");\n\nexport function setTextContent(value) {\n  return function (node) {\n    return function () {\n      node.textContent = value;\n    };\n  };\n}\n\nexport function normalize(node) {\n  return function () {\n    node.normalize();\n  };\n}\n\nexport function clone(node) {\n  return function () {\n    return node.cloneNode(false);\n  };\n}\n\nexport function deepClone(node) {\n  return function () {\n    return node.cloneNode(true);\n  };\n}\n\nexport function isEqualNode(node1) {\n  return function (node2) {\n    return function () {\n      return node1.isEqualNode(node2);\n    };\n  };\n}\n\nexport function compareDocumentPositionBits(node1) {\n  return function (node2) {\n    return function () {\n      return node1.compareDocumentPosition(node2);\n    };\n  };\n}\n\nexport function contains(node1) {\n  return function (node2) {\n    return function () {\n      return node1.contains(node2);\n    };\n  };\n}\n\nexport function _lookupPrefix(prefix) {\n  return function (node) {\n    return function () {\n      return node.lookupPrefix(prefix);\n    };\n  };\n}\n\nexport function _lookupNamespaceURI(ns) {\n  return function (node) {\n    return function () {\n      return node.lookupNamespaceURI(ns);\n    };\n  };\n}\n\nexport function isDefaultNamespace(ns) {\n  return function (node) {\n    return function () {\n      return node.isDefaultNamespace(ns);\n    };\n  };\n}\n\nexport function insertBefore(node1) {\n  return function (node2) {\n    return function (parent) {\n      return function () {\n        parent.insertBefore(node1, node2);\n      };\n    };\n  };\n}\n\nexport function appendChild(node) {\n  return function (parent) {\n    return function () {\n      parent.appendChild(node);\n    };\n  };\n}\n\nexport function replaceChild(newChild) {\n  return function (oldChild) {\n    return function (parent) {\n      return function () {\n        parent.replaceChild(newChild, oldChild);\n      };\n    };\n  };\n}\n\nexport function removeChild(node) {\n  return function (parent) {\n    return function () {\n      parent.removeChild(node);\n    };\n  };\n}\n", "// Generated by purs version 0.15.15\nimport * as $foreign from \"./foreign.js\";\nimport * as Data_Enum from \"../Data.Enum/index.js\";\nimport * as Data_Functor from \"../Data.Functor/index.js\";\nimport * as Data_Maybe from \"../Data.Maybe/index.js\";\nimport * as Data_Nullable from \"../Data.Nullable/index.js\";\nimport * as Effect from \"../Effect/index.js\";\nimport * as Unsafe_Coerce from \"../Unsafe.Coerce/index.js\";\nimport * as Web_DOM_Internal_Types from \"../Web.DOM.Internal.Types/index.js\";\nimport * as Web_DOM_NodeType from \"../Web.DOM.NodeType/index.js\";\nimport * as Web_Internal_FFI from \"../Web.Internal.FFI/index.js\";\nvar map = /* #__PURE__ */ Data_Functor.map(Effect.functorEffect);\nvar fromJust = /* #__PURE__ */ Data_Maybe.fromJust();\nvar toEnum = /* #__PURE__ */ Data_Enum.toEnum(Web_DOM_NodeType.boundedEnumNodeType);\nvar toEventTarget = Unsafe_Coerce.unsafeCoerce;\nvar previousSibling = /* #__PURE__ */ (function () {\n    var $4 = map(Data_Nullable.toMaybe);\n    return function ($5) {\n        return $4($foreign[\"_previousSibling\"]($5));\n    };\n})();\nvar parentNode = /* #__PURE__ */ (function () {\n    var $6 = map(Data_Nullable.toMaybe);\n    return function ($7) {\n        return $6($foreign[\"_parentNode\"]($7));\n    };\n})();\nvar parentElement = /* #__PURE__ */ (function () {\n    var $8 = map(Data_Nullable.toMaybe);\n    return function ($9) {\n        return $8($foreign[\"_parentElement\"]($9));\n    };\n})();\nvar ownerDocument = /* #__PURE__ */ (function () {\n    var $10 = map(Data_Nullable.toMaybe);\n    return function ($11) {\n        return $10($foreign[\"_ownerDocument\"]($11));\n    };\n})();\nvar nodeValue = /* #__PURE__ */ (function () {\n    var $12 = map(Data_Nullable.toMaybe);\n    return function ($13) {\n        return $12($foreign[\"_nodeValue\"]($13));\n    };\n})();\nvar nodeType = function () {\n    return function ($14) {\n        return fromJust(toEnum($foreign.nodeTypeIndex($14)));\n    };\n};\nvar nextSibling = /* #__PURE__ */ (function () {\n    var $15 = map(Data_Nullable.toMaybe);\n    return function ($16) {\n        return $15($foreign[\"_nextSibling\"]($16));\n    };\n})();\nvar lookupPrefix = function (p) {\n    var $17 = map(Data_Nullable.toMaybe);\n    var $18 = $foreign[\"_lookupPrefix\"](p);\n    return function ($19) {\n        return $17($18($19));\n    };\n};\nvar lookupNamespaceURI = function (ns) {\n    var $20 = map(Data_Nullable.toMaybe);\n    var $21 = $foreign[\"_lookupNamespaceURI\"](ns);\n    return function ($22) {\n        return $20($21($22));\n    };\n};\nvar lastChild = /* #__PURE__ */ (function () {\n    var $23 = map(Data_Nullable.toMaybe);\n    return function ($24) {\n        return $23($foreign[\"_lastChild\"]($24));\n    };\n})();\nvar fromEventTarget = /* #__PURE__ */ Web_Internal_FFI.unsafeReadProtoTagged(\"Node\");\nvar firstChild = /* #__PURE__ */ (function () {\n    var $25 = map(Data_Nullable.toMaybe);\n    return function ($26) {\n        return $25($foreign[\"_firstChild\"]($26));\n    };\n})();\nexport {\n    nodeTypeIndex,\n    nodeName,\n    baseURI,\n    hasChildNodes,\n    childNodes,\n    setNodeValue,\n    textContent,\n    setTextContent,\n    normalize,\n    clone,\n    deepClone,\n    isEqualNode,\n    compareDocumentPositionBits,\n    contains,\n    isDefaultNamespace,\n    insertBefore,\n    appendChild,\n    replaceChild,\n    removeChild\n} from \"./foreign.js\";\nexport {\n    fromEventTarget,\n    toEventTarget,\n    nodeType,\n    ownerDocument,\n    parentNode,\n    parentElement,\n    firstChild,\n    lastChild,\n    previousSibling,\n    nextSibling,\n    nodeValue,\n    lookupPrefix,\n    lookupNamespaceURI\n};\n", "// Generated by purs version 0.15.15\nimport * as Control_Applicative from \"../Control.Applicative/index.js\";\nimport * as Control_Bind from \"../Control.Bind/index.js\";\nimport * as Control_Category from \"../Control.Category/index.js\";\nimport * as Data_Foldable from \"../Data.Foldable/index.js\";\nimport * as Data_Functor from \"../Data.Functor/index.js\";\nimport * as Data_HeytingAlgebra from \"../Data.HeytingAlgebra/index.js\";\nimport * as Data_Maybe from \"../Data.Maybe/index.js\";\nimport * as Data_Newtype from \"../Data.Newtype/index.js\";\nimport * as Data_Unit from \"../Data.Unit/index.js\";\nimport * as Effect from \"../Effect/index.js\";\nimport * as Effect_Aff from \"../Effect.Aff/index.js\";\nimport * as Effect_Class from \"../Effect.Class/index.js\";\nimport * as Effect_Ref from \"../Effect.Ref/index.js\";\nimport * as Halogen_Aff_Driver from \"../Halogen.Aff.Driver/index.js\";\nimport * as Halogen_Aff_Driver_State from \"../Halogen.Aff.Driver.State/index.js\";\nimport * as Halogen_Component from \"../Halogen.Component/index.js\";\nimport * as Halogen_VDom_DOM from \"../Halogen.VDom.DOM/index.js\";\nimport * as Halogen_VDom_DOM_Prop from \"../Halogen.VDom.DOM.Prop/index.js\";\nimport * as Halogen_VDom_Machine from \"../Halogen.VDom.Machine/index.js\";\nimport * as Halogen_VDom_Thunk from \"../Halogen.VDom.Thunk/index.js\";\nimport * as Unsafe_Reference from \"../Unsafe.Reference/index.js\";\nimport * as Web_DOM_Node from \"../Web.DOM.Node/index.js\";\nimport * as Web_HTML from \"../Web.HTML/index.js\";\nimport * as Web_HTML_HTMLDocument from \"../Web.HTML.HTMLDocument/index.js\";\nimport * as Web_HTML_HTMLElement from \"../Web.HTML.HTMLElement/index.js\";\nimport * as Web_HTML_Window from \"../Web.HTML.Window/index.js\";\nvar $runtime_lazy = function (name, moduleName, init) {\n    var state = 0;\n    var val;\n    return function (lineNumber) {\n        if (state === 2) return val;\n        if (state === 1) throw new ReferenceError(name + \" was needed before it finished initializing (module \" + moduleName + \", line \" + lineNumber + \")\", moduleName, lineNumber);\n        state = 1;\n        val = init();\n        state = 2;\n        return val;\n    };\n};\nvar $$void = /* #__PURE__ */ Data_Functor[\"void\"](Effect.functorEffect);\nvar pure = /* #__PURE__ */ Control_Applicative.pure(Effect.applicativeEffect);\nvar traverse_ = /* #__PURE__ */ Data_Foldable.traverse_(Effect.applicativeEffect)(Data_Foldable.foldableMaybe);\nvar unwrap = /* #__PURE__ */ Data_Newtype.unwrap();\nvar when = /* #__PURE__ */ Control_Applicative.when(Effect.applicativeEffect);\nvar not = /* #__PURE__ */ Data_HeytingAlgebra.not(/* #__PURE__ */ Data_HeytingAlgebra.heytingAlgebraFunction(/* #__PURE__ */ Data_HeytingAlgebra.heytingAlgebraFunction(Data_HeytingAlgebra.heytingAlgebraBoolean)));\nvar identity = /* #__PURE__ */ Control_Category.identity(Control_Category.categoryFn);\nvar bind1 = /* #__PURE__ */ Control_Bind.bind(Effect_Aff.bindAff);\nvar liftEffect = /* #__PURE__ */ Effect_Class.liftEffect(Effect_Aff.monadEffectAff);\nvar map = /* #__PURE__ */ Data_Functor.map(Effect.functorEffect);\nvar bindFlipped = /* #__PURE__ */ Control_Bind.bindFlipped(Effect.bindEffect);\nvar RenderState = function (x) {\n    return x;\n};\nvar substInParent = function (v) {\n    return function (v1) {\n        return function (v2) {\n            if (v1 instanceof Data_Maybe.Just && v2 instanceof Data_Maybe.Just) {\n                return $$void(Web_DOM_Node.insertBefore(v)(v1.value0)(v2.value0));\n            };\n            if (v1 instanceof Data_Maybe.Nothing && v2 instanceof Data_Maybe.Just) {\n                return $$void(Web_DOM_Node.appendChild(v)(v2.value0));\n            };\n            return pure(Data_Unit.unit);\n        };\n    };\n};\nvar removeChild = function (v) {\n    return function __do() {\n        var npn = Web_DOM_Node.parentNode(v.node)();\n        return traverse_(function (pn) {\n            return Web_DOM_Node.removeChild(v.node)(pn);\n        })(npn)();\n    };\n};\nvar mkSpec = function (handler) {\n    return function (renderChildRef) {\n        return function (document) {\n            var getNode = Halogen_Aff_Driver_State.unRenderStateX(function (v) {\n                return v.node;\n            });\n            var done = function (st) {\n                if (st instanceof Data_Maybe.Just) {\n                    return Halogen_VDom_Machine.halt(st.value0);\n                };\n                return Data_Unit.unit;\n            };\n            var buildWidget = function (spec) {\n                var buildThunk = Halogen_VDom_Thunk.buildThunk(unwrap)(spec);\n                var $lazy_patch = $runtime_lazy(\"patch\", \"Halogen.VDom.Driver\", function () {\n                    return function (st, slot) {\n                        if (st instanceof Data_Maybe.Just) {\n                            if (slot instanceof Halogen_Component.ComponentSlot) {\n                                Halogen_VDom_Machine.halt(st.value0);\n                                return $lazy_renderComponentSlot(100)(slot.value0);\n                            };\n                            if (slot instanceof Halogen_Component.ThunkSlot) {\n                                var step$prime = Halogen_VDom_Machine.step(st.value0, slot.value0);\n                                return Halogen_VDom_Machine.mkStep(new Halogen_VDom_Machine.Step(Halogen_VDom_Machine.extract(step$prime), new Data_Maybe.Just(step$prime), $lazy_patch(103), done));\n                            };\n                            throw new Error(\"Failed pattern match at Halogen.VDom.Driver (line 97, column 22 - line 103, column 79): \" + [ slot.constructor.name ]);\n                        };\n                        return $lazy_render(104)(slot);\n                    };\n                });\n                var $lazy_render = $runtime_lazy(\"render\", \"Halogen.VDom.Driver\", function () {\n                    return function (slot) {\n                        if (slot instanceof Halogen_Component.ComponentSlot) {\n                            return $lazy_renderComponentSlot(86)(slot.value0);\n                        };\n                        if (slot instanceof Halogen_Component.ThunkSlot) {\n                            var step = buildThunk(slot.value0);\n                            return Halogen_VDom_Machine.mkStep(new Halogen_VDom_Machine.Step(Halogen_VDom_Machine.extract(step), new Data_Maybe.Just(step), $lazy_patch(89), done));\n                        };\n                        throw new Error(\"Failed pattern match at Halogen.VDom.Driver (line 84, column 7 - line 89, column 75): \" + [ slot.constructor.name ]);\n                    };\n                });\n                var $lazy_renderComponentSlot = $runtime_lazy(\"renderComponentSlot\", \"Halogen.VDom.Driver\", function () {\n                    return function (cs) {\n                        var renderChild = Effect_Ref.read(renderChildRef)();\n                        var rsx = renderChild(cs)();\n                        var node = getNode(rsx);\n                        return Halogen_VDom_Machine.mkStep(new Halogen_VDom_Machine.Step(node, Data_Maybe.Nothing.value, $lazy_patch(117), done));\n                    };\n                });\n                var patch = $lazy_patch(91);\n                var render = $lazy_render(82);\n                var renderComponentSlot = $lazy_renderComponentSlot(109);\n                return render;\n            };\n            var buildAttributes = Halogen_VDom_DOM_Prop.buildProp(handler);\n            return {\n                buildWidget: buildWidget,\n                buildAttributes: buildAttributes,\n                document: document\n            };\n        };\n    };\n};\nvar renderSpec = function (document) {\n    return function (container) {\n        var render = function (handler) {\n            return function (child) {\n                return function (v) {\n                    return function (v1) {\n                        if (v1 instanceof Data_Maybe.Nothing) {\n                            return function __do() {\n                                var renderChildRef = Effect_Ref[\"new\"](child)();\n                                var spec = mkSpec(handler)(renderChildRef)(document);\n                                var machine = Halogen_VDom_DOM.buildVDom(spec)(v);\n                                var node = Halogen_VDom_Machine.extract(machine);\n                                $$void(Web_DOM_Node.appendChild(node)(Web_HTML_HTMLElement.toNode(container)))();\n                                return {\n                                    machine: machine,\n                                    node: node,\n                                    renderChildRef: renderChildRef\n                                };\n                            };\n                        };\n                        if (v1 instanceof Data_Maybe.Just) {\n                            return function __do() {\n                                Effect_Ref.write(child)(v1.value0.renderChildRef)();\n                                var parent = Web_DOM_Node.parentNode(v1.value0.node)();\n                                var nextSib = Web_DOM_Node.nextSibling(v1.value0.node)();\n                                var machine$prime = Halogen_VDom_Machine.step(v1.value0.machine, v);\n                                var newNode = Halogen_VDom_Machine.extract(machine$prime);\n                                when(not(Unsafe_Reference.unsafeRefEq)(v1.value0.node)(newNode))(substInParent(newNode)(nextSib)(parent))();\n                                return {\n                                    machine: machine$prime,\n                                    node: newNode,\n                                    renderChildRef: v1.value0.renderChildRef\n                                };\n                            };\n                        };\n                        throw new Error(\"Failed pattern match at Halogen.VDom.Driver (line 157, column 5 - line 173, column 80): \" + [ v1.constructor.name ]);\n                    };\n                };\n            };\n        };\n        return {\n            render: render,\n            renderChild: identity,\n            removeChild: removeChild,\n            dispose: removeChild\n        };\n    };\n};\nvar runUI = function (component) {\n    return function (i) {\n        return function (element) {\n            return bind1(liftEffect(map(Web_HTML_HTMLDocument.toDocument)(bindFlipped(Web_HTML_Window.document)(Web_HTML.window))))(function (document) {\n                return Halogen_Aff_Driver.runUI(renderSpec(document)(element))(component)(i);\n            });\n        };\n    };\n};\nexport {\n    runUI\n};\n", "// Generated by purs version 0.15.15\nimport * as Control_Bind from \"../Control.Bind/index.js\";\nimport * as Effect_Aff from \"../Effect.Aff/index.js\";\nimport * as Effect_Class_Console from \"../Effect.Class.Console/index.js\";\nimport * as Foliage_App_Component from \"../Foliage.App.Component/index.js\";\nimport * as Halogen_Aff_Util from \"../Halogen.Aff.Util/index.js\";\nimport * as Halogen_VDom_Driver from \"../Halogen.VDom.Driver/index.js\";\nvar bindFlipped = /* #__PURE__ */ Control_Bind.bindFlipped(Effect_Aff.bindAff);\nvar main = /* #__PURE__ */ Halogen_Aff_Util.runHalogenAff(/* #__PURE__ */ Control_Bind.discard(Control_Bind.discardUnit)(Effect_Aff.bindAff)(/* #__PURE__ */ Effect_Class_Console.log(Effect_Aff.monadEffectAff)(\"[Foliage.App.Main]\"))(function () {\n    return bindFlipped(Halogen_VDom_Driver.runUI(Foliage_App_Component.component)({}))(Halogen_Aff_Util.awaitBody);\n}));\nexport {\n    main\n};\n", "import { main } from './output/Foliage.App.Main/index.js'; main();\n"],
  "mappings": "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",
  "names": ["i", "b", "a", "i", "$$Proxy", "map1", "identity", "map", "a", "b", "identity", "pure1", "apply", "a", "bindFlipped1", "a", "bind1", "Aff", "nonCanceler", "error", "left", "right", "size", "i", "util", "kill", "k", "step", "fail", "run", "result", "sequential", "join", "par", "cb", "head", "kills", "kid", "value", "options", "util", "bind", "unless", "b", "bind", "pure", "a", "label", "value", "copy", "eq", "LT", "GT", "EQ", "i", "empty", "Inl", "Inr", "Product", "NoArguments", "identity", "Nothing", "Just", "map", "a", "identity", "map", "Left", "Right", "map", "map", "a", "a", "name", "init", "state", "map", "pure", "a", "ref", "$$void", "bindFlipped", "map", "Loop", "Done", "a", "__do", "bindFlipped", "map", "unsafeCoerce", "b", "a", "b", "a", "Tuple", "eq", "eq1", "compare", "compare1", "modify_", "modify", "map", "identity", "bind", "pure", "a", "lift", "map1", "map", "bind", "pure", "a", "lift", "local", "lift", "state", "bind", "listen", "pure", "pass", "map", "a", "identity", "unsafeCoerce", "coerce", "coerce", "lift", "apply", "bind", "a", "lift", "mempty", "bind", "pure", "a", "map", "append", "apply", "map", "bind", "mempty", "pure", "a", "bind", "pure", "lift", "throwError", "init", "i", "identity", "identity", "applySecond", "pure", "foldr2", "traverse_1", "foldl2", "append", "mempty", "go", "mempty", "foldr2", "append", "mempty", "foldMap2", "identity", "a", "b", "apply", "map", "pure", "go", "top", "identity", "traverse2", "identity", "identity", "sequential", "parallel", "traverse_", "traverse_1", "identity", "crashWith", "$runtime_lazy", "name", "init", "state", "pure", "$$void", "map", "__do", "$runtime_lazy", "pure2", "bindFlipped", "a", "pure2", "unsafeCoerce", "parallel", "pure2", "liftEffect", "map", "liftEffect", "$$void", "pure", "map", "$$try", "bindFlipped", "liftEffect", "$$try", "$$void", "go", "a", "pure2", "pure2", "log", "defer", "a", "b", "discard", "a", "discard1", "discard", "pure", "value", "i", "Cons", "head", "foldr", "i", "i", "i", "a", "i", "i", "a", "runSTFn1", "a", "runSTFn2", "b", "__do", "i", "fromJust", "append", "mapWithIndex", "intercalate", "i", "go", "foldr", "foldMap", "fold", "i", "fromJust", "append", "RefUpdate", "Action", "a", "Step", "value2", "value3", "unsafeCoerce", "a", "extract", "map", "map1", "Text", "Elem", "value2", "value3", "Keyed", "Widget", "Grafted", "Graft", "unsafeCoerce", "bimap", "go", "map", "map1", "bimap", "forE", "a", "b", "i", "i", "a", "refEq", "b", "name", "attr", "unsafeFreeze", "unsafeCoerce", "name", "name", "map", "map", "unsafeCoerce", "$runtime_lazy", "name", "init", "state", "$runtime_lazy", "state", "parent", "extract", "children", "forE", "value", "value", "pattern", "i", "NonEmpty", "singleton", "empty", "a", "identity", "Nil", "Cons", "$tco_result", "$tco_loop", "b", "rev", "go", "append2", "mempty", "foldl", "foldr", "foldr", "map1", "lift2", "pure1", "foldl", "identity", "foldr", "snoc", "foldr", "singleton", "a", "reverse", "go", "fromFoldable", "pure", "bind1", "pure", "bind1", "b", "singleton", "cons", "a", "addEventListener", "target", "removeEventListener", "$runtime_lazy", "name", "init", "state", "Created", "Removed", "Attribute", "value2", "Property", "Handler", "Ref", "handler", "state", "refEq", "ref", "__do", "$runtime_lazy", "unsafeFreeze", "name", "children", "attr", "attr", "append1", "style", "foldMap", "append1", "unsafeCoerce", "CoyonedaF", "$runtime_lazy", "name", "init", "state", "map", "Leaf", "Node", "value2", "value3", "value4", "value5", "Split", "value2", "SplitLast", "singleton", "height", "$runtime_lazy", "$runtime_lazy", "compare", "union", "compare", "map", "a", "lookup", "compare", "go", "compare", "go", "singleton", "$runtime_lazy", "mempty", "append1", "empty", "fromFoldable", "insert1", "empty", "union", "empty", "compare", "go", "compare", "union", "empty", "OrdBox", "value2", "ordTuple", "ordTuple", "lookup", "pop", "reflectSymbol", "mkOrdBox", "lookup", "insert", "traverse_", "empty", "identity", "Pure", "Lift", "Ap", "pure", "nat", "cons", "apply", "go", "singleton", "identity", "CatQueue", "uncons", "reverse", "snoc", "a", "$$null", "empty", "CatNil", "CatCons", "snoc", "foldr", "b", "q", "foldl", "go", "uncons", "i", "$$null", "empty", "append", "append", "snoc", "a", "append", "empty", "$runtime_lazy", "name", "init", "state", "append", "Free", "Return", "Bind", "v2", "append", "uncons", "a", "empty", "snoc", "$runtime_lazy", "pure", "pure", "map1", "pure1", "tailRecM", "go", "bind", "pure", "lift", "map", "bind", "pure", "a", "pure", "lift", "bind", "listen", "pass", "ChildQuery", "value2", "unsafeCoerce", "a", "b", "$$void", "bind", "append", "traverse_", "$$void", "a", "__do", "append", "a", "bind", "identity", "lookup", "State", "Subscribe", "Unsubscribe", "Lift", "ChildQuery", "Raise", "Par", "Fork", "Join", "Kill", "GetRef", "lookup1", "lookup", "lookup2", "label", "p", "q", "ChildQuery", "pure1", "identity", "Lift", "Initialize", "Finalize", "Receive", "Action", "Query", "$runtime_lazy", "name", "init", "state", "refEq", "state", "$runtime_lazy", "extract", "voidLeft", "traverse_", "map", "pure", "lookup", "pop", "insert", "ComponentSlot", "ThunkSlot", "unsafeCoerce", "voidLeft", "traverse_", "Action", "map", "pure", "lookup1", "lookup", "pop1", "pop", "insert1", "insert", "lookup2", "pop2", "insert2", "label", "p", "input", "output", "element", "span", "element", "element", "div", "element", "button", "element", "componentSlot", "componentSlot", "componentSlot2", "label", "p", "component", "input", "unsafeCoerce", "unwrap", "unwrap", "unsafeCoerce", "handler", "handler", "handler", "append", "map", "pure", "mapFlipped", "discard", "modify_", "AddLog", "SetLogs", "ShowIntermediateEnv", "HideIntermediateEnv", "MouseEnterLogHeader", "MouseLeaveLogHeader", "div", "style", "render", "state", "button", "input", "copy", "reflectSymbol", "b", "get", "reflectSymbol", "modify", "unsafeCoerce", "append", "mapFlipped", "merge", "discard", "modify_", "modify", "not", "Select", "Toggle", "MouseLeave", "component", "liftEffect", "render", "state", "div", "style", "input", "eq", "from", "intercalate", "append", "show", "reflectSymbol", "intercalate", "from", "Opaque", "label", "reflectSymbol", "throwError", "mapFlipped", "map", "wrap", "show", "genericShowConstructor", "genericShowSum", "genericShowConstructor", "genericShowArgsArgument", "genericShowSum2", "genericShowConstructor", "genericShowArgsProduct", "genericShowArgsArgument", "map1", "foldl", "foldr", "foldMap", "traverse", "identity", "genericEqConstructor", "genericEqSum", "bindFlipped", "pure1", "lookup", "LeftGreaterThanRight_SumLatticeTypeOrdering", "LeftLessThanRight_SumLatticeTypeOrdering", "LeftIncomparableRight_SumLatticeTypeOrdering", "LeftEqualRight_SumLatticeTypeOrdering", "SetOrdering", "FirstThenSecond_ProductLatticeTypeOrdering", "NamedLatticeType", "UnitLatticeType", "SumLatticeType", "value2", "ProductLatticeType", "SetLatticeType", "OppositeLatticeType", "DiscreteLatticeType", "PowerLatticeType", "Relation", "UnitDataType", "NamedDataType", "SumDataType", "ProductDataType", "SetDataType", "ExternalDataTypeDef", "DataTypeDef", "VarTerm", "UnitTerm", "LiteralTerm", "ConTerm", "LeftTerm", "RightTerm", "PairTerm", "SetTerm", "Prop", "ExternalFunctionDef", "FunctionSideHypothesis", "Hypothesis", "Rule", "LatticeTypeDef", "ExternalLatticeTypeDef", "Module", "Program", "throwError", "get", "lookup2", "label", "lookup1", "lookup", "mapFlipped", "__do", "map", "i", "wrap", "show", "genericShow", "genericShowConstructor", "genericShowArgsProduct2", "genericShow2", "genericShowConstructor", "genericShow2", "genericShowConstructor", "genericShowSum", "genericShowArgsProduct2", "genericShowArgsArgument2", "genericShowArgsProduct", "genericShowArgsArgument2", "genericShow", "genericShowSum2", "genericShowArgsProduct", "show2", "map1", "foldl", "foldr", "mempty", "append1", "foldMap2", "foldMap", "map3", "pure2", "apply", "traverse2", "traverse", "identity", "genericEqSum", "eq", "bindFlipped", "eq", "pure1", "show2", "lookup", "append", "pure", "unwrap", "intercalate", "mapFlipped", "fold", "map", "fold1", "map1", "mapFlipped1", "fromFoldable", "mapWithIndex", "map2", "section", "div", "style", "append", "pure", "render8", "a", "name", "unwrap", "sup", "span", "intercalate", "mapFlipped", "fold", "map", "fold1", "map1", "body", "mapFlipped1", "label", "items", "fromFoldable", "mapWithIndex", "map2", "defer", "singleton", "empty", "map", "map", "get", "map", "homogeneous", "bind", "get", "pure", "wrap", "show", "mapFlipped", "eq", "monadExceptT", "bind1", "throwError", "show1", "pure1", "compare1", "empty", "show2", "fromFoldable", "Graph", "name", "compare", "label", "defer", "lex", "singleton", "intercalate", "header", "fromJust", "fromHomogeneous", "map", "homogeneous", "map1", "pure", "mempty", "throwError", "bind", "fromFoldable", "lookup", "show", "fromFoldable1", "eq", "monadExceptT", "bind1", "show1", "pure1", "compare1", "empty", "show2", "compare2", "intercalate", "mapFlipped", "fromFoldable2", "map2", "pure2", "Input", "Grammar", "name", "i", "$$function", "mapWithIndex", "fromJust", "foldr", "compare", "label", "defer", "singleton", "discard", "modify_", "append", "slot", "component", "mapFlipped", "map", "render", "bind", "get", "pure", "log", "GetProgram", "UpdatedProgram", "SetProgram", "render1", "state", "div", "style", "button", "onClick", "label", "input", "singleton", "empty", "append", "fromFoldable", "map", "render", "fold", "render1", "show", "discard", "modify_", "pure", "OkResult", "PendingResult", "ErrResult", "SetResult", "SetIntermediateEnv", "Ran", "Run", "component", "div", "style", "render2", "state", "button", "unwrap", "identity", "unwrap", "identity", "dimap", "first", "get", "set", "b", "prop", "get", "set", "show", "show1", "foldr", "traverse", "show2", "lift", "lookupModule", "traverse1", "show3", "fromFoldable", "map", "lmap", "fromFoldable1", "rmap", "union", "discard", "eq", "lookup1", "lookup", "show4", "render", "pure", "show5", "show6", "prop", "identity", "insert", "mapFlipped", "render1", "insertWith", "append1", "fold", "fold1", "traverse2", "traceM", "fold2", "unions", "map1", "Log", "throwError", "show", "show1", "bind", "get", "tell", "p", "select", "a", "foldr", "lookup", "lookup3", "pure1", "show9", "label", "lookup2", "traverse", "show2", "ask", "lift", "applicativeExceptT", "traverse3", "traverse1", "lookupModule", "show3", "fromFoldable", "map", "lmap", "singleton", "monadThrowExceptT", "throwError1", "map2", "fromFoldable1", "v3", "empty", "rmap", "union", "bindExceptT", "discard1", "discard", "unless", "eq", "lookup1", "foldM", "bindFlipped", "show4", "div", "render", "snoc", "modify_", "pure", "show5", "show6", "prop", "identity", "insert", "mapFlipped", "filterM", "traverse_", "render1", "insertWith", "append1", "traverse2", "fold1", "when", "modify", "traceM", "monadStateT", "fold2", "unions", "map1", "value", "toNode", "unsafeCoerce", "$$void", "query", "identity", "tell", "query", "query2", "slot", "label", "req", "$$void", "query", "query2", "slot", "label", "req", "identity", "append", "slot", "slot2", "slot3", "discard", "tell", "tell2", "pure", "bind", "mapFlipped", "request", "log", "bindExceptT", "composeKleisli", "discard2", "lift", "pure1", "monadExceptT", "interpProgram", "traceM", "show", "EditorOutput", "ViewerOutput", "ConsoleOutput", "component", "render", "state", "div", "style", "input", "fromJust", "Loading", "Interactive", "Complete", "parse", "map", "unsafeCoerce", "unsafeCoerce", "map", "parse", "window", "unsafeCoerce", "bind", "liftEffect", "bindFlipped", "composeKleisliFlipped", "pure", "pure1", "map", "discard", "throwError", "query", "__do", "addEventListener", "removeEventListener", "body", "fork", "unsafeCoerce", "traverse_", "component", "input", "handler", "__do", "empty", "fresh", "traverse_", "bindFlipped", "lookup", "bind1", "liftEffect", "discard", "discard1", "traverse_1", "traverse_2", "fork", "parSequence_", "pure", "map", "parallel", "map1", "sequential", "map2", "insert", "retractFreeAp", "$$delete", "unlessM", "insert1", "traverse_3", "lookup1", "lookup2", "foldFree", "alter", "unsubscribe", "ref", "__do", "i", "render", "q", "go", "Lift", "ChildQuery", "handler", "Action", "bind", "discard", "for_", "traverse_", "fork", "bindFlipped", "traverse_1", "traverse_2", "traverse_3", "discard2", "parSequence_", "liftEffect", "pure", "map", "pure1", "when", "renderStateX", "$$void", "foreachSlot", "renderStateX_", "tailRecM", "voidLeft", "bind1", "ref", "__do", "reverse", "empty", "renderSpec", "component", "i", "render", "handler", "$$var", "pre", "slot", "children", "q", "getEffProp", "name", "getEffProp", "getEffProp", "getEffProp", "parent", "removeChild", "parent", "map", "parentNode", "map", "map", "$runtime_lazy", "name", "init", "state", "$$void", "pure", "traverse_", "unwrap", "when", "not", "identity", "bind1", "liftEffect", "map", "bindFlipped", "$$void", "pure", "removeChild", "__do", "parentNode", "traverse_", "handler", "document", "buildWidget", "buildThunk", "unwrap", "$runtime_lazy", "slot", "extract", "step", "render", "toNode", "parent", "when", "not", "identity", "runUI", "component", "i", "element", "bind1", "liftEffect", "map", "bindFlipped", "bindFlipped", "main", "log", "runUI", "component", "main"]
}
